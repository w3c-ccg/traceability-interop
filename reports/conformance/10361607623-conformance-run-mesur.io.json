{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "34ddf890-2ce0-49a3-8cff-03d71283b413",
        "name": "Clear Cache",
        "item": [
          {
            "id": "898e18df-32f8-4e31-be49-c90cf67915f4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e8fe6a7d-8c0d-4bc8-ab21-0ca82db0ed07",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "365e4084-e0bd-45bf-8db2-d736cdecb10d"
                }
              }
            ]
          },
          {
            "id": "0f5f751d-ae73-49b1-8c4b-d2a204a5b9b8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b1912b1b-ded1-484a-b138-9ab825a0a768",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b4ac861e-a79a-4362-8237-8e1841ef06e5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ef8ec027-ec69-4125-8f23-ad9148637a03",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a8bc5b64-4f26-41f7-9b5e-047bc06d16d9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4080ab1c-d15d-4dc1-9d01-d5e25b9aac1e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b8f9561-5606-4e5d-9b8a-a31d84b3b670",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee3966c7-e1b2-4780-9226-600c4823046c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f6eaef1d-5bbb-4462-97d3-94efd29c325f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8de7d15f-aaa5-4fe5-b6d0-ee57fa77a23b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "00a8b267-3eec-4b47-9e7c-41f9ce271b74",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5feabc33-22f8-482f-a5c3-6bac607a8aab"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2886c443-b12e-42e6-9e19-d508167fa396",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9ed3bce0-2577-4208-a79d-f9112e048292"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03b78ddf-8962-471e-a895-a0da63a851ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95fa41bf-fd9f-4565-931a-9c69cbb022f3"
            }
          }
        ]
      },
      {
        "id": "d1b4e3af-7ea5-4bc1-b96b-51ce8aa4f2bc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d14cba6c-1545-420a-ba35-aae64609e7fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e5189478-5859-4c99-b881-97f06f11aeef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9bc498c2-cb1f-4984-aee8-0e999ab416cf",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89efe622-f33a-4002-a696-9e7e0040a00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aaa02c95-2f5f-4c43-9431-612b4578f505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38764920-3226-45c6-a8d9-d0e135562e14",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35017ff0-b2c5-4da2-832a-3197a2bfcc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5697e973-bd4e-4aec-b4d0-ccf3eb163dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e7dcf7-b044-48a5-bac2-64ef383f0298",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21755a5e-f872-45ea-9ed8-f8cb353df724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf4e2f57-8ab3-4c70-9949-a73ccf353322"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9753d19d-ff05-49e5-ab2f-062684d0b038",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c93375f-544a-4320-8a6a-6007c4122234",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1611e7cc-438a-4919-9b95-bf1d628b9e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1ca309c-238c-4b90-8190-765af48ebd29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5575bd2e-1c6a-4a22-bb3f-1089dbc3f8ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db130ac0-6bfe-4d19-9366-7197b271d617"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0e833fc0-a389-4967-b7d9-ed9c4b3b7142",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e07f906c-9a01-4021-8761-a02079b38fac",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ca8bfc7-cd12-4476-b3b1-a5ffa0ce69ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "88578535-5008-45f5-ae46-992ec3479fdb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32245656-4dc7-43b9-beed-6f43e49ba0bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "06bb2eae-c514-4fd2-bc73-06e01b7adefe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c95c24a1-49c9-4220-98e9-0cf7bf7395ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7eb0dd7c-335f-42be-88a2-e1a49da158b1"
            }
          }
        ]
      },
      {
        "id": "4c5d417c-1d5d-4c30-a4f9-7b71d492ffa5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "83be8e99-a72b-47fa-a5ed-5bc2f8dfb544",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a97e084c-30fa-4437-971a-b3468eb3c999",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a2335b7b-40e4-478d-9fd3-10d46094b7d7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fcf4e5-73b6-4c81-a6cf-aa592004abbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c264129-cf3c-4f4d-9f7e-99594d1f84d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ccc5f6-2d8d-4b68-ad8d-54495938942d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46fec7b4-caa0-475e-8a3f-ed06fbfa5334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb01a85-6e59-43ab-ba9d-938192a0def6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38507e9-4c83-4e34-8c3a-6d193479639c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c45b8d2-2505-4923-91ff-3b9bc05374b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d6f6e8-07e0-4cfe-a75a-1a7916929175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f248de9f-b286-4f07-bb77-f65d420c49d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cff39f7-7559-428b-889a-49ea2ebb6649",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72cbfd8-7966-4fd4-b0e4-2b7571df8376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f343ca7-371e-4adf-80c7-35c946a72f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bca0365-f5d6-4889-a34a-2887145ea417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e9d9c86-7ca0-47ad-bb5a-4b23388e0462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b03717-cc18-4b17-8375-830628ad6b7b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ac0330-1e66-41ee-886a-e7fb83add9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe57017-cc72-4756-97a4-3d37f7de6762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8d39c3-a7f3-4c22-9d1b-54ae1a4cb22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4247e301-c488-4132-9ae5-bbabf08d0386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3eed70a-917c-4916-a366-aa452984045c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7daf8ed5-5a4a-467b-ba21-1e4e44305cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa00e87-492b-4a28-8c21-4ac67572373c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b76ddeb-5bd2-4a2e-b231-750d6222cec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "587955ae-0541-4c60-9ed2-6de3e6c0051b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce61dff0-b5a4-4af8-a093-b0f5088bc823",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137536df-b5bb-4202-9ba7-1e3948d0627b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14dd1601-6c3b-43db-95b2-9048b63ee0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b14605-1a76-4829-acc4-629126660b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6028c0db-28ae-47ef-808d-78c7829a051b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8abf12-16bd-46c8-b10e-ddc884a67b42",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e12a3c-4a0e-42af-bb03-cc294c531dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82922a4c-e800-444c-bba2-a6727f88f297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa149cb-681b-4dd0-b313-da2eb6f52e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4c8db75-2855-46e2-9f3b-8f38baac5ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee83ed4-48bb-481f-8353-50fe09ce2ee5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94249a1c-b2a1-4a63-a615-bb8d2455c9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "511f8c0f-9a34-4e5b-a71a-4c04373b6388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d9a692-3b72-40e7-aa58-4287c4fa3d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94fdcd26-6f9e-4495-9d61-dbfd9b50d64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05447cd9-15e7-43dc-bd90-7ad4d7a5f63a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52644a62-8707-43e6-a92b-e54ada85cbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c188b5e-b5aa-47e9-87b6-6be2a04da5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1da61b-e722-4507-9f9c-345e58375a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4839d533-53bf-4140-83c0-b0ca74dfd722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17df62e8-61eb-4cc0-97bc-fb61b917e06d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0100ddba-d11c-4c70-addf-fd068e0fc202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05fb991f-2fd9-404c-afa0-de71d608b235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1bdbd5-053f-4d9c-ad9e-cf068df57ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73ee8293-ca5f-42cc-9dec-455f37c39656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed931a8f-e801-45bb-b39a-3fa4729c0551",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34399e82-7390-4456-86d0-b6978d0ca9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09daad14-127c-4649-a93e-e9421af83fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea853be-54f2-4dc6-a4e2-c93936508625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "981eabdc-37b6-4017-9274-181667300bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ffd030-370e-4f98-9708-efc87c1669d5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6544d459-34fb-4ff5-8612-a62e57347256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7f2842-d5ea-4a03-af75-3d68b79fac03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bb7f26-b71d-4962-94bb-f9c27082340e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40f5334a-6595-4114-98a7-83fda73d38b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc78f82-cf39-4440-b631-5095cf6e4089",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd60590d-d1e8-4f80-aa39-b577d83daac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1190568-a77d-4040-b0ac-d1284dca4c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db59224-0af3-49c0-8119-e873616363f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4656518-2973-4d4e-b475-56dfd7d193ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e22845-91f2-4ca3-8e9b-976f0641bc20",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4294dbb-a75f-40f8-a075-60297985de18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c266fe-899e-4d17-bc3c-33337ea5d1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c220d7f-0058-41f3-8939-814e31464c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efc36b12-9a7c-4a6c-9ab8-d552558f0b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a129f005-3212-4221-b939-efd573e6c09b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec98822-918a-4530-be73-1924f91251ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab4d0f3-7aa9-4017-b9e6-e0b969f96755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fdc4d3-cd3a-4db5-965d-a2845d133db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d891b748-c8ab-42e0-b8dc-830e32c0ae8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4159fb0-23cb-4846-a860-1fdcde5069b7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc8e811-2818-4fe2-89d1-e0b23824c917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7accc636-ce73-480c-8b1b-7a560b1f2c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f789eba-4931-4f2e-81bf-cfa3f62391f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a35e636-5170-450a-86ab-333e8d66dbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e85303-4f81-469a-a746-6ed4b640b54b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a31c493-8027-494b-9acd-19e71b8abd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154b81e5-ab05-44ca-b343-b48026350a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab92eec-c1d0-4880-83dc-b731eb1291b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8ce1ff6-296a-4ae1-acc3-4e52fb353575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4367fd5-1fdd-4208-864c-766c15b998fb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7722818e-dea1-45c8-8672-f26d4231c7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a950d433-3026-4d38-b501-885ae7f732cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c04435-b0c4-4da6-a862-fc759bec7fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e619fb5-a0d2-466a-9388-35816744c437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a005a9-1962-4ea2-8c18-8234a499f84d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a32ac3-d0fd-4826-be74-39fd19a65143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ed187a-2f47-45dd-86dc-23ab1857f93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f2c58c-7d4f-4ada-aca8-22bb005d00b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1eead86-ec13-4fca-9bbb-e771c4e71a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ed9f5b-310d-4e1e-b995-18d5cd57ae45",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384e5ec8-cbcc-48ba-8a8a-435afa1a1da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65252140-0933-4bc2-be86-034da0ae2f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2b72d1-70d6-4d3b-ad5b-144950aea06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a49d853-9b3c-441a-a96a-988abc159baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff48d58c-0056-4124-91d6-9a67522bcafc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1000cab6-b00f-4141-b8c8-128ffd8b2110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c3cebd-34a0-4b6e-9d14-91e99d7204be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6e9da5-c93a-433b-940b-650263bcda2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75a0a7cd-a291-4979-a0cb-ebd30dd4f1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ce0631-bed7-4b42-a13a-34f839b4ec91",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eedd8b3-4fbd-4a73-b043-2b40508c1d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04e8a2e-b8ab-45de-925b-d56b208a624f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0af4f61-0271-42ec-a037-333160a98d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28a8307f-de42-4497-9674-522c91747092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2bc28a-aaa7-4c05-b60d-70e0a64d7c9c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d8fdc1-0173-4163-8892-b97d7a2b3674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82fb2ae-3f9f-497d-a585-24368868ea85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206b5108-e8af-481d-a018-c02d2f674a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d51d2d-6bcc-4061-94d5-f8a0fb5cea45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a2fa7a-cb23-4612-b776-fdce2b2c350d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773962ed-8d3e-4afa-a61d-be294d561b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a23334-e0af-43b0-99ee-026207dccd72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0acd79b-af9e-42c4-b01d-2fc4c949727b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bbaabb0-6fcd-4d5b-80da-724586c1e522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3abc595-503c-4cbb-9695-6659a2071aef",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b05f032-a978-4a4b-9b94-8c71037014a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28ba286-8038-47d0-9c55-5bd5dd6fea96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464727b5-e2c3-48c0-be74-c6c29689172b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ed25daa-51bc-4bce-8c71-198943429965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d474a2af-2283-4025-96ea-fe083c0d9dab",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d103f164-e365-49d2-94dd-d7fcc128c905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1ab4e3-48fc-4e30-a451-821919c08770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7fe8bb-696b-4c5a-8429-281bfd632645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b007109d-4148-49af-9862-33dfba8f0f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fbeeb0-46ac-4c30-8bda-1eae5b911bbb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e91564e-a969-48a5-802e-150e476f3745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcefb26-d63f-48ca-ad1b-685f33682ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914499e5-524b-40a8-a891-c91f59a0e04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "51f40d0a-104b-40a8-9505-79d2474beddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8eeffe-4000-49b1-9807-f28da3a5c7b4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548aceb0-bff1-4dbf-9878-539df6d084c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c0a182-3507-4916-a769-086155a5cf00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e108b344-e569-48a1-9e4b-d47c044e92b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2005a6-77ba-4acf-9383-dfbb9098f9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344a9cb9-aaa3-40e3-abe1-54ada99b7299",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350ad486-f0ea-4ac9-86eb-9ae8f4059d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f906de-f996-4d8a-8b93-777014fe4b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6ea211-392a-425b-8165-328b931e6e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd65093a-6ce9-47f5-aad1-a3f67a0c6a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f011d45-db94-4db9-a3c7-bcbedce8cd05",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c40a73b-6b53-4403-90dc-d0e4e807ae8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15516d0-4a64-4815-bb3d-76ed26109e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782ce169-b7b8-4c64-be6f-8800300e7095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b80f8008-b738-4e9f-8da5-f0e8320b9fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346e3eb7-650f-46c9-b21c-93592d6d3e70",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f67824-ab0c-4219-9795-cd6b3ccfc961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101efbd6-bb8c-4605-8412-973f117ff5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c242f63-8220-4e20-928e-f91138058909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2d3c5f-361f-4179-acc7-5263c056ec32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f01d2d2-0fe1-4c50-8f1b-e33e2ad468ef",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89eff0e-5d16-4f54-bc5f-5aaec612715d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "141685cc-8544-454c-93f0-52fd9036caaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7da5702-16b2-4a1f-b33e-45c421def8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9bd10f-5bd5-490d-8a76-ca0b512bce62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960e803c-d7ad-4665-9af7-d0ed801c209d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0904e5e4-fb35-4871-885e-dd9e1435d931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ad1c79-0069-4444-8198-76277b8c4f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0852b4f1-d43d-42e9-bc9a-18cbb2cd5622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "751a2103-99ce-4869-a142-47ef6353b8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff94992-3577-4bce-b1b6-3358ed789555",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b523052-d802-4b41-b975-95698a812d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee655cad-57df-46d5-a533-4ee3878bb821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c899cba3-40bf-491f-9f70-da6ac43e3e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30044192-505d-42ab-9fa6-25d5e8f160fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d8a1b9-0c2a-4344-a5c4-bbbc51eef2c6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d037fe13-74aa-471a-868c-7256358ddb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e9744b-084d-4bb7-920a-69c42411407e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598b6c5d-a259-42e9-8bad-f9331608578b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0a2e54-6062-4455-b664-52ef0e1f09df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0187f920-5a25-4e5b-82b1-3062dc0e78ba",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9ef106-f8ba-42c4-8366-dffe26b0c5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e91b35b-c570-40b4-abdb-831a0bb6f3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b85c7a1-a4d6-4cdf-8d97-93215853dfc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e6b3c0c-4c19-4ee4-b7f1-f89b3b0421f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad37991-2b8b-403b-aefa-d72e66deb263",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c7193e-205f-4fba-9103-ee39785da1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77296164-73c9-420e-b957-6335cf111913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc536c2-fffd-46aa-94b6-e9ec76fb181a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0daed452-c75d-4104-a65c-7dce96ffe8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7792e08b-9518-4bb9-a8df-5ccb1a52ae72",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601ab6d1-6687-48e9-b4d5-6d09fe10b725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071ecd22-c293-4f74-87c0-57e9e418fa7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52ee516-63f2-43b3-b512-4ceb8d22de67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b89bbe2a-63b6-493e-9b1e-22de6e4f4803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a2f946-3ae6-4fa0-b99c-d343b0269e84",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed5ce0d-5d0c-4650-b658-0faecafeac59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed4f6b4-0eea-4398-8096-7fd2cddb397f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7551e606-cd93-4f8d-aa86-5af59ece2edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "70e6c570-c721-470d-90e5-17dc6005e439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0502b254-3b62-461a-8eb9-fa43a93f433c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efcef6d-da47-4600-89c5-269c1030925f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77da61d2-a0e8-44a8-bc60-88edab90e755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59d3553-318f-4150-923a-7b822c548c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad15467-d781-4527-85e4-da4408116390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829da3d9-3173-40d4-abdf-e219d1f7bd00",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62f46f6-6f33-4613-af4a-084934f21370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378723de-9005-4a0c-928f-5f826ab6ac08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb5082d-3ae5-4c29-8aca-a10b59b0f81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1606ceb0-40a6-4e6b-bcb0-718e4cfcd235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0619852f-d265-4ecb-bb93-32a98ef66f42",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b3d445-3629-40a0-af3e-eca0f76ce525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62126802-0445-4cde-86e0-52171b2859eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b95f0c2-d858-416d-8a01-3e9325c103b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6c7a7b-b531-46b0-a58e-c9a0e69b0c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07aba91b-a750-485c-b5db-3a7f5b6d4e45",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4956a33-c316-4c8c-8740-93c0c6ad3527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c64526-82c9-4255-b785-4823afffaa7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1240d62-3163-4aaf-95f4-7a40c5caf941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "87f64063-cc94-40e2-87a7-3df7e1396b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c1785f-859f-4153-ad57-655724b6e295",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a870cf-eab2-4e3e-bba8-dcd7ad188e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d7312d-4f67-4680-a403-224e595e4424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757d083c-d4c0-498e-b38d-b121ef81a5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a264ef0-65ed-4056-92e1-443bbb0ede6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1511a6d-66a0-4064-8b10-114e691c0994",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f5aa6f-ac9d-4b04-86da-c7804a3bc5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd8c296-a3f1-4c3a-890b-c498b81dc665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23af28a3-3dd2-4d00-8382-dac936e7cd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfde860c-2554-4c16-b650-4f9cff8c842e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f817be6c-04c4-49ea-af0d-09663cd3389e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f48e2dd-a040-42fd-a9e2-720a9865ca04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d909d63-f0c7-408f-981e-53bfe361db7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03a9ba8-1640-484b-8f9f-03ccda1415fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b822175-4bd8-4a0b-9700-4ee5d57c5290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7b2a1c-284a-443f-83cf-efd752c96a47",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6289bdb6-f9f4-4a61-b5b9-2f1b975d57ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec116db-e95c-4f41-be74-14894358c78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da173942-1256-4fe9-974b-e80550dd9f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07e8cd17-e255-4b54-a2d8-e38ab55dc395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f244b4-8bd7-4037-801c-512cf03cf9e4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e900a9-e304-44a9-bb45-fc00a608d9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c243430-6b21-422c-9145-de3d719951d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1047f4b0-9608-41a2-bb08-549e5c7ca747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3095d984-b678-4677-b89e-c5562f7bd09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1930fdc4-2dab-4f38-88d0-2f043a71e586",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf8cc5c-301d-4e1b-b11f-d8e7d7b97b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1dbab00-388b-4f3d-a7e9-99b03bc383dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ce1303-9796-43d1-b8b1-b84b7c771cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "76dda773-94cb-4d7d-9423-ec2d59b1fddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08f1118-6dbb-431c-bdc7-99828594c8aa",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd63574b-5a9c-4305-852a-e03b08895846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab2b3e98-1591-41f6-9edf-6213d720d2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558004c9-9d0f-4c99-9977-87b20395d221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0c9842-f54e-47ff-ae5d-4df18b773958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be10aa9f-dc47-48ce-a935-c3f61f5e07a4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aec1a01-d296-41c8-917c-3dec6b4e1485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422dd3b8-d778-47c3-ba06-d1b1d16a94df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a48b92a-8a66-4f46-a902-c98e2360de43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a95396c-327d-4adb-8bab-a7399fd2971c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a63c03-0407-44c5-bec2-0fdcba0f60ca",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04824b3b-68c8-49fd-91d0-6382c8c2a6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8f7493-d6cc-417a-a659-59e370c3045c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749462fe-6c36-419f-a699-95ee4b7c3687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "42240663-9874-43d7-8a43-73f450a8c498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d433e11-d454-46ed-a7fd-304fe244dcec",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f34f3d-5fda-4cd5-8ea1-b7a6d4719d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c0be47-991a-433d-87d3-cf3bb33507a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d73c3f8-f06a-4d93-a090-0bd6e1038c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6c8675-393a-48cc-bc6b-7815b75b2a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9d4c3c-50a8-4369-b0f7-eca1adf36696",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb5653d-1b3d-411e-8995-6c543e277d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b79e547-b481-4dcb-8676-2bca148779a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa18fa51-74a6-4e05-87c4-46ad2135b936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad84714-d523-43b2-8cb9-bee5b2af6bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faddacb4-5a9a-4fe1-addc-f6b3afad8adf",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf24130-3353-4e75-ac44-2ad42ead239d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2c7b6d-64d5-405c-8df8-e61d126299cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f1fb4c-23c3-4a5e-b398-d5ed694c8e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08768311-3c0f-4b5b-ab0f-cb93c899e35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f285e754-6792-4f42-b728-d3c6e464d103",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62db5d3e-a7ae-47cb-beb4-5bea3b8044f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41aa6bd-baa2-4595-992c-9221bd82e22c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0758f2bc-5488-4579-a24a-e03c13b02639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "89ba769f-0e38-41a3-8eb3-74a3074979b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325d8900-cf3d-4a76-85a5-388a49e7bc14",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc30cb3-0cd8-4f18-b2aa-abe21f3b3a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3018cbb1-3a5f-469e-9c15-be7e2dbcc87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81a3398-4445-460b-ac39-3d74e67699dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e63309-fd5e-4e8a-af40-e75ffd9bb8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadf45ec-2492-4ab7-8abd-b41ca5dc4c37",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b72d72-46ef-478d-8bbb-00fcc1f95b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b01e42-d80b-4772-b03c-873379d0f830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2638d6-5500-43eb-a548-fa9c5a350397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f21bde5c-0f67-4ade-88ee-ffa62558f244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550208da-cb8b-48f0-ba78-e362cd6145a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d83f0f1-3292-4a31-a9a4-b8d82bb1b423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9568bf25-57d5-4a81-b767-d48308046458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2de079-d87c-4168-8d6c-3d65ee9b21fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "73db32d6-c5cd-49b7-8cb3-69ab91ca2b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a0e320-c82d-480a-8992-b95c1c3a0c4d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cfc2ab-d3af-47c6-9fc1-849e67c65d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c05a6b-0e9c-46a2-929d-3a3f1e38260a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca51563-400a-4f85-851a-5707656f5302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "806634ab-8f28-4c35-9fa0-e0e92c6e19b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e44f2d-9fb4-4353-8705-5b5b47e31864",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5429964-b063-4489-81d2-1fe581059397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87dcb3fa-95bc-4ea1-98a5-15c72f2ee5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee4e2f8-546c-41ce-897c-734670657b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1aa3f5-7b7b-4553-b6ac-46961de8ec45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a12e433-ad1a-4f0b-80d4-4c42c8e00601",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7954d2c3-80af-46ba-a1c2-00e785b20652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65771d2-15bb-4c97-8f59-596fc4591ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec408904-4aff-4c21-9f12-b4ba7a656cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbba977a-4951-4324-834a-10884f354333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8464ee1e-1368-4d92-9260-eb6c931e82ae",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e609bb3-0e6f-472f-bbd9-0ead19363d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af9f7c4-14be-46f7-90b3-7270fd1a35b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fded3b7e-31ae-4c2d-a6f7-ef79da1aa1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa5308e-fa4c-4ad3-99be-65e3c4fbc8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54134ec6-c1df-49f7-a767-58f15648b7f8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f1d98f-a6e1-4623-8cb2-2d9a5d233737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acaadfc9-a3d9-4bbb-8090-40628fb64f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9fdbc1-a4b2-4cfd-ae8c-6b4b559dc6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad4e039-f65e-4d42-b9bf-66cd65f9586b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cae5771-b570-4b9c-a723-6a8083196588",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87de9bbb-7963-4967-852a-da6eccc4c07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9fe5001-e2d5-4be3-9874-7cc49158917c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f898d6cc-2fac-497a-ab1d-5361014d1f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f8796a-ceec-4041-a291-8d8f4fb29321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1843812-dde2-43b1-b999-d1a78511dc0a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf86de3e-229f-49f7-94b0-f82997c27c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5d91f7-936c-492d-9ac7-c47cabaf6f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d8a5ee-2707-4dcd-be0e-17701eff7610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d51e6e24-b65e-4602-9cbf-eef05e59564d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbbc60e-94b7-4093-b596-56a24e136e2b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e3f703-5d3e-4d3e-81ff-0389fc9d02d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2873a5-6cb5-41de-a7ce-d9367e4eea51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a230dae2-c541-4b89-add0-369f9779655b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36f98718-7164-48dd-96bd-fc51fdde9c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c2dad4-0bc8-4c9c-a139-1b2575b26e9f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1190996c-7249-4073-85d0-0fca3e5ff52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe76d8a-601a-43f0-a637-45d4a56374b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27042b77-c61d-4372-bb25-51ab4074e126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "03b089c2-0fd9-42c7-8fe4-42de3d7f1738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6121b523-c829-41b9-ae2f-d5622744d5c0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5c0834-bd47-4e15-8d26-e9d49680146e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9fe234-4c87-4404-aaa1-f1740da778f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fd4328-f4cb-4307-aece-1843e0e8eb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "11f13b57-d890-437f-8bc8-4e57371beef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e39f67d-13f3-4159-aad5-314e226cd884",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01307a91-caae-41fe-9e56-a32657f0aba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9679295-76fc-4c51-9e8a-bdbd72c2cf29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de51e79a-09a4-4d33-a24d-f58e4dfa5932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5807cc31-67d2-4b68-bd90-11ad75607386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73d18a8-3522-40c9-8367-7a77749795cf",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc607071-d2df-482a-9eb1-b1222892753f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853439f2-a862-48d8-8d58-7bc6e6a76df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e271e2cf-ddf0-4701-b6a3-cdb35003d15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20a9c2a2-cc11-4640-8a3b-bcab140e07b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0052fd-6707-4075-a40d-8a0f98258a19",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0a452f-9b88-438a-b884-bc6478393636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfdbc33-d893-4eb7-a481-87f0a1cfa8dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e540193f-59cb-4736-aec4-b2ddec606509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3494c7da-8136-422e-b25e-d8e2017b1aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f651a2e-730b-4eda-bcdc-2c80c09237eb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433d2307-bd2c-4646-abbe-2570895dd218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f8d638-f7ba-4fc3-8091-cf0a96bb59ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564680f1-9389-4982-bb04-0471ad166997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a07fd9b0-7170-4b0a-89fc-dd19bc610073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3693bd8f-e639-40b3-8d44-ae26c7c86cd8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c270083-8cdd-4e23-a622-58bc7d644498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab680611-2786-424b-b59e-31d1743143c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8474756b-2b98-457b-aed8-4b93c0d71ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0dc8ff-99d9-4490-8762-1196abb29320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac2dcee-fc76-4212-b430-40b00895a664",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68b0808-ede5-4c38-a6f2-af7e1618b335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f73f3dd-ad85-4f2f-b79e-0a97ec24ff42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bf895e-5b2e-4288-ad9e-fd7b3c396abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "551efd20-d67c-4b51-9431-6736107b0d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2c762b-d4fe-4ecd-8e2e-99e714f6e497",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7a05e0-7c74-4341-bcc3-3536858a4b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5b4557-8474-4f8f-87a4-fb7cf9fc4032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78af292-b768-49e3-9ba6-f723e51b8ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa733ef5-df54-4b4d-9073-1aa9ada39727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf63112-06df-4ee7-a8e7-3c4e489bad9f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbdb779-efd5-4e02-8889-bacbf1eafae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66683167-eb1b-4526-ac0b-d2ae6a2e2ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6a2387-5091-4eda-b6bd-8a458842ef08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6b1359-855c-4b58-bded-7ddf413d897c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e9d2c4-6d56-4dd6-a681-bb35162ebd84",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e1f819-149e-4c49-9f35-c940c399caa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6608289-2e5b-4e30-a98a-5fe4f4964f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23170aa0-ad79-4943-8e14-f5f714500e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "827a0658-790b-4b10-8f21-629dfe9e19dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a11856-d5b9-4112-b29a-5bc189cbecbf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e14441-3372-448a-ad21-6b74accc5735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9fc90d-e0f7-42b4-9794-1616501c7673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d533e905-2dec-43b7-9a8c-9ff4bc6dbf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "716ca3ed-147b-451c-89d4-7801a95044f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e675d1-b52e-4fd3-af13-703a5f538d48",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d197dbfe-6529-4ee9-aeba-a6fc84d3e267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af39c4f-7192-482f-9b16-e650a3086258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c18436-ca97-4ea7-ae18-dfd880ed2764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe2c5c1-96cb-4a55-8ae7-b585f766be6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e31094-abf7-4462-b888-bb65d75a02b8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8245fc5a-35f1-4a73-a0b7-d8d409a9c793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c3bc7a-e52b-45bc-a93e-d0bf74a78dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c04d95-4f83-4f49-81b8-7521826d9701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "572b5be2-d3db-439e-a98f-5fca51b1ed1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f9f08e-c4cd-40b8-afe7-dcfc599d1e8e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94017497-8a51-4691-bda1-72bb66476a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8584c6-13ba-49b0-9668-087c8d1f22ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11783e22-4901-407b-acb1-801fbdba0f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "681a667d-868a-4c52-91b8-3ec5898f4aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5642036d-1477-4c67-9cd1-dcab98ee5130",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737bbc6a-593f-4f34-a71c-e556d1a6798c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8900e7da-a57b-4b68-a95f-bd549cca4466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70af4564-c8e1-4465-96c3-8d3d0c23506b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e24540bb-c4ec-40d1-9a83-ff994d97bf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470cb891-1bda-45ea-b124-82678c08edea",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d390a00b-a06f-4a2e-87a3-a96f8df59a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f542e87e-8813-44d7-8dc1-66f0af1e75a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e13490-cfcd-4c7c-836c-fec9cea8d18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "799671ff-91b9-4088-aed6-b919d7002fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e778c23-f2b0-4072-995d-61c89e31946a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddefe30-67ec-4ffe-a404-6322e6c67c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dca958c-7542-4bca-8bd6-126b00ef1e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd60fc4-4d99-4463-b772-61abcc1b0ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9efc8d26-6cb7-4c53-8646-6fcf032c7f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec2ea45-0b72-4cb4-a58e-edcf5d53391c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53450fb-fd0d-4b31-92fb-8d8392fc36a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321bcfb1-8ae0-487d-b6ea-c164b0a46bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddbc26a-3543-48de-90bc-73c5ad396b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4ac379-b12c-4656-a2bf-13906672b9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903d8726-6e03-4115-bbdd-ea951c03d792",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0df847-07fe-47d6-9d44-5e75f1f7fe06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64293532-af48-439c-94d4-797bbc2461f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8263925-5f06-4ee1-ae0e-702c708a1e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0b9eb5-a594-4055-b6dc-bac72672be93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe21dbee-43ee-4935-a5f3-5cf8340365f3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ca5501-98e6-4a79-a2b8-6aef9efeb2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a26dfd-7331-4b8c-a7a1-438ce6983aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd65631-63ef-43fa-8331-5ebcd0247e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "27a764e8-a309-44e8-8343-64af9f951f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83d46c3-6a60-43cf-8709-08a24e2009b2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b5363e-7ea4-48fa-8185-a0e5598f616a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2bff46-cf6a-4c6b-bb68-e0284e73589f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84728d59-dd11-48f2-b74a-d1c33f236844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6127acc-0d8e-489e-b354-7e3fa99f6e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2de9a3-0c2c-414b-ab3e-420b895822a5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb537c6-6e2a-4c6f-944a-08ecc0a2393c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2b94f0-04b3-4c5a-b860-f4ec763ec800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb8ab88-7f92-4a5b-9492-5b6dd0e99890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a93ebb9-c588-44a3-8cb5-e282ceaf62b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec95af19-c1df-4b3c-b1e0-d5239d23fc38",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3013021-373f-44ab-bc1a-d9ab68052408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eab9dde-3d47-4523-b2d2-0c341e37b6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf40861-eb56-41fa-9ca6-63b0b3bd3f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3238746-394b-4396-8ba9-2eb72e5794fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af45084f-ed7a-4068-88ad-b586a4a51dce",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179558b0-d1d4-41cf-9b32-fec7e8dada9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b9804aac-03e8-4dfe-ac2c-be5347063106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc976b76-012f-4625-8602-50b1e8f2d4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "03e89eb7-2008-4214-8aa9-f3d4114e8961"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "50c17672-b874-4807-a6d6-352f42705d76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4df2edb-d6dd-4c39-8463-ea9569add8ba",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e715c3-9439-4024-b28d-8fd44233ccd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ec2004a-f990-49d9-b62f-b74518febf2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d50007e-91a1-475d-8940-1767e3304642",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7719b3fb-d60b-449e-b57d-2e4fe7042e73"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7d53964-1f17-4a4e-8312-be709ad3196e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32da5aa4-eaa3-4b94-a67b-4b41f392ef9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3411971b-63e9-4a78-8225-6edc34705b04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cba3abfa-a151-4f78-8094-4659ad600cd0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27eb6cea-466b-40a9-823d-db992c6e1a9e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1dc3ed10-58df-41a6-b097-97550aeb4297"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5a1c30c2-d068-4d16-97c5-743f151e82f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d95bb776-6abc-43ec-878c-643ab5f57eed"
                }
              }
            ]
          },
          {
            "id": "e57cc2b9-dcb9-4383-9f12-bb49640464f6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a37fa333-2329-46c5-af2d-94afe58e9c50",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "66763d18-56d2-456a-a74a-7a993998856e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b659a2d-a0f7-46c2-890e-34d06cd974f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "14991089-6732-424a-af61-1b484bdd35c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981596ae-70ab-45b8-bb5f-5f9e7c38423d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e8808b-5680-4bca-a377-b38d30cb81ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d73c0cd8-98a3-4e3b-a6a8-1d9c26b341f5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bb481ed-1b23-467c-8e20-c1ba89ead914",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad4840fb-19b2-4f74-874f-90fc9dad146b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a892bf0f-2691-437e-9957-ae6ddaf04757",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0b31c4df-713e-4dff-8c16-6dd60dae4b8e"
                    }
                  }
                ]
              },
              {
                "id": "38a58f00-805b-4975-af24-05d7fb0f3639",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e17d033-8185-4a4d-9b8b-a5d7bbe8c6ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bdc9fbe4-b8ab-4e1f-bc21-8efd479c6675"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05a5d149-23d2-4c38-8936-91fb8947e023",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ac40454-d566-43e0-a2e8-2be3cba1d3c1"
                    }
                  }
                ]
              },
              {
                "id": "c403c5fd-4e5d-45d9-a7c9-7496bf7b7b8e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58273d0b-3603-4966-88f2-1bbe3e6ce7a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85d8a6ea-814e-4974-95ab-65efe94650be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a2510b6-4497-498e-b77f-5e9740ece6dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2e41ac5a-02c7-47e4-9379-88377681a672"
                    }
                  }
                ]
              },
              {
                "id": "3ad58a9e-5e06-4234-a125-c298de6fde3d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad8e3c61-125b-4874-8362-64c1b540dce1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "493db9fb-89a9-48ff-883a-546fe8b2f651"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d66f0557-1939-4170-a586-80ccdf5e9364",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "aab38ddb-0f42-4f12-8df1-fc75f6608a05"
                    }
                  }
                ]
              },
              {
                "id": "2a670025-c06d-4159-9e16-08df9febd81d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccec5f1a-f861-4126-b51f-28ba55bb0356",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d96507db-0036-4597-96ab-1d40dbdd2964"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec8e1515-2660-4ddf-aa3a-03b7579d98b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f3f45c05-4b06-475c-90e2-4113f98d274d"
                    }
                  }
                ]
              },
              {
                "id": "4052430f-b38d-4655-a81d-94f19066e73c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27c42cce-0ca3-47f3-8a19-06af4ebbd7a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88163d03-6c3a-4b0d-b86b-a3e9716dc491"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb62e654-0099-41e9-aecb-042d0a0294e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "521b22f6-8840-4f8d-9091-acf6cdd12a16"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ab1ab933-a474-4817-b220-b781422fd751",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4bb92fa-ea21-416a-8717-e1fea20c4b54"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4e326e7c-76bb-4f05-99ee-a6afbd35e408",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12afc7fb-efde-4ef4-84a3-997f74d5fec6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9b05c28-59be-4d27-9cf5-0385c7deb378",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a0a6a05f-74f5-4952-bb21-53f84b7c2109"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a59e4e91-5aef-4a7e-8593-91b80b326997",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf0b0211-61c4-438c-9012-17751d1b0011"
            }
          }
        ]
      },
      {
        "id": "6a3093f9-c7d4-4d94-9274-257ca61fc42f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6c054abf-030a-44bc-aaae-3af17afc7428",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e9cf159-9e78-425e-adce-6bf5905b3e9d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f30ba37b-bf22-4574-b3c1-4c8bc519ee2f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745b048c-3e63-4a38-871e-1a3296904a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3487c270-2f7a-4c2d-9041-86080688f585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051b3eed-6cc9-4e88-8518-d0b9388f4d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b04479e-1070-4d8c-a6e3-691693ce81bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4151d3bd-d964-41df-bfcc-5ffe10f8edb9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348a39a3-9b7a-4a0e-9bc3-af30ca50d184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2960a3f-8dd3-4e6f-94e2-8c0701347a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ce59ba-086e-425c-a7ed-2a8268c13122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50a24dcc-c9d8-4570-9141-7c2347467fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844d056f-4a3d-4f28-8941-93b8397ef883",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72376ff8-6332-4116-b881-fd2f523ba4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d8a946-5de8-4366-97b8-37475ee42419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd78f8a2-fd94-4e1a-a5a0-7eff7dd4ba37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f86abdca-ad30-443a-95c6-c9d48f609fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82bcf41-2fa8-4bc6-bf4a-0432d3e45fe1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b3984b-9201-4a25-9e6d-be35b6e36286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9cc183-5a36-44d1-8f81-f72a1d1f295e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816be50a-3f4c-4724-9d72-62699a7e7a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e25857b-77ee-4fc7-aad1-4c4921b0f7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e147fe-3a46-4507-ba5f-ca6697e35760",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e381fb9a-0355-4ce0-97b8-c2150132a8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb432e6-a604-4a4e-968b-b5df5faf499c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e3c16f-aad9-48ea-be5f-05f67f6cf31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c08e35df-6dd7-49c6-a8cd-3be7651b7e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc594c0-d2d6-43e5-96c2-705df80d7002",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176d5c61-286a-48b9-ae81-cce8a78ca905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7435d7-9253-4cd4-a361-82f7748780e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054a299f-1529-45f4-90d1-551460dafda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73a4973c-d548-4d1f-a455-955eef2768f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b334652-a376-4988-a2f7-fe1ba3483b8b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9459942e-8bbb-4b99-b350-cd61183076f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99dd1aa-30eb-4d51-bef6-0f8c5a7fae9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fbee58-dc3d-4961-9be8-eb86b72a8693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "57981ef7-296d-4da3-884b-78ba4be39809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a01508d-ee6d-454d-b952-49bb1017f86b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fae685b-9995-4745-a6e8-ce3a1ae66e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f281bcde-b4e5-49f8-955f-bf1cb6c5a2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0260e067-8701-4dcf-b947-5bc8699b308a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6f6a4b-ef5c-4547-ac5a-fd4507291a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6c2a0d-1145-4922-a467-d19a9f991817",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39e520f-c50d-474e-8822-cda7c0f1124c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68edacf-78dc-423f-879e-751496bb6d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4534f664-073e-44b6-948d-df43019dfbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be1163a6-4829-433a-8284-349cd58b66bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b606b8f3-9161-4dee-850b-a6acab558605",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c46b6fb-4a21-4b8e-9d3f-9adb41139e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce047aae-5d92-42b3-8da5-a60769499571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070da3e6-36c9-4419-9dd3-a283e5e81fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05a61293-da98-4383-84d8-0586216e981e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb36a60-73f7-4603-b946-99bb06b4fe01",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53a6da0-96d3-485b-bf93-6751a6bc5988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db781da-bf82-4631-8342-daddf26c292d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f513d9da-01aa-42d7-a16d-587d48b5c84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5060a53a-d167-418e-98a5-54f07f385234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d81794-5956-43d5-bc21-26874074c353",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ccb2f1-aadf-4dad-8ac2-4e91f4d4b251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f230b8b6-6ee8-4be4-9447-943492574698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac051c2-d062-44b5-9f16-dfdc185ce268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78fdea65-4fca-4c9a-bcad-ba7cc3d0a191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198cdc64-245f-4775-8642-403e651d7395",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65c8213-3104-4917-925c-c42073494ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f19ba5c-ebc8-4093-a733-e87e8025d5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff77d90c-ac06-454e-9307-462efbd9edfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a66921-9b5f-47d1-a7b3-fdb6f5f900de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48aee1fe-a850-49ae-b444-4097324d8095",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df209a73-b49c-415d-9d18-b8083b6132c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793afbc0-7906-4571-9485-494d4f6bd041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fcbc70-dcc2-4d48-8cd6-9a42992858c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d80d529-dd58-4089-bb70-4f878cfb7b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979dccdc-ba7b-4964-81c6-ba9658764052",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905ce0d0-6331-443b-a7ec-24801f422a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e90c165-ede2-4b7b-87b3-1cf02a4ac489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c21653-6388-4c9f-8a69-7d75d02baa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5afd9b34-82bc-4fc1-aae5-563866fb00b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e39345-6bff-4112-b972-ef88ed9578fa",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba4ae13-2125-4e56-9753-2bf4296ba27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd45c49-99ea-485d-b102-1e71a07116fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5599d4-caf0-4885-b7f6-be5ae2a676b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "03b490cd-7678-4a1d-95de-504cae0a10a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28c3021-9980-418a-8637-444c5dd738cf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1a22b5-5203-4294-b640-4145dfeb665d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df606b5c-0853-400e-9c67-aa2a7b4709c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d117466b-1c48-4a50-9f56-9803cef361d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e66f25-2aca-4946-8ea8-964630502056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe4dac0-093c-455f-aa26-524e028032c1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c15a5d6-a491-43e8-838b-899110cb69ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42760382-c4ef-4beb-82c5-83e7179e1275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3406149-341c-430c-b984-c4e6b1d69cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f515555-6426-4279-978c-ac8203867b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec6fdd6-b651-467a-80b4-752962d5954e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1603d909-6081-4a2e-b371-0bf0097d1989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bceb925-67ed-4b8d-9dc7-6065b6cc653f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f300507a-1527-4b9f-a18c-b9bed58be9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "487fb80b-7ff8-4ff8-b02f-c92ef42dfd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156ce556-ac1f-4343-9cdd-aee7eabcf8f1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fee0d5-2c19-4ce3-a9bf-fed7c5709ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a844fc93-0214-4b25-b989-f973ab52e644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00cc7e85-b024-4863-a267-27d753c5f031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "322127e2-a260-4c9e-a4ef-fe3d4766a630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ceea41-239c-45f4-826c-1d8f0abbc15c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dde9bf8-eb92-41f8-808b-f41282d216ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9678ef97-3e58-441f-933e-d93ac3686bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dab3ba-b536-47af-a663-9afefa268933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bbad3d6-5110-4dc9-a882-2700607176e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5329db-ae5a-45b6-b4a1-1cbe55b48942",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7c2e52-ff82-421e-a6bd-e7ac3b3868f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317b63a3-662a-498b-9046-23d2f2549780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b79f0e9-0c6e-43fb-9ac2-ba6594320d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0494f33-1449-42e8-b74f-8d0843af5a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0defb502-14ae-43ad-838e-1b4a595b0842",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff83fcc7-a081-47e3-be79-193de6d3722d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c200506a-f458-432f-8832-b5e6a41a51e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6f210b-2a7c-4917-ad28-b3f1755ec99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b536d1ea-ed12-4783-bb90-46a5115ba48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b943e4-ceb1-4970-9f74-c9ace4338fda",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837aae94-4046-4c66-a93b-d6b2c391da98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871b12a9-b5d6-45f6-8be7-11f2e81b98e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd5e107-7024-41a4-ae1f-1409c04fffe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0b4f03-1eac-4995-a13d-d75644b94243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c75728-277f-4e23-bbdb-0b749f192de3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46bccf22-6b0f-42f5-a6aa-11dbad7d16fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fec15c9-13c2-44c8-a779-1abcfbcb14ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1980124-be7b-4e2a-90d1-97af8b96b7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "780cfb7d-a68a-49f6-9581-4b42d4cb5bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bd57e5-5bb4-4b40-9ee2-670b9fb6dade",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5641a05c-6d35-4a46-92e3-2b6c3e058434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9131d42b-c086-4b5b-a308-9c4e9dfe99ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60db1935-3adf-4839-ac60-5f4cb6b7b55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94f0dd40-7ccf-41e3-a3c3-37bcca72c941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa0b5f6-4074-4c58-9698-85a1f42610bf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4389cc8e-6b42-49d8-8bdf-169b7b77cb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4b63b4-7f29-470b-933f-1ddf22bea86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728ee2a1-29da-4214-8312-5103862b1c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "919b2744-1325-432f-b98c-530c1cca8546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99eb91f6-fa64-49a2-ac0f-c26abe01d6ab",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a642d35-be5e-4d76-a8c1-b85f2e1e45be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15ae4e6-1060-4fb2-8633-06cb07ee1224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682416a9-0b60-4ff0-91b7-07ef98bc476d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b650410-8446-47a9-ad9e-adc39bff633f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b554e1-9e37-417f-9bc3-23d7f59b8bed",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7670c25a-c2a4-44b9-b2cd-dbaddc438191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7839d402-b327-422a-9a0b-6aee542c1e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7adbe5-1187-4c59-ac5a-0d6067063533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d4f136-e4f6-4783-8763-724f7a9de214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ad8d61-7c95-4b41-bc5d-b58e4be832b6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e78c0c2-df5e-4c78-a760-d577669e9093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7437207a-da13-4ad3-a853-570cd88c3122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b48d178-04b4-4da0-922a-034bbc48812b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc115f9-8a58-439e-84a7-5bad739f9374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48eae7a1-2a0b-461f-908f-683d1bcff5b3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb5edc9-6b68-45bd-8e22-67a8141ebee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ea460e-18e6-449e-a9f0-c8034aeb785f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a568854b-92ae-405c-bcfb-55eaf2b9332b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "119208a1-88ba-4095-981e-294d261653c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2ed0bb-d712-4484-8c3d-ac8a7736ac42",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4d1180-e9f6-4316-9e9c-0acafb8a28e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e048eb-01da-4620-bc55-95a302532719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426dd5c3-74ec-4ae9-b03a-2818e448dbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92e1b34d-2030-4535-a45d-3f5b67ebc18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668e765e-6677-4c0d-a8f8-04db77d4a401",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc906736-0d42-4c60-a2ea-cdbe86b35aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a17a077-2c2a-4232-abd5-37b89d99c1d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2095400a-bebd-4a1a-a6fa-934ebcc1fd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69dc4c3e-94fd-4f20-ad36-596af431c98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49997cbb-4a3a-46ee-a6d6-b1eb472c1719",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f6a34a-a732-4463-b012-a8b91c6cdfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a0f6d6-e5b3-4d41-9d68-6f3387d14312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4469030d-e309-47e5-a73f-d96f0c0394be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ce43e4-de02-44f6-a6fd-eb1ff03986ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3319a4-9a66-4e50-bb97-832b05ced5cf",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63229381-86a6-4557-9e93-ccef9731436f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b0e7c7-d368-4119-8997-74f19ddc9d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00301a6c-b9bb-4082-9f30-8167f8a90b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09cf9a1c-b2b1-49dd-8791-fd1eef5614dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c96d5d-6269-4e33-befa-8a999523e155",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e917d960-dfc2-486f-afd8-dfbc125b6fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981aff97-e449-403c-a01f-4e4025b85f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bae39d-6382-4c1e-aa31-25798dcc9e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "177a0809-8d26-41c7-b410-74c05c794fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba80e07-f077-4213-b802-9fe296529702",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747d57ef-ce9e-475f-9b38-e038c25f14ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026d842a-ff62-4981-974b-9eb790a4eb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15fadd0-57a2-4de5-9e6a-5f8bcec51ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f38f2278-bb0d-4707-a397-72a4c4ead02d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "99ac4f59-095c-4860-9b31-72ef9083db35",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc6dc234-29d0-4b0a-8a64-62f7eeabba37",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea4a001-e09e-4b2a-9aea-7f4938b57368",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "48b12f9f-d119-408c-b15f-9d44406bfd28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4255851-d236-4194-af7a-998424f8174f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d33cca8-8aee-443b-8813-0d45f0bf38f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c12fac5-ca31-40a7-99ec-324f5538fe05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5da297be-09ec-49af-8330-753314e5cb48"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be1bd1f8-e49e-45f1-82e2-8dbd8b9dac50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fbb163e-5c75-462c-89ef-70f33f0bd3a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5fbf854d-fb1b-4a21-9ad3-0ddd10e277c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3b2354db-9c57-4d33-9523-c525a31361cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "938e65b7-dc88-41b2-bd2f-56d8906f5f7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38f476c6-6b2e-46af-bbcb-f784032e8d41"
            }
          }
        ]
      },
      {
        "id": "2ec0f3cd-265c-4b47-a732-a3ccbc15d155",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f4a865f8-5e1e-4a33-af8c-7ba3996b6427",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29f70146-9ad9-4bd5-b2c5-4afaa477d439",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ebb40063-a43d-4396-be41-d0c7692bdf8a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd34c5e-f16d-45a3-b604-3e84998db484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69450b39-4724-48c9-9c28-c435d6764a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e731f955-a16c-40f3-bdd4-b9a5f37b1aed",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e577f31-a709-4024-b8e0-9cbf9a5147d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28225a7b-61c9-4add-a4bd-669d6ee68ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be4f6c7-74c5-49d8-b066-ea7c265e67e3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fb1706-0275-4f7f-9d2f-2e73903bd667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1dd2e0d-6b31-4e40-aab7-1cdd2ec8e676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd6292b-a7d5-4fd1-851e-13f7737386da",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aabf280-8ad6-4b8a-bf84-2c5d264a55c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44ad575-8582-44c4-b8b9-4aeb59801e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910dc00f-5df1-4212-8a4c-2db98d1d7dbf",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b561ab-d10e-4419-9cdf-00999f8c0e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed5153b-cbd7-43c9-a87b-f57e8d238f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323d1124-8e3b-47d0-a0bf-8fd0c6b4216c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df23f310-2394-415f-93c0-8162796c3246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce86968c-a24b-4729-b5d2-c58ba7f52676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2641bcf7-5698-4a20-a4f6-23736bc618ed",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f90eb5-ad84-4304-a2be-e4b2ab386768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b26b103-fe4b-42bb-adbc-85c8b943d294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67868621-6ac7-48ec-86e4-9b55bd7558e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4ffc5a-66d1-46cf-915e-21c0aa71a504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f316ac8f-2eee-4b45-b109-f184aa333e29",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9eef2e5-093f-4773-b77c-70b091af2eb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99172cd3-e0eb-40a7-8348-32be743cce08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17f3376-fd6c-4ef4-b440-6078b56221c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1085e1d-0252-4d00-88ca-5bb1c44a3ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74a0468-0c59-4c11-b576-718f0edf506c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fbd663-9ce9-4c4e-9075-aa4b5b8e53df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8207a305-2b8e-48e8-8143-86d7d7796179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96a30b5-c12e-46aa-bd93-5375c7fbb290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef6cf40-0ce6-4d43-8bde-9a0c3055a457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12159b5-fdcd-4c71-895e-f74e9b2b771a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a05f76d-d464-4dce-99ce-466538ba77af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22456006-6b1e-4921-8538-035ffd5f4060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e346ba-4898-4655-89b9-9e401b6034b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbaaee83-59fe-4264-a233-f3011b3104b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7ffc51-c4f1-4b9b-b6a6-27070b356be2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8097c5-2038-4dde-a23d-8c8fa6790415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a211296a-e951-4668-8df7-2c31a5e9dae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "029a6119-e02c-48df-a3e5-b63bf4c4bdb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68e8585-9730-4ff4-b7d1-d8e99d006f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1036f0d5-bdcf-4605-97a4-a52e3479a25d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96310f6-9919-44db-8cc2-d7fd7e5279ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9183b7f9-741e-4a2d-b80c-ed74be5f8501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b60a80-3454-4572-a454-7b18c2daf879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1191db-7828-4d54-b01e-8d68924c559b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f067b0cb-005f-4b67-8bd3-a6dca616c13f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a5a476-e34d-455b-b452-4c32ac0e4bb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1eba17e-95ef-4936-97ed-4257bb2fa285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95416ca-62f9-44e9-9652-5dbb63839093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed877e1-cb92-47f1-b79a-0a707b922c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a494622-4d3e-4a9b-8a2d-8ef73610aa53",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40a54d7-6a45-49e2-9794-56b42ccd03e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef82b85d-fc54-440b-89d3-2b8788284a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3af15d3-a1dc-47a7-8558-5e34927d81aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bcb3a88-3738-4f1a-af44-db3735e182e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fba638-5eab-4bd3-b00b-9a52ca79e130",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cda9133-6ce8-4284-a786-1396088e2c33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "214c4c01-88d3-43c1-819b-da5ef16ba745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f7ba92-7d08-424f-84d5-96a5ef317e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9638493-8149-468b-ac80-595bdf0d308b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ab9628-975e-4efd-ac25-a4c06d025a98",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acf4a5d-8aa1-40cb-a092-837204b87509",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63e659ba-a82a-4d51-adee-3113b9f6862b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd10ded-4306-4599-ae06-6a6e6cc5a593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1219533-e3a2-43cc-ba5a-f1896cdbb2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff26b138-7610-4ef5-8577-ae7fe5bed094",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec71818-b7b3-487b-9afa-8df6e9f9119a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b3c007-e7d4-45de-8d46-ed34905834a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8a4d13-8fc2-4ccc-9b3d-48094369edf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8896c58b-9d6d-4d51-8f5e-2c70357825ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44493d7-c720-490f-bd11-086a92831daf",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2dc2db-4dfc-404c-abb1-e5656f13f492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073c942d-ca90-475d-a8fd-18c3e0c9a1b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "781a9dd4-bb10-42ec-9455-022ec6c70b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb49e44-033a-4357-aab2-96d7ded8c6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca8eadf-87b6-4c08-a59a-79e21aa96ce0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0376fe6f-ac91-485d-8eda-e5bd2cc7b9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba1429b-aa65-4f86-8ff5-021849eff820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "971de9ba-4884-4cef-a6cd-d433b46082b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807aebd1-621e-4e6c-94d9-878998135a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5148043-0a30-4aaa-8159-f2a5b58c07c4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d41fc5d-eb85-40e2-b372-173978f839ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba66472f-22dd-4c3a-8112-691f03078d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52b4dc1-c0d6-4f12-aa8f-891f8565bc0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07469051-6b2e-4648-93f8-f9646a7d2a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2a5b8c-1e96-4633-8b75-aed656a79698",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c4a05f-a4f9-4171-aa73-b8072b51ca12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493a7518-dfcb-4dac-b7b0-c6447d16c93f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2abeb0-d85a-4b6b-b67f-c3356783b535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ebc8d80-659f-46c6-a935-d80ffce4960f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a308b817-935b-4196-9b86-546d7ba42386",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43eff1a-2ce4-4b19-b5b9-f8f931427e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d107fd-32e3-43cf-99a1-d27bc141f19d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3702457e-5f13-4e7a-a3f3-f114f4e78b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e01181-29b8-4e32-9b6a-781bd791885f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be30207f-2cb3-49c5-ad88-b860e01a5283",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e798e484-9752-472d-ba50-d313c7c30908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c55391c-f941-4263-a229-7b9866f06232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddcf466-b36b-4fa4-a2bd-1750970f44da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e50e81d-d3c6-4fb1-b135-984ea07c721a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7f249c-90ea-436d-8973-1e12234608d6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f7c973-0439-4af4-8d36-dd14b5f165bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4c966c2-fb9a-488c-b6c6-5bf541e74623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b116558b-6288-40ec-9fbc-445d6d869882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7089683-e1b6-4e6d-8430-9058f4de250b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747e6a23-5c05-45f7-92cc-4209b1a9411a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e5c37d-8ae5-4020-a04c-eec979427f30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f040ffa0-14ab-447c-a56b-0c0b9d4e3337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd78c8f4-d213-405c-b919-40df2b65c65d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f83797c-147e-4d1f-bc67-b13e9975e95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faee9b34-2f59-4210-9658-dab3755558ef",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda9045e-d074-4554-815f-461bdeefdcde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db0b8a48-e898-45a2-beb7-6f24fd596a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9092cfff-00fe-4d18-8c56-fcf16d0b185a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e90c551-a02e-47da-bd37-107ebdfd3007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a087c1c4-c206-4ab4-94ee-55100dda225e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5092d724-b123-4ae4-aee4-e66b9804c5dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de9619d8-553a-4759-842a-43379baefcfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2552dcd4-c512-4252-9d50-3ab5b1818e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76394dbd-eca6-4acc-b986-ea92aabbdedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410df05b-b447-4b95-8961-f9a1e485151b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a049fe9-2d90-40e2-940d-6d365ae95474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dbcecb1-6534-4b1a-b471-5ec07a7bd330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91117ded-e05f-477c-ac57-b1611f2bef09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117ab14f-6435-4ba3-a37a-3b595fb879e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae19514c-e7ea-4881-a90d-4125f97a63a4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989bad9c-4ce2-4919-bbde-970581102795",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1924049-4964-42ec-96e4-9815bf79cba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffbaeeb-1ac2-439d-8204-272b66ea3f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b603355-991d-43c9-a462-2021b8764ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0414680-cfb6-436f-901c-f5b270093d89",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714fbffe-001d-4d0f-aa06-c7728db7e5c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "223c7355-9917-46e3-8acb-5c210922d858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fdc73e-84ad-4502-88de-65c632a84053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d36722-abd9-4249-a81e-66dc52b09555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ac8a06-b225-4ff0-a8a1-8d00438e8bc1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e41e40-1be9-4cd1-942e-cee08b8ceae4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c047558-458d-4d80-a932-f44662c74d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "041b0df5-737f-40ee-ab88-787f6c3c2e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0311baa-bf51-4265-8f00-90a7eaf5795b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946b8205-4a3f-4e1d-96f6-a2d9ebf887d5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0d134a-59a2-4272-bf43-ad890a14b123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae990325-55ba-4ade-ad69-d7068294fe32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "311b4b90-d87e-4061-953a-f38495b6660b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991c76a5-32ea-4d2b-841a-879f80b3708a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a521a6-d73f-4f37-8a56-7f1be833c7ed",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae3468e-0118-4ddd-9b54-3663242e37f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cbe324b-e5a5-4de8-a5a0-d1ea4e110e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0dd283-15e1-4451-84aa-0895fe968f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0f9e5d-598d-4186-a241-4eed86cccc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b217cfae-c425-43db-820b-ca3f720f6134",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5583c5a6-9469-4ce0-9ffa-43c39a654da9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5b39ed5-0d46-4408-87e2-a00ada8bbe49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad50c43-b071-4f18-b698-58f7390c940e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b425ae3-ccf3-46d3-a716-8d60fe085e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f485f8-e681-4391-86ec-a0124ddfae95",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9186fd-b600-498b-b95a-3b140a85901a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22f5118-f5bd-4575-bdbf-660f0d25e41e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9738d330-6806-49ba-872a-0681f9ea7ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d788dc-d908-4a55-939a-f8e79b9ec3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba0c142-28ca-4eec-9711-be7d3fe79df2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cf34c5-1799-4167-908e-5095034dd2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863b6b84-afcf-4c9c-8999-ccd7059122c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33bf366-6c7c-4644-9109-0a0039b86af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a10d49-8f03-4f5c-a8b7-3c7b3016ed1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5634d5-a1ec-40cb-ae41-40ccce0dd530",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1459b52-ecae-48a6-9d13-7c3bd9204835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6d5114-8091-42a4-b76c-e6087624e349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1488a87-838c-42a9-ad2c-3c7831081a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0729859-6bc3-4cc9-81ba-7b93c9cced4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d689a3b-dc8e-4076-8091-3c6450c8d50d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42edc4d6-0386-480b-b635-db24641b2768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528850c4-5800-494d-a83f-9c76a360c805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdaa73df-ab46-4536-8a36-8d7b3e059a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af968fd-e385-44d6-82cb-1e6928468297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917795e4-8c9a-4442-a19f-3ddb2686e87f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a53008-2a88-43aa-a6df-cfcde6d459e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa6b924-48be-4e8d-a460-9754fe16b1f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e2ad94-49ba-4178-9920-cbc1f7fb4aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6e6ca1-acda-4ff9-93a6-32b19453b0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b9b41f-0398-4c07-97e2-9f6745220b17",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268b075a-5d3c-49e7-85dc-914dbbe008b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9bc65aa-154a-491b-8594-69579ea31db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ab2d73-020e-478b-aff7-9b15f453a3d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b03630-8a07-40d2-b132-5f8b84b6679c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4eebd07-ef20-48bd-bc40-4a3ea022b748",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cbe787-bb3f-4088-9ef9-2d427062e309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d170f00-cb8a-497a-8397-61310d4924e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55918d49-1855-4a05-8728-e0a88f8d03f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa03e84e-ce75-4ea5-9ba6-2e7d70d1074a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ce501c-fd53-4037-aea5-1e056b432247",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ba0cb0-0008-465e-8a1c-38abb287ca34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e089bc-ffeb-4bc9-80c9-a7fd2eb5bb62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d623c2-6ed0-494f-8469-452d2930e753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17e1a5c-30ee-478d-9c8c-350d685cf6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b41dab6-6786-4770-b22c-3817804ee462",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9764b253-0f6c-43ae-8f75-e56b6bc52b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146c6bdc-ff4a-4bec-9520-6b7c662c16b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92be3e00-28ad-4318-90cb-5520058156b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b8d94b3-c037-4ac8-b302-07c610a0f307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea9b1c0-c315-48b0-b687-a031d9386e4a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d6d4e8-2a2a-4fdd-9f36-a0fae78fbc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb51bfe-969e-4e1c-b45a-0d8b9f5370f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7788517d-723f-476d-9bf4-6366c9734cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5391697f-6672-4d1f-b5a6-cb316bfddfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88f87ea-04c7-4af1-b324-db035865b16a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f0e87f-414a-474f-a41e-0881f4a817c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b52002-0efe-436a-b692-97f7cb7e1f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5576c417-543e-48ff-b2f6-ae4f74754236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bcf7648-21f0-41f1-8ef3-a3cd5b86b37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962bdb0d-2115-42f3-ab41-ca910535e0d9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72f1913-ecbd-4e31-9913-a30c35b95d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f486819-72d7-4be1-b4ac-a3e5ad98731a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33584a48-5c42-4b5c-a44a-6772cea37f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b22ace-ddef-406f-beb8-2a32d49c6515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda3be58-3fd8-4ed1-a212-93dd08afc273",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdf0a47-bf0c-4bc2-ade6-11350e0abd86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41ec6e5-bde2-406c-a179-93e740d2d2a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c254d14-6ed8-4888-8426-c93aafad0cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826a2b13-6f5a-4a76-ad6e-00ebac377438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd104901-f210-4149-a2de-9c89bc0e825f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f6f56a-c430-4b7c-9a19-6e1bd0224afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e02dc3c-1f07-4d73-851a-a8546b066e68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6920fe73-2985-406a-8983-8091f8b48ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a410b45-d22f-40d6-b49d-f7227613abbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e30466-058b-4a1e-932b-c3b91f55a43d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185249b5-fd08-44aa-8685-86375a512759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72666328-fbc0-4100-b50c-7faf1dc3d6e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8833c54-c8f3-4da9-a3b6-e47e98a1ecb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109715d9-f9a1-4b35-9869-35a5c52705fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cff9614-3072-4962-987e-c3e0392b822d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b560b8-880b-4034-8d3c-fc10d8e90d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9031b82c-c8ac-4f2c-b91f-232603ac4e50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1a74c9-0891-4805-a886-da1c8201181c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf7507e-8af3-45a9-b8cb-1a775386214f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fae035-c67a-43ab-a846-65d4c9dbcbd7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ff97ba-830a-48b4-8bcf-d01f0f21eda4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0956874-ad76-4c37-ae07-f500422203c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72dea8a7-d85a-4331-886d-56f6f10938f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59887f84-3e48-4e2f-b9fb-1d9ec3017e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7f8eeb-842c-458b-b39d-6aeb0207008d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96049742-0861-4ad6-b2d7-a190a33b87ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f11eeb2-e77f-4ec4-af60-23d8963c149b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07a57b9-44b7-495f-9a33-1c3fc0bf8d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5ca277-a249-4d0a-8af9-d4afb94d5e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995a6251-b7aa-43ba-adc5-99e142298d34",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cb1846-d40b-4681-8f64-5d1778ca70ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eeac0af-c346-49a3-9fb2-79e83e6c3536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26deec13-dc71-46be-a08d-6af8c75bd389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0cc74b4-6ba1-4d22-b6ed-1492c8717454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1171154d-09fe-4ae2-b391-43d4496b0d9e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0badfd8-cd26-4add-8ea8-2ce10f01f342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a054fce-e20a-4a06-9c7e-65d8938ddb36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a7c38c-9f2d-496c-9bd8-2e23c5a458cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29885af9-f25a-4976-bc3b-082126c331aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbc6bab-a0d0-47db-b2e9-051e1d87cb80",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cef739a-6461-4183-b06f-47cb09d91d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755fc2be-c19e-4e7b-a5a2-5dcd80cd4d41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdd0e0d-1f26-4c96-b8f4-8fa8e42d67e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1603a74-5ac8-42af-b846-02724ae0b2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57179740-eb2c-40a3-a4fb-9e2a7afbc39f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91855c2-bb71-4621-a420-213cc64ff9b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5926cbce-fdd9-4fef-b3ec-b1b81e4892c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f95529-d9c7-4f5f-a91b-6b6a9fe526ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fde22da-a9cc-41a4-8ba6-852292390b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98806a4f-b108-475d-bcbb-f4ae7a47ada3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a7ca03-704a-4018-853d-52202a70bb31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d67dc8c-6f7f-4831-b705-39252e333922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72188ef8-e49f-4a2a-9351-a0de5fd78d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a048e8-61fa-4bf8-a41f-cd1ddf10306a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aeb1fbd-0aa3-4d77-86d5-af67691f28aa",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459f1ed2-0f3b-41b8-981b-48f86dd1607e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f036ae-81cc-48f5-892a-ecc769aa829e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3b1d2d-3970-4ff0-b0bb-8a647478167f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7addaef3-fd9a-4de4-838a-6dcbfc9dd229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fc45f0-d4c0-4d80-8d9f-c4535164073c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12be49c-a275-4069-98ac-5b96fa01d45e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63fb87b-700d-4e2d-9207-56d85a338b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de72215-da21-4108-966c-e3ce8d5e1981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b81b2f4-ad80-41d0-ae7f-a20b5fb6a669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e579b97-87dd-4cab-8b7b-ee0a740630ac",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b926e73d-e144-4a13-83fd-9432151e1030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26cdb2eb-19b9-4011-ab01-bae4e613a6e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88135798-02f1-47e0-bca6-7177255f037b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d2c4c5-fd7d-47b8-a2bb-d3b68fe7f9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb88de05-24bf-4daa-9e7b-5efd93421cca",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45171fc0-6748-4a20-88aa-c68d0169779a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31977ba5-4b0e-4ec8-a8a2-e28a291f38e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de66eb63-6883-49bd-a1f0-5ca4d1174bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4113775-d2f4-4386-9fb9-dd72e96ab3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961467a1-5b06-4d8d-9424-58be57f4d67f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810beb04-373f-43ca-bd33-4316dbe7cf1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac68636-27c8-42a2-ac70-c72087a99e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a25883d-d66c-4203-a4f0-f9210049119d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7959c17-a54c-4c35-86ef-84f77d4feca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83312c3c-682f-4ee9-9dc8-1e40869ef6f9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f111c9-3152-476b-9d97-9abeca551969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5293a1df-678f-42c1-bd92-abbdeb188dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fd77eb-8dbb-4d02-8782-68d0ef61d1ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703ad3ae-f862-4e87-8f35-5af8cb6c20c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2849aa-0557-495d-9646-eccb2670b519",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fea5e5-2b58-4111-b382-ce877570acfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f68a233-018e-4d15-bb12-2ddee5f9f245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff1c54a-891b-4892-9e0f-85eaf1e8b74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac8c125-b747-4054-8438-8e7558f56119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4036a17-1fa1-40cd-b840-3f1e2d59a6dc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b72ffdf-8636-4920-95ca-47b31035d365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "878e7c29-675b-416c-ac3c-409adde88bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c250836-0b5c-4b18-948c-d3fb08a0d34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444d2f7c-a0b3-4a62-be1e-035dce792c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7569efb2-50f0-4a03-ae4e-1ca27be4a562",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34886c7d-c141-4f49-983e-8a17b3bcbdbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86898238-b2da-4082-85eb-899be0385285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e284b9-88bd-414a-a421-c85dbe26923e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec938b9-06f4-4e9a-9a89-8d28f7010c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e2f21f-1338-479c-b0e7-29fe14e267a8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4705b7-b185-453c-adc2-18e084b7976b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8299903-1fc8-4cc1-83d4-ee1f804e473a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d560f7bd-9c68-423e-8868-0da6a122b1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7179b8c5-d385-4f56-ad92-8c11b794dc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0c5690-fa59-47b1-857a-6074fe3f7140",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca104db-f4b1-4382-9b0f-238929b18b29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a38e5f5d-97b3-42d3-a0d3-db86794cc3c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daaf5c3e-3ae0-4c9a-83df-5daf164c9a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcdb2491-e361-40c7-8db0-41fc592defff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df36963-d478-4e4b-b0fa-3b29bacf5018",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbe5303-75d8-49bd-9801-b101835ee350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b108fd7f-fb65-48fb-9a54-d2ae6c65dd65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405f4513-d8bb-4689-a74e-7116297ebac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f50e5bf-2daa-42dd-b8b9-08b58d38b824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d760a5-f83e-4725-8737-d2ccab61c9a1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f60f65-c21c-47d8-a290-e84e1ae350fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf4cf981-d4bb-4b43-9e40-b9292edf2a56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d5fac5-a451-4da9-a094-b002e5562ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ba266b-368f-4160-82b5-9ee78c63f30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141a61dc-c7c1-4d07-9d38-ff426af8f721",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cb6078-3b12-4cab-9110-c19168cf0cba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3b25a8d-1900-4deb-a73e-8c76d209a8f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773f5410-6f43-4a76-b92f-205e17395ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47516e27-48a4-48d5-bfa6-504ba64e253c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d18b76-5fe4-471c-b9fd-54f997ad4543",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8eddda-abf2-4d1c-bb0f-88e668a9c2d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ff01793-111e-4199-b602-2fae134afbf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ece130-92d4-440e-bbae-77ca1af99ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e36781-aab8-4c44-8931-e29c3d2fd8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e8a4b1-07b6-4be5-848f-2afc7f7d0a9f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee07790-4c97-4dac-9ca4-114a9dcc26b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b8ffd91-9b97-4399-98e7-5746dfe38586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd82aa2b-d229-4be6-af34-9248a090e503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823a703f-630e-4584-bd03-3c51de919428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce2248b-3d12-4aa7-bd78-c166b578c40b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3a9491-d1b3-430e-9a9f-09a4935689e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb4ae244-54d9-4eda-bc02-d34816fe823b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc01a7e-0614-4159-b263-023abe73d841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85bc78a8-b7e2-4910-bb80-bff0a7675fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89c170b-0950-46ee-9ece-19b4a45d8b43",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83967ab-b8f5-4f39-8339-45b6ad3b3cc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2938cb97-ff04-412e-a53a-295be6627ff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ab33b1-e681-43a5-8f2d-f39cadac645c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70c5146-e0b4-42e9-8166-9c092b64fe9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a05a365-1c06-4205-888b-ee8b81323508",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98d2f3c-776d-4169-bb56-d546684af02d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3e82706-6496-4af2-8edf-bd9541d98185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e61279e-a98f-4c85-9e56-105a4ed1670e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e91d91-1143-4aac-85b8-b08a3fa1e884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8159163-7715-4fb2-9a0d-c90cbff724ed",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc8e349-3c79-49ed-9136-5d6afa656520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4551ffa9-8914-44a3-b359-6f68ae53f92e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5df685-7ed8-4f15-b318-3cbd8cd1c5d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86647811-11bc-440a-be71-081903eeda21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57194e41-5899-4c87-95ec-5a6eb3e5169d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d03c64-400b-493b-82b9-7fc570a1aec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80d44019-f5cb-464e-a605-6387dfed3f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f631eaf1-952a-4926-9974-596e97189cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb5c4a9-a143-42fa-adef-11bf508f7366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7389e1-4380-43af-9158-3b40e153c312",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41614590-79c3-4399-8c99-1cadde257f1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56faa194-e423-4aaa-ba3b-2fe842784085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8178077-317f-4c64-a4d5-9aeffd538c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbdf8d8-4ae4-4d60-888c-617c6f0b7da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649a8b30-a3cf-4e05-8c11-8dcb0dc7b2aa",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd8727d-bafd-40a7-8184-86eb2fb25723",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c997723b-0291-4128-85e4-bfb247fc9723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6aca05d-ea82-4fc9-bc7b-f6b8ba420a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c94be0c5-a6d6-46eb-90de-8acdecc02b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac36104-0712-4c3f-9a2f-de4c5997d905",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6434f2-42d7-4e12-bc71-2382356d2008",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc33bdf6-0744-4010-9ad2-141a5bb50059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74dbcf75-c13a-4933-b6ad-9b65abfab5e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f97308-db23-4b13-a17f-4e09f5846a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c83fffe-fa89-4f8c-a791-13568955cc1c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1616c306-d42a-46a1-b97b-562c71076154",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e76660b7-5f2b-4797-aa14-a8c093c92b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb9654f-aff4-4c63-b269-7c3b9c6333df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beabfb0b-47d4-48a5-8f4e-5f1a5dc7be42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11914c0b-2376-4fdf-b477-95634199b5e0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1173973-2114-4ab3-9b72-2e00aea669f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94574201-ac88-4a3e-b1ba-b59026460f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0310c4f-3bea-4fcb-bbfc-0202aac184f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa875a1-79d6-4011-ab0f-61191a3ab12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129a0615-1758-48f8-957c-8bf0a7813169",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51456c9d-d2df-4c2b-93f9-3ff54b7c4fc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77f0ac3c-b756-4cf2-98ee-3cdeb3270f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26de6cc7-c97f-43cc-8b1e-d0d4acba7d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4575a55-17c2-4e47-97a7-eba31f1b73f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23baf69f-713f-4fef-8a16-b3eadea3ad4c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427c5871-8997-4623-915b-d528900c2f08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d59ea03-8d7e-41be-9101-901669ab7788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adf1117-2928-44d1-8ebd-a65a647ff440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d6256b-96b0-46c4-8c4a-c89f94ad8086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62ff60a-c90b-4064-aa52-dfa11b688d42",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec0d3b2-508d-49bd-a183-46982f14d5c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb0d6a87-00c8-4074-9727-7c446e138f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad87818-4af1-4c2b-a963-98188f3125dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e2ecdb-515d-4f5e-ac13-ce039f16e360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6323b9-a42c-4b35-b4e7-8340bd9c60dc",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3cd7a3-cf35-443f-b863-7b816bea83f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ed737d8-2588-4e0b-b21f-730301a43ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d80a37-fe1e-4c12-b95d-038feb9f1a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf6bef0-4c57-4309-93ea-5731586b6f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516b9143-9644-432c-b8f7-1312ac27db8b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7778413-b8d5-4647-a4ef-ae2613575169",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c79b358-c829-4aba-bd8e-d5a38cc8d196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6668b1-7276-451e-b34c-ddeb75bfea51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261443a4-1b87-4f4e-91e1-ed81e1878255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db76dca-3cb2-4227-b49b-4ab49c7f2f7e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14242950-0ecc-4db1-80f8-3e606ff17a26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94859cb1-aa73-4d0a-95b5-baa5385319b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d35f9d-bcf0-432a-b05a-c6b9999e5a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89656733-4c24-495e-a34a-475cfc1a6cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13723dff-82ba-4261-997a-b0ddb682f8f7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667aa14f-34b4-4aaf-ac57-bb18e6db47ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0df0957a-46ba-4c08-b02e-b6ad0f2d6191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2562adb5-bc14-4ef6-8abd-b95538ed6776",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50c8464-0397-41d2-ad80-417c0f62066c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc5fec3-498b-46b1-8238-9e0c711262ab",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24df1b0b-32ba-4a55-b5d9-e7d8fb3fda0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "430003ca-7398-4429-9ef8-23d21a741f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad68b178-1a1a-4b5a-8645-8e5e4f5c55a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17b9130-051e-42a8-ab52-e9384e966001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64635335-75bd-4275-b7e3-3b3220c08b6b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cd4bbd-da83-41ad-be5e-0355297a3d7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b714f42-c709-4345-97ac-17b9ba0e24e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f2ca91-a4f4-4686-9f55-fbc64de4c7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581baae8-9e05-4377-82bd-c90884959b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713de3fe-b613-4dd1-b7b7-a63c0c6c2fbd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c63fe2d-4ce4-44e3-8f42-ffeae819be71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f5a1f37-a196-4c45-8f1e-8c0929cf1c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f35919d-186b-4d43-9b2e-9b65a5c4a0ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376fa01e-0279-4f14-89c5-df273a8ad72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6871ff3a-cac1-4f68-ac85-05ed80475277",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b86c299-2695-4540-b915-eb61e56064cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a4312b9-211d-42d3-bd33-5d239e69b4f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af67556-d471-41a3-854d-8205ce61a8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35507de7-ea83-4bfe-b139-c389976f35fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072fedb8-f6db-4aad-aa02-d1d457cac01d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2155012-7e70-4c8d-99d4-16887cec25f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87ea85e4-ee9d-4bbf-8204-aba157a70f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d63d76b-c034-4a90-92fe-54a1171a000b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b64fd0e-8d2a-4145-9277-b683d4902edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2db3b0-9f10-44ac-899f-2d127cca4e33",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119033f9-66fe-4d3d-94ed-5d3af5eac702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba16b54c-a84f-4e29-989f-1defc415f385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "307cae59-016c-43a6-9233-8313e3f4409e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987b679e-027a-4fbe-a0db-aa214f50efbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d586155-5d46-4779-b09d-c62f69eca8f0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea303e6e-082a-473f-b204-23a12e17674c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6767dba2-0e95-43e1-843b-07435330f8b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57358b87-358d-4c10-97a9-54b184cd1a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fdb2aae-026f-4ad4-9703-0e04884b529b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad8020ec-cd0d-4450-8b1d-666b695338a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9a852e5-5fee-43f3-bb1d-baaa1521daca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bd678c0-5994-4bea-99af-f489b7ebb76e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de479cbe-0815-47ea-bbd5-83059873d300"
                    }
                  }
                ]
              },
              {
                "id": "f3254246-f079-4dcf-8f18-b6a86bfe3718",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "074196f3-55fc-4ae7-8007-8c87b612403c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8febdb-ea36-49a8-957f-e9cdae209804",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7823fca9-2b9f-4e87-82d6-eff86f7f1d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8beeed-7617-4a74-8275-f0b7af76dda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "955ba862-4b7f-4fd5-9bb4-3dad98502845"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68dd7823-01dd-4b66-b24b-ed6f4d6e7bed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d0acc20-72b8-48e2-84b5-4444201790cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2414760f-7093-4d13-b204-771493e0e51d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1e0933b-b1b8-4310-8276-cc6ff2954f38"
                    }
                  }
                ]
              },
              {
                "id": "bd2c049b-de25-486e-8bc3-d2502ec4cb7a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "dd21fd5e-cfda-47d1-93da-0d97add046da",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7b186b-18d9-4884-a076-f1741095c20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fead9e5e-0dee-4292-8aae-7d2fbf79b54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f3c681-2c58-4e6d-a577-88dc499b754a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb48fd5-7ec6-41e8-8819-3c562288fcc1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "29cffcc7-8404-4e2f-9348-8c30f922a89e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e53027e7-03a8-428f-ae29-18cccf55e074",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "690a1946-27ce-46be-98ef-2a53ad7e0f9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "db3f73b0-3c97-4063-bfa7-0a666158539e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8d1e38d-46ef-42cd-a891-e0084913e3ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cdab7f9-fda2-4f63-a2c2-0bb16e8c3580"
                    }
                  }
                ]
              },
              {
                "id": "b2046fe7-d5fc-45e9-8334-a20e175892ba",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dde0cdc7-4a98-486e-8030-566bc53c1ad5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cf14d3cb-967c-4175-b280-006f8a2fac81"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1526ca13-d7c9-4bfb-8ba5-7edf8b957ea4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0ae7478-1b0d-470a-b645-194573488bb7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd23f57d-40db-441e-ad47-2b1ca76b152b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8d9bbd36-b82c-40ab-9150-ed37e1f47440"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9228b9ff-bbd9-4fd0-a612-8fddb73576ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79ddb1db-08fa-466b-bcd4-7444711be6d0"
            }
          }
        ]
      },
      {
        "id": "8eeeef7e-fc5d-46a9-b91e-bf80584ee0c5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c1ddf9fa-511f-4eb3-9baf-fbfc89ce94f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bbf8de15-5608-41ff-88a0-9e3d66a2a680",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f8f36de-c943-42ac-b85e-e2e51219ed1a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf80966-d3f9-4d1a-821e-20236c872ac1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "573588c8-f4d8-4f1c-818b-34960449681c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d53ad9c-194f-4a3f-96a3-b8711b9536f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d45b8a28-253e-4b63-beed-78760a6ab0ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "724831d4-2b9f-4761-bb90-c7ff43335130",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc1a6fe9-76f9-461d-94d1-3401ac97aa46"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1285d96-f1f1-45b7-8eb3-9369781cc68c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62142601-eed4-41e8-9d0f-1bcaefdeef29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad2301bb-3768-4e42-9411-f329b23afa41",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a03ef097-580c-4e7f-8a10-958d4aca560a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d25d01f-9af4-4176-8356-0cdad50526eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99f31a1e-25e7-4255-9201-a2254a83cb4c"
            }
          }
        ]
      },
      {
        "id": "d0c079e1-9b49-4c89-9b31-56f43422202e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5f51b54f-9172-4b62-93fe-6dc56dab5c91",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7142da69-0693-4afa-89b4-7d47fb414e4e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09a637b3-f7fa-414b-bbcd-7912edfb6993",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b379a8cf-a863-4b12-ae78-034a56336f5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98aa9abe-bc46-4901-906c-d6795c0a18b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8196f2e2-3aa9-49f0-8d2b-256b650962e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ade77616-8209-406e-8dda-d4416d23cf95"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "175801e4-a643-463e-bdf8-d4aecae76179",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f19caa0e-a97a-4ad9-8a40-52dc705367d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b2e9676-d5b9-48c6-a047-0dac2de1d295",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc990448-e641-48b7-9fd2-8034028603f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3f058b4-d0f8-4bc9-a901-c452c10532ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "69b833c6-eb55-4112-8159-09b459bee9f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "885ba2e0-61b5-47ec-aeac-492b4ea252d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b54e8f6c-3099-4ce7-9a84-50f848969852"
            }
          }
        ]
      },
      {
        "id": "2416fa4b-6354-4e76-8f84-a3d53f7ac5fc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ca2a56c3-8f2d-4e45-81c4-07313b784518",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8acac76f-3611-49c5-a14b-934fe0cf8756",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b43a89ef-b6d4-49b4-9468-3c907463977a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595e9e3c-9874-48aa-b657-e1690287d626",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a345881-30b4-490e-861d-e1dd3d3d2167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9642405-d61e-48b5-9bfd-edbdbabb191d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e164c7f3-6f54-43dd-ba26-ae3948f30d1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "883d82cd-e4ad-430a-93a2-e20a3b4730cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a11fbca6-95c1-4622-85b0-2a47434d24f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aef9edee-00b2-4df1-938f-99e158c5fcc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffc3f2f2-c93a-4e08-becf-89e255efe833"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44450f5e-8e35-44be-9956-18769b11511b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dde44e66-c8aa-49c1-9897-5879301b1cbd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc58bd96-7d52-4ae6-86fe-4492fca53036",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f50d7f7-b2fd-4985-a852-70848939f2f9"
            }
          }
        ]
      },
      {
        "id": "7077f216-fffb-4cd9-95df-f1d4ffd88ab8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "104e7b71-07ef-41cd-a0e5-96cdb1e2aebc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33eb7a2b-473b-4b5b-bdc1-ad60753d8a31",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7f0a4875-556d-4813-af30-a93f87236969",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b69c257-e8eb-4e0a-87d8-977d8edf9b66",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e245d2af-f026-4ef0-b8a7-e80698b8b68b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 33.42460317460322,
      "responseMin": 8,
      "responseMax": 405,
      "responseSd": 30.736047774218413,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723509688593,
      "completed": 1723509705033
    },
    "executions": [
      {
        "id": "898e18df-32f8-4e31-be49-c90cf67915f4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5f49bde7-0de2-40d2-afcf-ace0be35d3c0",
          "httpRequestId": "dcd320da-7811-4629-89a4-8071103d8db4"
        },
        "item": {
          "id": "898e18df-32f8-4e31-be49-c90cf67915f4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a5b3fcbb-e87c-4a46-864e-34c5fefb4dc5",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "0f5f751d-ae73-49b1-8c4b-d2a204a5b9b8",
        "cursor": {
          "ref": "70ec9229-740c-47e8-8455-ea1087046d70",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "31d34e28-b651-4fd9-a356-1214ba1ce0ee"
        },
        "item": {
          "id": "0f5f751d-ae73-49b1-8c4b-d2a204a5b9b8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3e8fadf0-9e1a-42d3-aa1b-9431f5bab6f2",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "4080ab1c-d15d-4dc1-9d01-d5e25b9aac1e",
        "cursor": {
          "ref": "487398ae-7585-448e-b3f0-a0f84fbe22a7",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e484f519-eeca-4181-9679-09bdf19a2593"
        },
        "item": {
          "id": "4080ab1c-d15d-4dc1-9d01-d5e25b9aac1e",
          "name": "did_json"
        },
        "response": {
          "id": "d4a6ffed-bd58-4cb6-8216-a9b26137c4bb",
          "status": "OK",
          "code": 200,
          "responseTime": 218,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc498c2-cb1f-4984-aee8-0e999ab416cf",
        "cursor": {
          "ref": "69823b97-2631-434e-ba96-8859cdef3fec",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ce7bdf0c-bbb3-4a8c-87e6-778717f6b7c5"
        },
        "item": {
          "id": "9bc498c2-cb1f-4984-aee8-0e999ab416cf",
          "name": "did:invalid"
        },
        "response": {
          "id": "006f4bbb-28bd-4928-93d2-fa1403664f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc498c2-cb1f-4984-aee8-0e999ab416cf",
        "cursor": {
          "ref": "69823b97-2631-434e-ba96-8859cdef3fec",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ce7bdf0c-bbb3-4a8c-87e6-778717f6b7c5"
        },
        "item": {
          "id": "9bc498c2-cb1f-4984-aee8-0e999ab416cf",
          "name": "did:invalid"
        },
        "response": {
          "id": "006f4bbb-28bd-4928-93d2-fa1403664f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38764920-3226-45c6-a8d9-d0e135562e14",
        "cursor": {
          "ref": "7fb9e4c3-43ad-46f6-a045-1044591d5db2",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5a076339-bf2a-4717-b550-8a7fcbfd0592"
        },
        "item": {
          "id": "38764920-3226-45c6-a8d9-d0e135562e14",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0ae6bf4b-234f-4c37-993f-2b2f94f34e3c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 405,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e7dcf7-b044-48a5-bac2-64ef383f0298",
        "cursor": {
          "ref": "6b9c61d6-a9b5-400d-826a-f34a2ae2834a",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d57e7353-e6d0-472f-b753-0b85f12215d2"
        },
        "item": {
          "id": "d5e7dcf7-b044-48a5-bac2-64ef383f0298",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "52e734c1-d3d4-4f29-997f-868a382097c6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c93375f-544a-4320-8a6a-6007c4122234",
        "cursor": {
          "ref": "d7e48d0d-ec3b-43ed-b5ec-f1f4c64fbdcc",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d34dbce3-742d-4507-9edf-d092692dfc67"
        },
        "item": {
          "id": "9c93375f-544a-4320-8a6a-6007c4122234",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b26c58b6-910f-4cfe-9e17-ec7016060a8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07f906c-9a01-4021-8761-a02079b38fac",
        "cursor": {
          "ref": "d0c65dc4-c352-4d82-b069-6525260ceb40",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2ffc30ee-f376-4272-8f47-934c1eec0af3"
        },
        "item": {
          "id": "e07f906c-9a01-4021-8761-a02079b38fac",
          "name": "identifiers"
        },
        "response": {
          "id": "443f1afe-b795-4a4d-a969-e5d7bd0207d8",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2335b7b-40e4-478d-9fd3-10d46094b7d7",
        "cursor": {
          "ref": "e740d445-0d14-4ec4-b833-621574c61886",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "eeb5268e-689c-48dc-b7f6-1809286e5dc5"
        },
        "item": {
          "id": "a2335b7b-40e4-478d-9fd3-10d46094b7d7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9ce8e93c-7446-4ba2-bc8c-243f3e775eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb01a85-6e59-43ab-ba9d-938192a0def6",
        "cursor": {
          "ref": "de9537aa-a8fa-41c5-867b-a6dfb0b4bb19",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e37c8479-0df5-4b81-b28d-da3a7fe6f54b"
        },
        "item": {
          "id": "8bb01a85-6e59-43ab-ba9d-938192a0def6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "49698f04-775c-4269-b35e-90effb8af3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cff39f7-7559-428b-889a-49ea2ebb6649",
        "cursor": {
          "ref": "47ad282b-b770-4835-a19d-9c1700d989b9",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e0a85509-811c-4c21-86ae-7e3897fd7721"
        },
        "item": {
          "id": "1cff39f7-7559-428b-889a-49ea2ebb6649",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5e6ef19d-0fcf-4d30-8ebc-561698ff9352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b03717-cc18-4b17-8375-830628ad6b7b",
        "cursor": {
          "ref": "9662316a-fcf9-4f1d-bcd9-e3ee7c90961e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a893906a-47b6-4a6f-a490-86ab6ddc585b"
        },
        "item": {
          "id": "82b03717-cc18-4b17-8375-830628ad6b7b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ce1ef95c-f41e-4669-bbf1-3316e03ff75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3eed70a-917c-4916-a366-aa452984045c",
        "cursor": {
          "ref": "ad49d430-843b-4f6e-89a9-e6aa2a44b01e",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "140b2ec9-b9fd-4f04-9219-bc204f33f1d9"
        },
        "item": {
          "id": "f3eed70a-917c-4916-a366-aa452984045c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b162ada7-69d4-494d-bff7-99a4cff1c1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce61dff0-b5a4-4af8-a093-b0f5088bc823",
        "cursor": {
          "ref": "5c163851-3b26-4801-ad14-a87a7a09120d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "497090b6-a239-4cfc-bb0f-ffda457892af"
        },
        "item": {
          "id": "ce61dff0-b5a4-4af8-a093-b0f5088bc823",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "52ef6e6b-dd29-4e49-9931-d2ce82b810ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8abf12-16bd-46c8-b10e-ddc884a67b42",
        "cursor": {
          "ref": "cfd114a5-4374-47cf-9fbc-7427011d7bfa",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "439b88f2-0e41-4844-8d5d-61fd5cce8662"
        },
        "item": {
          "id": "1f8abf12-16bd-46c8-b10e-ddc884a67b42",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9cc927de-1f69-4913-a611-31163d21e903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee83ed4-48bb-481f-8353-50fe09ce2ee5",
        "cursor": {
          "ref": "c5cbf0b8-d141-484b-bcad-cbf8487fee52",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "147e1fb3-7e1a-49ef-92fc-89337ba1dfab"
        },
        "item": {
          "id": "fee83ed4-48bb-481f-8353-50fe09ce2ee5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "442609da-54a3-4209-8ba7-bf390216b9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05447cd9-15e7-43dc-bd90-7ad4d7a5f63a",
        "cursor": {
          "ref": "dca905fb-c081-48bd-a35b-204353e97ac1",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1bdf55dd-33a9-40f5-a57c-1ba2f1414db6"
        },
        "item": {
          "id": "05447cd9-15e7-43dc-bd90-7ad4d7a5f63a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7456ac03-30f6-4241-a8ba-180b8b3af214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17df62e8-61eb-4cc0-97bc-fb61b917e06d",
        "cursor": {
          "ref": "65337511-ba79-431c-ba82-20db727e6660",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ba11c69c-79bd-4743-bc83-24448ee9de02"
        },
        "item": {
          "id": "17df62e8-61eb-4cc0-97bc-fb61b917e06d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4df968df-9501-4e68-a2d3-0dad4a9d1b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed931a8f-e801-45bb-b39a-3fa4729c0551",
        "cursor": {
          "ref": "49d90465-0364-475b-9156-1e2dd355c962",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ca25a660-0b14-4ee4-aae7-7e4909f1dc05"
        },
        "item": {
          "id": "ed931a8f-e801-45bb-b39a-3fa4729c0551",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f5abf6d7-b559-4a2b-bdef-8e96479eec5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ffd030-370e-4f98-9708-efc87c1669d5",
        "cursor": {
          "ref": "70f3ed92-2c8f-4ea3-b8cf-51dd1bb4823a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "762e75ca-8674-485e-930d-c08b441b86bc"
        },
        "item": {
          "id": "58ffd030-370e-4f98-9708-efc87c1669d5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "038ebe5d-a265-4b6e-98b7-d160806a3b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc78f82-cf39-4440-b631-5095cf6e4089",
        "cursor": {
          "ref": "86fa73e1-c549-4fa7-a7a4-dbb46f5d959a",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b33a5f96-1861-4458-b4a5-e0841b93ea71"
        },
        "item": {
          "id": "dcc78f82-cf39-4440-b631-5095cf6e4089",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4ab64e2b-9a7f-4798-9387-d7a938d64bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e22845-91f2-4ca3-8e9b-976f0641bc20",
        "cursor": {
          "ref": "26fe614e-b972-4165-a2fd-0ede18742ec5",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9c51d39f-e5f4-4fe3-8a07-c825373b27d8"
        },
        "item": {
          "id": "76e22845-91f2-4ca3-8e9b-976f0641bc20",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cf6c6137-31be-4ae5-a4c8-d6d01c73eea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a129f005-3212-4221-b939-efd573e6c09b",
        "cursor": {
          "ref": "88cc8c7e-72e7-4ccc-b606-d775b8b80acd",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "cf55c9fd-1840-45db-82ea-4af7bc55fbca"
        },
        "item": {
          "id": "a129f005-3212-4221-b939-efd573e6c09b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9c15c4e6-10e6-4915-889e-312c73951e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4159fb0-23cb-4846-a860-1fdcde5069b7",
        "cursor": {
          "ref": "6a267560-2fc2-4d94-9fbe-d523cbcdf5e9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fd0ed160-dbbc-453f-beba-7418dd249b2a"
        },
        "item": {
          "id": "a4159fb0-23cb-4846-a860-1fdcde5069b7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2fdbe2f7-e048-495f-b766-577651d33f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e85303-4f81-469a-a746-6ed4b640b54b",
        "cursor": {
          "ref": "8c571145-937b-4cef-aa31-db7d00ea4b52",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1a3cb304-282b-4d9d-8f70-7ebe27fda0c9"
        },
        "item": {
          "id": "e8e85303-4f81-469a-a746-6ed4b640b54b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "647d7572-fdb2-4f0d-ae0c-2f8e266e801f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4367fd5-1fdd-4208-864c-766c15b998fb",
        "cursor": {
          "ref": "60d01517-d70c-4bce-82be-bfcef26ecc51",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "45e90462-392a-46e1-be92-d2bea42076b7"
        },
        "item": {
          "id": "d4367fd5-1fdd-4208-864c-766c15b998fb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ce5de48d-16f2-4cf5-85f8-e66162702901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a005a9-1962-4ea2-8c18-8234a499f84d",
        "cursor": {
          "ref": "29f12ba5-1144-4e9d-86bb-8b02381a2e0b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "050fb315-1ee2-4e0e-9947-b87b7f778bee"
        },
        "item": {
          "id": "64a005a9-1962-4ea2-8c18-8234a499f84d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "efc12c4f-cf52-4d54-9573-d4f01a7aa182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ed9f5b-310d-4e1e-b995-18d5cd57ae45",
        "cursor": {
          "ref": "9555d9f1-c0f7-4a15-8df6-fe32581bc7cf",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "97908349-6390-4cec-b413-fc2792cc6314"
        },
        "item": {
          "id": "86ed9f5b-310d-4e1e-b995-18d5cd57ae45",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8a7de7e8-c924-4c98-aa4b-c56b54ff6236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff48d58c-0056-4124-91d6-9a67522bcafc",
        "cursor": {
          "ref": "6e8b588b-351d-4494-ac65-ec063c6998f1",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8e8f5d01-128a-4214-9325-02a45a67b3ff"
        },
        "item": {
          "id": "ff48d58c-0056-4124-91d6-9a67522bcafc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e62261de-ea9f-4496-8747-a9cfcc991f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ce0631-bed7-4b42-a13a-34f839b4ec91",
        "cursor": {
          "ref": "31315412-9683-4456-9529-afae415a5022",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ea82e4a4-8156-4e7e-acaf-b1c710ca6cae"
        },
        "item": {
          "id": "34ce0631-bed7-4b42-a13a-34f839b4ec91",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d65baed6-5cd9-49bf-8a14-019032d15d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2bc28a-aaa7-4c05-b60d-70e0a64d7c9c",
        "cursor": {
          "ref": "bd559c41-1a77-4c8b-aa20-b00f61005751",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "15a1c491-adf2-4e39-b296-220cec15551f"
        },
        "item": {
          "id": "3f2bc28a-aaa7-4c05-b60d-70e0a64d7c9c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3a187e4d-ee36-486d-9fa5-f84370fb8142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a2fa7a-cb23-4612-b776-fdce2b2c350d",
        "cursor": {
          "ref": "fa3fd923-37f5-4b0e-9f1d-0a3afa9ef35a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "509eb61c-e9bb-4512-b01a-9b81dbda596f"
        },
        "item": {
          "id": "e3a2fa7a-cb23-4612-b776-fdce2b2c350d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9f6851fa-baf3-42b9-974f-55f6cf96da1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3abc595-503c-4cbb-9695-6659a2071aef",
        "cursor": {
          "ref": "e221e189-de5c-4bb7-9789-1fc495a616c4",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c81c9b15-ec7d-4329-ad88-dc7a66b706ed"
        },
        "item": {
          "id": "f3abc595-503c-4cbb-9695-6659a2071aef",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1c82736c-8b91-406b-9989-2ac13339d5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d474a2af-2283-4025-96ea-fe083c0d9dab",
        "cursor": {
          "ref": "390f85d4-9e08-488a-a876-449b099d637b",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "198a6065-cd10-4d0f-a34d-e61f0d7121c3"
        },
        "item": {
          "id": "d474a2af-2283-4025-96ea-fe083c0d9dab",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "38ffa482-1ffd-4c9c-9899-43a3491ffe93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fbeeb0-46ac-4c30-8bda-1eae5b911bbb",
        "cursor": {
          "ref": "20b502a2-2af3-4cd3-a014-d020527fb4a5",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8e12dcee-ab86-4c8a-bc88-7582dcc4c6f7"
        },
        "item": {
          "id": "e6fbeeb0-46ac-4c30-8bda-1eae5b911bbb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a7adad5d-e2ce-4950-929c-28233268805d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8eeffe-4000-49b1-9807-f28da3a5c7b4",
        "cursor": {
          "ref": "33e0b941-80ab-4bde-ab0b-977bb459093b",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "222043bd-2b31-4bc9-8db1-394f58d023b1"
        },
        "item": {
          "id": "5b8eeffe-4000-49b1-9807-f28da3a5c7b4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "98e92d26-7bae-4577-8009-835b7171319f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344a9cb9-aaa3-40e3-abe1-54ada99b7299",
        "cursor": {
          "ref": "535739a3-264d-4420-94cb-ce8926775c43",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "161bb03f-5a7d-4ea9-98e2-660036172076"
        },
        "item": {
          "id": "344a9cb9-aaa3-40e3-abe1-54ada99b7299",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4c80de94-5af9-4de1-8891-ae5f87333fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f011d45-db94-4db9-a3c7-bcbedce8cd05",
        "cursor": {
          "ref": "2eeafaa3-40a5-4a5a-ba67-86cdd6e7325f",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "75923610-0c1b-457c-835e-7dd8193e4b60"
        },
        "item": {
          "id": "7f011d45-db94-4db9-a3c7-bcbedce8cd05",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f6bd20b7-2487-4e47-b701-925ec3bc6e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346e3eb7-650f-46c9-b21c-93592d6d3e70",
        "cursor": {
          "ref": "ad1e46a8-622c-403c-965c-acb3ec2c779a",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "058ab703-162a-40ff-bdad-51a8572dcce4"
        },
        "item": {
          "id": "346e3eb7-650f-46c9-b21c-93592d6d3e70",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "23401fd3-718a-49bc-84a2-dfda6e1013e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f01d2d2-0fe1-4c50-8f1b-e33e2ad468ef",
        "cursor": {
          "ref": "d1d88611-5b84-4332-94e7-774fc3061d2e",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2fc8d94e-28b6-4141-8973-ff98b0d32946"
        },
        "item": {
          "id": "6f01d2d2-0fe1-4c50-8f1b-e33e2ad468ef",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a99478a2-fdb7-401c-886e-b77d4e4508e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960e803c-d7ad-4665-9af7-d0ed801c209d",
        "cursor": {
          "ref": "e9e2b2e0-c8bc-4226-82e9-1df1f744c773",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bd9aa5dd-2706-4ca7-a663-4883c4708492"
        },
        "item": {
          "id": "960e803c-d7ad-4665-9af7-d0ed801c209d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7394ed3e-2e68-4ede-8935-9a22bf55147b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff94992-3577-4bce-b1b6-3358ed789555",
        "cursor": {
          "ref": "164a215a-3a79-4a09-a8b5-e799fb0271d3",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "308576f7-dea3-445d-91be-3b854b3fdf0a"
        },
        "item": {
          "id": "3ff94992-3577-4bce-b1b6-3358ed789555",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "02be5141-69d7-45ae-ab05-8742ab1d8525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d8a1b9-0c2a-4344-a5c4-bbbc51eef2c6",
        "cursor": {
          "ref": "880e9d85-bc4c-45b7-95a0-496bed49ba3b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1ba755d0-6566-4fc8-ad69-0031cbe1d3af"
        },
        "item": {
          "id": "c8d8a1b9-0c2a-4344-a5c4-bbbc51eef2c6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "363e232e-1a00-4959-8f69-164bde580a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0187f920-5a25-4e5b-82b1-3062dc0e78ba",
        "cursor": {
          "ref": "3b7bf7bd-08f6-4454-9512-306cb3baf8f3",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8e338513-185a-4f06-b798-86c2359370be"
        },
        "item": {
          "id": "0187f920-5a25-4e5b-82b1-3062dc0e78ba",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9fb3090d-6ab9-488f-aac4-57ee197ec898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad37991-2b8b-403b-aefa-d72e66deb263",
        "cursor": {
          "ref": "f0910d7f-eb0f-4b02-b193-c52555e147e6",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cce0a383-3f36-4c69-a6cd-a69c52aebbce"
        },
        "item": {
          "id": "1ad37991-2b8b-403b-aefa-d72e66deb263",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d17fe2c5-5d86-4d87-a800-b93efa4b6a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7792e08b-9518-4bb9-a8df-5ccb1a52ae72",
        "cursor": {
          "ref": "5600beab-71e2-4a77-a22a-4727f81261d5",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cccc3906-d06a-4ace-8940-d2b41bd76908"
        },
        "item": {
          "id": "7792e08b-9518-4bb9-a8df-5ccb1a52ae72",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "700eda2a-ec5a-45db-a751-e0dadc4a0e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a2f946-3ae6-4fa0-b99c-d343b0269e84",
        "cursor": {
          "ref": "537a5594-44f6-47d2-964f-34fdbbda89ae",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7f618e19-9641-4b96-be3e-eb4ee90ebcac"
        },
        "item": {
          "id": "04a2f946-3ae6-4fa0-b99c-d343b0269e84",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fb3dbef3-5ec8-4bf9-93cc-66ab1bb16100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0502b254-3b62-461a-8eb9-fa43a93f433c",
        "cursor": {
          "ref": "4ec3b6e2-8a59-46c1-afea-5606b79911c2",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0639e67d-bc7d-4632-8280-14ba7170a66c"
        },
        "item": {
          "id": "0502b254-3b62-461a-8eb9-fa43a93f433c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a7314697-60cb-466e-b3b6-f92fb9aa832c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829da3d9-3173-40d4-abdf-e219d1f7bd00",
        "cursor": {
          "ref": "b0a6ac97-04e6-4567-8370-6f8e39cb8aea",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bfb7aeb6-ef3a-4ab2-9c76-e56050b1390e"
        },
        "item": {
          "id": "829da3d9-3173-40d4-abdf-e219d1f7bd00",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f4d42bb2-b1f8-4fa9-99a3-8f954f721cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0619852f-d265-4ecb-bb93-32a98ef66f42",
        "cursor": {
          "ref": "1a14b748-9e29-42df-8a65-2753458239cd",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6d285215-ef8a-4da4-8f5e-93d5d49e4761"
        },
        "item": {
          "id": "0619852f-d265-4ecb-bb93-32a98ef66f42",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "447711cc-9b14-4e64-b812-40b8dc45d66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07aba91b-a750-485c-b5db-3a7f5b6d4e45",
        "cursor": {
          "ref": "6d00c970-ca6c-4cc1-8036-b8ecc6cac286",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "775fd5c5-aaa2-4515-ac00-2dd843b7436f"
        },
        "item": {
          "id": "07aba91b-a750-485c-b5db-3a7f5b6d4e45",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a2c5ee81-b63e-4e0c-a9e4-8dfc5fa33356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c1785f-859f-4153-ad57-655724b6e295",
        "cursor": {
          "ref": "2dd818f7-5923-4614-949f-4b919f45d948",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3b4a57fd-ab5f-4903-a8b0-2a1d7a642198"
        },
        "item": {
          "id": "70c1785f-859f-4153-ad57-655724b6e295",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0089d913-22aa-47ad-b141-f9646f70e9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1511a6d-66a0-4064-8b10-114e691c0994",
        "cursor": {
          "ref": "0ef6936e-4788-4802-bbaa-2280298d4d75",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4cebebf5-892e-4e65-bfad-5250c231b145"
        },
        "item": {
          "id": "a1511a6d-66a0-4064-8b10-114e691c0994",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "499c6f1e-5b5e-4052-a7cb-30a3d0b6d7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f817be6c-04c4-49ea-af0d-09663cd3389e",
        "cursor": {
          "ref": "f8b74cd1-c36b-4c6a-93d1-b9ed1907e343",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fbb90a35-263e-4d4e-8935-a26cad4a8e2d"
        },
        "item": {
          "id": "f817be6c-04c4-49ea-af0d-09663cd3389e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4e2cffab-7000-49e4-9d25-bed4d799badf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7b2a1c-284a-443f-83cf-efd752c96a47",
        "cursor": {
          "ref": "6d606e62-6362-47bc-bb45-494afc9137d3",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "81ae8a8a-ca92-4a7f-b5fa-36d043ce51c3"
        },
        "item": {
          "id": "6f7b2a1c-284a-443f-83cf-efd752c96a47",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "948ce160-4a20-4790-8b6a-875fca197ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f244b4-8bd7-4037-801c-512cf03cf9e4",
        "cursor": {
          "ref": "6b17dc87-264a-4ec3-a880-bfc73d07beba",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "18ab0a1b-a54c-4478-a8f7-008353eff20c"
        },
        "item": {
          "id": "81f244b4-8bd7-4037-801c-512cf03cf9e4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e7f0a444-93c4-45c4-aac5-b84cb6e64356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1930fdc4-2dab-4f38-88d0-2f043a71e586",
        "cursor": {
          "ref": "45e47d38-fb18-42b3-8180-0b56c6fc7d01",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3a42c0ea-e830-4a76-9de0-7efdc94e0afa"
        },
        "item": {
          "id": "1930fdc4-2dab-4f38-88d0-2f043a71e586",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "72c780ce-2f57-455a-ab6a-442b2dbda1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08f1118-6dbb-431c-bdc7-99828594c8aa",
        "cursor": {
          "ref": "2b1cf41f-c64a-4b10-b8ab-6a5c38cd0293",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1c7c7d92-dcc7-45e4-b009-ebc7667b70c9"
        },
        "item": {
          "id": "c08f1118-6dbb-431c-bdc7-99828594c8aa",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ed452b7f-a9f5-47c5-b843-4d2c3f79f94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be10aa9f-dc47-48ce-a935-c3f61f5e07a4",
        "cursor": {
          "ref": "a270aea9-ed35-477c-b246-6842f4da548e",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a0566aaa-10ce-413c-938f-edb0b328ad12"
        },
        "item": {
          "id": "be10aa9f-dc47-48ce-a935-c3f61f5e07a4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e133a43d-e383-483d-8f9c-c31774c2d74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a63c03-0407-44c5-bec2-0fdcba0f60ca",
        "cursor": {
          "ref": "603d5ec0-0e99-4282-bb3c-5bc322fafd9a",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8c308f34-991d-46d8-9e55-6ad5056308d6"
        },
        "item": {
          "id": "d3a63c03-0407-44c5-bec2-0fdcba0f60ca",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7d61d0b5-aba5-4421-a055-8fd5a5594312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d433e11-d454-46ed-a7fd-304fe244dcec",
        "cursor": {
          "ref": "add0f023-f592-4517-84b7-a1789a9601e7",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "96b69134-a9da-464a-a98e-28e65b4ac376"
        },
        "item": {
          "id": "8d433e11-d454-46ed-a7fd-304fe244dcec",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cee7033f-8f18-4637-9011-30316aaa8aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9d4c3c-50a8-4369-b0f7-eca1adf36696",
        "cursor": {
          "ref": "49ac4297-b906-47e3-b1b5-19f42d4489c9",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5fb6d152-c9ac-46ba-a145-42eef2430ec6"
        },
        "item": {
          "id": "df9d4c3c-50a8-4369-b0f7-eca1adf36696",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fcdd454b-6e7f-4baf-9d40-906b9a2b3f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faddacb4-5a9a-4fe1-addc-f6b3afad8adf",
        "cursor": {
          "ref": "d551754a-d0b5-4f56-8757-5a9a22d6dfa5",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c1c93ca0-7ba0-4e2c-b401-2de5d9809430"
        },
        "item": {
          "id": "faddacb4-5a9a-4fe1-addc-f6b3afad8adf",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "58cccc1b-e083-4485-9d11-fdc3d184de07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f285e754-6792-4f42-b728-d3c6e464d103",
        "cursor": {
          "ref": "d9045cd7-c943-4686-862e-fd8aa10aecb2",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4badc13c-a358-43a6-8285-d6bf637e7c2d"
        },
        "item": {
          "id": "f285e754-6792-4f42-b728-d3c6e464d103",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cba019ee-034f-49c0-931c-fe1cce56817d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325d8900-cf3d-4a76-85a5-388a49e7bc14",
        "cursor": {
          "ref": "dcc5084c-7ccb-471d-9b8a-44b6425847d8",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "92af7d70-cd51-4234-a54e-7a0dc5b131c3"
        },
        "item": {
          "id": "325d8900-cf3d-4a76-85a5-388a49e7bc14",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "df55370a-0aed-4cca-8be4-e21cf1d43fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadf45ec-2492-4ab7-8abd-b41ca5dc4c37",
        "cursor": {
          "ref": "597551ea-b91d-4229-b3ea-eb2d9970e96d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4d83d631-4f2d-41c1-b5f5-136339775f3b"
        },
        "item": {
          "id": "eadf45ec-2492-4ab7-8abd-b41ca5dc4c37",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b8310060-0776-46c7-baba-c176a08cd952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550208da-cb8b-48f0-ba78-e362cd6145a2",
        "cursor": {
          "ref": "4ff58861-d093-4a7f-9739-8c09b86bf9a6",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6058b941-7ba6-4da6-88dc-7bdc609744bf"
        },
        "item": {
          "id": "550208da-cb8b-48f0-ba78-e362cd6145a2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "04445c14-9aac-4e7b-8175-e099b8215746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a0e320-c82d-480a-8992-b95c1c3a0c4d",
        "cursor": {
          "ref": "165093bd-eeff-4a60-867f-b9847b62ae55",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ea8bb4bf-9033-46cd-9748-14ae694b82a7"
        },
        "item": {
          "id": "37a0e320-c82d-480a-8992-b95c1c3a0c4d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "241c6df7-d884-4a70-ba04-aa57bc0c5434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e44f2d-9fb4-4353-8705-5b5b47e31864",
        "cursor": {
          "ref": "efa86ef8-95ee-457a-86d7-e6c6d2bb49c1",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0076481f-448f-4bd6-a00d-01cfd2527830"
        },
        "item": {
          "id": "a4e44f2d-9fb4-4353-8705-5b5b47e31864",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bd522b13-1894-4146-b9e3-c340b83f20e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a12e433-ad1a-4f0b-80d4-4c42c8e00601",
        "cursor": {
          "ref": "73c80df9-e5d4-409f-a0dc-64e5888fc53d",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b8e8d514-ac95-4233-b55c-99f62eb7fb48"
        },
        "item": {
          "id": "7a12e433-ad1a-4f0b-80d4-4c42c8e00601",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2d3461ca-4743-4384-abab-daf457b66fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8464ee1e-1368-4d92-9260-eb6c931e82ae",
        "cursor": {
          "ref": "da9a05f9-eff5-46df-b7f0-d5f1084e66a7",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5fc7fd9d-6352-4f7b-a296-793de4700d00"
        },
        "item": {
          "id": "8464ee1e-1368-4d92-9260-eb6c931e82ae",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4a047d9b-2117-48bd-ba5d-2643287020b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54134ec6-c1df-49f7-a767-58f15648b7f8",
        "cursor": {
          "ref": "f87a8926-78b7-4562-9fdf-b980632b1ff4",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9d467e87-060d-4c5c-96fd-1c548f77f953"
        },
        "item": {
          "id": "54134ec6-c1df-49f7-a767-58f15648b7f8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "63dec44c-c22b-49d6-9818-475ab4c97a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cae5771-b570-4b9c-a723-6a8083196588",
        "cursor": {
          "ref": "5817d2a5-9d8f-4d50-a520-5f12152d4f42",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bf0fdcca-53aa-40ed-be53-b89050b4ccf8"
        },
        "item": {
          "id": "3cae5771-b570-4b9c-a723-6a8083196588",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6259fc5d-1c1c-4c7a-b848-2aca06600232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1843812-dde2-43b1-b999-d1a78511dc0a",
        "cursor": {
          "ref": "8f5e7926-8cfa-4453-b4e5-2cb8d065258b",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "20d2faeb-01e1-4808-b242-b8fbe1efc724"
        },
        "item": {
          "id": "f1843812-dde2-43b1-b999-d1a78511dc0a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "63511646-9aff-4ee0-98ef-369a08659c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbbc60e-94b7-4093-b596-56a24e136e2b",
        "cursor": {
          "ref": "9ee693bf-336f-4d41-8d6a-20d46535b295",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7724b10a-21ca-4c53-9f28-5b142247162e"
        },
        "item": {
          "id": "8fbbc60e-94b7-4093-b596-56a24e136e2b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "00ab0301-79de-45c8-9e54-687d3f450b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c2dad4-0bc8-4c9c-a139-1b2575b26e9f",
        "cursor": {
          "ref": "5a851e8a-0dc0-491e-9bb9-d286d6c10e09",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f94ced91-0c6f-492f-ad3b-841cceffaf23"
        },
        "item": {
          "id": "54c2dad4-0bc8-4c9c-a139-1b2575b26e9f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2ba4b4db-3c2b-401e-8df3-18863f21a731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6121b523-c829-41b9-ae2f-d5622744d5c0",
        "cursor": {
          "ref": "be24b4a0-a303-4311-a1e7-dce66ab69dcf",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6df05aa2-7934-48d6-bc6a-a8bfe90a8c6a"
        },
        "item": {
          "id": "6121b523-c829-41b9-ae2f-d5622744d5c0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7a90dedf-b747-4a6c-99c8-0c299488843e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e39f67d-13f3-4159-aad5-314e226cd884",
        "cursor": {
          "ref": "66aba08e-7e16-4f5a-9e36-5a6cd8cfc4ec",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fc590749-0b9e-483b-aee2-e32e0a66913c"
        },
        "item": {
          "id": "1e39f67d-13f3-4159-aad5-314e226cd884",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "70b18f6d-b1c0-4ff7-9502-19298c2950da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73d18a8-3522-40c9-8367-7a77749795cf",
        "cursor": {
          "ref": "c8fd1376-27d4-4c19-878d-4ffca88f1879",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4f99a539-f25f-438e-8f3a-d5244f9763fc"
        },
        "item": {
          "id": "a73d18a8-3522-40c9-8367-7a77749795cf",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bfe78caf-702a-49ce-8eee-3edbf20d7585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0052fd-6707-4075-a40d-8a0f98258a19",
        "cursor": {
          "ref": "5c9ec18f-da14-4da9-98d6-e588e0ed291f",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2171dbe6-29d4-486f-aded-6b05d571f51b"
        },
        "item": {
          "id": "ce0052fd-6707-4075-a40d-8a0f98258a19",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "23cf5311-c378-4221-b0f6-327426f47149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f651a2e-730b-4eda-bcdc-2c80c09237eb",
        "cursor": {
          "ref": "3a543437-d2d1-4793-ac00-03999342d9e0",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "57fd566c-8092-40a2-a3d4-e592dffc22e0"
        },
        "item": {
          "id": "5f651a2e-730b-4eda-bcdc-2c80c09237eb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bacb2e83-2cd2-4496-b384-6a76d6bc2012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3693bd8f-e639-40b3-8d44-ae26c7c86cd8",
        "cursor": {
          "ref": "e253b1f6-d64f-4af1-be41-57488cb43ae1",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0c4d642c-97a2-4d6b-a9ff-1eb3020a87b8"
        },
        "item": {
          "id": "3693bd8f-e639-40b3-8d44-ae26c7c86cd8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3e5f8287-8d75-4874-b5e7-390ee609b05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac2dcee-fc76-4212-b430-40b00895a664",
        "cursor": {
          "ref": "879be0d8-08ce-4931-a49a-88af18952cdd",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0b7d2e29-86d9-4842-9a4c-217f11bf4eb5"
        },
        "item": {
          "id": "6ac2dcee-fc76-4212-b430-40b00895a664",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e4794f4d-ef55-4cca-a4c1-d00343d15279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2c762b-d4fe-4ecd-8e2e-99e714f6e497",
        "cursor": {
          "ref": "90e67aca-1a49-43ab-8033-630cd01bd676",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d39e8ea0-e279-4d7f-90de-d7f626317dad"
        },
        "item": {
          "id": "fc2c762b-d4fe-4ecd-8e2e-99e714f6e497",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8a610dd1-7403-4617-918b-37118e3467d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf63112-06df-4ee7-a8e7-3c4e489bad9f",
        "cursor": {
          "ref": "bf205d4e-495d-4a19-977a-8bec05c1f6e9",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "47a591ca-f9a4-4c00-b85c-70f082069353"
        },
        "item": {
          "id": "9cf63112-06df-4ee7-a8e7-3c4e489bad9f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b69e02cc-768a-4f46-b90f-44f2924bdc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e9d2c4-6d56-4dd6-a681-bb35162ebd84",
        "cursor": {
          "ref": "a48b16c1-1ff7-4a83-90bf-2d40ea2c5fb8",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "360aff70-b9cc-4bf9-a6b9-528dbeab9cd8"
        },
        "item": {
          "id": "50e9d2c4-6d56-4dd6-a681-bb35162ebd84",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a3f6b2ed-04bc-4826-8d18-73d73466a963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a11856-d5b9-4112-b29a-5bc189cbecbf",
        "cursor": {
          "ref": "45c7222c-1de9-4be1-8597-79aafc0bfa36",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8dbbff32-6e05-43c6-937a-fd86b3c079fe"
        },
        "item": {
          "id": "f3a11856-d5b9-4112-b29a-5bc189cbecbf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "67939c86-1d8a-4c2d-8ebf-b3e4ba252920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e675d1-b52e-4fd3-af13-703a5f538d48",
        "cursor": {
          "ref": "6444a5ff-e30a-4938-81a5-b0251b6cea0d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9a64d22b-4192-48f6-8b0d-3fe03dd5d8a5"
        },
        "item": {
          "id": "29e675d1-b52e-4fd3-af13-703a5f538d48",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b8ae14fe-8d11-435f-9c57-dffc0b8030dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e31094-abf7-4462-b888-bb65d75a02b8",
        "cursor": {
          "ref": "1feea95f-5672-4d7c-a8d6-49b801abc4c4",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9213202d-baa5-4d3e-9d08-b7be3e9de17a"
        },
        "item": {
          "id": "15e31094-abf7-4462-b888-bb65d75a02b8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0cc64730-66bc-4b6d-bf9e-bbddf2b13407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f9f08e-c4cd-40b8-afe7-dcfc599d1e8e",
        "cursor": {
          "ref": "a51b0ca5-c48e-4f8a-8058-bc89d3d0941e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f37c95e7-6e85-48ec-b937-fe4bf0071e1f"
        },
        "item": {
          "id": "c1f9f08e-c4cd-40b8-afe7-dcfc599d1e8e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "240278e1-d4b5-4988-a326-95e86c086b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5642036d-1477-4c67-9cd1-dcab98ee5130",
        "cursor": {
          "ref": "8183584c-6e8f-4c14-b799-25ef06276c5f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "cb033464-e2bb-407c-a4e0-0918d6ab5a33"
        },
        "item": {
          "id": "5642036d-1477-4c67-9cd1-dcab98ee5130",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "823a0f43-bd21-4170-ad81-6576ecd6d2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470cb891-1bda-45ea-b124-82678c08edea",
        "cursor": {
          "ref": "d77c9868-1556-40d9-aecc-1079411823da",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3619d598-2c26-47f8-b4e3-d76b39741250"
        },
        "item": {
          "id": "470cb891-1bda-45ea-b124-82678c08edea",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "50f56ac1-5f29-4cd0-a7fe-51a0d6a37b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e778c23-f2b0-4072-995d-61c89e31946a",
        "cursor": {
          "ref": "c1ad2032-c231-4667-9281-57309f1ba106",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e80d0f4f-049f-41b6-a9df-beccb7d739a0"
        },
        "item": {
          "id": "0e778c23-f2b0-4072-995d-61c89e31946a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fefb4551-af7d-4836-b03e-5ac4f60d7b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec2ea45-0b72-4cb4-a58e-edcf5d53391c",
        "cursor": {
          "ref": "6fcd5a44-2628-4c0a-ac42-1edabd9b1eb7",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "44c315b4-bb6a-42f0-95f5-8d1f63295139"
        },
        "item": {
          "id": "5ec2ea45-0b72-4cb4-a58e-edcf5d53391c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "132b6999-eb24-488f-a7e8-de309bd9663b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903d8726-6e03-4115-bbdd-ea951c03d792",
        "cursor": {
          "ref": "c4519c0b-bcde-46a4-bf03-7146eab36eb6",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b88a412a-fd7a-4a60-8c2c-afd9f1311076"
        },
        "item": {
          "id": "903d8726-6e03-4115-bbdd-ea951c03d792",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "61d3e146-45ec-4e63-b3e1-da6fd8f43cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe21dbee-43ee-4935-a5f3-5cf8340365f3",
        "cursor": {
          "ref": "142f5184-e183-48ae-bd25-3c7d53a527e2",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "74abb46b-4a8b-4737-8065-c317fdf63a88"
        },
        "item": {
          "id": "fe21dbee-43ee-4935-a5f3-5cf8340365f3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "98d0b402-fb95-428c-bde5-abce47e28bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83d46c3-6a60-43cf-8709-08a24e2009b2",
        "cursor": {
          "ref": "bd213b40-2a22-4896-9dcb-1a43c51a6716",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "021b1b98-cd62-42a3-8737-c01e23c78b8a"
        },
        "item": {
          "id": "b83d46c3-6a60-43cf-8709-08a24e2009b2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "08b1194d-f20b-4d11-b965-59ac1239caf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2de9a3-0c2c-414b-ab3e-420b895822a5",
        "cursor": {
          "ref": "07644dd3-c539-48a6-81d6-b50e4862d6d2",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d44e673a-34d5-404d-bbed-78ec68ceb427"
        },
        "item": {
          "id": "9e2de9a3-0c2c-414b-ab3e-420b895822a5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d8499a17-c5f9-474b-99f2-ee5fb653a20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec95af19-c1df-4b3c-b1e0-d5239d23fc38",
        "cursor": {
          "ref": "4f6962d8-4f5d-4035-97ed-018ab8e29981",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "169454cf-fa03-4ea2-a95c-c4d439b73c93"
        },
        "item": {
          "id": "ec95af19-c1df-4b3c-b1e0-d5239d23fc38",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3643c853-369a-4f57-888c-df62b029b427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af45084f-ed7a-4068-88ad-b586a4a51dce",
        "cursor": {
          "ref": "9f4f277a-9895-4521-8bcd-c4513e9998cc",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a6f712bc-497f-4faa-9660-090331daee9f"
        },
        "item": {
          "id": "af45084f-ed7a-4068-88ad-b586a4a51dce",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e46ee238-dbc9-4f37-a97f-7f17621c9ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4df2edb-d6dd-4c39-8463-ea9569add8ba",
        "cursor": {
          "ref": "bf5835fc-d374-4e34-bd82-2c0048bf61dc",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e1b1a9ba-ac43-4e01-b0c2-02a784c6e59c"
        },
        "item": {
          "id": "b4df2edb-d6dd-4c39-8463-ea9569add8ba",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ae703a6b-5d2f-4f8e-9152-94926db4ceaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66763d18-56d2-456a-a74a-7a993998856e",
        "cursor": {
          "ref": "582bdb15-13a4-41f6-beeb-cefd5daa64ba",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e5f9ff75-afe4-450c-8d91-7335ee528c7d"
        },
        "item": {
          "id": "66763d18-56d2-456a-a74a-7a993998856e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9c73c4c2-cddb-4197-af3c-74b252a33dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d73c0cd8-98a3-4e3b-a6a8-1d9c26b341f5",
        "cursor": {
          "ref": "86bb6b21-2f1d-4f60-a114-89427d6f8ac4",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9a5270de-f4e8-43f7-8990-5b206b748ad0"
        },
        "item": {
          "id": "d73c0cd8-98a3-4e3b-a6a8-1d9c26b341f5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "49716c5a-2b9c-4004-a3f7-b931791fce9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "38a58f00-805b-4975-af24-05d7fb0f3639",
        "cursor": {
          "ref": "44dd4449-36f8-40df-a035-3f0b0d9d6125",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d1e44f44-7d5e-4754-927e-43b7a06f2368"
        },
        "item": {
          "id": "38a58f00-805b-4975-af24-05d7fb0f3639",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e5ccc6e0-fccb-4f91-befc-4567cdfe7900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c403c5fd-4e5d-45d9-a7c9-7496bf7b7b8e",
        "cursor": {
          "ref": "3f638c97-178b-47fa-af43-40afe76271cf",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "091466e0-675b-46b4-8ce0-9e28e52ab0a3"
        },
        "item": {
          "id": "c403c5fd-4e5d-45d9-a7c9-7496bf7b7b8e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e9980499-b518-405e-b066-3f8d13604b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "3ad58a9e-5e06-4234-a125-c298de6fde3d",
        "cursor": {
          "ref": "bc25ed93-1d1a-4bcb-bbbd-fbbd4127ee4c",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7df34b52-ac52-42d6-8713-9d4638bb41c2"
        },
        "item": {
          "id": "3ad58a9e-5e06-4234-a125-c298de6fde3d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "aa8b34bb-8bfd-4107-93f0-2c204c5f6c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "2a670025-c06d-4159-9e16-08df9febd81d",
        "cursor": {
          "ref": "4f2ded4f-e032-4488-a33c-917f96f25780",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ec7b060d-1ea7-42c3-bc84-5ab293202725"
        },
        "item": {
          "id": "2a670025-c06d-4159-9e16-08df9febd81d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9c14c227-4dc2-4c1b-b67e-04b05f2cd895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4052430f-b38d-4655-a81d-94f19066e73c",
        "cursor": {
          "ref": "bcff81c4-fd87-438d-b056-ae4f835cd9b7",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "63996e54-2752-4910-b85c-82ff41dfc532"
        },
        "item": {
          "id": "4052430f-b38d-4655-a81d-94f19066e73c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c94f7ec9-a3dd-4f06-91f8-a94dbbb8d686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f30ba37b-bf22-4574-b3c1-4c8bc519ee2f",
        "cursor": {
          "ref": "3541b857-a457-473c-84ef-33f39f11811f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3608cdf6-b362-478d-a00f-f30eb758c3a1"
        },
        "item": {
          "id": "f30ba37b-bf22-4574-b3c1-4c8bc519ee2f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d13af701-9f47-4745-8251-af55639a7ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4151d3bd-d964-41df-bfcc-5ffe10f8edb9",
        "cursor": {
          "ref": "4ed8da60-1358-4ca5-ba5b-7b4a110b8c8d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "56ef7e06-f2fa-4375-8c72-108bfa48081f"
        },
        "item": {
          "id": "4151d3bd-d964-41df-bfcc-5ffe10f8edb9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "63050816-5910-451e-8e8c-58ffda9dc04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844d056f-4a3d-4f28-8941-93b8397ef883",
        "cursor": {
          "ref": "4ea6b85b-3365-4eaf-ae25-ed4dda28be44",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9e0dffb3-5886-4e10-bba7-b495ff545ee7"
        },
        "item": {
          "id": "844d056f-4a3d-4f28-8941-93b8397ef883",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3f84007d-7ac7-479c-acea-6a38375b405f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82bcf41-2fa8-4bc6-bf4a-0432d3e45fe1",
        "cursor": {
          "ref": "adcffe0d-559d-493b-9626-16fdeec35261",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b9328dcc-aefb-4617-8e94-7bd986de0821"
        },
        "item": {
          "id": "e82bcf41-2fa8-4bc6-bf4a-0432d3e45fe1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a2ae1e57-4a8a-4164-804f-df08dbe5d349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e147fe-3a46-4507-ba5f-ca6697e35760",
        "cursor": {
          "ref": "172b38b2-e876-4a48-8665-769c910edb29",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "db453813-66cc-415b-9ad3-ceb199a424f1"
        },
        "item": {
          "id": "b0e147fe-3a46-4507-ba5f-ca6697e35760",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ae059b63-f3fd-495c-9105-6f08bf4db0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc594c0-d2d6-43e5-96c2-705df80d7002",
        "cursor": {
          "ref": "e44f8588-b5fb-4a5c-bc94-f7ce90905496",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e589d2d5-1d10-4419-b527-c1ec58b14ed9"
        },
        "item": {
          "id": "acc594c0-d2d6-43e5-96c2-705df80d7002",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ab3ae32f-8dc2-482f-8e4a-5d47aface14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b334652-a376-4988-a2f7-fe1ba3483b8b",
        "cursor": {
          "ref": "615c4f70-c0ab-426a-acb3-f625fc6f8e92",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e0601b20-02e8-4fcf-b7fd-46b31b378af1"
        },
        "item": {
          "id": "7b334652-a376-4988-a2f7-fe1ba3483b8b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5461b9b2-644a-425a-869c-471a2e700746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a01508d-ee6d-454d-b952-49bb1017f86b",
        "cursor": {
          "ref": "d2f5b357-5828-4e67-95fe-671721daa0f7",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "14205c39-681d-4fd9-9658-dd770f8d25c0"
        },
        "item": {
          "id": "8a01508d-ee6d-454d-b952-49bb1017f86b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "daf67000-bff9-4762-a3af-043ebd422196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6c2a0d-1145-4922-a467-d19a9f991817",
        "cursor": {
          "ref": "83b2533b-894b-4a35-b875-ff579152bbc5",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6d3d194c-c5d1-4192-beac-8b3f12fba1f1"
        },
        "item": {
          "id": "eb6c2a0d-1145-4922-a467-d19a9f991817",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ffde6674-9f4e-4af0-948c-a5cea0fcda40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b606b8f3-9161-4dee-850b-a6acab558605",
        "cursor": {
          "ref": "24adcefb-48ea-43cc-b260-a04833329f53",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a66d852b-76a8-4c63-bcb2-c92a3aa28281"
        },
        "item": {
          "id": "b606b8f3-9161-4dee-850b-a6acab558605",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2a217f37-e3f8-4f71-ac04-d5db06a3961c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb36a60-73f7-4603-b946-99bb06b4fe01",
        "cursor": {
          "ref": "92c9f655-9e10-4aa4-9eaa-65103e43ee6b",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f4b9f5a1-2e46-4cd4-ac15-6cec24fb831b"
        },
        "item": {
          "id": "fdb36a60-73f7-4603-b946-99bb06b4fe01",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "af5f423c-d15d-4cbe-91d3-18db28699a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d81794-5956-43d5-bc21-26874074c353",
        "cursor": {
          "ref": "cda8cf92-beef-4ffe-a276-58fa1bd41cca",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fc924ac9-5c4d-4601-87f4-85d23e2ff0a0"
        },
        "item": {
          "id": "f7d81794-5956-43d5-bc21-26874074c353",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "aba3fdfc-f26c-416c-ac79-8f70b5e45b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198cdc64-245f-4775-8642-403e651d7395",
        "cursor": {
          "ref": "873a6ce9-82b3-4d63-9ca9-16a9ed0a28f1",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5cc7bd28-700c-477f-82d9-41872fe073e9"
        },
        "item": {
          "id": "198cdc64-245f-4775-8642-403e651d7395",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "21f697ac-07b5-491f-9b04-1124306f42e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48aee1fe-a850-49ae-b444-4097324d8095",
        "cursor": {
          "ref": "54000963-de00-4cc1-9670-774a3db0730f",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4ed5b623-1483-45f6-82d6-7542d4d47f8e"
        },
        "item": {
          "id": "48aee1fe-a850-49ae-b444-4097324d8095",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bfb0bd38-df40-4e1e-abe3-d59a074e4957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979dccdc-ba7b-4964-81c6-ba9658764052",
        "cursor": {
          "ref": "0cd384e5-6fd3-4ca1-81e3-865d52a19515",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1b66bc79-6814-45ef-bb97-660ff5f81b85"
        },
        "item": {
          "id": "979dccdc-ba7b-4964-81c6-ba9658764052",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b062834e-a785-4494-8002-027c71f874b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e39345-6bff-4112-b972-ef88ed9578fa",
        "cursor": {
          "ref": "d5468b02-6ba5-4af0-9473-a5d0bb2150da",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f3e83105-ee78-4c07-8066-d20e9b9fa311"
        },
        "item": {
          "id": "d2e39345-6bff-4112-b972-ef88ed9578fa",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "29a5064b-9628-4d05-9ec4-7858ce40ccff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28c3021-9980-418a-8637-444c5dd738cf",
        "cursor": {
          "ref": "6182bec4-2984-492c-a02c-d77dae31fc8e",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0e504b35-53e9-4816-8c70-4d1cbc31bd88"
        },
        "item": {
          "id": "c28c3021-9980-418a-8637-444c5dd738cf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1aa5599d-9fda-40b1-8c4e-be60d619ed71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe4dac0-093c-455f-aa26-524e028032c1",
        "cursor": {
          "ref": "1f1cbb4c-e92d-4e17-abf4-333451eb3bc2",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1df6fd29-1833-467e-b37f-d53149f09e0e"
        },
        "item": {
          "id": "2fe4dac0-093c-455f-aa26-524e028032c1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f2185e9d-02c8-4503-9dab-39a3716f1106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec6fdd6-b651-467a-80b4-752962d5954e",
        "cursor": {
          "ref": "995c5a68-de5f-4f70-9e60-042fb242a319",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a7f63994-8320-4fb5-98fe-c0ae51aad8f2"
        },
        "item": {
          "id": "8ec6fdd6-b651-467a-80b4-752962d5954e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "11dff2e4-80cf-441a-a228-aae637ad7d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156ce556-ac1f-4343-9cdd-aee7eabcf8f1",
        "cursor": {
          "ref": "c4ed5d53-1661-4bfe-8705-a95f3e85e41e",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6ad096e8-61b6-4d86-b669-82ab0eff89ca"
        },
        "item": {
          "id": "156ce556-ac1f-4343-9cdd-aee7eabcf8f1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4aada129-15ec-4792-9db1-c18362ff6683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ceea41-239c-45f4-826c-1d8f0abbc15c",
        "cursor": {
          "ref": "3375ccfe-5625-4ea3-863d-d6528e6c5993",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "31548599-0fb0-448d-8056-1ff73aa17997"
        },
        "item": {
          "id": "75ceea41-239c-45f4-826c-1d8f0abbc15c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "250515a4-576b-4210-8128-4e37a47570cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5329db-ae5a-45b6-b4a1-1cbe55b48942",
        "cursor": {
          "ref": "9edadbf1-d84f-4e53-bc5f-6d6eed12f1ea",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9364c8cf-601c-4263-bc5c-e980b1cab78e"
        },
        "item": {
          "id": "8d5329db-ae5a-45b6-b4a1-1cbe55b48942",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a31d8932-cfed-441e-bf9f-b7646df4dde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0defb502-14ae-43ad-838e-1b4a595b0842",
        "cursor": {
          "ref": "37e20b46-9cff-43e4-9b5d-036e4f7a787e",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4229c567-04ef-4de9-b54a-7f893c510900"
        },
        "item": {
          "id": "0defb502-14ae-43ad-838e-1b4a595b0842",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1ad9645e-7975-4f23-bea0-398fe174f8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b943e4-ceb1-4970-9f74-c9ace4338fda",
        "cursor": {
          "ref": "869e0035-56b6-4d81-8160-08873b0aeede",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bbd546ca-cc58-4483-8d33-fe15bb13bf76"
        },
        "item": {
          "id": "81b943e4-ceb1-4970-9f74-c9ace4338fda",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2e67b143-d592-4d4c-b217-c2b3745458f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c75728-277f-4e23-bbdb-0b749f192de3",
        "cursor": {
          "ref": "d1cec74d-867c-408d-8351-2b838bff0dcf",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b66eadeb-4eba-41e4-afbc-17fab4ee07ba"
        },
        "item": {
          "id": "54c75728-277f-4e23-bbdb-0b749f192de3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d9e99e0d-e3ad-430b-b251-880165967920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bd57e5-5bb4-4b40-9ee2-670b9fb6dade",
        "cursor": {
          "ref": "c87cf4f7-1a7f-4171-b0a7-81f2413ad1c6",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bd936383-bbad-43f7-ac76-0df578b9dbfb"
        },
        "item": {
          "id": "20bd57e5-5bb4-4b40-9ee2-670b9fb6dade",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c30c228c-eb5d-4790-bdd1-65e61724800e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa0b5f6-4074-4c58-9698-85a1f42610bf",
        "cursor": {
          "ref": "a147a63e-ed14-4de9-a7c2-ae51a21a68c0",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6f5a613c-ef1e-44df-a1d7-135b399bae42"
        },
        "item": {
          "id": "6aa0b5f6-4074-4c58-9698-85a1f42610bf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ebeefde3-d39e-436b-9967-5eaec9e00189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99eb91f6-fa64-49a2-ac0f-c26abe01d6ab",
        "cursor": {
          "ref": "27935049-7c5a-4796-9b77-7d03f58c60ed",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "04639885-a18a-4da9-8fde-bed80550df64"
        },
        "item": {
          "id": "99eb91f6-fa64-49a2-ac0f-c26abe01d6ab",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5b62648c-fe16-4019-8599-df5035a2654e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b554e1-9e37-417f-9bc3-23d7f59b8bed",
        "cursor": {
          "ref": "0bcc7f1e-365d-4c62-bf7b-86b8b5bfcba3",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "12ec0929-b69d-4f11-bc7d-e080636d8f13"
        },
        "item": {
          "id": "48b554e1-9e37-417f-9bc3-23d7f59b8bed",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "079d70eb-1e52-47bf-abe8-30d20c7daa36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ad8d61-7c95-4b41-bc5d-b58e4be832b6",
        "cursor": {
          "ref": "e1d7a4b9-850c-4846-bdd8-9505dd3b91ab",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "203c1006-c949-46d2-b409-8e99083784e8"
        },
        "item": {
          "id": "42ad8d61-7c95-4b41-bc5d-b58e4be832b6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e8aa2037-171f-4022-aca6-dcd8e3a802a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48eae7a1-2a0b-461f-908f-683d1bcff5b3",
        "cursor": {
          "ref": "ce141b47-13d3-48b5-b518-9695153f0c68",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a148108c-abce-4707-9e7e-bc34e63d9949"
        },
        "item": {
          "id": "48eae7a1-2a0b-461f-908f-683d1bcff5b3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "60824c0e-3a41-477e-b5ed-7a5c195dee00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2ed0bb-d712-4484-8c3d-ac8a7736ac42",
        "cursor": {
          "ref": "167d10f8-1629-42bc-a393-e39a37f85b80",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "aff6ed13-5f76-4fb1-8c1c-41596f92408f"
        },
        "item": {
          "id": "dc2ed0bb-d712-4484-8c3d-ac8a7736ac42",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "13fe9f9f-d18c-4eb5-ae90-5b92480378ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668e765e-6677-4c0d-a8f8-04db77d4a401",
        "cursor": {
          "ref": "119e3333-054c-4721-828d-d281ca9ffeab",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4323b74d-1ce8-499b-b921-a2fc51f57432"
        },
        "item": {
          "id": "668e765e-6677-4c0d-a8f8-04db77d4a401",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c139ebf3-4a41-49f6-955c-75d1214660ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49997cbb-4a3a-46ee-a6d6-b1eb472c1719",
        "cursor": {
          "ref": "207be558-701c-4515-92bd-2b030e52f50f",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "070151ab-e3fd-4300-94a9-81a0dcd0473e"
        },
        "item": {
          "id": "49997cbb-4a3a-46ee-a6d6-b1eb472c1719",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "69865bc0-ea1b-4a45-b00e-9626e8f85c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3319a4-9a66-4e50-bb97-832b05ced5cf",
        "cursor": {
          "ref": "631e4f37-eb76-4e09-998b-8283c3cfa133",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "75e212be-8ead-436c-a65b-405f76deda0c"
        },
        "item": {
          "id": "8b3319a4-9a66-4e50-bb97-832b05ced5cf",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "dd19d3ad-d75d-4aa6-b685-d47cfdcf0ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c96d5d-6269-4e33-befa-8a999523e155",
        "cursor": {
          "ref": "784526d8-a3c6-40bb-a8b1-2742eeff0295",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "87644dd3-43a3-4971-948a-458abf1cb8b7"
        },
        "item": {
          "id": "c0c96d5d-6269-4e33-befa-8a999523e155",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f662e4aa-804d-4e6c-b6ac-da0ae498068d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba80e07-f077-4213-b802-9fe296529702",
        "cursor": {
          "ref": "b007722d-2983-46b4-98c1-eea59031f52d",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7e807871-5316-48a6-ba16-1ad0788d7005"
        },
        "item": {
          "id": "fba80e07-f077-4213-b802-9fe296529702",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fccb889f-b899-446b-b72e-a9ebcd070592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6dc234-29d0-4b0a-8a64-62f7eeabba37",
        "cursor": {
          "ref": "122bbce3-f39b-4db0-bfa8-6d69e6a33fa7",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f929d911-2f9f-412e-8c3f-20e750258710"
        },
        "item": {
          "id": "fc6dc234-29d0-4b0a-8a64-62f7eeabba37",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d901ac67-4963-468f-9c5e-e1d0fa386053",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb40063-a43d-4396-be41-d0c7692bdf8a",
        "cursor": {
          "ref": "4f354f94-4241-40ba-aa94-53ace086fe54",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5b3a785b-cde8-4516-9962-2f43ecab1236"
        },
        "item": {
          "id": "ebb40063-a43d-4396-be41-d0c7692bdf8a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c46982cf-966c-4a95-9d17-0734f7fefd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e731f955-a16c-40f3-bdd4-b9a5f37b1aed",
        "cursor": {
          "ref": "035972b9-45fd-43d3-a49b-7986ce528051",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d82358af-ee25-4baf-9081-16e0dbef68ce"
        },
        "item": {
          "id": "e731f955-a16c-40f3-bdd4-b9a5f37b1aed",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "be3bcf73-ac5a-439c-9a09-08acbac5f628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be4f6c7-74c5-49d8-b066-ea7c265e67e3",
        "cursor": {
          "ref": "eeb842c8-4212-49cc-8d70-cefcdb95baa2",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e7c38bc6-5a63-4d8c-9584-19a83f962e17"
        },
        "item": {
          "id": "4be4f6c7-74c5-49d8-b066-ea7c265e67e3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "13b58d30-930c-4878-bfbf-8c28ec119e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd6292b-a7d5-4fd1-851e-13f7737386da",
        "cursor": {
          "ref": "88c97bbc-372d-4e4e-a45e-d11e73c62cc4",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b6c14e27-371c-4456-867d-34828cc8c576"
        },
        "item": {
          "id": "2fd6292b-a7d5-4fd1-851e-13f7737386da",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d844594b-f931-4c5d-be3f-d42fce737e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910dc00f-5df1-4212-8a4c-2db98d1d7dbf",
        "cursor": {
          "ref": "718343ab-b91f-4de1-9b6c-32b3c0877886",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "185d24f8-7daf-4ccc-a648-ee9e4d5204ce"
        },
        "item": {
          "id": "910dc00f-5df1-4212-8a4c-2db98d1d7dbf",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5573ef89-98b1-4aa0-b8e8-f519a41e0a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323d1124-8e3b-47d0-a0bf-8fd0c6b4216c",
        "cursor": {
          "ref": "cd1e484b-4cf9-49c2-953d-f9daa782e929",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c47ae3f7-4b3a-447b-aa39-8d43c84b343f"
        },
        "item": {
          "id": "323d1124-8e3b-47d0-a0bf-8fd0c6b4216c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f2e54542-2cbf-4453-b200-741243763502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2641bcf7-5698-4a20-a4f6-23736bc618ed",
        "cursor": {
          "ref": "aa764b54-f630-4e52-9e58-a7a551894caa",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e914c23d-42ec-401c-b132-cb6d4b2428c9"
        },
        "item": {
          "id": "2641bcf7-5698-4a20-a4f6-23736bc618ed",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "137aeda3-5e11-4d83-a9ef-37407ae76af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f316ac8f-2eee-4b45-b109-f184aa333e29",
        "cursor": {
          "ref": "18da433f-3ce9-41f8-8e90-5d3b9fb3f8b7",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "405039ac-dcce-49f2-913e-3cf22b5c6d25"
        },
        "item": {
          "id": "f316ac8f-2eee-4b45-b109-f184aa333e29",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b1c5a303-919a-4281-9701-066c8710cca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74a0468-0c59-4c11-b576-718f0edf506c",
        "cursor": {
          "ref": "5ddf9c64-6356-42b6-aff2-ef83d2cd5e34",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9c66d231-ff7d-4858-93cc-d01261d26357"
        },
        "item": {
          "id": "f74a0468-0c59-4c11-b576-718f0edf506c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f08a8457-17ee-49a5-8b17-dfa2278ac5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12159b5-fdcd-4c71-895e-f74e9b2b771a",
        "cursor": {
          "ref": "c50acf38-6f4d-4ffd-85b4-dcd305099b63",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3a56b341-6bce-4df0-aca7-d67a8402965d"
        },
        "item": {
          "id": "e12159b5-fdcd-4c71-895e-f74e9b2b771a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "77934543-4a84-4904-b059-b0b083d8e6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7ffc51-c4f1-4b9b-b6a6-27070b356be2",
        "cursor": {
          "ref": "29303554-3c1f-4508-a9fe-295c7c53a446",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "007c8ca9-418c-412c-b1b2-3013f12f8b43"
        },
        "item": {
          "id": "3e7ffc51-c4f1-4b9b-b6a6-27070b356be2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5b1cb1be-9f3b-4594-9556-3d90e3bfb4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1036f0d5-bdcf-4605-97a4-a52e3479a25d",
        "cursor": {
          "ref": "2f3ab03d-e44b-42e1-889d-bde7c3db5de3",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d7bd5ab0-48ca-4bb6-92c2-a38fec0c20ab"
        },
        "item": {
          "id": "1036f0d5-bdcf-4605-97a4-a52e3479a25d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "68b54348-454c-4963-ae46-3fd338588814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f067b0cb-005f-4b67-8bd3-a6dca616c13f",
        "cursor": {
          "ref": "d3a5d081-8369-4301-9d28-7714bbc500af",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "41f5a5e5-e7e6-4e65-aa92-fab73746682b"
        },
        "item": {
          "id": "f067b0cb-005f-4b67-8bd3-a6dca616c13f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "220b611f-0735-447d-968d-6d81fb949607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a494622-4d3e-4a9b-8a2d-8ef73610aa53",
        "cursor": {
          "ref": "0b8947c8-2c7a-489c-a152-879429192b63",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "64dc28a1-1c23-4b6c-a70f-ef5f1d93ba05"
        },
        "item": {
          "id": "5a494622-4d3e-4a9b-8a2d-8ef73610aa53",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ecb5f96e-bb52-4e86-ab61-84dcdd1dfd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fba638-5eab-4bd3-b00b-9a52ca79e130",
        "cursor": {
          "ref": "6ec23226-ab44-4894-9832-6ab6ab3345f6",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9dda4283-0565-4eed-87bd-229d399a0541"
        },
        "item": {
          "id": "99fba638-5eab-4bd3-b00b-9a52ca79e130",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "10301236-2090-48eb-8736-6d230b0debbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ab9628-975e-4efd-ac25-a4c06d025a98",
        "cursor": {
          "ref": "1d1673ac-13e1-4529-b946-a19b5669dce4",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "740e987a-92ff-4d62-87b1-19dbe16f1f79"
        },
        "item": {
          "id": "60ab9628-975e-4efd-ac25-a4c06d025a98",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3833d829-4571-47d2-88ee-e94651e1a675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff26b138-7610-4ef5-8577-ae7fe5bed094",
        "cursor": {
          "ref": "d3c8b8d3-bab8-41f2-ae2f-050c813bf7cc",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "44264fdc-1db1-4238-b899-b50098b1e124"
        },
        "item": {
          "id": "ff26b138-7610-4ef5-8577-ae7fe5bed094",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1124672c-814c-4b10-9197-206e33b6936c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44493d7-c720-490f-bd11-086a92831daf",
        "cursor": {
          "ref": "e32223d8-4144-4749-9358-90b0564cc1c9",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "575ebf65-ecaf-4cb2-8e5b-9b5cb515b594"
        },
        "item": {
          "id": "b44493d7-c720-490f-bd11-086a92831daf",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "25518163-e1b5-4312-a19f-f08504222038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca8eadf-87b6-4c08-a59a-79e21aa96ce0",
        "cursor": {
          "ref": "c7938f46-706f-4a62-8ff3-e0a571766f5b",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "700c08a5-641a-444a-8f5b-e7c0b44f214c"
        },
        "item": {
          "id": "2ca8eadf-87b6-4c08-a59a-79e21aa96ce0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "06a5f83f-761a-42eb-a4f8-c1388dc6dbad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5148043-0a30-4aaa-8159-f2a5b58c07c4",
        "cursor": {
          "ref": "bc290943-1bcd-4433-8d15-66d811675dd8",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "45d85b65-515b-42ad-9217-a598d9553e70"
        },
        "item": {
          "id": "e5148043-0a30-4aaa-8159-f2a5b58c07c4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6ab4cfd1-227e-4b7a-8907-02bfab89e536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2a5b8c-1e96-4633-8b75-aed656a79698",
        "cursor": {
          "ref": "cb393b91-805a-4053-95e2-4d1d3e6d3931",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e56d0f47-6659-4a77-82b8-84a436e23d67"
        },
        "item": {
          "id": "3b2a5b8c-1e96-4633-8b75-aed656a79698",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a4cb1ca9-34e8-43b3-af15-78b8d0c1e42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a308b817-935b-4196-9b86-546d7ba42386",
        "cursor": {
          "ref": "3d22fa5b-dbad-4d75-9dba-dc5232578bd2",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "df99fd73-7665-49a8-8afb-b9686e3cd773"
        },
        "item": {
          "id": "a308b817-935b-4196-9b86-546d7ba42386",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e36cad7d-68a1-4015-99da-dda52837039b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be30207f-2cb3-49c5-ad88-b860e01a5283",
        "cursor": {
          "ref": "eb056717-0398-4241-9735-01b994e3df4a",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6b28f0d5-c598-48fb-8c25-d68e4b386569"
        },
        "item": {
          "id": "be30207f-2cb3-49c5-ad88-b860e01a5283",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d00e3890-7406-4c45-ad02-01e3ebfbabb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7f249c-90ea-436d-8973-1e12234608d6",
        "cursor": {
          "ref": "7029ffdd-619e-48ea-91cc-059225b3f848",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b276bffe-54dc-485f-a7bf-08ff38257899"
        },
        "item": {
          "id": "1b7f249c-90ea-436d-8973-1e12234608d6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "99da0662-9654-473a-8165-a002da74753c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747e6a23-5c05-45f7-92cc-4209b1a9411a",
        "cursor": {
          "ref": "11123fed-4f42-4a7e-ac01-f2019120a235",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2412d2c9-12a9-4198-876b-f66e068bb57e"
        },
        "item": {
          "id": "747e6a23-5c05-45f7-92cc-4209b1a9411a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "13f8ae67-2c58-4787-9d61-bb36f112588e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faee9b34-2f59-4210-9658-dab3755558ef",
        "cursor": {
          "ref": "05621628-add3-4d6d-870a-76449ad467f9",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0636ad7e-bd86-432d-ab30-49ad1027e500"
        },
        "item": {
          "id": "faee9b34-2f59-4210-9658-dab3755558ef",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "06bd32f8-2da9-4b2b-9a18-6efd44227494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a087c1c4-c206-4ab4-94ee-55100dda225e",
        "cursor": {
          "ref": "88d24372-8d45-4b67-b158-487d05c04e69",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "93b145a3-2877-4cf5-8f46-8bc1005c54e3"
        },
        "item": {
          "id": "a087c1c4-c206-4ab4-94ee-55100dda225e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e64c6930-a292-481c-ae86-eb7b934de192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410df05b-b447-4b95-8961-f9a1e485151b",
        "cursor": {
          "ref": "98c76e84-d00e-4507-8fbe-50e891404301",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "46d6bb0c-dd36-4b0d-ad0e-719f0f41364b"
        },
        "item": {
          "id": "410df05b-b447-4b95-8961-f9a1e485151b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1aa1ed1d-0c89-4d19-99cd-fae2852de623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae19514c-e7ea-4881-a90d-4125f97a63a4",
        "cursor": {
          "ref": "2414f3f5-5485-4939-8d66-a8f866238664",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cd5a70da-ba00-4f23-946b-abecd10af468"
        },
        "item": {
          "id": "ae19514c-e7ea-4881-a90d-4125f97a63a4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "62babf93-8656-45aa-a996-fa763471ee88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0414680-cfb6-436f-901c-f5b270093d89",
        "cursor": {
          "ref": "4ce8c84c-03ea-4a1a-b6c5-faf4e264c845",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0c6d8eca-d22f-48dd-96ff-21cb5ea347a4"
        },
        "item": {
          "id": "a0414680-cfb6-436f-901c-f5b270093d89",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4df27899-2868-4e01-909e-01bd57811146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ac8a06-b225-4ff0-a8a1-8d00438e8bc1",
        "cursor": {
          "ref": "790438ff-a5e0-43ad-8575-33c414be6676",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c9631ad0-a67d-473e-88e9-6963b3a6897b"
        },
        "item": {
          "id": "50ac8a06-b225-4ff0-a8a1-8d00438e8bc1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "259d1592-30f2-41da-a130-363980d34def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946b8205-4a3f-4e1d-96f6-a2d9ebf887d5",
        "cursor": {
          "ref": "7a7d9898-17ab-4e38-90b8-e9ce08eef290",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "938b071f-fcc3-4b89-885d-1e1b54962231"
        },
        "item": {
          "id": "946b8205-4a3f-4e1d-96f6-a2d9ebf887d5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4cca2361-30a2-4b86-ac36-b4e26239839e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a521a6-d73f-4f37-8a56-7f1be833c7ed",
        "cursor": {
          "ref": "7f25c96c-da2a-445b-ade7-5a2ab0e6284f",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2b31cf46-e4e2-4879-a899-0da4dbb2d7de"
        },
        "item": {
          "id": "27a521a6-d73f-4f37-8a56-7f1be833c7ed",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0250f496-e318-4b44-b166-8043f1654ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b217cfae-c425-43db-820b-ca3f720f6134",
        "cursor": {
          "ref": "89aba779-3884-4758-9d4a-dac45a73691b",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "21bcd3f5-8782-47ac-885f-4cd634570753"
        },
        "item": {
          "id": "b217cfae-c425-43db-820b-ca3f720f6134",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "03398ed5-914a-458f-92ab-a2253168b1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f485f8-e681-4391-86ec-a0124ddfae95",
        "cursor": {
          "ref": "ceeff2aa-e69c-4370-b415-ee0a2ac49920",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f981e410-f0cb-45a6-82af-9bb523245639"
        },
        "item": {
          "id": "a9f485f8-e681-4391-86ec-a0124ddfae95",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fe9241e5-6149-4428-8760-caf0fa8b03b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba0c142-28ca-4eec-9711-be7d3fe79df2",
        "cursor": {
          "ref": "1482c6c3-3590-4375-97d0-db24936ea443",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d02358ac-c337-4627-8756-214c73b68a11"
        },
        "item": {
          "id": "bba0c142-28ca-4eec-9711-be7d3fe79df2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3b19b8ba-42cc-418b-b069-ad3fed170362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5634d5-a1ec-40cb-ae41-40ccce0dd530",
        "cursor": {
          "ref": "7a2b9cc2-279e-4347-8c13-7a679157971f",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7497939e-ccb4-4e67-9be8-a8a87b10197c"
        },
        "item": {
          "id": "1f5634d5-a1ec-40cb-ae41-40ccce0dd530",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "00e0830b-9e2b-4a6f-954d-c8c36a7fddde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d689a3b-dc8e-4076-8091-3c6450c8d50d",
        "cursor": {
          "ref": "bd3d8329-b3d1-47a6-90c1-92aa1b0fdcbe",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b1eaa171-d267-43be-a357-1cfc46721a2a"
        },
        "item": {
          "id": "7d689a3b-dc8e-4076-8091-3c6450c8d50d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "23c55328-20c0-4adc-83ce-68ca8713e83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917795e4-8c9a-4442-a19f-3ddb2686e87f",
        "cursor": {
          "ref": "0bce3a26-58bb-49a6-9b8c-824a68ac24ce",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7f94a60f-02ae-43d3-a94a-28948b2867d5"
        },
        "item": {
          "id": "917795e4-8c9a-4442-a19f-3ddb2686e87f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "228b1bee-d102-4152-9754-fbfeb8450fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b9b41f-0398-4c07-97e2-9f6745220b17",
        "cursor": {
          "ref": "cfffcdd1-c878-432c-a421-e923749bcb0a",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ee1c91ae-562e-461e-8fb4-4a0fc6dfef8b"
        },
        "item": {
          "id": "20b9b41f-0398-4c07-97e2-9f6745220b17",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e918203d-3eeb-4ab3-8705-4a911a36f833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4eebd07-ef20-48bd-bc40-4a3ea022b748",
        "cursor": {
          "ref": "29cf04a6-f42f-48d6-8317-a42136e94869",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b795f39a-35a9-4cfb-83e4-6f8f0366f387"
        },
        "item": {
          "id": "c4eebd07-ef20-48bd-bc40-4a3ea022b748",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "89154459-4155-4f4a-b344-18a78c07d943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ce501c-fd53-4037-aea5-1e056b432247",
        "cursor": {
          "ref": "e4b5a2f1-2bc1-4181-9e45-24512f6d33e2",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f06f4047-67ed-46b3-bc6d-2d062de46006"
        },
        "item": {
          "id": "e8ce501c-fd53-4037-aea5-1e056b432247",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a810e880-9e53-4049-925f-9148affca5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b41dab6-6786-4770-b22c-3817804ee462",
        "cursor": {
          "ref": "b91f2938-df59-4bb4-8d23-6906cd1f3a2e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "78f1db16-56a0-46ef-b021-f2bc7862463a"
        },
        "item": {
          "id": "1b41dab6-6786-4770-b22c-3817804ee462",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cd6a5fd4-6e36-4158-baab-dca6b5e79f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea9b1c0-c315-48b0-b687-a031d9386e4a",
        "cursor": {
          "ref": "b896c76f-a368-4cca-9068-734329a59805",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9bbdfc0f-5900-49d7-b9d7-01c039f70ded"
        },
        "item": {
          "id": "aea9b1c0-c315-48b0-b687-a031d9386e4a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a2a92df5-2ac4-47a8-9dc2-2e279c1d69ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88f87ea-04c7-4af1-b324-db035865b16a",
        "cursor": {
          "ref": "b1bdfad8-aa10-4881-a2f6-67a5db34fc0e",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "48aaf3b0-977d-4212-b341-5b1e9361ca22"
        },
        "item": {
          "id": "e88f87ea-04c7-4af1-b324-db035865b16a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "59d79f8a-0533-490f-b45d-1ac6f795a202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962bdb0d-2115-42f3-ab41-ca910535e0d9",
        "cursor": {
          "ref": "55d215ba-bf54-48c6-962e-e91c45c6fad4",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9b11c122-2f00-43fa-b513-6869775cb740"
        },
        "item": {
          "id": "962bdb0d-2115-42f3-ab41-ca910535e0d9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "044b8388-f550-4fa1-807f-49da043d72f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda3be58-3fd8-4ed1-a212-93dd08afc273",
        "cursor": {
          "ref": "1fda4c8c-dd20-475f-9a28-4b6b9e9883c1",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9b14379a-17fd-419c-b231-d0aa6ecf63ef"
        },
        "item": {
          "id": "cda3be58-3fd8-4ed1-a212-93dd08afc273",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "666dbd8c-5bdd-4260-abe4-ec86052ddf8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd104901-f210-4149-a2de-9c89bc0e825f",
        "cursor": {
          "ref": "3dd44ede-9550-4758-887a-3509865f1120",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4510cc3a-4b90-4e92-9bbc-1180a1b356ad"
        },
        "item": {
          "id": "cd104901-f210-4149-a2de-9c89bc0e825f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1029ee47-64c7-4565-874e-2b2c22545f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e30466-058b-4a1e-932b-c3b91f55a43d",
        "cursor": {
          "ref": "dae2de84-d070-43de-8e50-9658d5f35185",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "53523246-d7cc-4b04-852e-cc6f6f4dcbde"
        },
        "item": {
          "id": "60e30466-058b-4a1e-932b-c3b91f55a43d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b58d8bd9-f29b-43aa-94a9-9bdf404844a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cff9614-3072-4962-987e-c3e0392b822d",
        "cursor": {
          "ref": "85da38d2-d798-4432-a2c9-e56222d9708c",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0e948cb4-72f1-4bb8-8db8-853fbf1e49d6"
        },
        "item": {
          "id": "8cff9614-3072-4962-987e-c3e0392b822d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7dad8d38-d801-48dd-8baa-3a8052da5bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fae035-c67a-43ab-a846-65d4c9dbcbd7",
        "cursor": {
          "ref": "33870b33-a892-44ff-a994-4d969211cc61",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "931eadd3-f3c4-43a3-9ee3-f70ee59d0f0a"
        },
        "item": {
          "id": "c7fae035-c67a-43ab-a846-65d4c9dbcbd7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dc87938c-ec43-4374-997a-1ff266e8f05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7f8eeb-842c-458b-b39d-6aeb0207008d",
        "cursor": {
          "ref": "5bfc942a-ad6a-4fa8-bc91-32fb74090cfa",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "599f83f0-d670-4464-9107-7c4ecfabe50d"
        },
        "item": {
          "id": "ce7f8eeb-842c-458b-b39d-6aeb0207008d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b8b59ff4-c13d-40cd-9cf9-14d8af559934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995a6251-b7aa-43ba-adc5-99e142298d34",
        "cursor": {
          "ref": "de76f2d9-d839-488a-a26f-9885941fe7cf",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "73405073-3be4-499b-8081-b09d351742dd"
        },
        "item": {
          "id": "995a6251-b7aa-43ba-adc5-99e142298d34",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "21e8b2f9-118e-4456-8b5f-4bac7929437f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1171154d-09fe-4ae2-b391-43d4496b0d9e",
        "cursor": {
          "ref": "8676e8cb-36e7-4da5-b53e-2995f4f754cd",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "81ddd632-596f-4de7-9a28-6979167f93f0"
        },
        "item": {
          "id": "1171154d-09fe-4ae2-b391-43d4496b0d9e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5861617e-a810-495f-a108-6e4c9765613f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbc6bab-a0d0-47db-b2e9-051e1d87cb80",
        "cursor": {
          "ref": "6aaa3613-4f4e-4aa4-8b86-dff487ca0550",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f0855c6a-4078-4ba1-acf1-496665823a5f"
        },
        "item": {
          "id": "9dbc6bab-a0d0-47db-b2e9-051e1d87cb80",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "eb248c31-9acc-4bb3-a51c-cc9477e31ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57179740-eb2c-40a3-a4fb-9e2a7afbc39f",
        "cursor": {
          "ref": "83a94d82-46e0-43a8-a945-f3a0f763ff46",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1f56d74c-fe5a-4d62-808b-e06676fbc286"
        },
        "item": {
          "id": "57179740-eb2c-40a3-a4fb-9e2a7afbc39f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "48ed654a-3395-4111-82ed-ddaf602057bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98806a4f-b108-475d-bcbb-f4ae7a47ada3",
        "cursor": {
          "ref": "57aa5882-8c4f-4346-b9e1-2cf04013c013",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "044cc057-b930-46ff-a13e-688f46409920"
        },
        "item": {
          "id": "98806a4f-b108-475d-bcbb-f4ae7a47ada3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "619b4b84-acc6-4198-aa87-933132da3fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aeb1fbd-0aa3-4d77-86d5-af67691f28aa",
        "cursor": {
          "ref": "071874e9-58d0-4de5-bd81-c8d216954065",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8673b49f-026d-41d9-8c6c-ad1541745c90"
        },
        "item": {
          "id": "2aeb1fbd-0aa3-4d77-86d5-af67691f28aa",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9af47373-3f4d-4c9b-afce-be729a8888b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fc45f0-d4c0-4d80-8d9f-c4535164073c",
        "cursor": {
          "ref": "68b886c3-b690-48cb-ae78-09690caa7957",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "14d41066-0d9f-4c65-a842-44d9ea5df442"
        },
        "item": {
          "id": "d9fc45f0-d4c0-4d80-8d9f-c4535164073c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4c2cf0f7-59a1-45cc-8b9f-900dfb821f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e579b97-87dd-4cab-8b7b-ee0a740630ac",
        "cursor": {
          "ref": "36858512-a8b6-46fa-8e8e-b8b92120b61a",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5df643fe-a992-4e59-b23a-09dc52d695db"
        },
        "item": {
          "id": "8e579b97-87dd-4cab-8b7b-ee0a740630ac",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8c5996a1-3051-4990-9cf4-3015dab9cdbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb88de05-24bf-4daa-9e7b-5efd93421cca",
        "cursor": {
          "ref": "be59d865-9a29-4ed6-bcad-d886f43f5a36",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "498b3646-209d-4365-8d94-d08e8d76686c"
        },
        "item": {
          "id": "fb88de05-24bf-4daa-9e7b-5efd93421cca",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5f4654e4-9994-45fd-bcf8-cc49bae532a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961467a1-5b06-4d8d-9424-58be57f4d67f",
        "cursor": {
          "ref": "3f327d3a-c87f-4c41-ab88-8c27e40d9435",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2dbc01b4-bc10-42a9-91e1-33feeaa57ac9"
        },
        "item": {
          "id": "961467a1-5b06-4d8d-9424-58be57f4d67f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "250f9298-98b3-49e5-b7be-9f92e5a73d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83312c3c-682f-4ee9-9dc8-1e40869ef6f9",
        "cursor": {
          "ref": "77c819a5-b759-4448-9de3-e741a21c3fb9",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0614d927-c356-488d-ac93-04942e4c217d"
        },
        "item": {
          "id": "83312c3c-682f-4ee9-9dc8-1e40869ef6f9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8f4da713-741e-4de7-bf35-1b5086d9c783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2849aa-0557-495d-9646-eccb2670b519",
        "cursor": {
          "ref": "dcd02d97-5df7-456f-82f6-5ee1b472a067",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1308ba34-c654-4226-b358-f90226f482b2"
        },
        "item": {
          "id": "9f2849aa-0557-495d-9646-eccb2670b519",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "72df8ab9-f7e6-40e0-86e8-d7c7f4071b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4036a17-1fa1-40cd-b840-3f1e2d59a6dc",
        "cursor": {
          "ref": "afde97ad-85b3-4c19-9cba-8a580e93b886",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "92fe8aa0-5c06-4145-8444-b1fdc180ceed"
        },
        "item": {
          "id": "f4036a17-1fa1-40cd-b840-3f1e2d59a6dc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fd21773a-5a97-45ad-8545-bfea5e9210f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7569efb2-50f0-4a03-ae4e-1ca27be4a562",
        "cursor": {
          "ref": "00369802-7d1b-443a-81ce-4c115ab549c8",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6bdb9528-98de-4fb2-9b17-c36104fed9c5"
        },
        "item": {
          "id": "7569efb2-50f0-4a03-ae4e-1ca27be4a562",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7ffe1b82-32ac-4e76-95c3-0dd3fba24f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e2f21f-1338-479c-b0e7-29fe14e267a8",
        "cursor": {
          "ref": "0a55811a-20c9-489a-bece-799404b6bcbc",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bb07ae28-80e9-4812-aace-37da104fdaef"
        },
        "item": {
          "id": "42e2f21f-1338-479c-b0e7-29fe14e267a8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a47a91b6-fae2-4082-8679-5042df18f307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0c5690-fa59-47b1-857a-6074fe3f7140",
        "cursor": {
          "ref": "3c3fc890-69ba-415a-901a-7391c97d51f8",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9b6af50d-03ff-42a8-98d8-adc59eae6c24"
        },
        "item": {
          "id": "9b0c5690-fa59-47b1-857a-6074fe3f7140",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ad0e1881-0765-4a34-99bd-2006b83f9a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df36963-d478-4e4b-b0fa-3b29bacf5018",
        "cursor": {
          "ref": "aa8c37f3-75f7-4438-8fc6-ad522c4f8157",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0df894ab-c799-4dc5-af13-c4272dcb536f"
        },
        "item": {
          "id": "5df36963-d478-4e4b-b0fa-3b29bacf5018",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "381674d5-78ce-4ad2-8d3c-dd4b8dda356f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d760a5-f83e-4725-8737-d2ccab61c9a1",
        "cursor": {
          "ref": "dc1e021d-c494-4788-97c6-9fa8dd4f260c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f5e9051b-169c-49c7-b20a-984af506a6e1"
        },
        "item": {
          "id": "f2d760a5-f83e-4725-8737-d2ccab61c9a1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2bea5f8e-4bf8-450a-99c4-be08f0e77936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141a61dc-c7c1-4d07-9d38-ff426af8f721",
        "cursor": {
          "ref": "f86f9808-7cb8-4226-ae4c-55f149baa939",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4fa6cf62-07e6-462c-9f2a-fbd60c7f3900"
        },
        "item": {
          "id": "141a61dc-c7c1-4d07-9d38-ff426af8f721",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "affe5530-1f3e-44e7-a2da-9baad058f003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d18b76-5fe4-471c-b9fd-54f997ad4543",
        "cursor": {
          "ref": "afe479ee-fe7a-4fd6-b7ba-a6391cbc2e79",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6b35cdc3-fdfa-427c-877b-ca7c32483f98"
        },
        "item": {
          "id": "b9d18b76-5fe4-471c-b9fd-54f997ad4543",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a80231ed-bbe7-41d9-9c6d-397bee012763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e8a4b1-07b6-4be5-848f-2afc7f7d0a9f",
        "cursor": {
          "ref": "78678582-20ca-4de8-b024-8bd19585bbd0",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5b141194-a827-4da8-9d63-1a9783e2f7b6"
        },
        "item": {
          "id": "91e8a4b1-07b6-4be5-848f-2afc7f7d0a9f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cd6d9078-2aec-4ef8-8017-962dd2aa35a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce2248b-3d12-4aa7-bd78-c166b578c40b",
        "cursor": {
          "ref": "e4503f50-d37e-4ebe-9c22-0031c467e022",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b9bb5f37-9bbd-45ec-a032-2f0f7a0873e6"
        },
        "item": {
          "id": "5ce2248b-3d12-4aa7-bd78-c166b578c40b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "34f0477c-3eef-4fd7-8819-1a64b53f39f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89c170b-0950-46ee-9ece-19b4a45d8b43",
        "cursor": {
          "ref": "4434fa47-3e0c-48de-8b2f-a654bf11562b",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a62c5dea-cf63-42fd-97cf-9a93388f6c26"
        },
        "item": {
          "id": "e89c170b-0950-46ee-9ece-19b4a45d8b43",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "05f2daa8-74a7-4cc5-b5b6-ff611c19e34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a05a365-1c06-4205-888b-ee8b81323508",
        "cursor": {
          "ref": "5e54aa3e-adcf-43d3-b09f-660b62ed13d6",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "79f6ed11-6dbc-4011-9606-7f73f2690e98"
        },
        "item": {
          "id": "8a05a365-1c06-4205-888b-ee8b81323508",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5240d163-6a33-44ae-8ddc-d71f48d0a405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8159163-7715-4fb2-9a0d-c90cbff724ed",
        "cursor": {
          "ref": "076bc8bb-ab67-4923-94d5-f66746841781",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "676e6fbf-bbbd-40f8-9cce-82fa51dcb704"
        },
        "item": {
          "id": "f8159163-7715-4fb2-9a0d-c90cbff724ed",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7f28ebae-adc4-49f5-9b53-1804829fa03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57194e41-5899-4c87-95ec-5a6eb3e5169d",
        "cursor": {
          "ref": "0464df55-88ea-4b58-a51d-77a715dd7d25",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "102096d4-6ee1-4e6d-8b59-15c57a027594"
        },
        "item": {
          "id": "57194e41-5899-4c87-95ec-5a6eb3e5169d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "34f78104-3d1b-4fc1-aceb-a1afd6a12aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7389e1-4380-43af-9158-3b40e153c312",
        "cursor": {
          "ref": "cf71823c-7ea0-4908-ae97-1179985b4f3f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0f05ef9f-f31a-41ec-89c3-102f956b0bff"
        },
        "item": {
          "id": "ed7389e1-4380-43af-9158-3b40e153c312",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4bffca91-3093-499e-aa26-00528ab3e2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649a8b30-a3cf-4e05-8c11-8dcb0dc7b2aa",
        "cursor": {
          "ref": "39ae14b1-b630-4382-a7e4-fa3703ce638a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "33a3943c-77f7-44b0-b253-e0c94756fef7"
        },
        "item": {
          "id": "649a8b30-a3cf-4e05-8c11-8dcb0dc7b2aa",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0621b4fe-fd45-431c-85f6-8434f355d273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac36104-0712-4c3f-9a2f-de4c5997d905",
        "cursor": {
          "ref": "b61a9e72-6557-4bae-bc22-b2a3a8c2316b",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a5a1dbee-378a-4060-be5d-52621ed55f2d"
        },
        "item": {
          "id": "4ac36104-0712-4c3f-9a2f-de4c5997d905",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ecf88c34-7efd-429e-b0bf-5c816cbfb0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c83fffe-fa89-4f8c-a791-13568955cc1c",
        "cursor": {
          "ref": "7f2b2a2b-2141-488e-9d7d-36801801b198",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5e431a7f-d50c-4835-b7b4-2b4980148666"
        },
        "item": {
          "id": "8c83fffe-fa89-4f8c-a791-13568955cc1c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1bf54665-e154-4f1d-ad88-9ef337bff86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11914c0b-2376-4fdf-b477-95634199b5e0",
        "cursor": {
          "ref": "159937b2-d054-48c6-ad93-83b3fd03e24d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "61e1f17c-94a0-43b3-83ba-51af89aec894"
        },
        "item": {
          "id": "11914c0b-2376-4fdf-b477-95634199b5e0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ed8dd78c-2d28-4d8a-981b-8255c20c589f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129a0615-1758-48f8-957c-8bf0a7813169",
        "cursor": {
          "ref": "f3a97a1b-dc98-4fad-9694-bb0024582893",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8dd168eb-bac3-4f78-ab8f-f946bc81617f"
        },
        "item": {
          "id": "129a0615-1758-48f8-957c-8bf0a7813169",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4e46e86b-31a5-404a-bf64-13114193998d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23baf69f-713f-4fef-8a16-b3eadea3ad4c",
        "cursor": {
          "ref": "ecb8da2e-06e2-4dfa-9052-4f7b3663df7c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "71a22133-37a3-4022-a5c4-2b3725fe7fd7"
        },
        "item": {
          "id": "23baf69f-713f-4fef-8a16-b3eadea3ad4c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4382800c-10ce-4593-a2ba-1b66c1b3c7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62ff60a-c90b-4064-aa52-dfa11b688d42",
        "cursor": {
          "ref": "040c1351-f3a7-4915-a798-07e2531ced4e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7cbc5142-a8c7-4adc-b30a-bc7be780b9e6"
        },
        "item": {
          "id": "d62ff60a-c90b-4064-aa52-dfa11b688d42",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1c6807a2-7e3a-4132-8a12-be0ada319b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6323b9-a42c-4b35-b4e7-8340bd9c60dc",
        "cursor": {
          "ref": "446fe2e2-ccba-4d65-a0a5-aaef38a376ab",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "36b08f77-a746-4b38-9784-35a6fe14db13"
        },
        "item": {
          "id": "aa6323b9-a42c-4b35-b4e7-8340bd9c60dc",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3ca84a0c-ed7e-49da-91e8-c56277e6e819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516b9143-9644-432c-b8f7-1312ac27db8b",
        "cursor": {
          "ref": "718524bb-0aae-4716-84a9-8eccc97e9f6d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d287a0c8-58bd-4e20-a930-f7036153c92c"
        },
        "item": {
          "id": "516b9143-9644-432c-b8f7-1312ac27db8b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "02038c08-a597-4edb-8755-4ebf0112efca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db76dca-3cb2-4227-b49b-4ab49c7f2f7e",
        "cursor": {
          "ref": "51670da8-23d3-46aa-87bc-d14d62668ee2",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d91ad270-9ecd-4713-a51e-a83c87e21c9b"
        },
        "item": {
          "id": "3db76dca-3cb2-4227-b49b-4ab49c7f2f7e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "896c6583-031f-4f73-af88-f0b27b07254d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13723dff-82ba-4261-997a-b0ddb682f8f7",
        "cursor": {
          "ref": "ee6291d9-d634-4718-9079-b39a39190994",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ca913f02-c179-4687-9c6e-d202cf1a2507"
        },
        "item": {
          "id": "13723dff-82ba-4261-997a-b0ddb682f8f7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a544676c-c213-4bb7-8bb4-d8d9107e7a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc5fec3-498b-46b1-8238-9e0c711262ab",
        "cursor": {
          "ref": "588e55cb-ba9a-4cfd-bc4c-134067a4225b",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f1d6e5b1-992b-48c1-97ac-11de2496913a"
        },
        "item": {
          "id": "fcc5fec3-498b-46b1-8238-9e0c711262ab",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "75af77de-209b-4aea-a9f9-fe9d210cddbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64635335-75bd-4275-b7e3-3b3220c08b6b",
        "cursor": {
          "ref": "3737e0d1-b0cf-4956-b584-68db21d1694c",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cb70c237-37c0-47b8-8807-7e131d8c56cd"
        },
        "item": {
          "id": "64635335-75bd-4275-b7e3-3b3220c08b6b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "883a47cf-d071-4c6d-abe7-9fbc6f90a36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713de3fe-b613-4dd1-b7b7-a63c0c6c2fbd",
        "cursor": {
          "ref": "1edd3794-a7e6-4b8d-ae45-c310e8e653ae",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4e987ba4-c25c-471d-a62b-bd6a7412f955"
        },
        "item": {
          "id": "713de3fe-b613-4dd1-b7b7-a63c0c6c2fbd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e51f1b1a-38bc-445e-8305-42ea30f2ffdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6871ff3a-cac1-4f68-ac85-05ed80475277",
        "cursor": {
          "ref": "7a29e97c-afa5-46bb-9059-2734fc832f10",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7d0f3794-8921-4a18-be97-76580814a18f"
        },
        "item": {
          "id": "6871ff3a-cac1-4f68-ac85-05ed80475277",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "20331a9b-57c8-4ba8-afed-ef1cc8d1a977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072fedb8-f6db-4aad-aa02-d1d457cac01d",
        "cursor": {
          "ref": "6183beb3-879a-43df-b5c0-3cec2ca743b3",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1aa2e2b0-3ffa-46cf-ba11-f8d9d450d685"
        },
        "item": {
          "id": "072fedb8-f6db-4aad-aa02-d1d457cac01d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "849b5492-b62b-4882-9ea3-343890673fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2db3b0-9f10-44ac-899f-2d127cca4e33",
        "cursor": {
          "ref": "84f973a1-2b6e-482f-8884-7fab9ee1b2c9",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d9bc669a-5bda-4c17-9ff7-670ccc3d5950"
        },
        "item": {
          "id": "bf2db3b0-9f10-44ac-899f-2d127cca4e33",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "51184e87-cce4-4144-93f8-81a0c76e050f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d586155-5d46-4779-b09d-c62f69eca8f0",
        "cursor": {
          "ref": "e9958743-5d82-4d78-9839-89ebb3f6155e",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a54351b1-13ca-456c-a72e-aa9995efd630"
        },
        "item": {
          "id": "4d586155-5d46-4779-b09d-c62f69eca8f0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c9484c1b-c2e7-4129-b4e4-6b0648c7ce85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074196f3-55fc-4ae7-8007-8c87b612403c",
        "cursor": {
          "ref": "fbf2aae4-afb4-4904-8f81-d8736fa3a6dc",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b75a9467-f4b6-4cfd-9264-d1db012a046f"
        },
        "item": {
          "id": "074196f3-55fc-4ae7-8007-8c87b612403c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "659150f7-4c0d-4f91-b073-3f4c88977db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd21fd5e-cfda-47d1-93da-0d97add046da",
        "cursor": {
          "ref": "49177260-6094-45c6-83d3-66d2f598b69f",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ef16ec66-3eb0-47d0-afad-d07d5ab86c8d"
        },
        "item": {
          "id": "dd21fd5e-cfda-47d1-93da-0d97add046da",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "12ee13c3-06c0-4329-84ae-89b4333b37ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "e53027e7-03a8-428f-ae29-18cccf55e074",
        "cursor": {
          "ref": "41a095e4-6e5f-49eb-bb05-25dda7845698",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5899b3f9-75dd-4fb0-93e6-910a4ae21c5b"
        },
        "item": {
          "id": "e53027e7-03a8-428f-ae29-18cccf55e074",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5338232e-5891-4e14-a39b-f1c8941caf36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "b2046fe7-d5fc-45e9-8334-a20e175892ba",
        "cursor": {
          "ref": "5ecf2414-a4e5-4872-b072-7e94f0483d4b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9789e4e6-94d8-41df-a670-38cee2623381"
        },
        "item": {
          "id": "b2046fe7-d5fc-45e9-8334-a20e175892ba",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e79600de-801c-40c1-91c6-0d41fbf5bad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "9f8f36de-c943-42ac-b85e-e2e51219ed1a",
        "cursor": {
          "ref": "6d062245-b602-4173-b653-8948f9a24fe9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a4ebaeeb-339b-4035-bd54-e4d0c588d286"
        },
        "item": {
          "id": "9f8f36de-c943-42ac-b85e-e2e51219ed1a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "89748a22-8cc5-4aaa-9c94-07411502e440",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8f36de-c943-42ac-b85e-e2e51219ed1a",
        "cursor": {
          "ref": "6d062245-b602-4173-b653-8948f9a24fe9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a4ebaeeb-339b-4035-bd54-e4d0c588d286"
        },
        "item": {
          "id": "9f8f36de-c943-42ac-b85e-e2e51219ed1a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "89748a22-8cc5-4aaa-9c94-07411502e440",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a637b3-f7fa-414b-bbcd-7912edfb6993",
        "cursor": {
          "ref": "45da3708-36f1-47d1-a861-460fb5a36d7b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ee4aff65-d430-48e1-925f-bbc4a025151a"
        },
        "item": {
          "id": "09a637b3-f7fa-414b-bbcd-7912edfb6993",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a388122c-9d74-4b50-82a1-01c1ad516b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43a89ef-b6d4-49b4-9468-3c907463977a",
        "cursor": {
          "ref": "de6010c5-edc8-4428-a0dc-65de0f7f9498",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a5569513-cde3-46a3-9ad3-fc337147e402"
        },
        "item": {
          "id": "b43a89ef-b6d4-49b4-9468-3c907463977a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "83d81dd1-9926-447f-b740-2521b621b251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}