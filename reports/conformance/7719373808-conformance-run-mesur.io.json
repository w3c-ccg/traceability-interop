{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "daaa6c4c-639c-4263-9a40-8ca6815e866d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f80f218b-29e4-476d-9a4e-251797924346",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "87c05499-6724-4f63-94bd-891f68289c95",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "87f8dc28-ccca-4db4-bf34-549d9f1cd224"
                }
              }
            ]
          },
          {
            "id": "0887b1b9-d23c-4587-aeaa-90c6a0888fd0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8175aa96-0f0d-45fe-a9e3-f4b83c7cc58e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eddbf5d2-6533-4e43-ac26-3cba0d2ab616"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "eb4967e5-c8c3-4280-b3dc-3d5b86230b8a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7f94af3f-7b82-4cae-99a1-0ef906d28561",
            "name": "Positive Testing",
            "item": [
              {
                "id": "49c6924a-38bd-430e-a347-08f1cb05ef0f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef4cc1c2-8650-474e-abc3-938d8e0f6e17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d53f5b5a-94f7-41b2-9eb9-9ec42dcec335"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2aa954c9-0fee-4f3a-8f4f-c94f35828dbd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b1fd170b-3ae1-424f-9f95-f31f2f291bdc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "232938a6-21a5-4fe5-bed4-6b25a1773dd2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5efbe38e-30d7-4e4a-8df5-71e658e040e1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b733f6a5-da40-4036-9478-7d09e8c31571",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "349c7df8-0dc3-44b9-879f-3bceaaacebf7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ded48c33-c0a4-4001-afc1-98a5329139a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69759e42-3a7c-4556-b7b0-ff5b3f37d604"
            }
          }
        ]
      },
      {
        "id": "eb3f463f-f8c4-4bb3-81fb-fb7db0d3fc41",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b2943c3f-2dd6-4a31-9b8f-4d7edbe9a63f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "088160a6-a23f-4476-8578-7da1b5d337d2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "88698e08-e95e-497c-9a9f-deb9e3951e28",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fff8b9-3506-4a0b-a65a-bcc25757f601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "985aa890-85b3-4ce5-bb39-48b97d2c79dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cab1848-cdcc-4cc1-83a9-d7efe51a22c2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24be4fb0-71bd-4223-999f-f37a068cb608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d29eb9bd-01bd-4a02-890e-7a4407332875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd14fca-fc8f-4b53-9582-6c2d04f2f08f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0586ae-4a51-40fe-ad56-0b1b9e2f6b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e61eb59b-f7eb-4ed9-988d-e096b6540d2d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fc96fd14-1703-4f10-aa89-24dd822324c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3bd6f5dc-4f02-4017-a20b-09af491f5c02",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6a8619-fc89-42ef-8a2c-768613386d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37d6f29b-d17e-44c0-a707-ab955d903000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f62eb7-651a-4052-a4fb-3af9de2ddc7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da9b6995-a7c1-45b2-9f45-8b2962c4dc13"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a62691be-eb7e-4508-96fa-a91442b20b7a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5dcb767e-6623-433e-8a29-fbb1812e9e1b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ad8be7b-feb9-4da4-ade9-08378c963e9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3d0a717f-6280-4bd6-b67d-51584e4b83ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2adb1bd-0da8-4984-a457-70c10355c308",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1fd50953-d57f-4c56-80fd-93d4f9c71613"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33c8382a-bc78-4bec-9173-b3d8e7a43545",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d5921fe-ab5a-49d4-9aa4-c84fb189a629"
            }
          }
        ]
      },
      {
        "id": "13219909-e10d-40a1-8084-79e457097394",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1f593e1d-d867-4c17-8d59-27459f361484",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c5d360d4-cf64-47c3-8dec-c3d5ecb04f18",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2c16a994-fbeb-45fd-b724-2898f8e5cedf",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328dfee7-5536-4332-b2c5-c7df6cbb2dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6829ec-5745-4aed-9d1b-66bc6d478b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbf7f77-954f-499c-9bdc-3c1c15d0dd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84ffcb01-95ae-41d6-a502-0f4937789d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba731cf0-dcbb-4f47-a85e-816c2502fefd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be25daff-6ff4-42a4-8311-54613a0f1524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096247d7-7e7e-4f6e-ba70-a742743e4477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8dbfb5-3626-4b23-880a-540f2f6c8963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de91dd8a-ab6f-4e65-a9b2-d51950d8a739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99916cc9-b493-462d-86ce-2fa50c5ae180",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d550b84-4302-4e79-bcca-ba33adc5893f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcaedacd-1449-4bce-89a2-2d8f60968d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8013e29c-228e-4067-a1a6-5d94ec7fe864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05162ab4-d593-440f-8733-d620a118f2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fac1ec5-7ba3-4f2e-ba54-6c589faa9545",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dae4476-ba9a-45d3-9217-4e6b6a558d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f8bd073-8d4b-43d0-989c-17c70c5ff621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b11e755-55e4-473a-b040-d32cacfc56d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6383425f-f15d-44b6-9433-8a21f700ef73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ae33c8-1e84-434e-bf58-9a6da9719b15",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc49cf0f-faa8-4cf0-9a87-9625cdd7d1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfef4415-4a51-484e-b205-7e8312ee6cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd21eb1-134e-43bd-9585-c751712ba735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0977055d-5135-4d63-a7a6-bdd5e7a6077d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c0e7dd-7553-4a8e-89bb-e6d183404561",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb966be-6db3-4e87-aac0-3b49fef4d592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4bdc51-25f8-48dd-803b-66bcc63d05c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacabc79-f3d4-4024-915f-cad5bd05feb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2266683-ec03-483a-ac1d-70fe1e46aeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ce1d99-9a40-401e-9026-31edff6fca50",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5cce91-2db9-47ed-abce-107611b5484f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4553ff-62fd-4f82-85d9-c0b6d41bc8c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669e3e61-f789-471c-bd09-52df2944eae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0851bd89-4ec1-4156-b717-04c2bbd6f4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3bdccf-abb7-414e-a439-3b91c2b361e7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d68943-6e4a-4273-874a-6d6df9b72ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a4319f-e9af-442b-a4c9-31b11e690d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e80a0e-b794-47e3-9386-5e4f951c5871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c03db781-6156-46ae-9c4f-da34c6d45886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4201bf3a-59e8-4f6a-bab4-86c10063e1bb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43676bf9-308f-4a05-a10e-d15ff30072ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26589d9-cc08-48c3-8521-6ce7dfe3db30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08dce74e-37b0-4f29-b46d-0bb3d05afc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a813640-8465-4f6a-b4f1-272d8b28a6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80222af5-cdc1-4fe6-b197-dc7af33df839",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336bebaa-b0cc-473e-8e56-9b55e465e706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d94fb11-3828-4968-aa07-20f718bd71c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f4fdbd-97a1-4cd3-a7f2-a1c433e45142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bab2f188-1094-4fed-9be9-be68eaf58b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bdb8cf-bb66-4544-9675-5363990f1d98",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521b09ec-9362-410f-9c55-f85e01250a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4bdd2c-a2f9-4e35-a884-a965489639c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcabd91d-ea3a-43ab-9adb-eef325ed9083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c00fa244-b909-4892-aa33-836d6aca95c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b67b63-0369-46ac-ae74-4f0780ed399f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988af00a-35c8-4415-8e66-54e8c20d8496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c058605b-d715-4438-9bb0-74a690ba7f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2e713d-357f-4f09-a8f7-1468de3cc7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8eeabea9-23e6-49b1-81d1-0261208a1d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2278dd20-0d2b-479f-9b89-1ea61bf55d18",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d0f4d3-c0dc-4e45-b6b8-0c8734b3dc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3e094f-e518-4bb0-93a1-236fcb18cc54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313ff8d7-db22-4aeb-bdb7-9ea70d48baad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebf7a497-2ea3-461f-9223-4fb3e28ae835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb7e918-eaa1-4067-aa37-7f79f2e25d4d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da80d408-6e6a-4282-8541-8e09465a17c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6de467-08b8-4069-a4bb-430d11c47e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c1423f-8d64-4b39-aaef-88ae92e214bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5322d641-11cc-44c5-b193-83c44e70082e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed76a3c6-e55c-4cd4-84f5-c7ed9fd343e1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfd0fa8-b37d-4765-b793-5f934dc2d90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df31da3e-9b24-4a6a-93dc-d8a5f307a369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a72d157-d3a1-45ba-8039-058d088f7ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed640ff5-154f-43a6-a78e-290d71acd4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2cc35d-1d40-45f4-84d0-54976af85427",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2286fb9-c942-403a-b955-b43568370cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba81e629-0804-4d51-9345-3bb75971fa68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0c2e88-ca95-4325-aeb3-e70f5c8ded28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4643c7a-660a-4e77-b08f-fcb39a1099a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a10ff8-0228-4b69-91f4-1b964ca87709",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b272b323-3ecc-4908-9db1-d5b56fe622f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37ba4c9-9c4e-42c5-bd65-c2d9455abef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c214ef6-b645-4dab-9bc4-2eb62a6c8b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92aa462a-0354-436d-acbc-d7ca2e17f1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db36818-9e82-4115-9312-020d58229f08",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205522fa-c7b2-40ae-8bf9-7ed925bf34d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556c985c-02a3-4f9a-94c3-b2fe60dc4375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c8e3dd-8c97-4b2d-b5c2-7945cec1d3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4382c267-9a8b-424a-b77e-e132b86ecd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e50ba4-5a26-4f5f-bed3-98dd1dccb9b6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6e8ffc-feca-449a-8392-2438939c4430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7efd7b53-abbe-439c-b403-03aa5a2ab551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8af6202-9dfb-415c-b780-3d0e3e623aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03abfec4-f66d-402d-a571-8011495480fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1eb4342-7ff8-46c3-af08-b06a60dc27ce",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2f7bf7-90a7-4350-aec2-048d44115e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7877ee-0148-43d3-b827-fcce52e20a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3c8424-82fd-4611-966e-d6a78934391f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43244740-fbcc-45a5-a471-8291769b9b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3466a14f-2077-4ba4-ac42-6a002886e50b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "228c1e14-5dad-4800-81eb-5a1a01c98512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f549f6-5ca1-487e-a0f4-ff83d1415cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241a966a-9ce5-44ec-878c-eacda1cac4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12c3c4a1-57a8-452d-a6ec-b4e2c23adc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d34a813-83a5-4e96-87c3-0af8f8cde856",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a952902f-e33f-401f-a7d8-edf12b9f1522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcd0fa4-303c-4cb3-9dc4-44f322aff697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa10af78-e7e5-4058-8c0b-9bcc4dafd330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec810cdc-9e0f-440c-9ba9-41542c046cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7113d826-a4ea-47fb-93de-d0b1420aa69d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13be0a7c-a032-40b6-be8d-49db5f16e030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c59a45-9793-4d35-a015-57d8581ecc60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9ff019-1187-46ee-a8a2-7ef4ab981b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0529c0ff-9f83-49cd-a1be-a3058fba944e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6afae2-0a07-434e-8734-6d735f3b7a33",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f0fccb-84af-405d-bc01-df894eba7007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed150535-06bd-4052-b884-10236dd4253d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80832b1-93cc-40c1-b8bd-0b7085d3a08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf9a9fd0-aa77-4b8b-bc8d-8b26bcec3b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7196092f-87db-41c9-82e5-cdbc1fe2577b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f08b2c-16d3-44be-affa-286c753e9636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d869cf1-453b-4f19-8779-c3e62b3ff789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d682bca3-21d0-48e7-bb38-69d074239ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d60269a-c138-48ce-8144-26181a7cd0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9c4211-6479-424e-8832-a4bd8c3b71df",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556618b7-d8d8-44a2-92a1-c4f126e90042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49aa75c5-76c5-4156-a8ec-d64bb2d81de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3658a0-2069-4734-b134-22d363a2282c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "81ea176f-dd74-486c-9cea-d0f481a8f0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1acfb551-032b-45a6-ab50-ec7317933c90",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0992456c-8506-452c-90bf-99d39ae174c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82dad9b-7cb2-4741-918a-5e805858f906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a68cb5-e19d-4db7-895e-5d094fa2ed1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a55ce62-c13f-4848-bfd7-df6f4ffa98ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827f1021-0d2b-4349-a14a-4c6cfdf9de3c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99778fcc-b9b3-4984-900f-d8e221e94184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "257c34ad-af28-42dc-9d9a-5aad6f1c4a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc16b89-f54f-4b7b-8d4c-63c87b23f0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "54baefdc-dc75-4c03-81dc-c07e58d2da09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bace0bea-861f-48f1-bfaf-d018b18796ed",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4035e457-bdd6-41e1-9331-88b314ccc7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7456948d-69e9-474a-b658-064518ffd3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b06fe58-e7bc-4219-9ca4-c61b236da018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d547b2c4-050c-49e5-a199-ea9798380910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946ffd85-1e3d-4ff5-98ca-d20381c3e9df",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ff8344-89bd-40b3-aa14-3a5766e6c8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e3643f-85c3-4da6-a0d7-93a0c079c0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb427ad-6131-4cf6-bb34-4492dd00a8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e03e2b6d-6cc4-4c56-a634-590713dce69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b969095-5fea-4e0d-9ea0-1bea18933cf6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f409fcc9-b077-48ac-8b3b-e2648fcdff40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22429d5-0105-42c4-9ead-b62984c922ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35001641-a055-42f3-a4f8-7974cef5883f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "384328a2-d9fb-44ba-8aa3-5b3adee821d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf8de11-9ad7-44c9-b779-d3700b10e243",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f073c5e-356f-43e5-aa1b-e55b5f5cebcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae2134d-fd6d-41a2-af96-e35d497417a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b35fa1-f43d-42fc-b19f-07ff4d167ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c7d8a4d-76cb-4098-af12-7d2566088e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5660e914-d131-4102-b4c3-848db0bf07ca",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b4cb81-e3d1-478d-8aae-a8e21f018f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9927f67-a12c-4889-a423-8b57e9f16cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c593e7-6223-420a-b257-b9246f866dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a470002-9c83-412e-aa23-6b21904e021b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e3a40e-e6e1-44a0-b022-d007fc9b5dc0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483aece1-5224-4b3e-869e-25d43829a9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956d2ad5-b791-44e9-8645-4376e1ab441f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a91e6c6-8a4d-44d1-b29b-d920c3e18a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1a5706-5d4d-4e14-b1e7-ba2379459c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220e1877-1591-4e14-ad06-718e4edd2861",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500c96d3-f49c-40b8-a61f-f2a4c80a0a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c0f8a3-e303-4a6b-bb4e-ff86f501196c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4820378-7c2a-402c-9ebb-aac21cd7e9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6da58ded-3b2d-4180-8768-978f4adb0c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c01c572-40e6-4fa9-9004-de06e293660a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3293b7-340d-4617-8274-78d64b5bf27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "596cc337-58d6-4639-b3d4-68ca8dbd2658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f736b36f-a3b7-459b-97f3-8b78d1e3514e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b84cc7e-a164-4d77-86a0-9ebf57d257da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8891655d-7b96-46cd-b05f-cbf7567bfbf4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49995b34-93c2-4298-94be-eeded1b90ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787f9d5f-3448-46fe-9b70-a5ab4ce76e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782c4938-21e0-474d-b9dd-d4bce84bbc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "862f235c-c301-4967-b228-b45a5c34199a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fbda88-48a1-4ab3-b25d-d8aa463978fb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43986ac-2f8a-4095-b74f-5944783a8133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af7befa-19c1-4bb5-9ed8-266533d76539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0d5cc7-61c2-4f36-818e-7553539a59d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "af773486-52b2-4c12-9345-cadbd00d682e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04520c78-6b86-4982-adde-de49a7832af7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b5faac-920d-4540-8028-4668d253af5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f5daaa-9c07-471b-9e7e-6797f81eab01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84f42de-6d0a-47db-a3bc-4adae525a69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "372c2a6e-f392-4ab7-a614-27bbc3a23bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4820d3-a81b-462c-a7d0-e5e54506b1c4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba501c8-3619-40ed-894a-af00d4e01ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eec65da-13dd-4f26-8a4b-2e2fe32ff1d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c06cd63-8b76-4bbc-b7ce-4f4876d754e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "13f1243d-7a5c-4965-8132-f26caac02d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bbc13e-1582-412d-8be2-4c241fdf0884",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bfedf6-3cfc-47dd-9d40-cc816768626d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a26e57-2aee-4a67-b639-1bb0a5f4a7d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f211da4-e418-4ce3-aff1-df5a4c32796a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5057fd2-8b2e-4f75-bbfb-23cdfdf84571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940be4c9-5d0a-4859-9d47-e0c607284950",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dff79bc-cff5-405c-9697-d59da1e1dba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574c51e2-8c09-46dd-9f42-45baa561eebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4103c10-a574-499d-831c-a6797fbbaeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a48a72d9-26dc-4a99-8c84-33315dcc494d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bb7f51-b7b1-4aab-9207-35f973969552",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dcfc4f-b9fa-44ff-b36c-0b37087df302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a76f2c-7886-455a-9ad4-11ac3da5bdb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6d06d7-5de8-408c-b0a6-126915e81295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "939ce4d3-89e7-4434-abc2-308875ae3034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b749d187-0938-48d5-8d2f-bafe4ec31066",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3be08a-ce8c-4726-907f-1e728cb35454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc849bb-acb0-42a9-be8c-07745c956652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa55eec4-9b15-4eaf-ae83-2a08a23b2436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "25bf7542-1977-419e-b919-5df05d070d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df546f65-f9ed-4e57-b483-ca632158eb57",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3013979-0022-4eac-b2fa-7eb799dfcc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1492a6-97ef-4cdc-aa1a-641eca6d2f11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cc9d18-e2f1-4fdc-b154-0dd970d9b4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2d7f6c-c95e-441a-b950-8476d60d35e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216ba3ba-47a8-4e2d-bdd7-a69d735a9f2f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ef0e1a-3edb-4b21-99f8-2008128f0456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f213ff2f-e4fd-4428-8572-929b5362222f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244e3b17-1a31-4875-9d70-fb959fd99c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaba4710-00c8-409b-b194-d33e0aedb8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513e5f9a-4a15-49f1-bd5a-fdf7ca657b2b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7827b956-af4d-49c3-b14e-dbb1b9e22820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638062c5-7d12-45b9-a53b-7503a388e1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74d0bba-0642-4b96-aabf-0fc2c9ff1a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41183581-7574-4c15-a2e1-1148dca173c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07ca3c3-d4a6-4387-9263-921864d8c951",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d7a82d-236a-4b81-b250-e0d23b58fbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01159268-6280-4d20-b58a-9034651f247f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d935500-3005-49d1-90c9-4f09e3928686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7a1cc5-1070-42af-a2d0-7851428cf592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6c1cb7-828f-453b-9507-4367944e6e6a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a137b2ab-f2c6-43b0-a4d4-cda3c9bb7960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a29431b-9f01-4961-831f-bf888d5b5ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fc3ff6-f5f8-4a77-a718-7d0762da2a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8fd9783-9727-491b-9c59-9a20394dc118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc6bb9f-c239-4742-9f50-d98c319ace6c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e805f46b-dab1-4f63-85c7-1a0918efe7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8150907-8154-4f8b-8a14-b5401e35bb68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa065141-2d00-413b-8853-66ca9d0f6ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31480641-a89d-40e8-881c-0fbac98a23c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68d6a90-1b25-4950-a921-942522d14a1d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0882ad-0aec-43e6-b3b7-a95932bbf64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cb87db-1763-4084-b0da-c3ca31f2f866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b46ce8-3f30-45ea-8dd4-9a01923deccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "250fb59a-e713-458c-97a5-ab18ed777421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b541bf-86d0-4a4d-972c-c6f99fdd57a6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4450861-c231-4157-9d80-e8c6a684f22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0a534e-16bb-4e4a-bdc5-d7032ca21979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88f68c3-4801-487b-b1f8-73401cb1d73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9bed8c-6571-4d00-afc5-4a732ddb8ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb90e49-cc53-4400-ad35-61fc4c539a82",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3cf802-eefc-4fa7-9134-e43253442a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7ae91c-4d1f-49bb-a5b7-87823fc25661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6e9663-c1d6-4048-ac12-8eb8ffb2a484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "012cb192-6937-4236-af10-7763f2890f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc51a8f1-a8eb-42b8-a6e3-3ff7305afbd6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc001df2-f097-4725-88dc-e51011610854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26903c5-50bb-41a1-a6cd-684336d20723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22632e4b-f7ae-4be6-ae39-1ea1a47037d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5447dcdf-fed4-470b-b68f-d81335ceb3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626f11fa-36c9-4ca5-814e-45df447327e3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395519da-a951-443b-9773-c784974641e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5268e7c-a59e-4b4d-b6c2-a996b263c902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f8ad84-dfad-4867-8f6c-e47ddeaa864a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76556bdd-bcfb-45a8-8c7c-2b456886a9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1818e48e-998b-4660-b5ab-a0505fdcbf96",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4400d9ee-69f1-4e9c-81f6-f367990ff56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58fe0c0-7139-4ac2-8a80-523937f27120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b97b19d-37ef-46d3-aa9a-0cb3066b28dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "54373638-7999-4bce-b25f-b566f86cd954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa93943-a771-498c-889f-4dababe8350d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4571d5b5-a282-43b3-bb4b-3c42d20f7f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc0d724-37ce-443d-80e3-f709c111e45c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac99cf5b-5783-4a34-8d0f-c3dc81959f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7b0d97-f324-4332-90b4-385f786d3de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17972b24-017a-4d94-8ae2-d1b00207a63e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e37b2f9-4300-4261-a191-f28391afe8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "572d71b5-d6e5-4498-80f7-e0c7e4efedb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc239ef-3fb9-4a78-bfac-5c539b64e774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3c8ea9-350b-4260-a692-279843829dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38de6df6-efd8-48ed-803c-4292b84ded84",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc392772-0b91-44bb-bf55-45dec59b9cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fed3469-8ba0-41bb-9b17-07d9035c4127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ea4ff1-07a7-4737-8cd4-864c44dd4f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "84ded2c6-29e2-40f2-ad16-9733b8231857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba45fad5-d5e1-47ed-a786-cf3daa45da1a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c81f181-c06d-444b-b46a-a6784e637cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6cbee9-422c-4396-8a5b-96830ac59186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89ee7e3-00a0-4848-9b63-98689034c612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6b19e2-8293-41c8-ae05-1396869f0825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c578c385-a623-41f7-99ff-529778e7a45a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7428a743-3027-4179-8010-708b8f8f1104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855caa57-9310-4a06-994f-73664dc0db68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc8b09d-c3ed-4018-9871-2638428e1119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "64bafae3-6223-42d9-bc50-96ee0a02a683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c5dc81-a875-4e0e-bc43-2677e0cdfd87",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653baf43-ecf5-4754-9e29-43a816afac6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54c51ec-3a05-4a97-8b20-1c943a8b0508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8050472f-71c1-4ef9-ae36-aba3055ec8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a268233-1231-479a-8e42-0a4851c379aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e791214-6c03-48ba-bb79-9a7fd38d84d8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54f6aeb-28ba-473a-b546-13ffcbb5fee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3f463d-7b27-4ecf-bf91-dcb290b0cab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed93aa0-9a17-478e-9065-4a1e102832c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a487377-bbc0-4ddc-90f4-009120f36c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cc1a39-9951-425b-bd16-6d79ed685f5a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55459ec9-9d0a-48e0-9ba7-b8beaac09aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefa0bb3-e069-4e0d-8683-81fe3391e0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1454f5-f897-4817-a59a-93b2438a7f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c60c578-c3ed-453f-b5e1-8f27bcd87e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67af8e1-d604-4af5-9a90-9769286808e8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188a3b69-3540-4223-b541-5b947691c7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d06a12-aaab-4d82-8c0d-438e0fffe440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f964cd7-0e87-472b-a25e-11f8f9423c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b109fc-8037-4e51-ad80-e53cf5f805b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdff4903-8769-4c6b-9d9b-41bf828c2e73",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea8e54d-bb12-431b-8716-d478c573ff0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10fbd468-e4e0-42d8-bbcb-ae246dd30db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadc3cc6-08a0-46f4-814c-85fd9da79b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5bb4c3-6295-40c7-8a88-41370bbc1388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333d9724-0ddc-4d1f-84b7-021ec0eeb796",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36502dd9-0996-4658-8945-87272516f69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d042386f-04fd-451e-bba3-b957e13fd974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a2441b-c3e5-4af1-a6f0-4279e05f726d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d08b14dc-1e89-4fee-bc3e-039c29599c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad92fcf-ef8f-41ca-8328-603567563b9b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b8d929-81ed-4320-b962-1b5f6916f0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e268a071-2d28-4108-bd4d-5b64be0264ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9da9c64-618b-489e-a24d-6b75fb8379a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c99b2f24-5ffb-46c7-8f96-07a0b2d17d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07232b4c-ac64-4540-ac58-6e6fc92d0ce9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5999b66-663e-4d10-974e-085c564cf74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5db1408-6bde-4ebc-8fcf-9a272e05519a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce23b5c-549c-4527-b67a-50e86987bcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b8c423-945c-4619-905e-0d1834c5b64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0331e74d-27b7-4241-ab58-b6ddeb666e8a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c89326f-ba96-4c07-a03e-a52685c7baad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb33ec7-da36-4a91-9131-0cb3af95e4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60e2532-44ca-493a-8cec-2cbe3171e79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20671b0e-60c0-421f-bf71-9c554f6c8bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030214ac-9794-4ee0-b215-d2f0d41a31bb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5abe229-b6c0-49df-b656-22bd279d4e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00700a32-4d0c-45f5-8d37-59dfdd5f3310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f55e74-4603-4f78-88a7-21cd18b68d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b17a891a-08af-43d2-b367-224b8b89de8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a93744f-73d3-4db3-aea4-f9ce07024fcf",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94de36ed-b94c-4d7a-8f2e-9fe0c3091b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f756706-2217-4e22-8fef-57ca06d97413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b86eb27-60dc-411f-aac7-8a93435c5414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ac21a7-fd30-4ed3-86da-bbe288c51d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f154fc-a30a-4f3d-bfeb-a58f51242e99",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d38dbdd-1792-47ba-b506-fee68d2ff317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df736e03-b771-42f5-89e1-0e239948d2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e30d9e-3fea-4824-99e7-a473636a7eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f14130de-0afe-4f53-8dcd-558b8a7c7c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7e9b8d-2eb2-4ed1-b420-f25f484bf9cd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0ac08c-d938-4f2f-aca7-9ba23e443c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8790023-1fac-46cd-ac63-109fe954a644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2754c7aa-e17f-49a4-8006-8703f48696fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f84395e-113d-400d-a128-e9313f6ebb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4252d997-dd30-4c4d-b7e4-57d259b01622",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7318d79-d99e-4874-bf02-06f9bda36085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e61f20-6215-47b0-ab19-b8617edb5b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e13beb-0919-447e-9bd4-7ab8ed6c921e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f905c8fa-bac5-49e1-b327-8f8d9e86706d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880bb80e-c208-4966-81fe-cad3717e8144",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3feda8f-293d-4015-9593-b986dc486175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4556b0-3edb-4e64-9853-86fc80342b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03448e30-4cc9-4890-b48c-42950dac72ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea6f00b-2f07-468f-8294-eecd04991e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b247232-3ef0-4cd6-9948-7cf4d1a4272a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0160bbb2-e1bf-455e-b448-8ed3364923d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd59e4d6-3dc9-47d0-9a7b-242c864e5eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21429f8-d6fc-4b8b-9005-0a3cda1f389e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6496ba4-2f72-4396-a01c-599b16ba14d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce705d8-f7dd-4882-a4f9-baa46d7c4e91",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaaff6f2-f722-431b-a07a-2f8a1921913f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054b4ad2-0b66-443d-a4fc-aeec25dd91e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb23fca-2d85-4697-ae6d-79e99ab95612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5344bcf7-b3a7-4a99-8432-1d6b1a12c01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c69eb4e-2f8b-4b84-be2d-a1c578706e46",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f612e8-533c-4be2-b280-55f733a4c423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adcb95ac-8514-4a84-a5fd-a37379528fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef21ce42-c240-41a2-8e02-e34a36c3f8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4e16a2-7e1a-4087-b6df-a2ed0f7d9557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c415873e-8cd0-48c6-891b-340b09a87c2e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956f96b7-e848-42dd-a943-25341bd861a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5982b257-057a-44cc-83eb-d1762b4c4614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27741df7-b303-4092-b6af-942832c39e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a605017-8427-4e81-9449-fa97059c757a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbce408-0eaf-4e91-afb4-91bf09f6ec12",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d81bb03-990e-455e-bf87-58cadfbdee54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73985ee5-d23f-419a-9045-574982650f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372d69dc-1304-41cf-af2c-abef0df59c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a3aa8df-18e4-4c71-a501-a9143dd71f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08140b8f-0215-4531-a61a-455dd3af2b81",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3a2176-9b8c-4e60-b855-df890fb08f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5c5a44-ecbd-4475-a021-58e801f71d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981b5221-5565-4e6d-9cce-ba3dafadf0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f549a31-5d4f-4497-a5f1-3d0f704ab708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f968bb-6da3-41fa-8482-b6ac77fa9dbf",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747afa65-285c-4308-af72-90dada968138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52f7860-67e8-4eed-8774-8ce3b23e9b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee543d2a-ccbf-491d-a372-a27392085378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd76848-0416-4f7f-8c40-26335d1be3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a7b632-4c89-41c2-98b9-a30d32fa5a2b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97c7215-3894-4186-b49c-882c700666db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1be53a5-9dcb-4276-b6f4-7eac905e4136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0eb175-f7ac-4cb1-8e03-622f524f1460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e108834d-a2a0-4d78-b601-192059926f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26836251-2c66-40f1-9e8f-533ba507e9e6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b02cf3-f1df-4b1b-ac5c-0474c480dde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db1db24-08df-4dee-85e5-6846945a0de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc88c031-f3a5-4f1b-9030-88a4b8f0e1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "191149f9-4287-40d1-aa52-1d09b0e23e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd4bd28-8c00-4df6-830b-68e0f5b5c1f2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adea709e-1843-4d63-b580-63e6d428ecfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f54682-1da8-454a-8e42-6dff320a1644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0fcf11-8636-45d2-a37b-44f826538c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c19ce94-939c-430c-b7a4-d59f21ab93d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac12757f-370c-4511-8fbb-399a543b817f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2718a3f5-58df-41e5-90b6-e052cdf4585c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa1524a-38be-4470-984f-abbeb85bcf86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebcfcdd-c7ab-4183-81b9-f94fd694c2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a9cfe4c-7be0-4099-9173-e67f8e2bb9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693593d4-b863-485d-bc32-e91efb59f816",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ceb668-71d3-4c5e-8056-cc3f111f7b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab2a5e44-432f-4cc1-801a-9256c5868054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80837320-5ecd-4617-9acc-5dd878845cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d0e696-5975-40c4-95f2-eea8e1866228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f467858-c7e9-413f-aace-a0e3003024af",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "244a2f35-a906-460b-88f7-613ad993be03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481b5063-c8c5-4967-9743-c2179140a149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaba6936-1b14-4afb-99a6-b8a07c74330a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b51ca740-6cbb-4e0d-8729-b7bdcf9165fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7825642-4298-4cae-92ed-38860c68cba6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43085b8a-59fa-489c-bfa5-3663a8863d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea89a3f-4d07-440a-9817-43d468c573f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15fc018-4954-405b-beda-be43071c02f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b33ad0a2-45d8-47a2-a488-2c965cabc8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a34418a-9fb7-4dc4-85c2-6b7dabb3049e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a86b55-7581-4eae-bcd4-e22ed21dfc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e222c47-061c-47ca-9988-e4cd34e1e1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328729d2-50ff-4ff4-b6e1-c0b9a1176cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b904085-aad2-4ecd-936e-77e571325bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a8485f-c802-4c17-9a94-c6057bd7f5c8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7815bef-7ccd-4ae0-b85e-acc2e6b4ce48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "971f651b-ad70-4379-9e8c-390389633e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e19f4cb-d33b-4079-91d1-32def5447b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f21d6949-b52d-46b9-9729-60857c270fea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "613a3f0e-00fb-4e52-8479-b2c25a50597c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0488cad5-8afa-4fc4-80c0-0e9f47611879",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c54c19-d0f8-479f-8805-a380c85298b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "944f4afd-b614-4ea7-871d-6c89d72f6260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62361305-b810-4406-9854-75a4fdb93384",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0585410d-fdfa-4ad2-9388-56ac0198f844"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c97aac3-ce30-48aa-b01d-46c193a286e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb804e4e-6922-4bc6-b975-9529056cd75e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8d3a0a3-75ad-4086-baff-f067fd866d1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "541fee3c-b285-40d7-a8bd-82c29a0198bd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dcf26eb1-3752-4352-a0d1-6909aa4909bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a6dd9c5a-7ba6-41c0-b151-a2c665786cff"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "620c9a09-fd5c-4bf6-9645-d7acd00aa3ad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b8b4c6d9-77b0-486a-9d82-9c72661d7fc3"
                }
              }
            ]
          },
          {
            "id": "a2513853-29d7-4dea-ae2d-a19598d4a0f5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d38e4255-0414-4bce-a327-bdfa51acb278",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e7f312e3-329c-4105-956e-d5ee90da6d68",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8564303-a141-4bb6-9201-184cfba204f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "acc2510d-546a-4e01-8d54-c5b824b7e01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1c0a86-6992-4639-8fab-004432157f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d79cf473-3d7e-4d19-94bf-ccf56cf5020e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4ee15fce-e30f-4ca5-be61-72e601a045ed",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcdd29aa-5ef5-41ee-84e7-a2bc9176705f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "654d7172-39e6-407b-8e15-7ddd78d5a77a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf10418c-c789-4b41-b12c-b05b5db2c004",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f24db717-e84d-4575-8bad-3d762f685c80"
                    }
                  }
                ]
              },
              {
                "id": "01bfa715-a2a6-48be-a8a3-7ede4b9f73cc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9492d89-eefa-4594-9eb7-9fcaededc95e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0343c758-86c0-4449-8898-1f68f669d49d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "512d7d55-187c-4ab2-ba9f-4718e29478de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3344b5ef-84db-4bb0-823d-b3262ef689f8"
                    }
                  }
                ]
              },
              {
                "id": "2730ee4a-8068-4953-917f-001caa906dcd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67127be3-d097-4535-a9c4-80bc0c5a021d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adcd8baa-9478-4380-8aae-2ece8344b64d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43c65f64-442e-473b-a82f-8a321cb3e871",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f96142f3-555d-4ed9-bdc4-6772d8c8b402"
                    }
                  }
                ]
              },
              {
                "id": "e4c66dfb-7065-4bd4-a91d-7a75a530c930",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ea81bc7-e04e-44c3-b91f-7564d2bb232b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d14bd081-b160-45dd-8942-ced3f68a43da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2726c07e-d2c9-47aa-b0e0-27bb2d21425f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "245ec879-d996-48df-a836-1956905f3579"
                    }
                  }
                ]
              },
              {
                "id": "c8a444c3-f488-45da-8a2e-c59c9966cf9f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc740351-dc58-49d0-8cb8-df879cde8ffd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61faffb5-f715-4376-854c-4c63e80d0b36"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee3ff5a5-943a-42ee-bcbc-5836b5d58593",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f2899a53-3aec-45ed-b41e-910796ee287c"
                    }
                  }
                ]
              },
              {
                "id": "96455c97-b045-4a05-a7ed-5a9cdada4950",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03265a8c-b828-4609-b9cd-62c5bcf807d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0da84e5-dd10-47dc-a513-bc46db759852"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6b7be19-99fc-4c96-b6fb-2ef5df0ab253",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e7487b79-558c-42ac-88a6-245a064f6cdb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "983bfd2b-906e-49dd-9cf0-86a4aecc67fe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b57b2b19-3882-414f-913f-332de1f4868a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f5e4a9e4-7350-48b8-b51b-008fffad238e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "554f7dd5-55db-45c3-9edf-d2ab7a514774"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0bda515-1a39-412a-96ea-511cb051aee1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "09fd0488-fdc6-4495-acc6-a120b47c803b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2b0e68d-ebdc-4fe0-bbc0-acb21267e6f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a91671a8-db85-4cca-92d9-89825c2b188c"
            }
          }
        ]
      },
      {
        "id": "784b586e-c539-4c1c-b41f-2287df9cab41",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "58fedf5f-734f-4e5f-ac21-15e201c94f17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a709b77-ffb1-4299-a961-e1639d80d2a3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2baf7e48-fabc-46d9-92e9-5570dc493775",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245e164f-3c92-4032-ac49-40b65affd90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db6411e-dcec-4ceb-a4d2-c639cc88d8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f235600-e34e-449d-a1c2-75bcf8c1a443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fae7d23d-66eb-4bac-8057-cdb83c063a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d29526-4a33-4031-a127-f899c54e5838",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbaf87a-2320-4ce8-9963-4e8a5ad24cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0974103-6225-4102-bee1-7c8ddac14326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbd20e6-a937-4cb0-a84d-e91a987fd870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e388ce-ad68-4692-a28b-7bfff7e00a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07502a13-01b9-422a-bdfc-67343d971cfe",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed999cb-0105-45ef-b7f4-f77b5929a16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a92886e-c451-4c29-a65b-180b77f9928a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba063f2a-2bb4-477d-b0af-d7da8257a617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98c9217d-378a-4f57-bcf0-a215f42b7011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220be69a-8035-4d6d-bd2d-f366bbfd6089",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef25477-a814-4e10-b9e1-2610af9047fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c486be51-02b2-417f-88d3-93ab4b55ef6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbf6ce8-3d65-4f49-86ad-e4851aff8a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99c9a642-039b-452d-a6a0-3748f21b863b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952e154e-e874-4bea-841c-7d0f563d86e0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b131b58-758d-4b9b-891a-fdf435535ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556c3dff-8723-44e4-884c-73fd6543c953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea48e385-125d-4798-87c8-646f88524eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88b17268-77e6-43b1-b6c9-0ece3c5acc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0bed7a-90ed-4570-96b5-99c5a6eaa90d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118d2492-45be-4aac-b8a3-0b6a61ef071e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71d7ed7-9a41-4647-9f7b-0facef9f2950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e22321-230d-4dfa-a957-843b92273517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e38488-7acd-4bb7-be1c-8790aaec9b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3420aa6-ad3d-4af3-90ae-e39139765ec7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb262ce-822d-4f80-b55d-1783fa1fa5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f995575-2dab-4206-b62f-2314e961651c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f26d3b4-f113-408f-9d30-2d224ebebec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e40ab3a-254c-48f5-b2c0-df7d71257a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf1761a-2ddb-4728-8a81-3c06f37ca9cb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700c2d83-132b-4a0e-8087-da1b619b9e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9aa2ee5-20a0-4085-b32b-7ba6e906f343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111ae8e0-4929-477f-9a9f-611feef03d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "957bd2d6-4e58-4ea4-b3f4-581fdb76e53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2007fe9-61e2-4cd2-b8f6-a7018c72cff4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e605c82-fd50-4ad2-a8e7-97c63cfb592b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f8e10e-2240-4e30-ac93-7d6b6d76a13b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8a3aca-8aa6-418b-9a1d-81fec74425e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e891d029-b446-4514-90d4-4631855b41bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b572e10-09ff-4cc1-b0ff-c780a414bf8c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca3feef-0075-44ad-919d-c7cafbbfb365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f5aad5-29fc-488b-8c53-50b98f721f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08a3004-7a3f-4de2-90c2-8b656dfa12cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0bfcd3-7059-47fb-b707-27d1ba0fe8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3305b3-b1e7-4bf4-af4d-9f517b6491dd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b4bb49-0d49-43c7-928e-740cc6bdd5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f812719d-8683-47c0-a909-b14aa4200c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618b8c39-0302-4a82-9124-3bb014f7811b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1af40649-20d5-474a-b7a8-dab8c3edcdcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d75888-0347-4fe7-8ea5-121b64a7790a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0563f5-f96d-4048-a97c-d35a88e9f4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab03a56a-3db1-4148-acdf-e4a1a0869adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6497fd62-6367-40d6-bec2-2ebb5abf95b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b02a56-d217-47e0-8ae0-d5190dee63b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bf4aa7-e882-400d-8cfd-60238cc3519b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f18ca96-16a3-4129-9364-e835c2719e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9956f6-b107-4d5c-8c42-382f2978a970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9363c2a-49cc-484d-b7ef-0ec1a877dbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c084a893-357d-403f-96d8-b91a0dadb471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf938d4-9d8b-45ab-8715-664b6cf8ed3f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ba41ab-8f9a-4583-aadc-e388064aead7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e19033-dafb-40c9-af19-f0e747a74681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abbe22d-6760-4e2d-8f7e-0cae2b6c44b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbbda59f-d4f1-4717-9b80-1e444ecba427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43e5013-64c2-459a-be02-52c90c654f4c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de85a768-8aa0-49c2-a886-8734b5b4fdca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9901e6-d1b7-40eb-a709-00809f2e1efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3d659f-e7f4-4f5a-9064-af3ebc6ccfc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb4dab90-8ee1-4e20-9f3a-d968da0774d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df47f03a-2300-404e-99da-51a278c14a43",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc079fd-6bf3-4bbd-a2d4-8b05c418c5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6deffc-0e2d-4afe-8f21-fca39848ebac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6627a2c-fe8d-4d9e-b7ff-785906044eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "aacc2464-2527-41d5-9d59-4a017330f510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6587131b-7462-4e6d-9034-0733944bfb88",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ffc7cf-c29f-4d3a-8748-b1b2c3347a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84875997-b373-4e63-873f-dd93a4e71ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17cb454-dfde-4114-ba5f-93bd184fa1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "15e4f839-0c36-4174-ae70-587cf6ea4173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b70d89f-2588-4c5a-9d99-de85b4e945fd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2269722e-1ba1-40cb-9645-645a3bb3e768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72bcce9e-84f1-4d78-94af-a961e5bb47d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880f1ac5-81d5-47fa-bcaf-1af5591a509e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b123f3f9-fd1b-4c36-b4a6-c171c5efb52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7eb553-d37f-4df0-aa0b-5ca6a5a3d5c0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6a7d0d-c3eb-49be-b91b-8dec9f2a2bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07dee0e-eadb-49a0-a81a-7dcb772530ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c519eb2-74ed-4b1e-b3a7-c03f6d621a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6512d395-f2e5-4463-94f2-f253f1bb49e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834d4fc4-0998-4328-9e35-cb7df31986b5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4676bea-8c67-4f5a-acfd-b7b063ae1e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c32f673b-1954-4e48-899b-5a5667733dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb55cd0c-2d5d-400e-ae58-948b89a60a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8510a8a5-ce2e-4230-a07b-7db2b9f5af26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4348d42-e5a3-44a4-8511-e631cf020ef0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec04f7b-4b17-4783-b712-4127963a322d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266c3abb-5b77-4c33-b774-9a8b401ef659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f93cfb-4cdd-43cc-848b-8e1823faf2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e653459-22d0-4c1c-8d11-ed2f786c9184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6fd103-3d47-4f5b-a46b-b62d1626ee97",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0410799-dd74-480b-bb42-943430a97752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb929f6a-2d51-4bca-94e2-a0711e8daab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954bae67-5a61-4d1e-aa81-2abf9771bb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5537cc55-c247-4c86-9bc8-165b049b3476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798e01ab-6614-4073-a952-d5c324ff65c5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5414407b-1a9d-4f58-a070-59525e7afad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d79e0cc-7ce0-47eb-99e0-180b18c54105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110997cc-6e54-4609-b24e-b32bed72090a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed51b3cb-dd95-4fed-9a0f-cada12580641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6607e427-fd00-47a3-babd-6d4a89aada7d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c171e81d-e566-45f5-a6b0-9fbb6139ac63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73379fc8-689b-4ab3-a89e-5b4850458198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadd028b-b211-4d63-abcc-a0f579b0256d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2659ecb3-ed1b-4fc1-a35d-84aa0f471a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e49f727-8e07-408d-b688-e1d59ddd251b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4f9d7b-c78c-4430-bc27-2133b67aac9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d133699b-793e-43ee-8ae4-6c664b3d3ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5aced9-b676-4d5b-8d6a-a6cf3818e100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "040a3a8c-6c0b-47c5-b78a-7fa970375b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1473175b-79a2-4a74-bdfc-f34d15576d41",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c7572c-c78a-4e99-af06-5ef8586a634c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0608f01e-052a-4cee-933f-f98c08dc5fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2eb901c-851b-4403-a246-b04100dfbbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e702c5-8ebd-47bb-b037-d9bbce3ede5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1a07f9-9ec1-475c-b05b-f0e2a969da53",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de4cd61-35fc-43f5-b6a1-33539619bf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "879e4b19-1554-4719-9a5c-83a2b588f075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc170ff0-dc26-433f-8e7a-c9536f0916a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29442d2a-f734-44fa-aa2f-03f1c572c5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc99053-9e3a-4846-a0dc-14990503b79a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ce2ee6-a5b5-4eaf-8aae-fad216e9cbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a13ac5f-882d-41b8-aac3-62ae5a926008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc52215-ee2e-4217-995c-e8ffbf0d82a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "197e0e15-97ee-4a76-868e-a3499049840b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fb58c3-ba11-4283-bdff-e08ca8b80eb9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80c9beb-b63e-43f0-8c89-926f4299a054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b13aa41-98cd-4c9b-ae57-6b7dd2acd7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f02c7bc-7bb7-47b4-9543-4a719b099972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18e7df6a-6bd6-441d-a52c-3beaff8ee5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd488ce-db7f-46a3-90a3-d34c3780e26d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d74ba8e-ffb3-4277-bde9-d085f16dad1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb51dff-2fd2-4e81-8d88-c7760c2c7331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2477b086-28b0-463a-be88-8ae2c0f37a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5635d670-f943-4110-88d8-40cc888ec9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfa19f1-28b3-4343-bb65-bd0297cd1ff5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00cc282-fdb9-4d9c-8d98-2b910a5d563d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2412951-d433-45fb-bd11-ed2d8adc4ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8cb432-bfcb-4e81-81cc-d1f97e31d2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "979984c8-0360-4a22-9256-3ff40a46075b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5db21f9-1b9b-4cfb-a5be-ba065d15783c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1299f5df-de7c-4122-bcc1-a3db6883fec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f451d28-053a-4276-8b20-1fbe9f28fef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd04e52a-3b7c-4902-83ca-2539b3cd0fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "943c7507-523f-40d6-830f-b0104e97565d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "31a07135-ce18-40f0-a6a2-c954c360e8fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6c15a86-d0af-443c-a1cc-672aff65a13a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbb86af-8930-450c-a0be-89daa78f61b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "58762a69-872b-4601-9548-23af493800ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b72bf1c-1b5a-4c72-aa2b-c659a09fe679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "579406d4-bc06-42c1-9757-558a832de6cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff44bb57-bdeb-427b-bbec-3462b1ed9fc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "990aa6a0-0cec-4b90-b5e8-371634e26a72"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c234e5f-448b-4f74-9159-a852a995df24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04a3716d-0cdb-4399-a89e-09f5fd232872"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31451c54-bbaa-4899-a6ec-479cdd015a68",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "378e477b-4e03-4312-ae94-ce385e5d381d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "108e7f20-5451-47a4-b793-9c2fe33d58f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a58bcf2c-a720-42f1-9784-e530e47a828c"
            }
          }
        ]
      },
      {
        "id": "2e99aac2-007b-427f-bf80-35af94ee68b1",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "450b4051-0278-4e3e-875a-92d7ca1cb618",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc27b5a5-e7c8-47cd-9e38-75fbea707929",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2da5e043-f760-456d-936b-dd8441ca9779",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886ec35f-d362-478a-8d67-ea80e494c9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f00266-a2da-4636-960a-0e61bc5a592f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f8c9ad-8ce1-4a0f-8164-44c5adab20e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef33716-e681-4c0b-942e-d2d2775d97e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff8e1dc-a68e-4bc2-9557-2bf9fa3b61f3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef7a096-c894-4b75-9465-d8652fba9f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd593fa-1603-49f5-bd39-48be88891454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123cf997-006c-469e-a3e9-2bbe13f2f121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5f55c8-3642-40f3-938a-18998b43babc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee874d6-cdd3-4d23-91fd-a0950a3af952",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b0060e-7982-4845-b1eb-770a08292876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c52e08-74de-4d7b-a5cf-d26347065b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf30b288-2fb9-451a-b74f-4e9058b40c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2cec716-0159-4438-a380-a6c17adce9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6d039f-d572-44ea-905c-20a9ea51999f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e06d47-83bd-44dd-85a6-69ba2b3bc050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b66ae84-2e6b-4b63-bf37-07cb22bbcb28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f7312b-d848-451e-938f-c8a4e4652cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "215c88d7-bc9c-41a7-9ad2-83d5cfb520d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f394c1d1-da0d-44df-b795-632fa099e440",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1b48e9-34b6-4645-9794-d2db1903d7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3a5b36-1522-4f47-8094-e060647118db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8892eeef-20d3-4a30-8e42-8bad529a1ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "540307af-9656-4524-a5f3-06526b50550e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3b8369-0fb2-4be6-aeb2-4c632ad8a2a3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f10430-1733-4283-a1eb-b5e72dcf96dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318c5c8e-db3b-4efa-9f40-86df66bc5c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43abd13f-47c7-468d-81aa-f8efd15f747a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a483076-d232-40f1-bd9d-fed3378bf256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac87bce2-4798-45d5-af14-3938dd8b32c5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2ca5df-9080-4ce2-88ed-d2b9342f8c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e443cb73-8e08-4921-a858-cc2134e168fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e04046c-83ff-4219-a82a-28cfc52a79be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec96f258-2f6d-4489-a9e7-8b92214fb479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4325a0b1-ecd1-4a2c-98d6-a4071183770e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9793ef-fc74-4379-be45-fccb49640a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097b04d9-3934-4420-a981-e19c2d010859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c48960-5cf4-4afd-850b-288dabf8990d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "762edf57-2e3a-4dbe-873c-5b14676767fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbacc81-a04d-4ebf-9269-b47b33b13bb2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d693ab-6c6b-4851-ae27-aeddea7f77df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655c2cf8-ad8c-4fe9-8560-feeb4efb5dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1109692-b23a-4678-990f-b912ec4b250a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7834d040-fdd2-4a8c-8b70-c9b39996c3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd49a8e-2bcb-4d2f-8f36-6f3c7cfa4817",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada7c89b-b397-42b0-8691-fa36e4340c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01c61c3-31ae-4328-8ff1-abc27f114515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810ad19d-7da3-4dee-a3ed-17cf8157c2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f183c3ba-01bb-450c-b1a5-d0fdd97ece4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb73c35b-7327-4c5a-bff2-6f4979360310",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead12bec-2433-479f-8e03-84bb2849cf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9299283d-8f8c-4cb1-8884-81e59d68f3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae44d23a-c9bd-4525-b495-0ef9fe4d314f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e5a9ffb0-03ea-49ea-8682-3b3276afaa9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49347c3-34ba-42fb-a3a8-d2bcc5a60a10",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9d385e-c095-4a0c-8d56-4b7037e4a67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8b475f-64e4-4f76-9e19-db158ec4c8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b312865-ea42-4911-9e0d-a59f6f470175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91c62ae8-721a-47e3-b0d5-8db2d74ec662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f68237-6a97-4d85-b927-b34daf9f6a28",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141cec76-2c96-4102-a7f6-c632efb69496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6af0ba-b28b-4558-a082-2be4e34adf10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0caa5387-d4c8-4f11-8a62-56aa319460b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19efb52c-881e-4c33-8c66-b76bb68c8287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39a0bfb-37f8-4387-8306-d02541ed5cca",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb9f688-c059-4bce-8b7e-0d775a229b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbc3c2c-5d66-4bc9-a479-d89a871c7b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded12be9-1072-4358-b0f3-3294bbb5fda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "472db112-11af-40a6-aaec-cbea7922d059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e716e4b0-b80a-4a5e-893e-d0d37ad174d0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58370952-2ce1-47bc-8e47-6fd0501acf41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47d0012-b3b6-44d5-90fa-bc64cf3f8603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438a868e-e439-4ff6-895b-1cb879856679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9392ca44-fa61-4df8-b95c-6784c79e1eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bc440f-badd-49fd-9210-f9ac7675367d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff543c6-2a22-44d5-849c-1def557beca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec133075-2277-4242-af82-12bdafa0e891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d852ffab-4efb-4d1d-b773-f79396cda1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea81b982-a358-4ad3-9780-9c85ea65554b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7d7984-af61-4952-9daf-e4d79dbfc01b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5779c17-c7d4-4099-811b-74da008186c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f166a4b7-c48c-4fcc-b558-6c56d562c9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e97db4-e2a3-4629-bf6e-7aeac85b7606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a13c6701-cd33-424a-b524-ba38b5a08fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518cf969-bc76-41c2-a6ba-2908ad70169a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755b319a-d667-497b-878c-43ffbbc88c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04b4539-0e99-403f-abba-de1c0123231e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1ba338-9262-41fc-ab5f-3a8e2d7d0410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a478e0c4-3562-45c4-a780-000a49ab3033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780ef116-a327-433a-86d5-783d7be81db9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76430159-cbda-4d1c-9df7-470b3989ab55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b459fb-cf94-4dcf-b083-9ded7280bab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07eb87ed-8502-4e49-abee-ae00aece4271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09d1e790-379a-403b-bccc-3cba397a5667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb5c3c7-2b17-427c-8460-8985cc260f78",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4117a4-87bd-4db0-9fd8-a0b69f22bc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b99dee-db84-4948-ae8a-54d952167dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83760d2-eb11-4212-b05c-43e8d767078a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "007be697-f71d-4280-9e6c-c136a894848e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db98925f-28b4-456c-bffa-2cb8e8cbb840",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a093a939-90c6-4a1c-af50-94ca3f94c3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0cb8dbe-47f6-457c-8f9d-da1d3565afac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b3b955-2d84-4513-9cbe-dc735f410349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3efa41c2-9245-426d-8fc5-a3abad3deb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabbeb4e-11b9-4a11-a5c0-ebffc959c567",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ec57d9-dd07-4a40-b558-940a00670bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271276da-e450-408c-a72b-a8549a00574a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c553ab3d-b748-4200-b638-e93027aea7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fede74a-e4b5-4a49-b0b2-8a3ab666c0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3790f9c0-24e1-4c2b-bf4f-f886df0e4aae",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea30ce3-5f96-4e8e-a35c-ccbfdcff4de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b6c170-d8f6-49bf-98b5-992c2488dc6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6f660a-365c-4622-9be6-dc6744d5875f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d5a05c-f502-49a8-bcff-3302a61b3110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafe8cae-f03e-43e3-90fe-06128071fb23",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e97e440-a4e6-4804-ac03-c551ddaf9631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde389fe-48ca-4093-aaa2-0666d2620cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66700611-2333-4c8c-8dd0-0aba303bbfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cfd592-eee9-49ef-9857-70022305e6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a96159f-de72-4e80-a51c-47c1fb3af6d9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc6b8e1-022b-4a3f-a478-b3115aae1db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6a46c5-bba4-48f4-9608-0892e11eadfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcee1e8f-4673-453d-8d5f-206e2cf36850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d9380d-dac3-47fa-9674-f40b78c83b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c6ef2f-e8eb-41f7-952d-d8ed7563b886",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5353ed0-7ee4-48e5-b803-68fffbc31e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c00118-8618-43b3-99f2-42eddeb019e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fb1b92-77df-45c8-a59f-8995703b05c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99fd37ae-9228-4cc7-bebd-40c9e4f7ba83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c65073c-8dbd-4c88-b94b-752431c22e0f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13a7d8d-6dc6-401f-8e6f-ad0b0cb4e7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05b4c6d-efe8-42d6-8f50-c041f9501509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e685368-9008-460a-be2b-5806878ee1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4a0f94-ac49-492b-af24-4316efdf035c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063274b8-0cc9-49d0-8e72-2f8920f1f087",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98169ad-ddfa-4abb-8696-b2cf00f0a19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc924ad9-522c-444a-9b46-11ba765954e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a2b76c-d75e-49da-8909-4d9fe97d7595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c2dfb48-6989-47b3-97a4-80c9c5e774e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ba3c1b-9c57-4299-a269-a403529e2f79",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84744489-487a-40ed-863d-ac54856ef5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee30a84-aa80-4846-a198-6c93ba0c8089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f0319c-f1d3-4631-8aa2-ecb4446c067d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "074d16c1-e2be-4972-8929-0063e2cef690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f459ff-d19f-407d-91cf-9c686b2ff996",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19340865-d6a9-45db-aa59-9a6cc5197bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dae9c20-d9ca-405b-ac2e-006c6cfef2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818b115f-b2e8-4a36-b97e-fa83ff58fea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a07d7d7-80c8-4056-967c-348cb1c8c182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed8536c-95ea-4a5c-8588-27f8cc2f6ecc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26773db-239a-438f-9be4-ce3ff23a8789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a88bd6-d67a-4f8a-a0eb-4550e10c58fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ee6dcc-dcbd-4d04-ac0e-510e220c1542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "487be041-a1b5-4ec3-83b3-a5962b5f1dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1e1710-6a67-4630-8aa2-5268c48d3ea8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc36893-8ce0-44d6-b00a-c65aab825454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3974f55-11de-468f-aa2c-32755a568135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcf06a7-8ead-488f-98fe-04a2c14d0014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd14f90-61b7-4ae9-aabc-0c2fecb1357b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c575a2d4-ed11-4814-8cbd-4b33c0e915f8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a704e09f-41a9-472c-92a5-b8c002076f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e3d26d-b7e0-4c63-af66-c92d739680aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b40e27d-2953-4c43-a364-98185e47ee3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d170d190-6675-4ea3-a672-66683d8569a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc97a0ce-a182-4f35-9a21-18e50a1e20cd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b34e0f-fbdb-4a95-bbc6-7156d5cb0254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13fdff06-f990-42dc-b734-6f741abf443f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba5a878-8bc6-42de-b203-6eaef15f84de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15c23f65-6348-439a-bd82-d17b4ede2015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1344ba-5791-4ccf-b0a0-56af3f76424c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8b29ba-ad1f-4687-9eed-ca4a31967507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bdcbb1b-cde5-4a38-b9e8-41368d1d8d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9b94df-a39c-4b3c-83d2-22ac73855f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a36bbfa-c5f2-437c-bb95-7aaba7538117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dab4715-c01a-43f6-8825-b2e13149e6b7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b6af99-96c8-49e7-bdf2-5535703962b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf70d719-be99-43b5-b522-81bf4c4490dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293d13f3-9edd-4f8e-b443-d24181f1782c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4e5e5f-f201-47d9-bf47-5e1488fbbd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365f9e77-767d-4c2c-8670-3e053d364dd2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf7bc33-57dc-4aac-af1a-cc8353e6036b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5129e96-da48-4863-a27b-74dec6bc1f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a05ab60-2ee3-4594-aa4d-2b23eea295c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0fcd37-0339-456e-b096-2d0775c2c738"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "547af431-b98f-4fcf-bca6-eff3b051efd4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97f5ee71-7da2-4766-a8f6-a98d316b87d0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0a414a-c101-402e-996b-bd75ca550aff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4f1dacb2-ea4a-4030-9b41-203bfd4c5ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1464ae2a-b47d-4c9a-ab21-1274c13a3048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e224ba2-5d8b-4210-b4d0-4b350ca5fbd5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f3df7ff-5821-4180-9b9a-b9699515882f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "833897f4-2bb3-4576-886e-12fec1d9f44c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a93916ee-d86b-4baf-bdc0-15169d356795",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a45f5ef-5a5e-4f86-b395-b596ed70e08e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39e483dc-0571-4812-9731-b2b2a22c27ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b453c112-d3b6-4f84-944c-2034d971560b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f17339bd-07d8-42d6-9c2b-337d9bf9b63d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4b8acc3-254e-4cca-83cc-a78e0c90aaae"
            }
          }
        ]
      },
      {
        "id": "3b993f31-559f-4458-9a29-ef2825a62ddd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "85501c64-513e-43be-8b92-48094a6e6c0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8429d4c-e6dd-42d1-aff5-06e98ca63be5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "521df762-ffd2-4361-8cc3-d4f56748bccb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9024c695-97d5-4267-b520-47cd4eff14eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66716882-d778-4e54-84aa-7f63bb0582fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b082700e-248c-4a19-97a9-674d5fce3e82",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa085498-c02c-4dd5-b785-477ae9ce032f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "509a7b7a-95a7-4958-a0d5-1348965a5d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6272619b-784f-4be7-9849-e9bc660e5056",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8056fdce-fe38-4e2f-93da-9f7515d0d4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8009182b-1186-41ab-8706-a62f8f3b5e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9414db-7b1b-4b79-b412-668ebcb30470",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3522bd-1726-4e42-816c-1053aa7b6f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40eb5bf9-355a-48c7-9398-f93eb55d095a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0452c66-0df1-49a2-93e2-13f9444c191f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284b01f0-eed8-4870-9b68-26eb667a6aec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e276a77-4f04-4014-a22c-f2492b15dc76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab592f75-14e8-406b-9619-0218a4187085",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5d67c0-4f42-4c24-8e2f-8abc05a59952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc8af8f-6dcd-45ed-aa35-31b1a0787fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d55592-d10d-4cd8-a22f-9d08fbc51444",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a06c997-7857-4b32-b763-65679a592b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63e20e1-7a0b-4a50-89ac-b22e114206a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "023daf8a-96a4-47a2-b7e3-9397371ca927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f518605-8c32-42a2-bf49-caa949890569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a860dc-58e4-406f-a757-1fada6d1d07e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a91385-e5ec-4ebd-a835-af5d71d3bb26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22a4af2f-43c1-46fc-859b-08201fa51a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798e817f-2b97-4cfa-84b7-7126b761f153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e2f202-9bd7-4ad2-a8f3-0808850f2a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebaab18-7cbd-441a-b70a-75b6ed425213",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e3cff3-d3c4-429b-97a6-5ab9251038d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22b6c833-d0c6-44f7-83f0-28ef548ec70c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5403e10-6bee-46a8-b7d7-6c7bd58981a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39daa9bc-554e-40ce-bc9d-1e68a16d03b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f69684a-0f73-4455-840f-5f3c65244558",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f07179d-e071-4026-9e22-d195ca916092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9e4d318-16fa-46a2-a47f-ffdaffc63b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58dbd36-3c3b-44a4-a992-063ee88f3a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86445786-94d6-40dd-933e-b3efb13bd213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3666c3f-f239-4c7f-8db0-8b19e251fe72",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dba11b4-76ab-4a56-b66b-8617ecb48f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66311a64-c7f6-45eb-94cc-38940007ca4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e594378-58f9-4d76-9604-1e67a57c43a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de9e55b-503a-4f6a-8606-c0ceed722e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ba3b1a-2688-40b1-b41b-b135fb527411",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f1a385-f33b-43cb-82d5-c4f397ae30d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b9ea449-743a-4eb5-a4ac-6165ad7e8f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cba7bcb-ac8f-4229-8a41-190e4b055dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3504f91-917d-40a7-aa58-0344eb221335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39b34a2-a8f3-4974-9cc9-c22cca077aec",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fe6c86-5c52-4a55-a6ab-a06db5b1cc18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ce72e14-b0ed-4128-845a-b1b5e0d2351b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f17ff3-741d-4d2d-8495-91bcf385b599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4821e7c-e73a-4476-b251-d14de811e8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306504b5-3fa3-49f4-9487-0919dae2c653",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca86c56-fc1f-40eb-a6a5-0e96db4400db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21613ea0-44f3-4b85-8474-3ab0fc8b8354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79f8a41-eb93-4528-a39d-4f2ee4546a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97ce4f1-da25-4b5a-b240-6d5ad53c0946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7a58b3-79b2-4bd7-8aa5-a85bd5fc9402",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eafd87a-b05a-49c2-a7aa-7e67379e1fe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58d05405-c1fb-4cb6-a077-bbe23c8c2882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daafabc7-3521-41f1-a8cc-2fc1789c4d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d9eaba-5fd9-48bf-8588-83c12069c5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a662e6a-9ece-4a4c-afe7-b4fb993a3e84",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d86cc3a-b885-4fa3-819e-1b548e5e4501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccbad5a2-0303-4158-93fb-b1c5ca646913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffac310-9076-43c8-bac0-0ede79262d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb9c5d7-883c-4511-90a0-a18bfd59f9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b6bdff-7066-4cdf-ada1-f0bd0d82d3b3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068e7672-1bcf-460e-a79d-93f34c84be33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8f8dd0-5009-4c51-943e-1fadc6e6ae48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5403eb42-8d26-4bd3-8a22-9398960c6d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c234ab52-43af-4c97-ae67-d5f260302a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf8073a-c6db-43a3-a869-3ce4fe416643",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ffafe4-e173-46bb-8865-c17bfd1ec385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b6feda-1177-4273-b412-660f12cd9393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90cac537-15d3-433d-83ac-1549bf35afa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34bc60f-caa3-41c3-8345-cb2410dc6ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a856a2-d00f-4349-8bbe-2887468081cc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260f07a2-41a5-4453-b882-dbcfaf11fb3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555beb66-744a-4330-9ac4-7c4360ca49e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c117fada-f72a-4696-8190-2f5eae143238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc1b012c-0a16-4d8a-b28e-1e72db06ae99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46c5906-d860-4c4d-b94c-f96ee919427a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6f7bac-fd5a-4bad-928d-300deb1c460e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b338e4fd-abed-4c48-991a-800e3f651d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b338ac-1a88-4d9c-9b3a-42e4f07645af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a51acf-f22d-4697-b3a7-86dc2914284f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e4d222-3602-4f2d-86b4-21f70b3eba4e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e51f03-aefe-4526-bc08-499efb93bd38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c091aa-9f23-4113-8534-06bdb616ec80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91434ecb-49c5-4b8a-bf56-da2012211ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f0b431-8857-4069-bad5-d58d9cd748c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f933762d-3fdf-4f0e-91f2-c202987ba85d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1004a99c-6043-449a-8470-bc7c9b724262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c9b550-f46b-495c-9731-9358ea87350a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e3828b-0330-4c6b-9eeb-0b925cd30de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7909c57-e99b-4a32-9c3d-de5b0ee81203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622a59a7-7dd6-4b5c-ba9d-a444bd0d5769",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388745a8-0fb0-430d-9076-f284372b537f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e818f3-9440-4de1-b443-23021d45d577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "941bcd24-a961-426e-8767-43e82d7e5f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ecd0b09-5502-4412-b905-9446040c5f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa9f25c-6ee7-4e21-901b-7318cf8b3ee9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0d167c-03e4-4705-b36a-5f0f7a70c352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ee30267-a589-4744-9ddf-91c3c193cf1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80802dc2-41f4-48f1-846f-c7e7dd0c70c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97bb0c23-ae2d-4a1c-9334-b84800a0ce3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168b8e85-5fec-4866-99e3-364ecba232ad",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef63933-c534-4351-b97c-a7e1fc58024a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce9cf43b-1aa5-4bc6-a2d1-8d5dddb9e7bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d2605c-f6a7-4cdf-90ca-a2ba7df1eb0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939ff51e-7391-4c2a-8514-967abe96124e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c34ee68-6e3e-4cf6-993d-cd0ffd75b6bd",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c67ca5d-d016-450b-9252-5b56af2a5ced",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c9b8a2d-6af4-4181-95ae-8d97981435a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc84652-b984-4866-b143-4869ae2c0199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c2d4f42-4d4b-40a5-b6c0-d53957abcc16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4e9722-3be8-45c8-942f-2a5e3aaab278",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a23fd7-6b21-438d-9ec8-1ee54a304dbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c77bdc40-f142-421f-aca2-bd51ecf8ff58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffddedf5-203a-4733-bef6-60611ab9fda8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b84b95e-e01e-40c5-b23c-97cd8898e706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca722f85-86b8-4893-8ebc-24766aba8398",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1001d470-856c-4598-9881-41423ea7f07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f505402-f1f3-44b8-81cf-c28aa127baa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf989efd-278d-4dda-8ebe-75ee24de944f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d18d7df-e8bf-4b05-a756-e0322b9a5fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d63fd3-a9ba-475f-83ce-289c5969871e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d79002e-03b3-4c00-8490-c09c12aeeae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f172c25-d1b5-453e-87e0-cbed645d1c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d4a81d-4043-4f00-8116-7a7953f6d86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22bbc9c-2550-4fc8-9f2c-eb03ce21ef5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4055b3be-ee2b-426e-bfad-a934cb5303a0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d226726-86b6-4b4c-b767-2adf1b622057",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e316c38c-a533-4081-8f3f-ab7934c14c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f63a0b-dd80-46c5-9007-1c693798aff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e463ce46-ff81-455b-8fc5-28852629e36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d56a28-df62-4381-8736-5154778e52c8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab95320-cf8f-404e-a61c-678eb20b1d93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d772aabd-baa7-4a9e-8a4d-93f68f6578a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0452ffe0-2908-45a5-8bc0-707f8e0747c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36898bc9-6b45-4bb9-853c-489f2e74fecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d38c67c-0342-4a47-a220-1aa31ec9c982",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8090fa-5845-43f6-9917-885ecba90176",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2090b031-0dc6-420e-bd59-9f4b4d1bcbab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a69a02-94c4-442a-b0c7-c1742d9f907b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9726543f-044e-4bb1-8ed5-69b80b165c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b504bf-6710-4dd9-aeff-a59743a5f3bc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469ca923-77f4-4097-a729-0da98ee62b31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93d34a94-5c28-477e-ae7e-0697ac9e8dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405361de-90a1-4a69-8b0a-47c67b9a37ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cab9dcf-7e07-4202-bcd1-916a1b37e914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e835c5-0c80-4960-b936-d820879b304d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f863fe-0da4-4a40-96ab-aa9ac0a2412c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38492aa9-0092-45a5-a67f-7ca7fc594611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb900dc-0790-4e77-a66b-0911d816dcc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1420842c-3f58-4eb4-a861-8394118429ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1886b591-70ae-4855-aaa6-1820a1f60f73",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee68060a-a9c1-4949-b7b6-37494d025f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a51202b-481b-4818-bb73-0971b26a3a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0232b56f-3a54-41f8-9f9f-5349c5ec6d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe73b66-cd76-4466-8b46-feaca1713faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdb4e12-8295-442e-a00c-927e45de641d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ced8ef-d54a-4a97-ab31-c82043924bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83b9a7c-6c6d-47b3-9df5-224b290165fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deae4c6d-0eef-4586-b13c-80798327c14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8779448-ec6d-4bf6-a445-372e31c54cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0e348a-0678-4edb-aa25-ea8587403617",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2577fa07-6de6-4ce1-a8be-3aa5f91d15c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7251ae0f-2185-4e96-8035-1c96f3bf6fbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c124d06-86d7-435e-a5d8-d8ce776ee211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93034b6-2405-426c-90c6-274c08e7478f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a95a3ac-6149-4244-b82b-df8d33a140aa",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c915d94f-eb28-4d39-85ed-b943b6fb21af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93468363-88f4-4c88-8c6a-caf53ae366f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04ddd24-78c3-4314-b0e1-cf2db823546d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64b0fb7-e2ab-476b-89ac-b3650de5e521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f173a2-fffd-4691-8582-439ac2100d4f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f12f34-b88e-4bf3-963f-1b42c63b8471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9d78eb-0891-41e6-a954-ebe5630bf26c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6117685-7a19-4adf-9e01-f096124e7eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec68c13-5223-4eaa-a522-1ef481e7dc99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd7c3af-f72e-4805-b396-ded4b48214cb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3a4819-8e76-4b90-83d9-e690fb2967e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e757fd-3af1-46e2-9e10-3f375c1c5838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9a27e0-f861-4aa8-bf6c-1764ac94d357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765d5f59-6d0f-4895-859d-48bcf07c3108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d18efb-dc3e-4ee5-9dbc-0279d88f4e12",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f89d452-32fc-4fe8-a8a6-9324eaeaffa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057710f6-57da-4add-b59f-431f4aef99d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed2e76b-7fda-41f7-92e1-d8ed41372e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1e54f4-2fc2-45e3-90e6-0274edcdb11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4a5ce7-f46a-444f-b011-017e8a19f917",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5d7d0c-0195-458b-a11f-d4a331c79cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6c20eb-ebad-40f2-bc75-fe2ff65e11b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ccd86e-c595-4a11-ae76-02735059bf7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db43bdb0-1091-43ae-9614-f43c956705d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9aa082-74a5-48ef-8a3a-1fd17e808e5a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38337f95-eee8-4a3b-99b4-8f75dde9c0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d02c87-6249-43c5-9594-f04597289c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5355fb4a-f985-488b-b24f-5fe65e542641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a40402-6c8b-4daf-81ab-6b2db7b6f392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd78e3f-21d9-4bbd-a4c9-3a36f1bac74e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360651b6-2ddb-423a-a8f8-d2d907f7be40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08fabf7-92b0-4101-aef8-9a0855a3eac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ea19ee-8288-4886-902d-0a70ff78b437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfeebd6-0d8b-4634-a103-4fb400eb6c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dae4a1-a3b7-40c4-a7d3-e92a0d07ee29",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f575e40f-d2db-47f2-b63c-ccc1b733d2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c177f1f-d1c7-458e-9041-41df264345fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc80f03-018c-4b4f-883d-09e6124628de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8fbeb7-6942-45c1-8a7a-3bcb0d24eaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7a6cb0-be12-4ae4-a370-a4950e767304",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c282bb92-7a28-4d02-bb34-1c7706644f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6411732c-6cd8-41a6-856f-872ac836478c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0190ae51-bfbe-404f-8a32-ea8a02819706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777ab120-50e9-420d-b4a0-a44beab37de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd04a0c2-89ee-44de-ae78-0bc1251a3586",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c6debe-a047-4d2a-b1b9-78b118f33125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8587f9f8-8aa0-47cf-8dd1-a43b7ea76db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d411f4-aebb-4117-8e3c-7e0e09fffa29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d7b0a9-7656-4b74-97fd-81459711cf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ccf57c-2e6c-4536-99ba-9f5e10459628",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb050a5-943c-4447-96f8-f38afb9ff35d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f4dbd5-5802-42f1-8d79-4d686c7f4b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fa88a6-9b98-4735-be03-10d5fc5b1849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1fdc029-2c6a-4634-a2e6-6824c2a1cc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5817d8a9-9dcb-477a-8b87-d0eddb47c9f6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca85f82e-911c-4cde-a0f1-cb0f4aa63449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c262561-5c51-4655-81c5-89608ce47bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d659fd8-c6c0-4006-8f85-549739092594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b71a04-d2bf-4128-8c8b-8e2d860da3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68b4ace-1310-4883-85ec-03f9755aa796",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0f126d-66be-466f-b3bf-b0b70bfe7418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0976c1-5b6d-41f0-a7de-3fd7f8fcf865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bdad1b-826a-4179-a13f-9c8976f9599d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c131a58-3a39-42b5-8ac7-df836cfebe51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a4659d-7374-4c26-bfd3-ab99e56459e0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d321bf-69ab-4e70-b19e-7fd8d5c84ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed58d1b-a188-4f1b-9c13-d9ea3b56ab4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b316cf2-4638-4ec9-8299-669003b1e5fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c795b0-7a1d-4b5b-a0d8-836833eb73bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5220668-b343-4fe4-aa99-6cde36555726",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a6300c-31eb-4378-9b35-4619f29d338b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "175eaa0a-d0ca-4e42-b740-c7a2529a554d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ddbc02-daa8-4d66-b43e-bbc740f91308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeba153b-5963-4590-94ed-d1e32327da63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0ce38c-8b42-4880-bf37-de241652aef6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb767735-d3bf-40f4-bb03-b9d0b4addd54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1802d2-1117-410e-b2ae-1e3123b7b60d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29dc8d56-017b-428f-915c-95915d71eba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba8f2bc-02b9-4c04-943e-e2e4c1463647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a974df69-98e5-48d4-b2d9-b35eedbc0d5c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09be3b64-aed1-4546-a496-b73f94779a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853de2ff-8fc0-46ff-ba8a-1765c9cf3400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93532753-af8b-4e52-b9bb-08a39fe6b08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b772688-c42d-44bc-a80e-147fa663610a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae7c5ea-e4a4-4376-88e7-ffa0ab4a08d9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5e9b60-1fef-44ae-9b6d-cb3a1da2f538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6266f6-0e67-4833-bfaf-39f0debf0907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f5b9fc-fab8-4687-acc4-49e42b979ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7561dc2b-d3c3-4022-976e-74a39f0f0a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064ff514-9770-4fab-94f1-0810acee66a7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a9e7ca-2c81-4016-811c-5ba28c5a94d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79fff0a0-4efb-4282-be7f-89b3d1beab2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1787d515-4c66-4aac-81d2-c6176cb7e163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f59cc3-cd10-4563-9d50-b290c884e6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd95206-1793-4283-a6bc-70b8b658dd3d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cffabf-a4f9-4b10-a7b0-9934df3c39a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463c4c48-febe-4344-8f8a-ec8631a4497c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce02090-6886-4158-b218-dc7bc7cf4905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18753186-9360-44a1-b5f7-1b9d795b5a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba96ea9-771c-444e-86d1-1ca173b135ca",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0f1008-f438-46ad-8831-a33314819379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451a775e-3609-462f-86e8-baca5a7369a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a35efe2-bcd7-41de-ac32-fe2f268b98c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc836db-eaa3-485f-abba-0395821aba23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a842579a-2a1a-4fe0-9e55-9ed8dedaf898",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad586e1-f645-48da-b456-e14743b1d5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e5ddd7-88d5-48f1-85a7-ac06f68d5106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f34ef22-a618-4227-8ce9-02ff5f85cbfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8794bb-bb94-4819-95db-8ca23b0fea8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63c099a-5274-4c3e-be9f-1e2eb65fbf04",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cba5321-f3c9-4948-b2c4-0e0efc99d99b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df57a52b-75b2-47c5-8113-20aece64e8c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51286c82-7a30-45d9-a679-d9f86a376ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e4b698-e195-43cc-8ec3-8227782a8359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a93937-dd62-4fa0-8707-55a220766e33",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a76495f-ad12-40a6-8715-0883d88693a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d435c02-b206-443f-b8e3-594f6eb6ee4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d89efa3-26bb-4c4d-9776-888a19c83ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294a8ef3-94a3-4ba3-a3b0-b3cedad373f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88b8a72-e17a-47c8-b4f3-258559857b6c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac19a64-0620-47cc-8164-b9432635f8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed36e7f0-828c-414c-8025-4a759ea2b2ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5e1e87-29e9-4410-9d5a-79036804a254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97313f7b-a534-4aa7-ba4b-b042c8256c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657e5e22-a7e2-400b-be73-a26a8ed15ddc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ff0911-84b6-441c-81b9-eb4abd5dc664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d4b8382-c48d-4e2d-b7d6-2c0e0d45232a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "140f091f-968e-4e00-8c18-1fbc543ae456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfa5507-53bb-4855-bb03-a5364e8b740a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7f6bcd-2e15-453c-b87b-8bf6ee74a6d6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84117d7-3971-462a-8603-f1c7f65f91db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb5141b0-c3c1-4017-9902-3185b269902b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a961cbb-8bcf-43bb-817f-168cb3eecd8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1308e92-9f2e-40a7-845b-80703c2bcd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0497fee-2a35-42f2-a84d-6d686f266278",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd44fb3-601f-490b-a815-776a48bc0b5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "391e9a9d-f6ef-4ad4-b063-2d7e60bbb220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c1f859-a0d5-4a9a-b099-0ca215aad6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc07325e-0dbb-4040-b423-0538b262fe9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9db87c1-fd4e-40c5-a3e5-19aa1205f517",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916eb1f8-2f6e-4199-a077-dc3bd9ffcfd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f44c9b47-9d41-425e-8d61-dbde67fc9118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b935c8-3203-4fa7-93b6-3714408dc41c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb78c16-4c0a-446e-af9f-092435e84b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5713e1b7-6112-4601-9751-d5c1f0e07c06",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c38a1c-210f-443b-a04a-d40e92efb76d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09eff5e0-c44a-451c-a45e-9b6a3903c4c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e10000-9c92-4754-baff-0492706e4f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0736c159-62ab-47d8-adca-6e11619fe364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d78394b-a583-4d6b-b9b8-3d8b9c9e68ad",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e891f89-4ce2-4511-a25c-f84ac9f51270",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3e563b3-5ba7-4b63-bccc-01ed8e18af98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "654e6f07-c5ee-4678-b670-d6de9a4e908a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69fea3f1-3d67-4db2-868d-e6a38e6c6cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31a65ca-8950-4e2e-834e-7a949424fd67",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b20e459-5f7f-4437-a2b0-35af6979d65d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faa7a237-a883-4605-8e46-8e0ba808aa15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3cdce9-03fa-4278-a16b-c84810da7c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27429a2b-2cb6-4b4a-9135-8fdffa22d08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1258a6-9b38-41f7-bf2c-410b38332139",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274a531b-c469-405e-9ac7-abc5be6e8c6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fa79063-eeec-43c2-a86b-cc08975fa6aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7df9873-19d6-4439-8e73-d4fb28fd5f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d45b6f-129b-4760-a5f4-4a78849f0cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898d6cb7-7f58-48b8-8474-1c3a412b7cc1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587181ff-5652-4aea-87ba-f4d7eaa23f0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "284ce6a3-0b23-41ab-8eea-2b1335e540ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7e1adc-15d9-4f5f-bf8c-5a60d0f0531d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0001d0-d11a-4d21-ba90-c3dee631363c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a93ba4-161a-4413-b459-907a5ed662bb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9657957b-987d-45e9-ace0-5b43568f5a1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "900a1ab0-ccc4-4ca8-b81f-00adb2b182d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba13131-4a92-4311-9cf7-1da3ad8b04ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347314e4-6967-4ffd-b0fe-a73ada836dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70bb31c1-4930-4032-9a9e-e46877502c41",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5b9ec7-6330-4872-ba27-22fbf07e14bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d65c6b21-d6fa-4c66-9248-a508358a77ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4fdea1-77e9-4ac5-91a2-4d898b60301f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f47ddb-43d3-4201-b02a-3ba1d73ee438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056a8aba-4117-48d2-acba-5389a23d0eb6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44c2dcc-2605-4c8a-82ff-5b0170a5ae60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7af5bee4-06d7-4283-bead-84d6b7b59a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ccb422-9109-4da1-a0c9-e08a97f91a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc93b8c-4062-4334-a5f9-ced1873d89d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31354c03-7858-446b-b8da-bb7e2b254bc0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45879baa-d311-42e1-ab0f-5cd529f5ce35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fb97e2a-7fa2-4132-b9e4-ca8a33cd83d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05941267-ada2-4d1d-8633-c2c976d17648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bdc1ca-1d1a-4c24-9511-0a1c9fe2bc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da62799-1d95-4fa7-a7c6-4152af77b684",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3e5c5f-3a29-4113-8c77-71accf2e7b5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "273dc9f4-3d28-429c-806a-2b92fd1c5940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7343ca58-95ba-4399-918d-df3f3c78497b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227a3836-fb3c-48ce-a6ed-3203dc7c2fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d84901-6f7c-45f9-882a-17eef5178215",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b4fdd4-ca1f-431b-b756-9c66e5f79478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "680e4741-3dbb-428e-86bc-e021d05055fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf84cef-94f4-4a71-9e0c-d31b88184d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6fd674f-7e1e-4cf7-a103-e0686f197f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad3960a-0d02-411a-9241-7e49b8bf0cd6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba6dc0b-9ced-4077-b1e6-596f79f691ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20a5b813-6c8b-47fd-8a8f-663ed58a75bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32335bf-bfa6-49a5-9c9b-48294d52a87b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd4c44b-3a3b-4122-8e6c-1b108f524140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f071aa8-7b5e-4457-8adf-bad9db7d9dea",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1770706c-149a-4f69-a7ae-4e3fbff475d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06623c48-9a0c-4d84-bdca-4d47e0a8eba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eed6ecc-42b7-48f2-b4a1-a40efdbdac38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05835c6-56e4-424b-8f63-61d85d3a1d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122525b5-42d4-44f2-840b-f75106f4b885",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26e2ac9-a5be-4fd2-b598-ef317139d0c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8f77caa-426b-457a-9eea-bee135099a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b2206b-57f1-4aab-9019-be2fe2a58320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078fc70f-d7b4-4e72-bfe4-dd890cf4395b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2f15fd-39ca-442a-8336-5daa2be47cf2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc74f1f0-73c6-4ddb-a15d-dfb15159878b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1940632-ba31-4907-9454-ad2dcdb69019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd8cbe1-fc09-4d07-a055-e7d079b3d4e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf979a2-0af9-4374-8d08-99da2c5f382d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5385fc3-2991-41ba-9ba7-39c304b66d4a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438148f0-d034-4404-81da-45bd4e667dc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb755b5a-adca-4190-89b9-b22f480d1921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c3172d-21fd-4591-a4ba-bf945d1b65b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0dd0074-f2d1-40e8-9856-31f1ed222293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85621c5c-1d90-4398-b715-9de81e09e719",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57d3411-d9aa-4848-a2fd-a0e04768f8ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "287da332-a480-4c2b-8884-857db54b12f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c3953c-3fbe-49c0-8a3f-d65dc8d2fad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e9ea1a-b598-4eec-9a64-bf015333c30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17f6e82-a709-4d5c-9cf6-c0edfeb33d52",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f06379-361c-40ff-9b3e-dbbfcff2085d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8018d0b4-ef97-4a92-99c1-366ebef1bd97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0728f1b7-e17e-4342-8834-b51a55ec8d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e26a95e-7902-4a9a-8f8e-31e6ac48e53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0d18fc-8d54-408a-b270-6dc52ac29718",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0da9d6-8225-4fd3-9d77-ff6dbe152217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4168332-b0ee-4306-8c38-2b8c685f6371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9632c9fb-5e3f-434d-b6e9-e248c96e2ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c793e01-9df7-4929-aea9-52bbd263f5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9431534-2990-444e-bd28-22dcf3fcad09",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b6f2e5-ec5b-43b0-b83e-31f470b47748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21a149cd-dc15-4673-8a13-95464da86185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07e1725-b560-4a71-8133-7c1ecc07cb33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf5ea3a-a2f2-4d91-8b8e-d3de35f0feae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ad7065-8f4d-4b92-8387-4d7506b42166",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7e69d7-bfae-44c1-8319-e881a8cbedba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c42642c8-18aa-4f7e-9683-125c91f1a4c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42cfe69-cadb-4eb6-9d56-41f523b5b84f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762f36df-4ad8-4441-b6a0-6bfa4446a377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3d0508-005a-4b90-8001-2f2ce09f9dc1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a619154-7f4e-4e7d-943f-a188bbb49e64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "615acdcb-6730-438e-99ba-bb239e29b668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88f312c-8429-46f7-8101-0d7b9b7c13a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3f9d2f-cd41-40c2-ae1f-ad42fc445ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fe1e95-7e29-48ce-a397-897cfee8a656",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f134dd-e847-4298-b06a-97551e9e2c98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f90da3c7-af19-45b2-a9d9-a065d46a973d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f757adaf-6f33-4fbe-823e-25f02a966ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ada2513-01ef-4e75-b573-bd44d983115b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a102a1-c371-4c95-b6d0-fc28e174cc02",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88e57b2-2113-4e86-a995-ea2ce883b449",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "287903e1-395e-4723-a4a6-2352f17646d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4227064-2133-4529-bd8a-b9df19701c51",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c171a834-bdba-4bf8-ba4f-1373d7f1bb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503687a1-27f6-48a8-9522-c392af53751b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fa6602-b138-41c1-a882-c47ab5ea0c5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8806e94-3dab-4792-b767-9fe8dcf7dd18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2119b747-5cb7-467e-b5dc-2096d1e2fc99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb53136d-f0a6-460b-9c7b-8a8169af0094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999de83c-13c1-46bd-a26b-39e779f75eab",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c3a669-c542-4811-9ce9-a58092749879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ba1fcb8-51da-42e2-9dcf-75e8f971e5d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b55911-daea-4904-817b-7d0994f99ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707b5c74-0c96-43ce-a1a1-191d11365d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3159f918-7f23-410b-99a0-6478c5dd29c4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4e307e-bc79-42a4-a305-990d8237c262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b52d8776-62a3-4e33-ba52-c397a0ab4353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada9f257-61c3-4400-aa36-308f2b9b8b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d1f19e-32e8-4339-b045-abee44abf4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6f3cd7-fc0d-415b-962d-cfc4fdd73b66",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3010edd-cf85-47fe-9e67-ae84dd696e4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ecb68c9-5b02-4b75-a49d-7f9304a7a944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ea9732-00ba-4b69-8ef1-ddf9168a7f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e25b679-97a2-41a2-9640-5438347cb06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74381a72-b9c0-4fa4-887d-ef1858487b64",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12297bfc-f95e-4720-b0ac-fd7c0fe622be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c52b8056-8cca-4227-b1aa-392d80511d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd844ce-eae1-49a9-9a7e-09fa7be36c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcfca8c4-bd2d-4922-93a0-46d2a3f4038e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a9b456-0335-4f99-bad1-9503607b28f0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7e105e-f297-4d89-87ec-efdc1da7697f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78892884-bb20-4e81-8c64-c64a20bca069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af593a64-19ba-42f8-97e4-372b185428f0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a1e92e-1e95-4c84-a8bc-2214bba40ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b154472-c91f-4ed9-af3f-da117c07c71f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882918f5-fca4-49f3-95e2-650d817e3f20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b02a2b5f-82c8-47b5-afba-5a0439a2b9fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4544fe8b-584a-474b-a12a-2fda2797261e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a4ed96-8a94-43dd-8d66-ca414710f58e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78076559-d57d-4158-b610-092c7b702ad8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07ea2e23-8b50-4fb2-afb0-b6d62a59f81a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b1c57ee-ac72-42d9-8641-7f50514f660e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "899e01d0-15ed-426e-9d1c-69922b6fb447"
                    }
                  }
                ]
              },
              {
                "id": "5e922912-e82a-46bf-8984-cf6c7ae48192",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14f1d396-342e-4a8d-b93c-2faa89071661",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f6eaa0-8dd1-4e60-ae6f-7c7402ca1fbd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "099b1fba-ab70-4446-9a88-f910da0adefa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9e1b3c-0c5c-4502-9a51-6d9c96fcd46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9faf0537-f55a-440a-bf57-668e9a602055"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "856e3ade-09c4-42ee-bf58-cbf9a07010e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e90c556-395f-4692-a71c-3326add8ff7c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cc7feaa-2876-4eb3-946f-128c04489b85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b426268b-384e-431a-8178-371b902ffd8f"
                    }
                  }
                ]
              },
              {
                "id": "f6df10e9-7e05-4619-a8e2-e0d64642bac1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "08efb77d-c767-4cb5-88ba-2de00b154b3a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f7bc9d-b2b2-4fd9-bc5d-317245924bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4accf54b-4b7e-41e5-928a-45f734b951a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9632d897-06ac-4d60-ac22-2632f2bf66e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bdf5610-df47-45ec-bef9-1b6095d62044"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "31b41a5f-727d-43ed-ae73-67a82ac0e156",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9f6fdb77-8657-47c8-ae96-116b07748567",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cbb301c-350c-4b2e-84b3-959f43287450",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "04edc662-05f3-4a6e-a74c-b1b8a6d47745"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c301e826-2652-4372-b2d0-2c5137d6b9db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "016f68c4-be3b-4820-9b21-7d7375d7ad3c"
                    }
                  }
                ]
              },
              {
                "id": "14edc660-fff2-43ab-b830-c7f47752a430",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a93f2ed6-80df-446b-a71a-95312b8bdc2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ffbed18c-ec97-4fe6-8ea0-0f4f8b451367"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e2722a5-ac00-409e-8df2-546f939e2869",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57d2fa95-cdb0-43a0-bde5-89638bc623bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6e69e7f-156a-494e-9309-e4f41e8abc9f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ae48d3a8-1473-4519-b843-c925ce869277"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84b6afe7-8efe-4e8d-98d0-229d8fdcc9a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1082553a-aaed-46db-a9cc-46768164dc2d"
            }
          }
        ]
      },
      {
        "id": "dc6d1fac-d7f5-4894-bbb4-77237d1d1bc6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6eab74f7-83e1-47c8-a997-8ce1ff04bbd5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba1903cb-5cf2-4fc0-b9e9-655eabd1130b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3af9c83f-90e1-4797-9931-3187b6956407",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f782ea6-e29a-4b8a-9c8c-00efb561f420",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a9d2d2c9-7cfb-4969-a5a0-0cd99efc34da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6f5d92-0474-40ec-83ca-0e49d22b7704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa14209b-69bd-4b72-8f8a-1b2c0c0613b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "392a00c0-0626-48e6-83b6-5bf097ed766b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "798816db-3435-477a-a8d7-a26c7dca07bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6732805d-6bac-4877-8cc6-94c659ad4079",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be0a5a78-97cd-4d53-b10b-4c560bf5492f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f34fdbc6-3b30-420a-a1ab-17ce499c3319",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ba73152a-3e43-4bdc-98bd-679e213b7bdb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3bffd88b-1044-4289-9940-d2728f57d93c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc951b3f-e1b7-4877-baaa-5ef3196f3748"
            }
          }
        ]
      },
      {
        "id": "db6d3b05-ab97-4ac0-926f-058f44715853",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "35a82981-a13c-4b77-86ef-e27788838a9e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "161304e5-4143-4df9-8bcf-c9be0bc7f8de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c81422c-01ee-40d8-9e55-aeaf229b8381",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2f9f15-014e-4ab0-9bcb-07cf3b33d51a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26dd41ec-a7fe-463d-89ea-fffac807ea75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aaac9cd-a674-4e69-90f9-bb666e10c760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96d5e15f-5e4a-4730-803a-ef9870be1f32"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95a77f7c-5cad-4bfb-ac93-aa44b62607b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19bbfa8e-3b31-48c2-bec7-13fbae653919"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25ff2775-5a66-4a58-91f7-f66714db823c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f345a80-5746-43f5-9194-c226d857210e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd6978ec-132c-4097-977d-f3c49b773c98",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89992e5d-f74d-46aa-8c4f-a8e83edae9e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93dc5e6f-3eb2-4b04-8f99-47c9d0bcbdf4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e894e62-316b-4680-bdbe-b3c5f6ed7856"
            }
          }
        ]
      },
      {
        "id": "9572a7ad-dc69-4ec9-9200-a00ae7bf15a3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6fcea215-dce9-4c20-932d-54a7a9354e00",
            "name": "Negative Testing",
            "item": [
              {
                "id": "123e399d-1b19-4283-9514-1123d4601903",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ceb79690-1dae-4c8d-b494-6db73ec342d7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c27483d-3e44-4091-96f1-1b691e9c19ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a3947c9-ac57-4509-beb9-72ee725cf16a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b92d0b2-0601-4bcd-b48e-7c69a6cd81ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7a68c23-f9e0-4882-9894-ae38cf261d63"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "536a62d0-4578-4e16-b891-4b9965f33960",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f473fff-3d0e-411e-970f-dee2af9082ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de4a09c2-6084-4faf-b530-f003f6d72a44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "284609c6-8ad8-4d3b-baea-38539552d4e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f36f7da-72ab-4d6c-9851-65b662708ea4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "53e447c7-87dc-4e75-bf7e-3f7765026b70"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd541d54-20c7-4f99-bb5b-37d27ac8f7cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73d98b71-8451-41eb-829e-656b369355c1"
            }
          }
        ]
      },
      {
        "id": "c615eb1d-6e4d-4a7f-a4f1-374b64dc31c3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4342bf2-d56c-4cdd-9440-f67ca79a5337",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45367286-8dd0-457e-b482-5973991cca97",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "aacbabdf-be51-46ed-bd7e-c9f71a4d5532",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3087dc7-1812-46f3-b13e-cba18b9339e5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9c642a7-ef2a-4a60-8274-fb1a5cb0a2e0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 27.642105263157898,
      "responseMin": 5,
      "responseMax": 198,
      "responseSd": 16.543562349657023,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706661264809,
      "completed": 1706661281699
    },
    "executions": [
      {
        "id": "f80f218b-29e4-476d-9a4e-251797924346",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1a5142a4-7344-431f-aa0d-ea4b5ed95084",
          "httpRequestId": "c4df8a8f-3518-40bd-b955-a5100a946584"
        },
        "item": {
          "id": "f80f218b-29e4-476d-9a4e-251797924346",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "96077b04-1588-4635-80ae-4188ce82318d",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "0887b1b9-d23c-4587-aeaa-90c6a0888fd0",
        "cursor": {
          "ref": "e9f13468-dc6b-4833-b464-438042f18720",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "35b413f8-9a6a-49b2-b9b7-d25c13ddfd1f"
        },
        "item": {
          "id": "0887b1b9-d23c-4587-aeaa-90c6a0888fd0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "329d19bc-eb44-4f78-bdc4-e4eae77fabca",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "49c6924a-38bd-430e-a347-08f1cb05ef0f",
        "cursor": {
          "ref": "1c529e72-713c-4630-81f9-bb88e56ec154",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1dddcf1c-98ad-4c54-9021-9b2acfa54489"
        },
        "item": {
          "id": "49c6924a-38bd-430e-a347-08f1cb05ef0f",
          "name": "did_json"
        },
        "response": {
          "id": "075f96f8-35b0-46e2-a0d3-c5c3060f7142",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88698e08-e95e-497c-9a9f-deb9e3951e28",
        "cursor": {
          "ref": "4da40fe5-e46e-4b1b-a955-02563bd240ab",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "42bfd6a7-76fe-4b24-b7fd-ef9bfa1df20e"
        },
        "item": {
          "id": "88698e08-e95e-497c-9a9f-deb9e3951e28",
          "name": "did:invalid"
        },
        "response": {
          "id": "5af2a989-65e7-4483-836c-d9cfd70be594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88698e08-e95e-497c-9a9f-deb9e3951e28",
        "cursor": {
          "ref": "4da40fe5-e46e-4b1b-a955-02563bd240ab",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "42bfd6a7-76fe-4b24-b7fd-ef9bfa1df20e"
        },
        "item": {
          "id": "88698e08-e95e-497c-9a9f-deb9e3951e28",
          "name": "did:invalid"
        },
        "response": {
          "id": "5af2a989-65e7-4483-836c-d9cfd70be594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cab1848-cdcc-4cc1-83a9-d7efe51a22c2",
        "cursor": {
          "ref": "3b29d8a8-24be-4ae6-90f7-01e921c81a48",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "63e55ece-42ff-4f6a-88e3-658ad35d08d5"
        },
        "item": {
          "id": "9cab1848-cdcc-4cc1-83a9-d7efe51a22c2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "55f1799f-3d36-40a6-9af0-3c43b8174114",
          "status": "Not Found",
          "code": 404,
          "responseTime": 81,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd14fca-fc8f-4b53-9582-6c2d04f2f08f",
        "cursor": {
          "ref": "b41169a5-3b83-4de9-8f84-a239dc19374a",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9923089b-ae87-4b10-b3e6-c39e9141c2e0"
        },
        "item": {
          "id": "3bd14fca-fc8f-4b53-9582-6c2d04f2f08f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e70eae9c-818d-4dd5-9531-a503570e58d6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 24,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd6f5dc-4f02-4017-a20b-09af491f5c02",
        "cursor": {
          "ref": "810dfe40-21f4-4b13-8d50-f84a10d02694",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "274e893a-1dc8-4d76-8475-15284c8057c2"
        },
        "item": {
          "id": "3bd6f5dc-4f02-4017-a20b-09af491f5c02",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "85558e14-dd1b-4131-96c4-094ecc86b2b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcb767e-6623-433e-8a29-fbb1812e9e1b",
        "cursor": {
          "ref": "5e376f0e-2d6c-49cb-bfe0-946f3dcbe480",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "072bf5cc-f461-4a0e-9947-f3954f1d5687"
        },
        "item": {
          "id": "5dcb767e-6623-433e-8a29-fbb1812e9e1b",
          "name": "identifiers"
        },
        "response": {
          "id": "dcc0a4c2-1948-4546-b0bd-476285b69f06",
          "status": "OK",
          "code": 200,
          "responseTime": 161,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c16a994-fbeb-45fd-b724-2898f8e5cedf",
        "cursor": {
          "ref": "afced162-62f9-495a-ab50-438604df45fb",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "19025320-764b-49fa-9757-04aa08056468"
        },
        "item": {
          "id": "2c16a994-fbeb-45fd-b724-2898f8e5cedf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7ebc5607-0f95-47d5-b867-556e0b3ae2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba731cf0-dcbb-4f47-a85e-816c2502fefd",
        "cursor": {
          "ref": "62c3b685-456f-4112-a6e5-45c7945b46b5",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "001abb98-2a8d-46a4-9b8b-8324f321b0ea"
        },
        "item": {
          "id": "ba731cf0-dcbb-4f47-a85e-816c2502fefd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6cdb92c9-5df0-41bb-a8f0-a80e04839864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99916cc9-b493-462d-86ce-2fa50c5ae180",
        "cursor": {
          "ref": "baac7af4-2f93-46f2-8837-77e623a56ccc",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3afa194c-157b-43d6-ae2b-c1fd23997185"
        },
        "item": {
          "id": "99916cc9-b493-462d-86ce-2fa50c5ae180",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d1b64b42-e8fe-46dc-99e0-4ab4258c7a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fac1ec5-7ba3-4f2e-ba54-6c589faa9545",
        "cursor": {
          "ref": "9c7b5d74-b88b-41ce-8175-b75b27d5ee1c",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "563b3836-ad8c-488e-a534-6463e2839a61"
        },
        "item": {
          "id": "5fac1ec5-7ba3-4f2e-ba54-6c589faa9545",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cdbee5d3-1f65-4cf9-b65a-886473968d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ae33c8-1e84-434e-bf58-9a6da9719b15",
        "cursor": {
          "ref": "142005cd-5986-42df-ae5c-93376ec2305e",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ac303b41-e5b4-47c5-9aab-3db8b3ccb71e"
        },
        "item": {
          "id": "21ae33c8-1e84-434e-bf58-9a6da9719b15",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2e961e95-97ce-4444-aa86-60b800c94c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c0e7dd-7553-4a8e-89bb-e6d183404561",
        "cursor": {
          "ref": "29472397-c0fa-4d31-b773-6d70bd003f51",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "41caed76-3668-4924-9435-3b66d3956507"
        },
        "item": {
          "id": "46c0e7dd-7553-4a8e-89bb-e6d183404561",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7ce20034-adb9-4f28-8e61-a70f350b2a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ce1d99-9a40-401e-9026-31edff6fca50",
        "cursor": {
          "ref": "13e50f58-59d0-47a1-8c1f-08ec43cbcaad",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b0d26ec7-f724-4aaa-8f29-3cf085f036b9"
        },
        "item": {
          "id": "72ce1d99-9a40-401e-9026-31edff6fca50",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0012834c-b892-4d5d-8028-46f21a04257f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3bdccf-abb7-414e-a439-3b91c2b361e7",
        "cursor": {
          "ref": "c6049cb0-8bcc-4f2a-93e1-f84512a5c1cf",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "10490f99-9c3f-447b-a5ee-77ce0f812808"
        },
        "item": {
          "id": "6a3bdccf-abb7-414e-a439-3b91c2b361e7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "73028e53-23e6-461e-9771-3d1c9dcbcbfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4201bf3a-59e8-4f6a-bab4-86c10063e1bb",
        "cursor": {
          "ref": "47bb396f-e24e-4adc-9563-fafea44dbf2e",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d912f217-77f8-44dc-8349-69ba8aa61de5"
        },
        "item": {
          "id": "4201bf3a-59e8-4f6a-bab4-86c10063e1bb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5140c692-890a-4443-81f5-c147320801b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80222af5-cdc1-4fe6-b197-dc7af33df839",
        "cursor": {
          "ref": "3a1aff88-991b-4c38-90ee-0bd0d15046d7",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fe78de88-8a10-48ba-bea0-e3b7bb32ceda"
        },
        "item": {
          "id": "80222af5-cdc1-4fe6-b197-dc7af33df839",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b53b9fa1-bb84-4c7d-8c8f-e68f7f73a9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bdb8cf-bb66-4544-9675-5363990f1d98",
        "cursor": {
          "ref": "e1d357f9-5d57-45e6-ad1d-ac481df7020f",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ea021b89-9ada-4dd2-8b2e-2216b17b6e86"
        },
        "item": {
          "id": "63bdb8cf-bb66-4544-9675-5363990f1d98",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b3332256-b400-4006-b459-1ce265175518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b67b63-0369-46ac-ae74-4f0780ed399f",
        "cursor": {
          "ref": "0121d9c8-ae13-41a9-b80f-919230b3f4a9",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c8ad9e20-5330-4552-b085-65df19dc57c9"
        },
        "item": {
          "id": "04b67b63-0369-46ac-ae74-4f0780ed399f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e202b702-9fc4-4314-9d69-7f8825167e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2278dd20-0d2b-479f-9b89-1ea61bf55d18",
        "cursor": {
          "ref": "b385501d-a8f3-42aa-98ea-4e53086cee0b",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7f36cbee-71cc-4f10-b9a3-d73921577ecb"
        },
        "item": {
          "id": "2278dd20-0d2b-479f-9b89-1ea61bf55d18",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "51460ab8-e728-4d77-89b9-a620aad5d244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb7e918-eaa1-4067-aa37-7f79f2e25d4d",
        "cursor": {
          "ref": "d6ab6b72-48e5-4b39-994e-2ab551ad41e1",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6e76fdd4-71f8-4235-965b-26bfcbbc05bc"
        },
        "item": {
          "id": "8cb7e918-eaa1-4067-aa37-7f79f2e25d4d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1fbe7527-4acd-4b0a-8fcd-a1c67f8aeec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed76a3c6-e55c-4cd4-84f5-c7ed9fd343e1",
        "cursor": {
          "ref": "58c05695-2d8e-4f08-8770-b0e83273b2fb",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1cfc8eca-1cc5-4cd9-9c68-c120a7f46123"
        },
        "item": {
          "id": "ed76a3c6-e55c-4cd4-84f5-c7ed9fd343e1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d3ad2307-0079-43d8-8115-efc5193c18b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2cc35d-1d40-45f4-84d0-54976af85427",
        "cursor": {
          "ref": "0a0993f8-de33-476e-ba58-ff0296d3763b",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5891b7c1-4e69-4058-a47e-a7b7fafd38c3"
        },
        "item": {
          "id": "9f2cc35d-1d40-45f4-84d0-54976af85427",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e67f30ef-1e4e-4eaa-a951-a5e5c9472e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a10ff8-0228-4b69-91f4-1b964ca87709",
        "cursor": {
          "ref": "0e9188f8-596e-40bb-aeb0-38ead243c26a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f6c703a3-ed13-4c4d-bf79-d767b6ee109b"
        },
        "item": {
          "id": "c8a10ff8-0228-4b69-91f4-1b964ca87709",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "860aa74b-43ab-4a9e-8298-3c19cdca8c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db36818-9e82-4115-9312-020d58229f08",
        "cursor": {
          "ref": "c9a184bb-92f2-4bce-b5c0-a1c97ff0dbfb",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7df2b863-2b5a-4340-92cb-e830f80a2be9"
        },
        "item": {
          "id": "0db36818-9e82-4115-9312-020d58229f08",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dac4df42-48ec-4994-b74c-7e2aab188434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e50ba4-5a26-4f5f-bed3-98dd1dccb9b6",
        "cursor": {
          "ref": "bdd62b4d-2a00-47e7-a5cc-0208524f3965",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6b267712-5ea5-42b2-b54c-ab08f45f4608"
        },
        "item": {
          "id": "70e50ba4-5a26-4f5f-bed3-98dd1dccb9b6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7b6e55e4-d7a2-4c4c-9a5b-d99dc5a801bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1eb4342-7ff8-46c3-af08-b06a60dc27ce",
        "cursor": {
          "ref": "d910c2f2-5f79-4264-9d94-24376e697945",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c9bca955-2562-49ee-ae38-45e1049192a8"
        },
        "item": {
          "id": "d1eb4342-7ff8-46c3-af08-b06a60dc27ce",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "dc7fa181-9793-4b2b-9620-84f07219bfe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3466a14f-2077-4ba4-ac42-6a002886e50b",
        "cursor": {
          "ref": "099d06b4-c51c-4705-9ddb-2417a8a56ceb",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "31c65d6e-01a0-4212-9402-079a7fa94e16"
        },
        "item": {
          "id": "3466a14f-2077-4ba4-ac42-6a002886e50b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1edf8830-637b-4edf-b396-deda2677c019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d34a813-83a5-4e96-87c3-0af8f8cde856",
        "cursor": {
          "ref": "93c5725e-f67c-48a4-adb8-3973e24c7ed1",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "64e8c47f-2048-40a7-9097-b7ae120623e6"
        },
        "item": {
          "id": "9d34a813-83a5-4e96-87c3-0af8f8cde856",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cd59374b-4985-4608-ad35-95e8b2f5a309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7113d826-a4ea-47fb-93de-d0b1420aa69d",
        "cursor": {
          "ref": "da3d67a4-f4e6-4ede-ad5e-081f39305563",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7fe0d324-ced9-4d21-a97a-43ab18ad7ab9"
        },
        "item": {
          "id": "7113d826-a4ea-47fb-93de-d0b1420aa69d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c61a0a9d-e81b-40ab-a76f-38d881de17fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6afae2-0a07-434e-8734-6d735f3b7a33",
        "cursor": {
          "ref": "08bc1a03-a287-4269-aebf-7eaecae2161d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "014f0aee-bdca-46e4-9af0-bdf5abbc8683"
        },
        "item": {
          "id": "9d6afae2-0a07-434e-8734-6d735f3b7a33",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "84c46bdc-5aba-4d56-9f9a-3b2810dfc0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7196092f-87db-41c9-82e5-cdbc1fe2577b",
        "cursor": {
          "ref": "6f5387c9-514c-4012-89d2-205289cf865b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c319f263-bd2f-4e77-9a74-fd7819bea96b"
        },
        "item": {
          "id": "7196092f-87db-41c9-82e5-cdbc1fe2577b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0d1a1cf1-a7e0-42bf-abb1-f0f2103c4f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9c4211-6479-424e-8832-a4bd8c3b71df",
        "cursor": {
          "ref": "af15c28c-c177-44b3-887d-be50f5c432d5",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e4fb3d28-562a-46a5-b0be-124c4da86cc3"
        },
        "item": {
          "id": "4f9c4211-6479-424e-8832-a4bd8c3b71df",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "457c2e0d-4f22-4924-a642-e6fa8fe23be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acfb551-032b-45a6-ab50-ec7317933c90",
        "cursor": {
          "ref": "0f0e6087-05cd-46b7-b4e4-9c06fe854ec9",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "dac65775-d4f1-4952-9ba6-4d931b05c50a"
        },
        "item": {
          "id": "1acfb551-032b-45a6-ab50-ec7317933c90",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b3ef1a68-ae11-4416-adff-1463d036d09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827f1021-0d2b-4349-a14a-4c6cfdf9de3c",
        "cursor": {
          "ref": "05978a7f-40d7-4d72-8a57-18d701db5013",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "dacfd502-54e9-48ce-b40f-df231d1ae050"
        },
        "item": {
          "id": "827f1021-0d2b-4349-a14a-4c6cfdf9de3c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f1a43e49-01d5-473c-ae95-3690b3eecb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bace0bea-861f-48f1-bfaf-d018b18796ed",
        "cursor": {
          "ref": "2f946feb-5b0c-4184-8ac5-442b8bc48b56",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1073f432-f0ee-48f2-b0a8-3a6cf358f18d"
        },
        "item": {
          "id": "bace0bea-861f-48f1-bfaf-d018b18796ed",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "cf8b8890-64c3-4813-bfde-16108d47351f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946ffd85-1e3d-4ff5-98ca-d20381c3e9df",
        "cursor": {
          "ref": "dc76cf22-924a-4cd9-902d-511d9f35ca1c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a6bf9873-061a-4848-8809-66de30081734"
        },
        "item": {
          "id": "946ffd85-1e3d-4ff5-98ca-d20381c3e9df",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ab3c75e6-5cd2-4615-8206-25a908a4b049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b969095-5fea-4e0d-9ea0-1bea18933cf6",
        "cursor": {
          "ref": "4de652e4-102d-4236-9edb-1d6014e1ea99",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f1e81b80-838c-45d3-94dd-cb27e06695ab"
        },
        "item": {
          "id": "8b969095-5fea-4e0d-9ea0-1bea18933cf6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "334af235-7c32-4c49-ad4f-94e715e41ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf8de11-9ad7-44c9-b779-d3700b10e243",
        "cursor": {
          "ref": "991fc5c1-edf4-4c47-8caf-d0a6c0d42690",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c4fbdc40-ae08-48b7-8821-25894df52961"
        },
        "item": {
          "id": "1bf8de11-9ad7-44c9-b779-d3700b10e243",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4a4a0f94-06de-40d9-8f49-f7802c54c177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5660e914-d131-4102-b4c3-848db0bf07ca",
        "cursor": {
          "ref": "2161b102-0269-4d6d-a30e-a5b097e26382",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "72223411-d2b4-4d57-b0b9-35c526a0fb60"
        },
        "item": {
          "id": "5660e914-d131-4102-b4c3-848db0bf07ca",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e695dbae-340a-40e0-abb8-09d27e6b99cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e3a40e-e6e1-44a0-b022-d007fc9b5dc0",
        "cursor": {
          "ref": "5571e12e-0c8a-4aba-b890-6a0813ab82ee",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b025e300-4a4d-4f82-b517-cd9654f0105d"
        },
        "item": {
          "id": "58e3a40e-e6e1-44a0-b022-d007fc9b5dc0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c9a5b544-1292-4119-b76b-2a0044b97951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220e1877-1591-4e14-ad06-718e4edd2861",
        "cursor": {
          "ref": "97c074fe-7f31-4a58-bc28-74e8cbc2a259",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "df21645c-0605-41b2-b3e4-693a931f5fe1"
        },
        "item": {
          "id": "220e1877-1591-4e14-ad06-718e4edd2861",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "690e6f06-dc91-430b-9d04-d68d7af498b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c01c572-40e6-4fa9-9004-de06e293660a",
        "cursor": {
          "ref": "fabe9719-9a3b-465e-8b28-fa2bd5804840",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "617225b0-3f28-4fd9-b8b6-cee304549305"
        },
        "item": {
          "id": "8c01c572-40e6-4fa9-9004-de06e293660a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "67054099-9849-4ae9-9087-3606360f02e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8891655d-7b96-46cd-b05f-cbf7567bfbf4",
        "cursor": {
          "ref": "787e52e9-df6c-4996-aa81-69d96b31b500",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0cedbb60-1138-4081-af96-722414d3e5b8"
        },
        "item": {
          "id": "8891655d-7b96-46cd-b05f-cbf7567bfbf4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "03c1a399-578e-4448-aa55-0cdb2edfc1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fbda88-48a1-4ab3-b25d-d8aa463978fb",
        "cursor": {
          "ref": "1d2cdbd9-7547-4ea2-a510-ed96d5ce0e71",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4798a7e9-2d3a-45e7-8448-e16a79c8d361"
        },
        "item": {
          "id": "35fbda88-48a1-4ab3-b25d-d8aa463978fb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "20ddb573-9af0-44ea-819d-5cbcda5d1d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04520c78-6b86-4982-adde-de49a7832af7",
        "cursor": {
          "ref": "de218bba-35fe-4d7c-9e08-4c0a72a549ac",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "16d805f3-64cd-4976-aeda-0a45f913eded"
        },
        "item": {
          "id": "04520c78-6b86-4982-adde-de49a7832af7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "063af0d9-5d59-444f-b15b-a02e56d7706c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4820d3-a81b-462c-a7d0-e5e54506b1c4",
        "cursor": {
          "ref": "8b63509e-4bc1-4e29-9051-b2322e38d2bd",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "16b274ca-0bd2-4a49-af88-2dc8f530b2ff"
        },
        "item": {
          "id": "7f4820d3-a81b-462c-a7d0-e5e54506b1c4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "29d00ccb-c569-4120-9162-4ed916dc472e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bbc13e-1582-412d-8be2-4c241fdf0884",
        "cursor": {
          "ref": "56c7e714-d404-4488-9c3e-c814b8dc4af0",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8428a866-a60b-45aa-b1d5-ecb8fd540933"
        },
        "item": {
          "id": "78bbc13e-1582-412d-8be2-4c241fdf0884",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9a80a61c-2eca-4cd3-bd33-496e186201c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940be4c9-5d0a-4859-9d47-e0c607284950",
        "cursor": {
          "ref": "ff777130-9f77-4a22-a609-c78b92278a26",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e2401d50-f0ab-4848-bb04-20b9ba613877"
        },
        "item": {
          "id": "940be4c9-5d0a-4859-9d47-e0c607284950",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "31cec47f-4789-4ed2-bcc1-6805543ebea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bb7f51-b7b1-4aab-9207-35f973969552",
        "cursor": {
          "ref": "ce108087-2f6b-417b-b810-c78491933a73",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dfa46098-dd20-46b8-9002-927506572276"
        },
        "item": {
          "id": "11bb7f51-b7b1-4aab-9207-35f973969552",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "01dade06-3ed1-4437-9f1a-def78acdfb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b749d187-0938-48d5-8d2f-bafe4ec31066",
        "cursor": {
          "ref": "ddc2578c-9ec1-4fc8-a228-f31b724c8d90",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "954663c0-5424-4451-865c-6c57c4cce9c6"
        },
        "item": {
          "id": "b749d187-0938-48d5-8d2f-bafe4ec31066",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "63bd7b11-7eba-48dd-98f3-a329e331c7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df546f65-f9ed-4e57-b483-ca632158eb57",
        "cursor": {
          "ref": "e720dad5-c792-4846-91a0-a92cb92a436f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fb622ed9-421d-47aa-9578-a62ea3c50e08"
        },
        "item": {
          "id": "df546f65-f9ed-4e57-b483-ca632158eb57",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "986b372c-d21f-4cf1-a989-1efcaa62024f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216ba3ba-47a8-4e2d-bdd7-a69d735a9f2f",
        "cursor": {
          "ref": "5e1cd612-6454-4fb1-b7a8-370f10e5be8f",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ac9b91ed-54c5-4d87-ae61-9859933cd380"
        },
        "item": {
          "id": "216ba3ba-47a8-4e2d-bdd7-a69d735a9f2f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0631354d-8f8e-4b81-80c1-36f01d12d410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513e5f9a-4a15-49f1-bd5a-fdf7ca657b2b",
        "cursor": {
          "ref": "604709bd-0269-43a5-8cfb-22a606f16678",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "cd4e85e2-a910-429c-a3e4-f3dba2f99b6c"
        },
        "item": {
          "id": "513e5f9a-4a15-49f1-bd5a-fdf7ca657b2b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0931b662-db17-4c78-9d55-448be9c578c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07ca3c3-d4a6-4387-9263-921864d8c951",
        "cursor": {
          "ref": "29a13d45-9080-4f9d-9951-c4defb42d770",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "22905682-bceb-4d69-8865-8aff0b7ae868"
        },
        "item": {
          "id": "f07ca3c3-d4a6-4387-9263-921864d8c951",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "40666f4c-62e1-4e36-b21e-1ae3d2ca3479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6c1cb7-828f-453b-9507-4367944e6e6a",
        "cursor": {
          "ref": "dd337586-5a8c-42ca-b338-76cb826b327d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9cdcdc28-167b-4fc1-b03f-93fc486c1bbc"
        },
        "item": {
          "id": "9d6c1cb7-828f-453b-9507-4367944e6e6a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1ac1bcff-adf7-467c-bae8-b2d80b2bf2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc6bb9f-c239-4742-9f50-d98c319ace6c",
        "cursor": {
          "ref": "9cf12433-2860-4b2f-813c-7c00767e1acd",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "be2b3cf1-4953-420d-bad1-5027400f4779"
        },
        "item": {
          "id": "8bc6bb9f-c239-4742-9f50-d98c319ace6c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cf523f3a-ae8f-4d58-9cda-697df90fc6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68d6a90-1b25-4950-a921-942522d14a1d",
        "cursor": {
          "ref": "a06963f5-ce2c-4ff5-85b8-c2a181a9982c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ac28d6d4-02ce-4837-ae27-54ba8c8437ba"
        },
        "item": {
          "id": "f68d6a90-1b25-4950-a921-942522d14a1d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d0357f36-7e58-4bdd-a7ea-d6626deb0e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b541bf-86d0-4a4d-972c-c6f99fdd57a6",
        "cursor": {
          "ref": "8a41c03c-fb07-41b9-a313-f64fccfbf626",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "85983f41-a156-4fd5-a753-7569b7c2b626"
        },
        "item": {
          "id": "31b541bf-86d0-4a4d-972c-c6f99fdd57a6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d07c02e3-bcf5-42a7-bbf5-a7d438ca6df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb90e49-cc53-4400-ad35-61fc4c539a82",
        "cursor": {
          "ref": "af285acf-eff5-4e8a-9f67-f24535d0e574",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "41410896-cf5c-40a1-9556-55bc50e44777"
        },
        "item": {
          "id": "3eb90e49-cc53-4400-ad35-61fc4c539a82",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6277e37b-7676-41d8-b1fc-4ab36d9dce0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc51a8f1-a8eb-42b8-a6e3-3ff7305afbd6",
        "cursor": {
          "ref": "16da8755-a1b7-47e2-aa7d-41b65e4e7c1e",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "54b1c96e-4483-443b-bce5-a21a7a3beac6"
        },
        "item": {
          "id": "fc51a8f1-a8eb-42b8-a6e3-3ff7305afbd6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "41cbdde3-0a71-4d4b-b780-9d4863c0f3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626f11fa-36c9-4ca5-814e-45df447327e3",
        "cursor": {
          "ref": "bd655c04-3ed8-4c27-8d16-c00bbc44805d",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e6d24fa3-f444-46a9-8e36-e74b350e2b1c"
        },
        "item": {
          "id": "626f11fa-36c9-4ca5-814e-45df447327e3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c066afd9-267b-4eaf-90e7-9fa8db2da1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1818e48e-998b-4660-b5ab-a0505fdcbf96",
        "cursor": {
          "ref": "7beb86a1-15d4-4be3-83e1-46063555386a",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5ecb3890-613b-4467-81d1-45cba2717f71"
        },
        "item": {
          "id": "1818e48e-998b-4660-b5ab-a0505fdcbf96",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0544c854-cc94-4484-8bb5-0e0fc0872bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa93943-a771-498c-889f-4dababe8350d",
        "cursor": {
          "ref": "f4ba9a63-5aec-4cce-88a2-03aca6397645",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1507d834-652d-46ee-a720-29de73adc808"
        },
        "item": {
          "id": "6aa93943-a771-498c-889f-4dababe8350d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a1fa97d6-7ed3-4f1a-b763-df7c38b6ae19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17972b24-017a-4d94-8ae2-d1b00207a63e",
        "cursor": {
          "ref": "b80e397c-8e5a-441d-8ee8-c20e77431f15",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "66e672c3-ed61-4aba-b946-1c94e0a874c2"
        },
        "item": {
          "id": "17972b24-017a-4d94-8ae2-d1b00207a63e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "287272af-7006-41b1-ba8f-7738b7c53256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38de6df6-efd8-48ed-803c-4292b84ded84",
        "cursor": {
          "ref": "037dca3f-eda9-4b03-9c3f-d2e33743303b",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b1f5a9d8-bd80-4ed4-9689-def79f1bece7"
        },
        "item": {
          "id": "38de6df6-efd8-48ed-803c-4292b84ded84",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "dd8c487a-a703-4c52-ae14-93bfadf1c922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba45fad5-d5e1-47ed-a786-cf3daa45da1a",
        "cursor": {
          "ref": "d4e7e873-7818-4c0a-9e93-f1096f94c255",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "78094aac-7d63-4e9c-8848-22826fbfd13f"
        },
        "item": {
          "id": "ba45fad5-d5e1-47ed-a786-cf3daa45da1a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a368b100-76a3-4c34-b8dc-608a179542ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c578c385-a623-41f7-99ff-529778e7a45a",
        "cursor": {
          "ref": "cb37b65a-1d6b-4a44-96c1-01a847608057",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1644ac0a-5196-45e6-a8b7-9ce16350aeac"
        },
        "item": {
          "id": "c578c385-a623-41f7-99ff-529778e7a45a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5653e8be-1c3e-424b-b3ed-49c9feb2dd6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c5dc81-a875-4e0e-bc43-2677e0cdfd87",
        "cursor": {
          "ref": "05ecb032-47a7-4e64-bdff-74ad5d43c474",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0f9a2426-aec0-4f51-86ae-840a63339ec3"
        },
        "item": {
          "id": "c3c5dc81-a875-4e0e-bc43-2677e0cdfd87",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4eb5d53e-15a9-45b0-b172-4a92059b1ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e791214-6c03-48ba-bb79-9a7fd38d84d8",
        "cursor": {
          "ref": "45236fc7-22ee-45c2-ba53-5d71789615a3",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "20dca88f-06c2-4d59-96f0-210e48daf07e"
        },
        "item": {
          "id": "9e791214-6c03-48ba-bb79-9a7fd38d84d8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7812036b-5810-4acb-9af5-9db8102ff808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cc1a39-9951-425b-bd16-6d79ed685f5a",
        "cursor": {
          "ref": "99b437a6-b64f-4a50-8425-bc7378a883fb",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6bac9d9e-dd00-4e74-b4ca-20897e141ba1"
        },
        "item": {
          "id": "94cc1a39-9951-425b-bd16-6d79ed685f5a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "556f7bef-77ae-4673-a84f-2975d8c5c81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67af8e1-d604-4af5-9a90-9769286808e8",
        "cursor": {
          "ref": "89690dcf-c375-4366-b7e5-a3659a60c84e",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "dfdbddd5-cb65-4da7-bd04-9522a1fb1979"
        },
        "item": {
          "id": "a67af8e1-d604-4af5-9a90-9769286808e8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6d69773f-b3b8-4bc7-a15a-cd3eeb5d08c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdff4903-8769-4c6b-9d9b-41bf828c2e73",
        "cursor": {
          "ref": "4271f01a-bc70-4f79-86ee-4b4202084696",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e3744010-b4bb-4a55-bf21-0856dda2ab29"
        },
        "item": {
          "id": "fdff4903-8769-4c6b-9d9b-41bf828c2e73",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7cd88b94-1d60-431e-90f1-97cdbd6f77ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333d9724-0ddc-4d1f-84b7-021ec0eeb796",
        "cursor": {
          "ref": "458ef495-4ebc-440a-85ea-700c521cafbb",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9f04bae3-6f11-432c-ad5d-20749c242948"
        },
        "item": {
          "id": "333d9724-0ddc-4d1f-84b7-021ec0eeb796",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "66cf1a89-14ce-49ac-b9cb-d98cffa6ee7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad92fcf-ef8f-41ca-8328-603567563b9b",
        "cursor": {
          "ref": "6156bdaf-474d-43c3-b512-b356738e1758",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7bb839a6-2315-403e-9dc3-40df00d5b02d"
        },
        "item": {
          "id": "3ad92fcf-ef8f-41ca-8328-603567563b9b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "40b22ef9-66a6-4da3-b5fa-4505f2f114df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07232b4c-ac64-4540-ac58-6e6fc92d0ce9",
        "cursor": {
          "ref": "508d7918-16a3-4d7e-bc67-0d468504aa5d",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1ba9f97a-c98e-4a4e-98b4-3b8fc95e288f"
        },
        "item": {
          "id": "07232b4c-ac64-4540-ac58-6e6fc92d0ce9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f8efb9fa-6385-4730-b846-2cbe66f0e828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0331e74d-27b7-4241-ab58-b6ddeb666e8a",
        "cursor": {
          "ref": "64933d1c-ed65-49c4-8467-ecda60dab5cc",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c06267ec-7d23-4835-af81-d481a8d5af01"
        },
        "item": {
          "id": "0331e74d-27b7-4241-ab58-b6ddeb666e8a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a26ade23-bcbd-47cf-8712-35345f671e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030214ac-9794-4ee0-b215-d2f0d41a31bb",
        "cursor": {
          "ref": "a4c06e72-aa40-4a9d-b7e4-1dc6acd513d2",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f454bd47-c51a-408e-acb6-a278cc7df992"
        },
        "item": {
          "id": "030214ac-9794-4ee0-b215-d2f0d41a31bb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "615a13e1-5298-4da8-a8be-873fb84ddd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a93744f-73d3-4db3-aea4-f9ce07024fcf",
        "cursor": {
          "ref": "32088693-4701-4369-b32d-e816d03498fd",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bc481fdc-2700-4f52-9db4-9b18c0ae6de0"
        },
        "item": {
          "id": "8a93744f-73d3-4db3-aea4-f9ce07024fcf",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a036220c-f97a-4cf4-a474-2d676388295c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f154fc-a30a-4f3d-bfeb-a58f51242e99",
        "cursor": {
          "ref": "dfcbbc59-a984-4a5a-be17-762bde75e7dd",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "98491bd8-1895-4f0e-9c4e-fb6d728ef2f8"
        },
        "item": {
          "id": "c8f154fc-a30a-4f3d-bfeb-a58f51242e99",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "64a88ad0-ec34-4c1a-bdb2-636adfeb6e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7e9b8d-2eb2-4ed1-b420-f25f484bf9cd",
        "cursor": {
          "ref": "37735756-4d6b-402c-a51a-af0596f988fc",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2c7079c7-da06-4ff6-91a2-dd74d2a496fe"
        },
        "item": {
          "id": "2a7e9b8d-2eb2-4ed1-b420-f25f484bf9cd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a9f80f1a-4169-42d8-b3ca-efd40f2f2c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4252d997-dd30-4c4d-b7e4-57d259b01622",
        "cursor": {
          "ref": "0bfb22be-7268-4a9d-8ca6-f2019423215e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6feefad1-fac0-4ace-bb98-746d79dcda1c"
        },
        "item": {
          "id": "4252d997-dd30-4c4d-b7e4-57d259b01622",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2bcb3895-031b-4797-bae4-e38f5f587e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880bb80e-c208-4966-81fe-cad3717e8144",
        "cursor": {
          "ref": "1271faf6-b317-4c94-9abb-3cd0bc85418a",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d129b5ef-29c0-4ede-b8f2-4ea74a54b426"
        },
        "item": {
          "id": "880bb80e-c208-4966-81fe-cad3717e8144",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "781cd19c-c2ae-414c-add4-805a753eacd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b247232-3ef0-4cd6-9948-7cf4d1a4272a",
        "cursor": {
          "ref": "82094314-ba0f-4ef3-a0e8-4fcd2bf893dc",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "314ca82e-6e51-4c4d-a839-961c7727293c"
        },
        "item": {
          "id": "9b247232-3ef0-4cd6-9948-7cf4d1a4272a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a4f48991-b008-47de-a24d-1b6150aeb269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce705d8-f7dd-4882-a4f9-baa46d7c4e91",
        "cursor": {
          "ref": "0ddb3061-f84b-4957-a0d0-cd240618f898",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "63e888a7-0c7b-407c-9c78-a3586ae94c82"
        },
        "item": {
          "id": "2ce705d8-f7dd-4882-a4f9-baa46d7c4e91",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1140951e-5595-45a3-9e4c-432af1edd728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c69eb4e-2f8b-4b84-be2d-a1c578706e46",
        "cursor": {
          "ref": "7bb639d2-cf1a-4677-8975-0de00aaf15c1",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7729bb60-94fc-47c1-9537-ae5dbd0e1767"
        },
        "item": {
          "id": "2c69eb4e-2f8b-4b84-be2d-a1c578706e46",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "38f51097-8b58-403b-94de-8c295130c35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c415873e-8cd0-48c6-891b-340b09a87c2e",
        "cursor": {
          "ref": "a1f9ff96-a731-4996-9ab9-7d33a04dc903",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2624397e-c675-43a1-bbcc-f6bc59a748e1"
        },
        "item": {
          "id": "c415873e-8cd0-48c6-891b-340b09a87c2e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ef36361e-552d-4132-b543-79d02738da3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbce408-0eaf-4e91-afb4-91bf09f6ec12",
        "cursor": {
          "ref": "ec870515-7add-4747-ad9f-98f0f5708003",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3670d8ff-6f9f-4ed7-b23c-98ed1e3f041f"
        },
        "item": {
          "id": "2fbce408-0eaf-4e91-afb4-91bf09f6ec12",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0bf597d5-0bdd-41a3-81d3-1a0a2242b671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08140b8f-0215-4531-a61a-455dd3af2b81",
        "cursor": {
          "ref": "8c6aef13-c14b-4b49-b309-c28f389ca2df",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fc084a9f-465c-4a87-94b7-38b46f9551b6"
        },
        "item": {
          "id": "08140b8f-0215-4531-a61a-455dd3af2b81",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "671e6fcd-c827-4719-b7b7-b6fd527d427c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f968bb-6da3-41fa-8482-b6ac77fa9dbf",
        "cursor": {
          "ref": "9a4ae9e6-df76-4964-840d-90a0ceb60730",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "46d87e53-baee-4314-8114-f9004c0a55ce"
        },
        "item": {
          "id": "76f968bb-6da3-41fa-8482-b6ac77fa9dbf",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3ce7c1c1-2335-4f9e-904e-6c6b2f7a1465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a7b632-4c89-41c2-98b9-a30d32fa5a2b",
        "cursor": {
          "ref": "225aa1fd-4e60-4265-a929-06775be7769a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "860ad93b-47b7-4358-af9d-40c20a732995"
        },
        "item": {
          "id": "c9a7b632-4c89-41c2-98b9-a30d32fa5a2b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e6a2fab4-249b-4d41-979f-8f3e0fa51f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26836251-2c66-40f1-9e8f-533ba507e9e6",
        "cursor": {
          "ref": "c283f944-e907-4c9f-84e6-4180e7222a91",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "703360f6-3d8b-43d7-bbee-265a220a3e44"
        },
        "item": {
          "id": "26836251-2c66-40f1-9e8f-533ba507e9e6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "eb7b2885-224a-4e75-b7d3-236e91cf9925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd4bd28-8c00-4df6-830b-68e0f5b5c1f2",
        "cursor": {
          "ref": "49a94dfb-7e85-43cb-b721-7ed4a50afc71",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1a86755e-8062-4163-a21b-cd792fba9e9e"
        },
        "item": {
          "id": "0cd4bd28-8c00-4df6-830b-68e0f5b5c1f2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c5e5db64-4642-4275-b0b6-03e30a0ecffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac12757f-370c-4511-8fbb-399a543b817f",
        "cursor": {
          "ref": "4fa60658-d6c7-4478-9734-1a1a14f2ddd9",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cf0a1865-1caa-4934-b855-6f75e3745091"
        },
        "item": {
          "id": "ac12757f-370c-4511-8fbb-399a543b817f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "784c11bb-d698-405d-8524-5582613e9722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693593d4-b863-485d-bc32-e91efb59f816",
        "cursor": {
          "ref": "15f4ab83-7883-43c4-a848-c26c1d2ae232",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "73629c5d-e14f-4101-8853-80ddee18340a"
        },
        "item": {
          "id": "693593d4-b863-485d-bc32-e91efb59f816",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c5e1a156-a9b8-4ef2-8cb4-0060eda18734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f467858-c7e9-413f-aace-a0e3003024af",
        "cursor": {
          "ref": "03e92e90-521d-4d00-9272-7c960dd26f4d",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ca4dfe92-d86d-42c4-9678-5c5c4007836f"
        },
        "item": {
          "id": "4f467858-c7e9-413f-aace-a0e3003024af",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1990177e-2149-409e-9e75-5be0e20d8cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7825642-4298-4cae-92ed-38860c68cba6",
        "cursor": {
          "ref": "b3c4caee-e196-4c2b-a9e2-4a87c7dc5ea4",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "671dfb4e-c614-4804-8af1-105d20a10967"
        },
        "item": {
          "id": "f7825642-4298-4cae-92ed-38860c68cba6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9624cb66-b075-4a6c-9428-e0ceaa06f842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a34418a-9fb7-4dc4-85c2-6b7dabb3049e",
        "cursor": {
          "ref": "a6aa3b13-9627-4ab9-9e87-d219037f2e66",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f0dc7d2a-a6c4-413a-9e38-c0ed3f8d584e"
        },
        "item": {
          "id": "1a34418a-9fb7-4dc4-85c2-6b7dabb3049e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "444134dd-8e9f-41f1-8bc1-69d712fdbf10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a8485f-c802-4c17-9a94-c6057bd7f5c8",
        "cursor": {
          "ref": "3e767505-8f03-403b-95b7-785516423f0f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "223ba6a6-df18-4603-9957-59b92fd90419"
        },
        "item": {
          "id": "f6a8485f-c802-4c17-9a94-c6057bd7f5c8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1c0a50fa-61b7-4d4a-9186-d62b9674cf60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0488cad5-8afa-4fc4-80c0-0e9f47611879",
        "cursor": {
          "ref": "d106027f-15be-4cf2-9801-f3a3b1bf8c77",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9d7d922c-12aa-473a-8211-68dcfaae1363"
        },
        "item": {
          "id": "0488cad5-8afa-4fc4-80c0-0e9f47611879",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "87b5a842-06f4-43ef-8049-68d6b323c9ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f312e3-329c-4105-956e-d5ee90da6d68",
        "cursor": {
          "ref": "c819713d-1623-439e-87a4-f79362bf1c8d",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4641b788-4b86-485f-86c6-05a112e372a8"
        },
        "item": {
          "id": "e7f312e3-329c-4105-956e-d5ee90da6d68",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "cbf85a2a-bf20-4279-8f4b-ce1d892fb06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4ee15fce-e30f-4ca5-be61-72e601a045ed",
        "cursor": {
          "ref": "539362b4-8576-4ceb-ad91-9fc0f9a01ddb",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7f564479-97c6-455d-b5e1-29bcdc8fc364"
        },
        "item": {
          "id": "4ee15fce-e30f-4ca5-be61-72e601a045ed",
          "name": "credentials_issue"
        },
        "response": {
          "id": "657082b1-21d9-4368-a967-639545b3c115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "01bfa715-a2a6-48be-a8a3-7ede4b9f73cc",
        "cursor": {
          "ref": "e44dc70a-8584-4c6e-9688-dbc08f819892",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "360b86c4-edcc-4437-ad26-203d35231a41"
        },
        "item": {
          "id": "01bfa715-a2a6-48be-a8a3-7ede4b9f73cc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3afb2538-0d01-43c7-b3ac-7b7f0fc3f860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2730ee4a-8068-4953-917f-001caa906dcd",
        "cursor": {
          "ref": "904ea945-bee2-40f1-b22a-26b56b03742d",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "24e0f0e2-4c8e-4302-8ed1-de356628bccd"
        },
        "item": {
          "id": "2730ee4a-8068-4953-917f-001caa906dcd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7df3ca2f-bfd7-4975-824f-13d9251ae905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e4c66dfb-7065-4bd4-a91d-7a75a530c930",
        "cursor": {
          "ref": "8884025d-3663-4b55-a68d-dc7193088fac",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c9f700fc-0fc4-4015-8c31-350b54f7f063"
        },
        "item": {
          "id": "e4c66dfb-7065-4bd4-a91d-7a75a530c930",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "38932af5-42c2-463c-a26c-e9c36323fa77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "c8a444c3-f488-45da-8a2e-c59c9966cf9f",
        "cursor": {
          "ref": "67cfa21c-a5b2-42d0-8434-63b0cba28fd8",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0b95ff86-29ff-4077-b68d-d200dd927c4a"
        },
        "item": {
          "id": "c8a444c3-f488-45da-8a2e-c59c9966cf9f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4388b8a8-df7f-47ca-b4ab-1187088c006a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "96455c97-b045-4a05-a7ed-5a9cdada4950",
        "cursor": {
          "ref": "942699ba-019c-482b-8fa6-195796487486",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2f586ec2-1b9e-4ab3-a6a4-c29df987150d"
        },
        "item": {
          "id": "96455c97-b045-4a05-a7ed-5a9cdada4950",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e999121e-43ad-4b31-8570-932c514622be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "2baf7e48-fabc-46d9-92e9-5570dc493775",
        "cursor": {
          "ref": "27e24abc-0ac1-4808-a22f-0ea7db66723b",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cb453efe-0efa-4351-8504-27c0cab0d850"
        },
        "item": {
          "id": "2baf7e48-fabc-46d9-92e9-5570dc493775",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a5a1ff56-6ab0-4f64-992c-338727833feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d29526-4a33-4031-a127-f899c54e5838",
        "cursor": {
          "ref": "35ae131f-2674-4bbe-a104-643d95ca558d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5589ad7a-fda0-4e25-aed3-19e6f366ff44"
        },
        "item": {
          "id": "47d29526-4a33-4031-a127-f899c54e5838",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "321fc46f-c7e1-4177-9733-a507dce48075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07502a13-01b9-422a-bdfc-67343d971cfe",
        "cursor": {
          "ref": "ee19ea26-5ed4-4b35-88e0-67bce9e32b78",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "93c3e5cf-24e2-4a93-aefa-31239d8875d7"
        },
        "item": {
          "id": "07502a13-01b9-422a-bdfc-67343d971cfe",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a260f9ee-4bc0-4bfa-9920-6e01e4883593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220be69a-8035-4d6d-bd2d-f366bbfd6089",
        "cursor": {
          "ref": "db8d5a6e-e1ac-4c26-bd60-859f35557fc0",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "db6e68e7-2f53-42e2-8011-75af4e58f3e9"
        },
        "item": {
          "id": "220be69a-8035-4d6d-bd2d-f366bbfd6089",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cad62662-db54-40c7-97c1-eef1bce931d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952e154e-e874-4bea-841c-7d0f563d86e0",
        "cursor": {
          "ref": "12ff4f69-70e5-4570-80f4-6c03f242899c",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "632b0c3a-2a61-4b38-8e7e-dbc256d4f34f"
        },
        "item": {
          "id": "952e154e-e874-4bea-841c-7d0f563d86e0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9810deaa-62c8-4afc-88a2-eb1c4a60d00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0bed7a-90ed-4570-96b5-99c5a6eaa90d",
        "cursor": {
          "ref": "1ce1a768-b32c-4326-958c-e881c6081a37",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "63eff6ac-4a88-4ce6-9c5e-e4de60f85e00"
        },
        "item": {
          "id": "ea0bed7a-90ed-4570-96b5-99c5a6eaa90d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c78aed88-8c0b-4cf9-8ff7-c222a3fb33f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3420aa6-ad3d-4af3-90ae-e39139765ec7",
        "cursor": {
          "ref": "7755278e-7f8c-47eb-909a-b704f24134fe",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4f66eca2-7f46-4ee4-b0ff-ad82b46ab68f"
        },
        "item": {
          "id": "c3420aa6-ad3d-4af3-90ae-e39139765ec7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f5f842f0-6037-4aed-bce7-62e6ea1c2d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf1761a-2ddb-4728-8a81-3c06f37ca9cb",
        "cursor": {
          "ref": "e5c1831f-83b9-4c5e-9e4b-b6de6ab95ab7",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1d455e68-6736-4e47-8660-c9854a1ab2ff"
        },
        "item": {
          "id": "6cf1761a-2ddb-4728-8a81-3c06f37ca9cb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "08e9ea5a-308f-4cae-9d04-9fdcf78d7aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2007fe9-61e2-4cd2-b8f6-a7018c72cff4",
        "cursor": {
          "ref": "ea7bf5a2-4079-4fea-98ed-864401685322",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "703a18ef-cc39-474a-96b8-57306ebe0455"
        },
        "item": {
          "id": "e2007fe9-61e2-4cd2-b8f6-a7018c72cff4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "614390a4-5dee-462d-8e48-60b6d3774246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b572e10-09ff-4cc1-b0ff-c780a414bf8c",
        "cursor": {
          "ref": "bd422c74-a899-44a5-9a9e-e73133e53ae8",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6440aa0a-8a39-4c85-b0c4-1bfe190a129a"
        },
        "item": {
          "id": "1b572e10-09ff-4cc1-b0ff-c780a414bf8c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a2e97420-e792-4d77-811f-900983d8bfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3305b3-b1e7-4bf4-af4d-9f517b6491dd",
        "cursor": {
          "ref": "83b4996f-09af-4396-a080-09a7c37e2548",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "15e3c51a-7960-43b2-b9f5-afd3a7fba56e"
        },
        "item": {
          "id": "5d3305b3-b1e7-4bf4-af4d-9f517b6491dd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f277885c-f7a1-46bd-81aa-01bb8d204b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d75888-0347-4fe7-8ea5-121b64a7790a",
        "cursor": {
          "ref": "08285109-5e7b-43c9-b1f6-1f9a98b11497",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "95f7f0d6-b4f8-486e-81da-0690b19cc656"
        },
        "item": {
          "id": "e0d75888-0347-4fe7-8ea5-121b64a7790a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cd018276-150a-428e-9eab-6995c2f38e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bf4aa7-e882-400d-8cfd-60238cc3519b",
        "cursor": {
          "ref": "09607283-5875-4943-8ea0-8497e6a1490f",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1ced0a8a-f963-458a-978c-7d779492da3c"
        },
        "item": {
          "id": "e9bf4aa7-e882-400d-8cfd-60238cc3519b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "dd58a7e4-5d40-485c-8472-0751e4953954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf938d4-9d8b-45ab-8715-664b6cf8ed3f",
        "cursor": {
          "ref": "6c4120ff-55f9-4dd1-ac43-a747d1f8df85",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c826de09-5f7a-4eb5-b1e1-22a8a4a3af13"
        },
        "item": {
          "id": "6bf938d4-9d8b-45ab-8715-664b6cf8ed3f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "990246e0-cd8b-4cd8-9a69-9ad614849240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43e5013-64c2-459a-be02-52c90c654f4c",
        "cursor": {
          "ref": "ad1a38f1-9041-4ae5-90fe-eee619550610",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9f5a68cb-ecf4-414d-ad62-fd443c1af30e"
        },
        "item": {
          "id": "a43e5013-64c2-459a-be02-52c90c654f4c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f460d5c6-00d4-4aa5-9f43-60126d14519e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df47f03a-2300-404e-99da-51a278c14a43",
        "cursor": {
          "ref": "a302f032-7da8-42dc-a1eb-a7dc674e8284",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e10aaaaf-87ab-4803-ab66-c2de95356377"
        },
        "item": {
          "id": "df47f03a-2300-404e-99da-51a278c14a43",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "92d23846-64e7-45fb-956a-0656fde298c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6587131b-7462-4e6d-9034-0733944bfb88",
        "cursor": {
          "ref": "82c0e41e-db5e-48b1-b9b4-32a5f1774670",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a99b648c-fac1-483a-b35a-9f6f0c95f86f"
        },
        "item": {
          "id": "6587131b-7462-4e6d-9034-0733944bfb88",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b234a660-8381-496b-92e3-aadcaf24207c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b70d89f-2588-4c5a-9d99-de85b4e945fd",
        "cursor": {
          "ref": "ccb39c6a-c0f0-4657-b18e-09ce8d67fbaa",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b8ed5852-69bc-4057-a504-bc349b252718"
        },
        "item": {
          "id": "5b70d89f-2588-4c5a-9d99-de85b4e945fd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e0b47041-eef0-4e04-bfae-eef0331c19ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7eb553-d37f-4df0-aa0b-5ca6a5a3d5c0",
        "cursor": {
          "ref": "46b6bddb-5929-415d-990d-cea4f18c9a9c",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "da2917cc-2c8a-42c4-b378-93794f6b1495"
        },
        "item": {
          "id": "fa7eb553-d37f-4df0-aa0b-5ca6a5a3d5c0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "17b3f42e-4e30-4c5e-8205-233d1e10a3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834d4fc4-0998-4328-9e35-cb7df31986b5",
        "cursor": {
          "ref": "a944e727-f8e7-4100-b176-fd89f3bb288d",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "219c3ba8-a736-4f9d-8d65-21567edc5012"
        },
        "item": {
          "id": "834d4fc4-0998-4328-9e35-cb7df31986b5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "26e2f33d-712e-49a6-a5dd-b26a2bf74228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4348d42-e5a3-44a4-8511-e631cf020ef0",
        "cursor": {
          "ref": "22acb4cf-0923-4de1-8506-076db1aa5dd3",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "20f31479-85d9-45c0-abfd-f10b28d85952"
        },
        "item": {
          "id": "d4348d42-e5a3-44a4-8511-e631cf020ef0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e4921bcb-b558-4e33-831e-10b304ff72e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6fd103-3d47-4f5b-a46b-b62d1626ee97",
        "cursor": {
          "ref": "82d4d77a-d821-4f0d-b3e4-21c86caedc20",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "35dc96d7-9df6-4357-aa60-60a17cc22f00"
        },
        "item": {
          "id": "5d6fd103-3d47-4f5b-a46b-b62d1626ee97",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fd4d71e7-b360-4516-8430-5a597a0356ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798e01ab-6614-4073-a952-d5c324ff65c5",
        "cursor": {
          "ref": "cee56058-ec99-4d71-94ef-eaf6f5044da2",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5bf71de7-d895-41a0-ae58-4f79f0334670"
        },
        "item": {
          "id": "798e01ab-6614-4073-a952-d5c324ff65c5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "827a53ce-365b-470c-b8c2-1e7a5a603eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6607e427-fd00-47a3-babd-6d4a89aada7d",
        "cursor": {
          "ref": "e5397248-abe8-4f22-bf22-f63d810387f6",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "aff622e7-b511-4039-87db-62f31047048c"
        },
        "item": {
          "id": "6607e427-fd00-47a3-babd-6d4a89aada7d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0677b0c4-69d9-4ac3-9035-9fb0b93be2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e49f727-8e07-408d-b688-e1d59ddd251b",
        "cursor": {
          "ref": "578adbf6-e344-40af-922e-9a4a10b16cf6",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ad52804a-41d3-41b9-87d8-ea359ccb39b9"
        },
        "item": {
          "id": "9e49f727-8e07-408d-b688-e1d59ddd251b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dcf70542-721d-4753-b344-64dc5b2f9906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1473175b-79a2-4a74-bdfc-f34d15576d41",
        "cursor": {
          "ref": "b3f3d135-a874-4ef0-a52b-887879c4ec0c",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c653a0c4-6416-43bf-8a23-dad87fb6e965"
        },
        "item": {
          "id": "1473175b-79a2-4a74-bdfc-f34d15576d41",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "53ae76b2-5e5e-4074-8fc7-98925d22ace9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1a07f9-9ec1-475c-b05b-f0e2a969da53",
        "cursor": {
          "ref": "1f66e045-32f0-46ef-aa30-ed5ba56c6470",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "176a5495-5978-4a35-a10b-c7f37773c835"
        },
        "item": {
          "id": "cf1a07f9-9ec1-475c-b05b-f0e2a969da53",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "60e93c21-3e20-4640-b315-8bdf7c2615aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc99053-9e3a-4846-a0dc-14990503b79a",
        "cursor": {
          "ref": "4aca2239-86c5-412e-a245-a78534417a79",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "35530ae6-ff31-4db9-9fef-f34f9743b62a"
        },
        "item": {
          "id": "5cc99053-9e3a-4846-a0dc-14990503b79a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bc650f2f-3d80-4f8b-ad6a-2097cb245480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fb58c3-ba11-4283-bdff-e08ca8b80eb9",
        "cursor": {
          "ref": "a36764fe-8192-48f4-a7e7-eae4743729dc",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8a4f40d4-bc06-46b5-beef-514e09826cfa"
        },
        "item": {
          "id": "b5fb58c3-ba11-4283-bdff-e08ca8b80eb9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2b5b771d-34a6-45e8-b607-241b34760fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd488ce-db7f-46a3-90a3-d34c3780e26d",
        "cursor": {
          "ref": "a91f112e-758b-4ae8-97d2-fec96095d77d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dbe094d1-c187-40e9-b599-713b21264236"
        },
        "item": {
          "id": "1bd488ce-db7f-46a3-90a3-d34c3780e26d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dcb0c3dd-0c54-4d17-bb87-37f9b5172cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfa19f1-28b3-4343-bb65-bd0297cd1ff5",
        "cursor": {
          "ref": "ccbf4303-717b-4a8d-9cb2-d0924f3ca48f",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3a82d63f-d213-4b87-bba5-0f72df3100d3"
        },
        "item": {
          "id": "7cfa19f1-28b3-4343-bb65-bd0297cd1ff5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "83ea3834-9b48-4d00-bd5b-f1e9f3e6bc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5db21f9-1b9b-4cfb-a5be-ba065d15783c",
        "cursor": {
          "ref": "da774e01-e4b2-4260-b44a-5c99a8c4bafe",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5197227b-36bc-406a-9035-1f57205ed499"
        },
        "item": {
          "id": "e5db21f9-1b9b-4cfb-a5be-ba065d15783c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "97ee06bf-dcd2-4b21-8cbb-d772032a9bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c15a86-d0af-443c-a1cc-672aff65a13a",
        "cursor": {
          "ref": "1170bcdc-3b5f-45bc-954d-cd9ea26c4414",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4db12d13-cb1c-4b39-84cf-b0652847914f"
        },
        "item": {
          "id": "d6c15a86-d0af-443c-a1cc-672aff65a13a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "79ca8f52-f530-4c62-9831-e85dd1d5c9f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da5e043-f760-456d-936b-dd8441ca9779",
        "cursor": {
          "ref": "6df398b5-ebf1-459c-936c-efd722dfa225",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d288c69e-df72-43cf-a2be-29c34abf2a16"
        },
        "item": {
          "id": "2da5e043-f760-456d-936b-dd8441ca9779",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d91745d6-be02-4657-a329-9304f6346119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff8e1dc-a68e-4bc2-9557-2bf9fa3b61f3",
        "cursor": {
          "ref": "d7f86db6-3f60-4e8f-b0ad-4c5b9c24c022",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5a991ea1-01ac-4f3f-ab82-2bfbe066f71b"
        },
        "item": {
          "id": "eff8e1dc-a68e-4bc2-9557-2bf9fa3b61f3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "eb328b1b-e00f-4910-89d7-2d15f6097b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee874d6-cdd3-4d23-91fd-a0950a3af952",
        "cursor": {
          "ref": "6dc1a6e1-0157-4894-b631-382a52e506b6",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b43e86da-4822-4c80-a68c-9a28b4f455cb"
        },
        "item": {
          "id": "2ee874d6-cdd3-4d23-91fd-a0950a3af952",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dacd84ee-662a-4199-888b-d392d2dc5d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6d039f-d572-44ea-905c-20a9ea51999f",
        "cursor": {
          "ref": "b4b15011-af95-4024-a167-86abef4b9e35",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "45a886b8-95ab-4680-996b-903dbe82b944"
        },
        "item": {
          "id": "6a6d039f-d572-44ea-905c-20a9ea51999f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "413fa3e5-7173-4c0c-b435-c637ded2b730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f394c1d1-da0d-44df-b795-632fa099e440",
        "cursor": {
          "ref": "d8613d2b-52a6-427a-b050-5bb319ab6194",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "512753d7-3201-4c39-8736-e21dd21e2185"
        },
        "item": {
          "id": "f394c1d1-da0d-44df-b795-632fa099e440",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c26f6245-7c0b-486d-bf39-a8d971bd581f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3b8369-0fb2-4be6-aeb2-4c632ad8a2a3",
        "cursor": {
          "ref": "44dacdc9-f3fa-4324-8ab4-992f73e7f03e",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cc6f31e4-c395-45c7-8450-03c389657ddd"
        },
        "item": {
          "id": "6a3b8369-0fb2-4be6-aeb2-4c632ad8a2a3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "44bd9fdc-5b9f-44d7-b853-86eea19cf773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac87bce2-4798-45d5-af14-3938dd8b32c5",
        "cursor": {
          "ref": "5a0f4093-845d-4270-8186-c660e03aa705",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e110646f-b3c2-474a-bf72-c7d6753143c3"
        },
        "item": {
          "id": "ac87bce2-4798-45d5-af14-3938dd8b32c5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "26d8b701-177c-4dad-8d95-58ffb1f191e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4325a0b1-ecd1-4a2c-98d6-a4071183770e",
        "cursor": {
          "ref": "4f0c16fd-a19f-4d5c-bab5-9460a6943210",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ecda6d90-e28f-4562-896f-4aaf326d3553"
        },
        "item": {
          "id": "4325a0b1-ecd1-4a2c-98d6-a4071183770e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "054e07d5-927b-4df8-97f3-e5782c9108a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbacc81-a04d-4ebf-9269-b47b33b13bb2",
        "cursor": {
          "ref": "ab81c32a-48c4-40d8-be02-7c2d6adfd45a",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4da68e7c-a0da-4477-a616-ee0cbe02dfce"
        },
        "item": {
          "id": "3dbacc81-a04d-4ebf-9269-b47b33b13bb2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6cfa92b2-6aad-414a-9253-2c912f3c041d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd49a8e-2bcb-4d2f-8f36-6f3c7cfa4817",
        "cursor": {
          "ref": "d7ebb9f0-2f3f-436c-89ac-4253a17ea30f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "73ab9833-67bf-45e5-b6ce-4717c0e11439"
        },
        "item": {
          "id": "8fd49a8e-2bcb-4d2f-8f36-6f3c7cfa4817",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9d214084-31cb-4603-980b-120e69ee20e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb73c35b-7327-4c5a-bff2-6f4979360310",
        "cursor": {
          "ref": "f4bf3824-9ddc-492e-b8fb-bbbce5539121",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "096d3ce2-ecaa-43dc-94d5-f192fa08cb0b"
        },
        "item": {
          "id": "fb73c35b-7327-4c5a-bff2-6f4979360310",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0562a2ce-27ce-4f76-8d7c-bf00b101145e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49347c3-34ba-42fb-a3a8-d2bcc5a60a10",
        "cursor": {
          "ref": "ab079c08-da66-42f8-8307-afb6e3baa664",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "43379b5b-819e-4052-9eb1-9dc552e47bc7"
        },
        "item": {
          "id": "b49347c3-34ba-42fb-a3a8-d2bcc5a60a10",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "143fd483-a693-43b4-9116-620e0d40b781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f68237-6a97-4d85-b927-b34daf9f6a28",
        "cursor": {
          "ref": "daab6c9a-a2e2-4745-9992-a421fc0d339f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "aa29b21f-2850-4f00-8d9d-067c7b82b5d8"
        },
        "item": {
          "id": "34f68237-6a97-4d85-b927-b34daf9f6a28",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8667838c-79f0-4fdf-b705-d5073028be1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39a0bfb-37f8-4387-8306-d02541ed5cca",
        "cursor": {
          "ref": "0636bb89-3a0e-457b-bffb-60548b8bf1de",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c987f0e5-62df-40b3-9f31-8505115adafc"
        },
        "item": {
          "id": "a39a0bfb-37f8-4387-8306-d02541ed5cca",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0a26cee8-d1a1-47d6-8bb4-c55d458319f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e716e4b0-b80a-4a5e-893e-d0d37ad174d0",
        "cursor": {
          "ref": "6ea189bd-4e68-4fa7-8b06-e3f4cebb3430",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "02a069ca-71b7-4386-b216-46ed3bf22db9"
        },
        "item": {
          "id": "e716e4b0-b80a-4a5e-893e-d0d37ad174d0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "59d700b2-a741-46db-901e-e84c271fed3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bc440f-badd-49fd-9210-f9ac7675367d",
        "cursor": {
          "ref": "8fc2c9b5-c911-4834-9719-e6a68f5cd7dc",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6fbbeac5-bc39-463d-b8cb-be15765d3403"
        },
        "item": {
          "id": "67bc440f-badd-49fd-9210-f9ac7675367d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "adbd6084-57f5-4374-95b2-beee51ae8621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7d7984-af61-4952-9daf-e4d79dbfc01b",
        "cursor": {
          "ref": "da133081-0566-4bab-b872-8a1d7e62ad0d",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c66c60c5-aae5-454b-8f62-c59efddaad57"
        },
        "item": {
          "id": "2a7d7984-af61-4952-9daf-e4d79dbfc01b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "544f17b9-3aa5-45d7-81c0-cd33b0a62b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518cf969-bc76-41c2-a6ba-2908ad70169a",
        "cursor": {
          "ref": "ac3b5e9e-419e-4c90-be38-99cc17a62950",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "11752112-ac66-4eb8-9167-2d89871eb0b2"
        },
        "item": {
          "id": "518cf969-bc76-41c2-a6ba-2908ad70169a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3eb6aa43-3094-4b2d-9b60-6b8ffddd53be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780ef116-a327-433a-86d5-783d7be81db9",
        "cursor": {
          "ref": "802d2f2e-1c79-43b8-9561-65b88b2e9130",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8f61716b-1960-4fea-919c-88fab96fb6c2"
        },
        "item": {
          "id": "780ef116-a327-433a-86d5-783d7be81db9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "996513e1-e3e9-474c-a94e-990237dae0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb5c3c7-2b17-427c-8460-8985cc260f78",
        "cursor": {
          "ref": "efe1bd82-873e-4042-86f4-dc68952b9312",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "acf0c0ac-db7a-43b9-98ce-248515cfb81a"
        },
        "item": {
          "id": "6bb5c3c7-2b17-427c-8460-8985cc260f78",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e6fe584e-95bd-4f8a-a9e0-ee24b2dcaf7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db98925f-28b4-456c-bffa-2cb8e8cbb840",
        "cursor": {
          "ref": "2b310c39-685d-4161-839d-04ea65543a8f",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9bffbf50-fd38-487e-bf10-92dec0ca33ab"
        },
        "item": {
          "id": "db98925f-28b4-456c-bffa-2cb8e8cbb840",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e59c45cf-78e4-4c59-95e3-2bb5fe316a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabbeb4e-11b9-4a11-a5c0-ebffc959c567",
        "cursor": {
          "ref": "f8522d72-5476-4303-8caa-fc31af24462a",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "72d57ed8-689a-4203-938e-a834b53318b0"
        },
        "item": {
          "id": "cabbeb4e-11b9-4a11-a5c0-ebffc959c567",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e30b4152-ba12-4f68-9932-116c2086b1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3790f9c0-24e1-4c2b-bf4f-f886df0e4aae",
        "cursor": {
          "ref": "bce19192-52cb-49d4-ad91-64ab311058c7",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6b2b295d-f43d-4565-8632-c70f0a08edcb"
        },
        "item": {
          "id": "3790f9c0-24e1-4c2b-bf4f-f886df0e4aae",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "197c9826-7285-454c-a19a-f58288fe6b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafe8cae-f03e-43e3-90fe-06128071fb23",
        "cursor": {
          "ref": "13f5e764-ab5f-48af-be9a-2daa4dfbdf5b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8dfbc0c1-9cd8-4eac-b5cc-5f01814edcb9"
        },
        "item": {
          "id": "bafe8cae-f03e-43e3-90fe-06128071fb23",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "62d4b843-c046-4e3f-aa4b-03575e70a965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a96159f-de72-4e80-a51c-47c1fb3af6d9",
        "cursor": {
          "ref": "62e7c040-d987-4bae-9b4e-949579807728",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "478603b6-d59c-4ae8-aaeb-6c2990fbbde1"
        },
        "item": {
          "id": "4a96159f-de72-4e80-a51c-47c1fb3af6d9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3a0b613e-15d5-4463-aa24-628f160cd6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c6ef2f-e8eb-41f7-952d-d8ed7563b886",
        "cursor": {
          "ref": "9362fede-10f5-4cb6-8ee0-8087ee02c334",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c2fb0e6c-290a-4031-ae6c-79584878a9e1"
        },
        "item": {
          "id": "30c6ef2f-e8eb-41f7-952d-d8ed7563b886",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5350e914-de68-44a9-9776-0c1aa0c5693d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c65073c-8dbd-4c88-b94b-752431c22e0f",
        "cursor": {
          "ref": "b7cf7698-270d-4abc-8582-b91b2d0e57b3",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1cf24cca-b81c-4f16-896c-7be6a73b9fbb"
        },
        "item": {
          "id": "3c65073c-8dbd-4c88-b94b-752431c22e0f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f42318dc-2617-4c6c-a3c6-5a3f957a85bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063274b8-0cc9-49d0-8e72-2f8920f1f087",
        "cursor": {
          "ref": "ea49366a-47dd-4f80-b269-35e185a0a404",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a0992846-3d23-4b04-bcd6-e4ea9ef479d0"
        },
        "item": {
          "id": "063274b8-0cc9-49d0-8e72-2f8920f1f087",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "462582b3-adf1-4e22-b7ef-5b40503951f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ba3c1b-9c57-4299-a269-a403529e2f79",
        "cursor": {
          "ref": "15b723af-ee1a-4d4f-81e7-1911b322bfc5",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e4b0a101-ea9b-41c5-9b4b-0918b8d28865"
        },
        "item": {
          "id": "72ba3c1b-9c57-4299-a269-a403529e2f79",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "16f5fdf1-2d65-4752-a23f-3321f8f5b3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f459ff-d19f-407d-91cf-9c686b2ff996",
        "cursor": {
          "ref": "23e1e3a5-7e10-41df-b241-13bc7aa71f0c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "589e0692-5d5c-4d46-9b7e-5285cfe7d917"
        },
        "item": {
          "id": "b1f459ff-d19f-407d-91cf-9c686b2ff996",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a8b81877-e0d0-4e1e-99c2-5cee5b78255b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed8536c-95ea-4a5c-8588-27f8cc2f6ecc",
        "cursor": {
          "ref": "991b124a-e36c-4422-87fd-6530212b4a15",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "62fa6a47-7004-4846-b46c-5bc70e94ef98"
        },
        "item": {
          "id": "6ed8536c-95ea-4a5c-8588-27f8cc2f6ecc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6dcbac53-175b-4e09-8d06-0b0ebaad5ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1e1710-6a67-4630-8aa2-5268c48d3ea8",
        "cursor": {
          "ref": "5a0f2da3-4df9-4015-b073-cdda961aa1c6",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1a9970f1-39cf-4eb5-ae7f-3f4c114001cc"
        },
        "item": {
          "id": "fa1e1710-6a67-4630-8aa2-5268c48d3ea8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "73c78976-f2a6-45a4-ae3c-b5205f42752d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c575a2d4-ed11-4814-8cbd-4b33c0e915f8",
        "cursor": {
          "ref": "b08f78b0-7127-4483-9c43-ed4af137e9b8",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "27c60f6e-112c-4d18-aecb-064b739ceff5"
        },
        "item": {
          "id": "c575a2d4-ed11-4814-8cbd-4b33c0e915f8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7f5326f9-cf48-4580-84e5-6fed9c49e785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc97a0ce-a182-4f35-9a21-18e50a1e20cd",
        "cursor": {
          "ref": "5b0d1f96-622c-4a3f-9e2d-94402373bbc7",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c5d17fbb-06f1-4fc7-965f-bf12f4cefa65"
        },
        "item": {
          "id": "fc97a0ce-a182-4f35-9a21-18e50a1e20cd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "69296bbd-4d20-423d-a795-458db80797c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1344ba-5791-4ccf-b0a0-56af3f76424c",
        "cursor": {
          "ref": "4a31e1e2-e38c-4d66-9981-8595e6237454",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "06bd37c5-39d4-4866-ab9e-5dad62383818"
        },
        "item": {
          "id": "bf1344ba-5791-4ccf-b0a0-56af3f76424c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9417bcff-dc5d-47fc-b96f-5aab771f23c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dab4715-c01a-43f6-8825-b2e13149e6b7",
        "cursor": {
          "ref": "43802498-c83c-4999-af57-0827adbc3ea3",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0db0ac60-0075-43d2-97b5-4281d21f4e00"
        },
        "item": {
          "id": "8dab4715-c01a-43f6-8825-b2e13149e6b7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "16a1a5e3-d2c3-4d63-8b03-6d16e6ac160f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365f9e77-767d-4c2c-8670-3e053d364dd2",
        "cursor": {
          "ref": "7cca3010-f347-4e45-9059-cf66a346648d",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f2a9f650-270a-48d0-8f5b-70ac5c019a4f"
        },
        "item": {
          "id": "365f9e77-767d-4c2c-8670-3e053d364dd2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "96a1ccc2-90cd-4753-b2ed-4806e77dc974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f5ee71-7da2-4766-a8f6-a98d316b87d0",
        "cursor": {
          "ref": "dca29b2f-46d9-4b9d-8c6d-daee283a74e6",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "56864675-8651-4848-9049-fd312f466ef6"
        },
        "item": {
          "id": "97f5ee71-7da2-4766-a8f6-a98d316b87d0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ca8c1e8e-579f-4ff0-9f84-2bdcff97726d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521df762-ffd2-4361-8cc3-d4f56748bccb",
        "cursor": {
          "ref": "19d64842-812b-423c-93a3-18a92075fd7d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cac18d26-30dc-4525-ab74-9b5bf76df731"
        },
        "item": {
          "id": "521df762-ffd2-4361-8cc3-d4f56748bccb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7afeee5d-eebb-458c-857f-61ba24f3b752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b082700e-248c-4a19-97a9-674d5fce3e82",
        "cursor": {
          "ref": "f23515c6-091a-4d6d-a946-4d9b5bd49ee3",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "42fd99b1-83af-4d11-9d5a-54fcd658053f"
        },
        "item": {
          "id": "b082700e-248c-4a19-97a9-674d5fce3e82",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c9ad6142-6951-4b41-b9e9-6e72ca15b9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6272619b-784f-4be7-9849-e9bc660e5056",
        "cursor": {
          "ref": "9cc23112-c68b-417b-a9f2-a06c16ec8787",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2c9515c8-33bb-4915-8be1-67fe927d8dc5"
        },
        "item": {
          "id": "6272619b-784f-4be7-9849-e9bc660e5056",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ef79607f-c6f0-4383-9451-a697ba9d5916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9414db-7b1b-4b79-b412-668ebcb30470",
        "cursor": {
          "ref": "4998ebee-dc33-47bc-bfd3-44f2b0257b8b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d20b18bb-feb7-4b2b-8cfd-b6d071caf806"
        },
        "item": {
          "id": "fe9414db-7b1b-4b79-b412-668ebcb30470",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b8d772e7-0189-4dfd-9df4-0a69553864f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0452c66-0df1-49a2-93e2-13f9444c191f",
        "cursor": {
          "ref": "c0f9d456-d6ff-48af-8fdb-02b162038a17",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "402a78ec-e365-4222-8231-cefd944fd307"
        },
        "item": {
          "id": "f0452c66-0df1-49a2-93e2-13f9444c191f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2803a45c-d5aa-44bd-a29a-289bc216f2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab592f75-14e8-406b-9619-0218a4187085",
        "cursor": {
          "ref": "b3936f1c-f77a-4ac0-a413-64f4fe92b93d",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "82ae5aa2-8376-40a6-b501-f36edc54d2ea"
        },
        "item": {
          "id": "ab592f75-14e8-406b-9619-0218a4187085",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "812c04b3-24dc-49ea-ab75-734b4bbd9ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d55592-d10d-4cd8-a22f-9d08fbc51444",
        "cursor": {
          "ref": "fc4e0069-158a-451a-9315-043dddad3380",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "79ea54ed-8b86-42e0-b56d-dfef54b2345f"
        },
        "item": {
          "id": "18d55592-d10d-4cd8-a22f-9d08fbc51444",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a195f86b-3baf-46fa-bee7-c9f8960af3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a860dc-58e4-406f-a757-1fada6d1d07e",
        "cursor": {
          "ref": "9e51541a-40ad-4310-8a2d-1a770c0622d6",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e6fbf786-1efb-4ef8-8e64-b771625a9547"
        },
        "item": {
          "id": "62a860dc-58e4-406f-a757-1fada6d1d07e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "07ec7a44-116d-4e0c-a361-b4ccb80bc952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebaab18-7cbd-441a-b70a-75b6ed425213",
        "cursor": {
          "ref": "5829037e-358e-41c0-af66-73b67093a9bf",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ae75a90f-6c38-4e6b-aa41-a5eefd3d3dc6"
        },
        "item": {
          "id": "1ebaab18-7cbd-441a-b70a-75b6ed425213",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ff090a18-9133-469a-870c-8aae8cb0320e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f69684a-0f73-4455-840f-5f3c65244558",
        "cursor": {
          "ref": "24f26ecc-c23f-4252-a23d-bf091c1d9db0",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "73016e5a-8d0b-43ef-a854-6d2f9bf4f741"
        },
        "item": {
          "id": "2f69684a-0f73-4455-840f-5f3c65244558",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fe46ea80-f637-4f98-9367-c4fedf4b539f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3666c3f-f239-4c7f-8db0-8b19e251fe72",
        "cursor": {
          "ref": "c9cb37e2-aa81-4f01-90e6-ce2fadf69b8a",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b29af0fd-afe7-4f8b-9e9a-c4d41a830645"
        },
        "item": {
          "id": "f3666c3f-f239-4c7f-8db0-8b19e251fe72",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5e680cc7-8867-4fd2-a48f-33bffe63bf42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ba3b1a-2688-40b1-b41b-b135fb527411",
        "cursor": {
          "ref": "23bb4d5b-8e61-46a1-a05a-4e384772ea4b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0fee4cd0-c10c-4478-801d-8552a47d1d20"
        },
        "item": {
          "id": "97ba3b1a-2688-40b1-b41b-b135fb527411",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "686afc27-e36c-4b63-a80f-6c4ded428815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39b34a2-a8f3-4974-9cc9-c22cca077aec",
        "cursor": {
          "ref": "66fa0008-85b8-4837-bff4-0fef06fb9ab0",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1b242b0b-4af7-4d5c-b541-24155e0608aa"
        },
        "item": {
          "id": "a39b34a2-a8f3-4974-9cc9-c22cca077aec",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3b40ba39-9258-48af-818f-b5a92bc9b08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306504b5-3fa3-49f4-9487-0919dae2c653",
        "cursor": {
          "ref": "6f1161be-1243-423d-ba7e-6b6d82f4e258",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a8be717f-eb12-4ee5-9e8e-c4e13f8af284"
        },
        "item": {
          "id": "306504b5-3fa3-49f4-9487-0919dae2c653",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ed1187d2-4c19-4f36-a1e3-6007fed42d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7a58b3-79b2-4bd7-8aa5-a85bd5fc9402",
        "cursor": {
          "ref": "92b45a27-2e0b-4cf5-a2c5-9b1603afc640",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "14f9e4e9-feff-4af3-b511-9452371a94bb"
        },
        "item": {
          "id": "af7a58b3-79b2-4bd7-8aa5-a85bd5fc9402",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "99f1c1e6-1ea8-4a78-a268-7b23e5e9bee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a662e6a-9ece-4a4c-afe7-b4fb993a3e84",
        "cursor": {
          "ref": "1a77920f-1309-4406-abf1-6b333304d5c4",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "dabe90d5-e290-42c5-9168-3262e9d307e9"
        },
        "item": {
          "id": "6a662e6a-9ece-4a4c-afe7-b4fb993a3e84",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "198bef36-f8e8-4b2d-85b3-47148c7b65c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b6bdff-7066-4cdf-ada1-f0bd0d82d3b3",
        "cursor": {
          "ref": "f0eafa71-55d0-4c99-a952-6d4e12f8e5bf",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "87cd93fa-f2b2-4e81-827c-f952189dba2b"
        },
        "item": {
          "id": "b9b6bdff-7066-4cdf-ada1-f0bd0d82d3b3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "897612cb-24e3-4bf7-a253-07a74b6968df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf8073a-c6db-43a3-a869-3ce4fe416643",
        "cursor": {
          "ref": "c056b319-4170-4805-a66c-514f4719c7a9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b8fa1cba-2b11-4687-bf85-f73953ef32d1"
        },
        "item": {
          "id": "ebf8073a-c6db-43a3-a869-3ce4fe416643",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "172dd627-eafa-49c4-8057-e1beda8130aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a856a2-d00f-4349-8bbe-2887468081cc",
        "cursor": {
          "ref": "85e55215-3b39-4a6c-96be-a4bb0ca62c3d",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9f6dd2db-d592-418b-98d1-ae21b7dac6ba"
        },
        "item": {
          "id": "31a856a2-d00f-4349-8bbe-2887468081cc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "58001d43-5ad5-4bf7-92b5-a276267a53cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46c5906-d860-4c4d-b94c-f96ee919427a",
        "cursor": {
          "ref": "69b09f3d-bbc5-4984-88e8-0f8d36434614",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5989a713-e78d-40c4-83e8-dea19c7f5862"
        },
        "item": {
          "id": "a46c5906-d860-4c4d-b94c-f96ee919427a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "06359997-16b7-4a40-9650-d5060d4f578c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e4d222-3602-4f2d-86b4-21f70b3eba4e",
        "cursor": {
          "ref": "28803ab9-84c4-4a30-aa73-b12187027e38",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "09ead234-fe7f-4eda-a629-592cd77b1eb8"
        },
        "item": {
          "id": "43e4d222-3602-4f2d-86b4-21f70b3eba4e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "80b7fe67-034f-4f70-b8b2-eb2dfeac3b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f933762d-3fdf-4f0e-91f2-c202987ba85d",
        "cursor": {
          "ref": "03abb6fd-85fe-4462-86d3-86774783f92e",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "707be919-09d3-4d5f-91cf-340cbc4071c9"
        },
        "item": {
          "id": "f933762d-3fdf-4f0e-91f2-c202987ba85d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ee789b0e-599b-4f84-a4d2-96f1864e9212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622a59a7-7dd6-4b5c-ba9d-a444bd0d5769",
        "cursor": {
          "ref": "3e707fc5-0e08-4ee8-93c8-738c3cf493f7",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "98d5f447-5d56-4af4-b59c-f9c6745ad815"
        },
        "item": {
          "id": "622a59a7-7dd6-4b5c-ba9d-a444bd0d5769",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e4810ac5-271d-4b86-8248-4004b3d2ed8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa9f25c-6ee7-4e21-901b-7318cf8b3ee9",
        "cursor": {
          "ref": "a2a81086-614d-4926-a5fb-d2a823cdef7e",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b38fb51d-8adf-490a-a7f2-e79436ebeea4"
        },
        "item": {
          "id": "afa9f25c-6ee7-4e21-901b-7318cf8b3ee9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d106f01e-3adc-416a-9b26-ab27ce0829da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168b8e85-5fec-4866-99e3-364ecba232ad",
        "cursor": {
          "ref": "da34d198-c321-4721-baff-10ded6c78412",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "be0741a1-5348-4082-ad1f-e3273814d281"
        },
        "item": {
          "id": "168b8e85-5fec-4866-99e3-364ecba232ad",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4b47a31b-dba5-4551-adb1-cbc0898dc731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c34ee68-6e3e-4cf6-993d-cd0ffd75b6bd",
        "cursor": {
          "ref": "0a4c9f80-ee53-4036-ad5b-41a5b2a2ca4e",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "efb5a9e5-7d75-489d-b144-91fa0f585281"
        },
        "item": {
          "id": "2c34ee68-6e3e-4cf6-993d-cd0ffd75b6bd",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f877d3a6-2577-4a91-b887-861908b93a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4e9722-3be8-45c8-942f-2a5e3aaab278",
        "cursor": {
          "ref": "55d9e2b0-bbf0-462b-8bc1-bbcbdcaf14ba",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1cd4e6a4-84ed-489e-92ea-ccf615405041"
        },
        "item": {
          "id": "3b4e9722-3be8-45c8-942f-2a5e3aaab278",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8c890abc-7665-43cb-90ab-63c980e9aaf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca722f85-86b8-4893-8ebc-24766aba8398",
        "cursor": {
          "ref": "f6d0ba8c-f6ff-4a26-8d35-5029ed63da2b",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5651af01-f2af-457e-8ef6-cf43b1dda484"
        },
        "item": {
          "id": "ca722f85-86b8-4893-8ebc-24766aba8398",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2d42d8d2-6ad5-4263-9dd2-39bc236c126f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d63fd3-a9ba-475f-83ce-289c5969871e",
        "cursor": {
          "ref": "ab37c7cf-8e22-4253-a2a4-7fa576f28bbe",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6981a095-3b46-40d9-9865-230ddeb8c59f"
        },
        "item": {
          "id": "63d63fd3-a9ba-475f-83ce-289c5969871e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "11fa1019-9ef0-401b-9d1d-a68a890d2f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4055b3be-ee2b-426e-bfad-a934cb5303a0",
        "cursor": {
          "ref": "506b8eb3-8caa-4352-aaeb-a1c0ef17b487",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "04a112b4-ff99-4808-98bc-927ca2dd01cb"
        },
        "item": {
          "id": "4055b3be-ee2b-426e-bfad-a934cb5303a0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5a0bab45-cf0e-465c-a61e-e761724d293a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d56a28-df62-4381-8736-5154778e52c8",
        "cursor": {
          "ref": "1b2638ba-037c-40bf-8666-955c3a40fa67",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "88227546-a429-4f5b-8871-de817c7ae323"
        },
        "item": {
          "id": "56d56a28-df62-4381-8736-5154778e52c8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ff623130-8e8e-41b2-83e4-7e0c7ff15fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d38c67c-0342-4a47-a220-1aa31ec9c982",
        "cursor": {
          "ref": "4d73e310-6706-44bc-8e06-d1de55a84b54",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8192ff6b-ae00-4fdb-ad20-e21d54c5639f"
        },
        "item": {
          "id": "3d38c67c-0342-4a47-a220-1aa31ec9c982",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d0aae452-f8fa-4ec4-b1d5-c4c10d8057cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b504bf-6710-4dd9-aeff-a59743a5f3bc",
        "cursor": {
          "ref": "2be622e2-1edf-4072-8af1-56b9bdd2df52",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8bc3aad1-7481-4b1b-b53a-11f08d305602"
        },
        "item": {
          "id": "59b504bf-6710-4dd9-aeff-a59743a5f3bc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e8f2c24f-4cb5-44ee-8897-3e1141768184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e835c5-0c80-4960-b936-d820879b304d",
        "cursor": {
          "ref": "14af3a61-416c-407a-af10-3c27cc644dad",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "70d1d27a-39d2-48f3-92db-3e0e5c781961"
        },
        "item": {
          "id": "09e835c5-0c80-4960-b936-d820879b304d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "909cd4ee-acff-4ba2-8603-dbe3c84573c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1886b591-70ae-4855-aaa6-1820a1f60f73",
        "cursor": {
          "ref": "2ff75b9a-eb0f-4810-97f1-275bbe11bace",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5c7d16af-5c89-4562-9b5e-8cf07c57ed5c"
        },
        "item": {
          "id": "1886b591-70ae-4855-aaa6-1820a1f60f73",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cf55eea3-aeb2-46aa-88fe-59bb2889c8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdb4e12-8295-442e-a00c-927e45de641d",
        "cursor": {
          "ref": "8cde146a-662c-4200-9599-4a8e8dcd2401",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7ca2b525-1e05-44c2-81d7-4a1c2befbf51"
        },
        "item": {
          "id": "9bdb4e12-8295-442e-a00c-927e45de641d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "829372d5-b437-4186-81b8-e68c01f364e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0e348a-0678-4edb-aa25-ea8587403617",
        "cursor": {
          "ref": "456f57f0-e17d-460c-bff0-6c195b2d6541",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b613f827-f8be-4e6a-9c17-91f74af2d9b8"
        },
        "item": {
          "id": "5a0e348a-0678-4edb-aa25-ea8587403617",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1addd14a-847f-4c75-878c-14c012d85ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a95a3ac-6149-4244-b82b-df8d33a140aa",
        "cursor": {
          "ref": "c10a982f-bfea-4936-b078-b167211031d7",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cc0e41e4-7a17-4f34-8571-a0052b5a0738"
        },
        "item": {
          "id": "3a95a3ac-6149-4244-b82b-df8d33a140aa",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "aa04fcf0-fc6a-4782-b0fe-cf85b4e25628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f173a2-fffd-4691-8582-439ac2100d4f",
        "cursor": {
          "ref": "d72e9d7d-e905-48a2-a900-c14907c0f42c",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "68d1cc97-cd2a-42d2-b71d-0e7a6a1fcc64"
        },
        "item": {
          "id": "f3f173a2-fffd-4691-8582-439ac2100d4f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0491aa49-e150-4c46-a98e-db347b40718c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd7c3af-f72e-4805-b396-ded4b48214cb",
        "cursor": {
          "ref": "644cfbe3-164c-45b7-bfdb-801e4ab8aee3",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b738e880-46c4-4ca8-b333-144e5903e3cd"
        },
        "item": {
          "id": "3dd7c3af-f72e-4805-b396-ded4b48214cb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9d7abf16-1f6d-4d1f-b6ae-0fb3a5803115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d18efb-dc3e-4ee5-9dbc-0279d88f4e12",
        "cursor": {
          "ref": "4c05d41b-2915-4747-8e66-689dee9eb78f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a2c058c7-6a17-444a-8b31-2926cce0f5b0"
        },
        "item": {
          "id": "27d18efb-dc3e-4ee5-9dbc-0279d88f4e12",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d721ccfb-1f29-49b7-bfb0-eb472432ce8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4a5ce7-f46a-444f-b011-017e8a19f917",
        "cursor": {
          "ref": "48ed3af9-4dce-48ff-853d-390c6982a0b1",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2b5ba059-5253-4daa-9e9e-800dc910f419"
        },
        "item": {
          "id": "7f4a5ce7-f46a-444f-b011-017e8a19f917",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3f8d4ea6-2c2f-4e2b-84b0-6882968ffeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9aa082-74a5-48ef-8a3a-1fd17e808e5a",
        "cursor": {
          "ref": "5d00da6d-e739-40c3-8ff3-0d17be4674a2",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5df50263-8e19-48d6-8fad-3acf1e556d7d"
        },
        "item": {
          "id": "2d9aa082-74a5-48ef-8a3a-1fd17e808e5a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "19448d68-47db-43ac-9e29-50e974465d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd78e3f-21d9-4bbd-a4c9-3a36f1bac74e",
        "cursor": {
          "ref": "a3d7c9a6-40c1-43e5-bcb3-50d94d51adaa",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "089d072d-29af-4da3-94c1-0d91c9ae3e07"
        },
        "item": {
          "id": "0cd78e3f-21d9-4bbd-a4c9-3a36f1bac74e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4782ddf9-2a9a-4107-a79a-3486c531478b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dae4a1-a3b7-40c4-a7d3-e92a0d07ee29",
        "cursor": {
          "ref": "69b6dd6c-3fc8-402e-b5b8-feef933d8136",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "edc1c91d-ab62-49ad-8215-e1a93e07c92e"
        },
        "item": {
          "id": "b4dae4a1-a3b7-40c4-a7d3-e92a0d07ee29",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "36d27e1e-31f8-4c4c-ae85-4272fe0d7b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7a6cb0-be12-4ae4-a370-a4950e767304",
        "cursor": {
          "ref": "795d8f13-2a78-40a4-a9bc-80a03fdc19b5",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "363ad828-1694-490e-be51-5ec9b5452584"
        },
        "item": {
          "id": "1a7a6cb0-be12-4ae4-a370-a4950e767304",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f17ffcaf-0909-4f56-a67e-b722263292d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd04a0c2-89ee-44de-ae78-0bc1251a3586",
        "cursor": {
          "ref": "d159300b-6331-43a1-ad4b-40eb03481144",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "58030d58-ce69-4689-84dc-e9348c3c4b11"
        },
        "item": {
          "id": "dd04a0c2-89ee-44de-ae78-0bc1251a3586",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "06da01a3-2d1f-4e5e-b41b-49f48bb56078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ccf57c-2e6c-4536-99ba-9f5e10459628",
        "cursor": {
          "ref": "64f1eed0-bb11-46a0-bf82-2778c26a8495",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6b45bd56-143f-4afc-a5f5-5124cc4adb74"
        },
        "item": {
          "id": "45ccf57c-2e6c-4536-99ba-9f5e10459628",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5fe0cd4a-9b27-4d3c-83b5-ce2998322d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5817d8a9-9dcb-477a-8b87-d0eddb47c9f6",
        "cursor": {
          "ref": "c0d3608e-4817-43b6-842d-0ce688901d2b",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bf696b89-b691-4684-a2a0-9a8df082144b"
        },
        "item": {
          "id": "5817d8a9-9dcb-477a-8b87-d0eddb47c9f6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "38e831c9-6044-4b50-8efa-5e83bdbf6a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68b4ace-1310-4883-85ec-03f9755aa796",
        "cursor": {
          "ref": "887c9e61-fd20-489c-955c-ddce82f88731",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "25cd3ea8-7b16-4ec0-94f9-0975cf5045de"
        },
        "item": {
          "id": "b68b4ace-1310-4883-85ec-03f9755aa796",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c00f74c2-989e-4223-89f6-cee06fc1ca70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a4659d-7374-4c26-bfd3-ab99e56459e0",
        "cursor": {
          "ref": "ccf6c37d-b4a8-4d7a-bdbe-119c3aeea650",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0bdd9af1-94c8-4ee7-bfaa-22648d3b729a"
        },
        "item": {
          "id": "08a4659d-7374-4c26-bfd3-ab99e56459e0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0a645037-3c52-4bc1-af59-3529607fe214",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "e5220668-b343-4fe4-aa99-6cde36555726",
        "cursor": {
          "ref": "918c3db6-3a83-4e32-88de-6263cabf2057",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "822d8e0d-98bc-4c88-b6c8-db70d83f0625"
        },
        "item": {
          "id": "e5220668-b343-4fe4-aa99-6cde36555726",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "52dc4c0d-fdbd-4dca-a7ed-eb97c680c966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0ce38c-8b42-4880-bf37-de241652aef6",
        "cursor": {
          "ref": "87f0c67a-0f42-465b-9559-b1dfe83fe942",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ca44882e-4004-4243-8952-d88dbcebafee"
        },
        "item": {
          "id": "ab0ce38c-8b42-4880-bf37-de241652aef6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bf79616f-a8ab-4a9d-b0f6-d9e0bc61a69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a974df69-98e5-48d4-b2d9-b35eedbc0d5c",
        "cursor": {
          "ref": "699ae5b2-e945-45db-9273-b66dbad304df",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "233a3fe4-b30f-4efa-a352-393d73fc3588"
        },
        "item": {
          "id": "a974df69-98e5-48d4-b2d9-b35eedbc0d5c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "75631451-fa98-4dee-8a72-85f0f27c464d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae7c5ea-e4a4-4376-88e7-ffa0ab4a08d9",
        "cursor": {
          "ref": "640f3579-2b00-4c2c-a617-b9df0caa7845",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b6ce72db-e581-461d-9386-a7c91a733ed5"
        },
        "item": {
          "id": "4ae7c5ea-e4a4-4376-88e7-ffa0ab4a08d9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f6661de7-fd55-4a60-befc-10eee64d82c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064ff514-9770-4fab-94f1-0810acee66a7",
        "cursor": {
          "ref": "91880293-e793-46d5-bde2-403e99ed9ca8",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bfb462a7-0ffb-49e4-a16a-32f96943af29"
        },
        "item": {
          "id": "064ff514-9770-4fab-94f1-0810acee66a7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bfc882a8-4e84-4d8c-a6ef-55abfb2c18cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd95206-1793-4283-a6bc-70b8b658dd3d",
        "cursor": {
          "ref": "04fa599c-72c9-4128-af60-bebbdcb1fad5",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9bcc38b3-599c-4039-9a54-f69eb40ad223"
        },
        "item": {
          "id": "ffd95206-1793-4283-a6bc-70b8b658dd3d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f8a68945-dff3-4c43-98d9-0f63022e0197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba96ea9-771c-444e-86d1-1ca173b135ca",
        "cursor": {
          "ref": "cb350562-e593-496f-917e-d78841f77fce",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1f0460f2-918b-4dfd-9896-fc28bee349d9"
        },
        "item": {
          "id": "aba96ea9-771c-444e-86d1-1ca173b135ca",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "aae0a832-e62d-40d6-b000-890b2a5e913a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a842579a-2a1a-4fe0-9e55-9ed8dedaf898",
        "cursor": {
          "ref": "0871b5f7-ace7-445c-99c7-997c701f3dd7",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e6d39f06-b8cf-4922-86ff-759862d99aea"
        },
        "item": {
          "id": "a842579a-2a1a-4fe0-9e55-9ed8dedaf898",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b23607dd-a031-4121-af39-14043679e4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63c099a-5274-4c3e-be9f-1e2eb65fbf04",
        "cursor": {
          "ref": "748ac6a2-26ce-439e-8734-a90c54e9a836",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cf750a67-6d07-4251-95c7-714c679262b2"
        },
        "item": {
          "id": "d63c099a-5274-4c3e-be9f-1e2eb65fbf04",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e60d029f-9f68-4901-bd5e-e1bc26da1cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a93937-dd62-4fa0-8707-55a220766e33",
        "cursor": {
          "ref": "a3b234f7-9144-4bd5-84b9-92b616a6ba6c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f860199e-ef43-4be6-afd9-4e887d470e9f"
        },
        "item": {
          "id": "92a93937-dd62-4fa0-8707-55a220766e33",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8b3c352c-88c9-42d1-86da-ad53be76dbbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88b8a72-e17a-47c8-b4f3-258559857b6c",
        "cursor": {
          "ref": "ff16a10e-e46c-475d-9d53-55bd39dc5974",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2a9525c0-f25d-4424-8e6d-32d716103d66"
        },
        "item": {
          "id": "f88b8a72-e17a-47c8-b4f3-258559857b6c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "06ddccc3-8f0d-4800-b2c5-de567f7ff799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657e5e22-a7e2-400b-be73-a26a8ed15ddc",
        "cursor": {
          "ref": "b6413ef5-11c4-4159-8fa0-bd02cf823157",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "40215f23-5b7a-4d7a-949c-7cdc322d6534"
        },
        "item": {
          "id": "657e5e22-a7e2-400b-be73-a26a8ed15ddc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "17370ef1-6bb2-4623-8d5c-9bda42a783d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7f6bcd-2e15-453c-b87b-8bf6ee74a6d6",
        "cursor": {
          "ref": "d9bf5f67-74d9-4469-ac39-e0655570028f",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "84598f19-0690-4b0b-9b84-0f1553dd26c3"
        },
        "item": {
          "id": "ea7f6bcd-2e15-453c-b87b-8bf6ee74a6d6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c6528893-1a15-43d4-a4b8-d02d89d8840b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0497fee-2a35-42f2-a84d-6d686f266278",
        "cursor": {
          "ref": "558d1d4b-f631-4c65-b17c-e8958b27ea4f",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "543a5514-1d88-43d5-be6f-19af9e2a9d40"
        },
        "item": {
          "id": "a0497fee-2a35-42f2-a84d-6d686f266278",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b0ab64a7-5427-4b61-bc31-d2d2f5dd29da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9db87c1-fd4e-40c5-a3e5-19aa1205f517",
        "cursor": {
          "ref": "01b0959b-55e3-4bda-b32c-edfaa94f43b2",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b2c48d86-a8de-4cf5-9c95-9cad9413793c"
        },
        "item": {
          "id": "a9db87c1-fd4e-40c5-a3e5-19aa1205f517",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d688126d-99d7-4a65-be14-8678df37a586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5713e1b7-6112-4601-9751-d5c1f0e07c06",
        "cursor": {
          "ref": "38c32ea9-d74a-402c-b85a-a2d3e862c229",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b21fb12c-23de-437f-9df7-7c07debc4c71"
        },
        "item": {
          "id": "5713e1b7-6112-4601-9751-d5c1f0e07c06",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3fe0de33-bcab-4723-a970-d01bf59d9281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d78394b-a583-4d6b-b9b8-3d8b9c9e68ad",
        "cursor": {
          "ref": "7bf47e66-b7dd-48f3-b7d6-df64b014ff51",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a96efae2-14e9-4020-be01-454488382487"
        },
        "item": {
          "id": "6d78394b-a583-4d6b-b9b8-3d8b9c9e68ad",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "31a0c15f-ca7f-4dda-934e-5f1d1903ee19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31a65ca-8950-4e2e-834e-7a949424fd67",
        "cursor": {
          "ref": "5b6a6290-d085-4f5f-9d61-6f1093817099",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5f6ec9aa-fe62-49f1-ac75-f222248f7021"
        },
        "item": {
          "id": "a31a65ca-8950-4e2e-834e-7a949424fd67",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "479fb62d-bcbe-4b92-b9c6-10b4107e70c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1258a6-9b38-41f7-bf2c-410b38332139",
        "cursor": {
          "ref": "0bb6cbc1-1688-4f9d-9d52-ccdf97c1b964",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9b513ef5-4dec-48d8-8e12-03004ae14d9f"
        },
        "item": {
          "id": "0e1258a6-9b38-41f7-bf2c-410b38332139",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "28a9a7e2-f14a-4f3a-8cdd-4c0c019229d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898d6cb7-7f58-48b8-8474-1c3a412b7cc1",
        "cursor": {
          "ref": "a7055bb0-a4d8-4a06-a29f-dde6cfdd8062",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "014311e4-59fe-4af1-b48f-e048cd24d181"
        },
        "item": {
          "id": "898d6cb7-7f58-48b8-8474-1c3a412b7cc1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "af132d10-fa27-4d72-999f-6c5ea8ac434b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a93ba4-161a-4413-b459-907a5ed662bb",
        "cursor": {
          "ref": "a6c4853b-29a3-41e9-a32c-720ec0e98711",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "26bd8439-c8b1-4f40-9da2-231842eb5ac1"
        },
        "item": {
          "id": "c2a93ba4-161a-4413-b459-907a5ed662bb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0f40662c-c6de-4b3f-b505-302f3bf3785e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bb31c1-4930-4032-9a9e-e46877502c41",
        "cursor": {
          "ref": "1a553b3e-4507-4037-b55a-ff2ac67b85b6",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "fb0ddb6a-712b-45f0-b9e6-e984f1deb5d9"
        },
        "item": {
          "id": "70bb31c1-4930-4032-9a9e-e46877502c41",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "93598bf4-6e31-46a0-b9d1-958b08cebe74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056a8aba-4117-48d2-acba-5389a23d0eb6",
        "cursor": {
          "ref": "2fb1b752-6dc0-4c03-afd6-435093648fda",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "829aa92e-978c-4c3c-b354-90945b899a1b"
        },
        "item": {
          "id": "056a8aba-4117-48d2-acba-5389a23d0eb6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3c8b38e2-b86c-4c0c-aa71-01bf37bafd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31354c03-7858-446b-b8da-bb7e2b254bc0",
        "cursor": {
          "ref": "67e19e17-4599-4e94-b045-9986cf0dfb9f",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f375bbe3-a901-493b-b7b1-beba12169d90"
        },
        "item": {
          "id": "31354c03-7858-446b-b8da-bb7e2b254bc0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "72160c3e-1568-4a1c-a72d-6e65979f0d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da62799-1d95-4fa7-a7c6-4152af77b684",
        "cursor": {
          "ref": "bd42e76e-5c86-49a2-b0f2-503e21562ea7",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9d08d2e6-bbeb-40cd-996e-4df5f08c49ba"
        },
        "item": {
          "id": "9da62799-1d95-4fa7-a7c6-4152af77b684",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0e4f173a-d2c0-4017-acd5-a27986632b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d84901-6f7c-45f9-882a-17eef5178215",
        "cursor": {
          "ref": "97322f06-8dc3-426e-84b9-9a46261cf600",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e4371adc-fbbf-4bd4-bbfb-c83047f6a6dc"
        },
        "item": {
          "id": "f5d84901-6f7c-45f9-882a-17eef5178215",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bda06a87-61be-48af-83b5-acfc8df257d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad3960a-0d02-411a-9241-7e49b8bf0cd6",
        "cursor": {
          "ref": "8f75fa0a-3d7b-4047-809f-790a82536251",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6edc60f9-0181-431c-8275-e52dd9c764a3"
        },
        "item": {
          "id": "2ad3960a-0d02-411a-9241-7e49b8bf0cd6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3eea1855-cc9b-4c36-8653-0a42da6f9663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f071aa8-7b5e-4457-8adf-bad9db7d9dea",
        "cursor": {
          "ref": "2d77169c-1793-43d1-9d30-45a77f7dd6ea",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "12a763c1-1e67-438a-b8fe-1c8d24604e48"
        },
        "item": {
          "id": "5f071aa8-7b5e-4457-8adf-bad9db7d9dea",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "abf3f0e7-d301-45a2-a2ae-e7adeb95dd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122525b5-42d4-44f2-840b-f75106f4b885",
        "cursor": {
          "ref": "7d33c123-9219-4622-806e-ec67fed46557",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a15663d9-fa81-4bfd-8217-bba08768440c"
        },
        "item": {
          "id": "122525b5-42d4-44f2-840b-f75106f4b885",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "08ba1e8f-74e2-4427-b1e9-c693aebd0eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2f15fd-39ca-442a-8336-5daa2be47cf2",
        "cursor": {
          "ref": "312a0056-bbf4-477a-ade0-ec1c645589de",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "33306f27-dc7d-40b8-8acc-011feb34f237"
        },
        "item": {
          "id": "0b2f15fd-39ca-442a-8336-5daa2be47cf2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3b0f13f7-c64c-4057-95b6-273438d7a2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5385fc3-2991-41ba-9ba7-39c304b66d4a",
        "cursor": {
          "ref": "abb4c589-a999-4c99-922e-a27ecc57ef7b",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9d38e19d-d567-404c-a93c-da98e591e147"
        },
        "item": {
          "id": "c5385fc3-2991-41ba-9ba7-39c304b66d4a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "296d9f9f-48e5-4f74-aa78-d7baba131941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85621c5c-1d90-4398-b715-9de81e09e719",
        "cursor": {
          "ref": "5b9f75c2-051e-48e9-982a-b10123ff3c5a",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "38237d64-b1f4-436b-8871-284d4e68f40c"
        },
        "item": {
          "id": "85621c5c-1d90-4398-b715-9de81e09e719",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8a6b71f0-4755-4783-b1d0-72db90a105b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17f6e82-a709-4d5c-9cf6-c0edfeb33d52",
        "cursor": {
          "ref": "827a8a7c-0bd7-4729-bbdc-ece7b4b117d6",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "77a93c8e-8d49-4d17-bace-c7af55523ead"
        },
        "item": {
          "id": "d17f6e82-a709-4d5c-9cf6-c0edfeb33d52",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ff948c17-1de6-4e5d-9386-821f6cccf160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0d18fc-8d54-408a-b270-6dc52ac29718",
        "cursor": {
          "ref": "31046c6e-ff13-4171-9c48-cf3e934cc451",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3553535b-bdba-4900-b2be-ad5ebc7bc1ef"
        },
        "item": {
          "id": "9a0d18fc-8d54-408a-b270-6dc52ac29718",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8b66f451-c641-4d28-9527-a30a477d2485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9431534-2990-444e-bd28-22dcf3fcad09",
        "cursor": {
          "ref": "40ec56ba-b6c4-4f2a-8ada-271ec3ccd83e",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5ba4f51a-8110-46f5-b026-b1ee8693ac39"
        },
        "item": {
          "id": "e9431534-2990-444e-bd28-22dcf3fcad09",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "336c69a6-7c31-4182-91ed-a8f82b1417d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ad7065-8f4d-4b92-8387-4d7506b42166",
        "cursor": {
          "ref": "f8cd9c01-7d2c-431a-b87b-d58cbfeb8b59",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "93c5326c-44e8-467a-8d51-4ae82d8a6ab5"
        },
        "item": {
          "id": "c8ad7065-8f4d-4b92-8387-4d7506b42166",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d88aec8a-76ae-4af4-9dd9-fa4efc455216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3d0508-005a-4b90-8001-2f2ce09f9dc1",
        "cursor": {
          "ref": "82278d69-6949-4fc0-a7d1-f829207b4292",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5739489c-5331-42c7-afca-6e6168c7ca70"
        },
        "item": {
          "id": "3d3d0508-005a-4b90-8001-2f2ce09f9dc1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1be78736-6d41-44df-afa9-ed582f3edf91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fe1e95-7e29-48ce-a397-897cfee8a656",
        "cursor": {
          "ref": "ff3ccbc9-e02d-49e3-8838-0eaf7d820088",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a4491dc0-048f-41fb-b7d0-75b972ef4065"
        },
        "item": {
          "id": "40fe1e95-7e29-48ce-a397-897cfee8a656",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a6ee558e-8b06-44ea-8856-5fc8b2df4636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a102a1-c371-4c95-b6d0-fc28e174cc02",
        "cursor": {
          "ref": "c5eeb40c-3be9-4708-bbca-3ae3b294826c",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "6acfce3b-de3b-4ab8-b3c4-7b3005d3da85"
        },
        "item": {
          "id": "b5a102a1-c371-4c95-b6d0-fc28e174cc02",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4600fd7f-6dc4-4706-bf09-03d6ea597482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503687a1-27f6-48a8-9522-c392af53751b",
        "cursor": {
          "ref": "1ea0f1e0-8ce3-4da7-b4df-aa8a98cafb75",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "7da373d9-0201-49e5-93fd-b71ddf3c9b99"
        },
        "item": {
          "id": "503687a1-27f6-48a8-9522-c392af53751b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0b4da3a7-4eec-49d5-9ae2-636d6e751d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999de83c-13c1-46bd-a26b-39e779f75eab",
        "cursor": {
          "ref": "69a4ec1b-4598-479c-be06-3b15ed01c5b8",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "144465c9-3313-44da-b46c-0e61e3146b1b"
        },
        "item": {
          "id": "999de83c-13c1-46bd-a26b-39e779f75eab",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c5ad8b9b-ae0f-4b93-950a-26063d230da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3159f918-7f23-410b-99a0-6478c5dd29c4",
        "cursor": {
          "ref": "db39a5f9-66e7-405c-a7c9-de8a21ed5f60",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d5df4556-b164-43ce-8b74-a170e689fcf6"
        },
        "item": {
          "id": "3159f918-7f23-410b-99a0-6478c5dd29c4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ac6cff9b-499f-4822-8570-e30eefc5b1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6f3cd7-fc0d-415b-962d-cfc4fdd73b66",
        "cursor": {
          "ref": "c0b36538-b4ab-4c2f-b7af-044169246e4a",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "17adcdce-b4d7-408d-852d-2243f1b02592"
        },
        "item": {
          "id": "4b6f3cd7-fc0d-415b-962d-cfc4fdd73b66",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0efca9a7-562d-404b-b0d1-f814e4eef9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74381a72-b9c0-4fa4-887d-ef1858487b64",
        "cursor": {
          "ref": "e6d89b6b-49aa-48b0-8d8d-7eda006829dc",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c78e6905-4507-42c0-a2cb-6b56f066e5d5"
        },
        "item": {
          "id": "74381a72-b9c0-4fa4-887d-ef1858487b64",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b99f8f8c-5a6b-41b6-baad-4d17a72d9914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a9b456-0335-4f99-bad1-9503607b28f0",
        "cursor": {
          "ref": "be17d4aa-d1be-41a3-b517-5c79dfeee4c4",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1cb31c2b-7674-4041-99b6-2a76f2ebfaf1"
        },
        "item": {
          "id": "84a9b456-0335-4f99-bad1-9503607b28f0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "95ce0722-0088-4467-816d-8da72cbec087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b154472-c91f-4ed9-af3f-da117c07c71f",
        "cursor": {
          "ref": "5408cd1c-2708-420f-b00d-e1b4f03d0adc",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d7185977-f6db-4155-b9ae-5824566c8387"
        },
        "item": {
          "id": "7b154472-c91f-4ed9-af3f-da117c07c71f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4298d2d8-9dd4-4880-8e38-d2d86cea4f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f1d396-342e-4a8d-b93c-2faa89071661",
        "cursor": {
          "ref": "4642d647-f402-4c9e-a37d-b71daecb0937",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "449ddcd0-70c2-46e1-8e28-f60cd2787df2"
        },
        "item": {
          "id": "14f1d396-342e-4a8d-b93c-2faa89071661",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3260034d-fcd7-402d-8091-06fe1fe227c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08efb77d-c767-4cb5-88ba-2de00b154b3a",
        "cursor": {
          "ref": "3e9f9f92-f930-453a-9462-23f030246dad",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "78ba01d5-70c5-447b-ab35-0a1039f10efb"
        },
        "item": {
          "id": "08efb77d-c767-4cb5-88ba-2de00b154b3a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dcabda0d-1f19-456b-93ec-fd7a3f4183c5",
          "status": "OK",
          "code": 200,
          "responseTime": 30,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6fdb77-8657-47c8-ae96-116b07748567",
        "cursor": {
          "ref": "8155ff21-a9c9-47c1-81ca-2a3f18d18afa",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f0e9c93f-8de5-4e86-9f41-94fe9f95d4b0"
        },
        "item": {
          "id": "9f6fdb77-8657-47c8-ae96-116b07748567",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1db7c0b7-5915-45c4-a261-911b89aee5a4",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "14edc660-fff2-43ab-b830-c7f47752a430",
        "cursor": {
          "ref": "0f02a752-a3b3-4145-9745-5b9b421d94ec",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9d641c2d-d397-4537-8d1e-71930f7d6070"
        },
        "item": {
          "id": "14edc660-fff2-43ab-b830-c7f47752a430",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7244517d-3d7b-4942-be97-a186af6139a8",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af9c83f-90e1-4797-9931-3187b6956407",
        "cursor": {
          "ref": "080b341b-4803-41f8-94bc-dcbf03b58526",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f297fa6d-2212-4d8a-ab39-b8b28c15329d"
        },
        "item": {
          "id": "3af9c83f-90e1-4797-9931-3187b6956407",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3acccc5c-6e40-41f5-b411-d25e60de6379",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af9c83f-90e1-4797-9931-3187b6956407",
        "cursor": {
          "ref": "080b341b-4803-41f8-94bc-dcbf03b58526",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f297fa6d-2212-4d8a-ab39-b8b28c15329d"
        },
        "item": {
          "id": "3af9c83f-90e1-4797-9931-3187b6956407",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3acccc5c-6e40-41f5-b411-d25e60de6379",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c81422c-01ee-40d8-9e55-aeaf229b8381",
        "cursor": {
          "ref": "3a3e3723-fb09-4b1a-82a1-dd0761e07309",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "390dd41a-313f-4049-8f09-7275bed4523b"
        },
        "item": {
          "id": "7c81422c-01ee-40d8-9e55-aeaf229b8381",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ac87c8bf-79a9-48d8-8ce1-4d4e4f83ea50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb79690-1dae-4c8d-b494-6db73ec342d7",
        "cursor": {
          "ref": "55e9cccf-2399-4a0d-8370-16c936eb1f63",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "9f077493-63b8-44cd-9219-c80690c0ccf0"
        },
        "item": {
          "id": "ceb79690-1dae-4c8d-b494-6db73ec342d7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "62a8fe72-85ef-4cf6-998e-be410bd3217d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}