{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "26b688eb-b9d8-409c-8ffd-10ba6d00eabc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7baaade0-2002-45b9-a949-67373cbe5d1f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "36d4cc9d-b0a2-4e13-8b77-55d3db036e2f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "90b55282-c220-4f58-97b6-cdead63b5e45"
                }
              }
            ]
          },
          {
            "id": "96ef58e7-33ca-4d5a-9a83-4469ca39c0e7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eee8fbc4-b086-44bd-a3eb-dcbe65d4d8cc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0152c1d3-8cdc-47ea-8224-ff43706aff90"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d6b7dabb-3277-4bcd-8b63-0516c6a1bc47",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "38993f0b-1a86-4612-b9a3-c26b05b0921f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "54f0c9c2-2a3b-4a29-855d-3776931fc391",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d59349c-eb29-42a7-a34b-34bf2f08bc93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed016935-416c-4bb7-af0c-2150c09b7f78"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d0f6d78-4104-42a5-a3f9-69c474cc7be1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bcf06a8d-b205-4093-98f0-4e03b6cd3e1c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fb177e69-5550-4a17-90fa-e2b5fdeda388",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c2db62d5-919d-48a7-b49b-3197cce403fe"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a27ec314-0856-4ac9-adff-da8ddf8fee75",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "aaf8531f-1349-40c2-b5ee-d902066c8231"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7c9acc2-7345-4387-95ba-a6b538e1946a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "562cb170-16f2-402a-8041-9ff586efc25b"
            }
          }
        ]
      },
      {
        "id": "497ba294-4c7e-465d-9ee1-f735315371d2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5faba9c9-075f-4b11-88bd-6c7d2d0888f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "432c2f94-7f16-421d-8a8b-775dc5952da5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b3563df7-4aff-41dd-b7c7-136f574ec906",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef9ef4d-3692-40a8-8db7-bdd926059d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88a2866e-491b-45bb-914e-96131b10f78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e228bf3-b017-4e5f-b9f2-498fcdc84b73",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc27b32-39ec-4485-804d-51bfff0490e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b541fac-fb52-4669-b8dd-34a243d41629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1009ce86-b8ce-4fad-bd12-c154d3230963",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dd2ebe-4eb4-4119-8d92-e88783bf36f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8c9b00a-fa66-49b5-be16-ae607004889e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2e6513fc-427f-4f97-9aa0-492ffffafde4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78317b5e-ac13-428e-84c1-f790ffa95f53",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538ca0ad-4b77-4719-a5a4-54613be58583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2dac3749-e900-4aa5-a11c-e1d231e3ea62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d33da4-aba6-4d57-a031-b7be97ee33ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43732525-e6be-440a-952a-b063019591fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "88cdb60a-221b-41d9-beb7-30b74d799032",
            "name": "Positive Testing",
            "item": [
              {
                "id": "91874968-17f7-4893-a87f-dbb164293851",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b291123-e884-483d-98ed-4897e8da5812",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8f6db0ac-4bc0-4f11-90a1-af30df5a8ccb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34e20dcc-56c5-425a-892f-e89b9f54d10c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "78adbdcd-dcb1-401a-bfb0-b4be5afb044f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9570145-1c82-4799-ba2b-bb2ad05e4693",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b86761c3-a8c8-4c47-b6f9-4cc076a8ca70"
            }
          }
        ]
      },
      {
        "id": "5cc6af59-656f-4a9f-96a7-b880b97787d9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c2a720a0-8181-4703-a085-93c450f14e46",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cccbc4ee-62e7-4ab3-9464-48f3bfbd32dd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0ebbda21-257b-4817-825b-cf092e4d9ac6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9b49b1-74d6-449d-9fd3-df153532f043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20dab1c9-da23-425d-80c5-a248aa483dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d559527d-0d3f-4b5d-834a-039c5dc51aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7791182-bdd0-4884-8023-b8cad3dc9b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8c645c-c31b-4631-856d-b21a74872398",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b1bbc8-7ef2-4d45-9dea-9fb4edd84106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f55c303-836e-4ccc-a8e1-fc970b7e1fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09d6ccc-3e32-494c-990f-10f1ca0782be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07583fb9-11a3-4bf3-8fcf-1a3fa16870a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c450f4-5182-4675-b9a8-73113378cb92",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095d6932-bb54-4487-add6-1426fcba9933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebda4a85-248f-43cd-baa3-955b212a3ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f98ec9-113e-4559-a530-a601050b5c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffb40964-0fda-498c-8b48-eeb0aad193c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59986d9f-747a-4f46-baf5-0e79d52ebf27",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe26956f-bd20-4c7c-a36e-718196348586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0997d998-a6a7-4e3a-a9fd-8870f965c0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f11929-3679-402e-82f0-3eeddaf6ec9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b34aef3-3468-4b5e-9958-861e862ca3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c1f5f4-772e-4253-afd2-4e4a10a19c0f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ac2289-111d-4f6e-bb26-92f3b0e50e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c05517-9dce-49f5-8ac5-c4f7b5e49b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0942dca3-2966-4cd9-b8d5-ad7d41057ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66bd3dac-e6d9-416d-87ca-b79deceacf5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d0aff9-5ab8-4752-a087-f66fb1f81a3b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f83e1a6-f6e4-4411-9f38-261e2ad86381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f7fb54-06a4-4e04-a02d-39807d3daa2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39de53b-526b-46db-9ff1-9ec893a70891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fab991eb-be7e-4f96-8d6b-3a716de6c7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779847cb-d09f-4c24-90b7-8e4008f98824",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc967fe-bc19-4653-8f6e-527c2cfc7736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7ccd7c-6df4-40a4-8702-c4fdc88cca83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a94c8e6-fd9f-49de-8ae2-c5cf82729a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2ee8792-3542-4764-8b29-e508b344e48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d5ebb5-e99d-4d6c-be53-b39ff5a5c3f1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95d3213-3e32-4993-9f8e-064d4b292c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970cb41c-ff72-4896-b0fe-5d05caccfdcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8427b5c2-51fb-4ef5-8cae-91bbdfe54c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c010e40d-ce59-4bd8-9b37-ba96570efaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d524c3-65f8-4a9d-afa7-1bbb69242c32",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd77862-ce5b-4ddb-a872-752f2f47ecf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e7edd1-3558-42d9-ba5f-f7c5d653b023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1164f4f2-5323-41e1-90b3-62d90e5d7e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1e6b071-9a5f-496c-bc7b-4a8a79af89c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de09494-dcf7-446d-9527-9cb8849fd45c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06307158-31cf-4dd1-85fa-aa8568c21a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541c4016-70c2-4b07-972e-86b38a500664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e340b6-2d29-4fa1-9334-21ebdfe6eb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5861291d-c86f-4b10-bf3e-4c561cb0274c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d799365-4f2d-4385-b85c-583eca9cb2a2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce06e9ae-06b5-4df9-8e7a-0adf15f10949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f560225-ea90-4edb-986c-bb997b3332d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72d40ae-8949-4bf8-83d5-b708eaa859cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8093d632-d6fb-44c0-9a5e-576ffc8f0d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5792de-09bd-4910-99e4-264f1a6152f4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5164c9d1-9e77-4df0-8c77-9d25c85573c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830b160d-1706-4b73-ad64-8a36a515cfdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90eca9ef-52d4-4a2d-b6dc-7a640d1817b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0907f475-d0b3-4a19-a40b-492541154aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a044ddcc-2bf1-44c5-9e60-10ceac69ebb5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0643349-89b2-4550-b4a2-a1b64dd3445a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cca4b28-1999-4bb1-b75a-6df48c93b5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0c23d7-8dbd-4944-adb5-822a1b74c24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74b9599e-0966-425d-bc32-794b7531cc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c155c45-d075-4593-ac5b-2584baf15147",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fa91b4-e424-499a-aa66-950574345af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a6ce4d9-83fc-4a1c-89d9-8d01666d8d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e36c83f-d1ed-480a-b7ee-58d5bb5ed85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a2f222e-deb8-4e44-a0bb-cb4937287118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275d4852-9825-4ec9-82ad-4b9469126dc2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf1d3d3-37e0-42e0-8c48-f39bce792a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705e3c11-5bdd-45f7-af5a-a9687389c708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e4a801-cebc-4781-a3b9-e590f51876dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84b3c37a-2dfd-49ad-b4c5-37211abe88d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd184167-8180-4e48-ba97-18272efb494d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba86bfd6-8f9c-4013-95b4-84e3e91f2627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a1f1ea-1d96-4a16-a85f-bdde7313152c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0103d7-66e1-4012-a6f0-ab4d09a69846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23dfd3f5-db93-4698-911b-d100b7bb8a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee2cab2-1228-4cc7-9a4a-3ae3067e3fca",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5c8dab-1709-4678-a8b4-e2af396c94af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e977c7d-1b3a-4ce7-aa7f-b65aac025a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f36b29-df6b-4f6e-b04d-922583dfc111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5d286c1-d4a8-41ec-a1fa-7ed078eb8eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1208709e-670f-45fc-b005-9e1726494005",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ab1e12-dbcf-47e7-8c26-73e2d933c378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71ba4c8-52b5-487b-8871-e1d773ec3c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea72e7f-d095-4d52-a57b-c8d3b280ffdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc46d56e-c3e4-46aa-86ad-f681d40676ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb67dd5b-d64e-407b-8ac3-8300c8030f00",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe05304-93a4-4bdc-98ca-578d6cae6b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf274c77-0268-4a83-bece-9b9da7f8a1e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ff2420-9262-4df2-8930-103ad10b1a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "856a5c72-2297-4812-b575-a8e062af27da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c6fa29-a6c8-4fc5-a4ac-f3a23bcefc60",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6f0dd2-c988-4d7f-9993-7e3d7e583035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ba8b59-5c17-4203-b217-6da8a9ae4c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4206513-4cbd-4573-a1fb-9158610daaa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d89d75-b6ef-415f-ae76-445ecf7cae32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a58f470-e29e-49f4-80e9-9027fa107c29",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8818c19-8ecd-4709-b87f-ccdc3090fa17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742f617b-735c-4a95-a6d0-bd10828a6b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3c87f4-dda4-401b-a3f2-eec463b91e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3601fdb5-5b2f-4c60-a72e-73d6cfced0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60d0952-61dc-4087-9d4c-380335d61287",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfab141-4d7c-48fb-8cc0-f13ca7029fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6baaefea-400f-4ac7-a037-cd014528635e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4589d2e1-8551-4053-a361-477327bde692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a71f263-71d6-4edb-854c-def1ac7715bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504bac08-dd75-4e03-bfa3-5172682acec8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b2af6e-8d31-4a51-890d-529084c9e469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958e378d-fddf-4713-bc5f-62c0ee806bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e79577-807b-405a-88ac-01894dd86067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e88268f-2acb-4142-b919-8c68a4f18c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d2a337-b168-4262-ae7a-9cd851831acc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95e86fc-1baf-4e80-b7c7-8b6db89e49a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394f8aa0-9008-49a5-b4f3-d16bea131c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a2318e-0c22-47d9-b7b3-68e3f80b6513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d18a6c1c-96c4-4579-bc46-839b123b970b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c22bee-864c-40e0-82e6-3fde47f2d57f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e58893f-6e6f-43dd-95f8-f74fe33ad615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded784f8-b9d1-4cc6-80c3-81158c36fcc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169ca89f-7c2a-4e13-8ed3-8fd02fc55a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a476f720-cd9a-46a6-8c38-b37d4371b9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9ccf56-d4c7-4e60-8c17-cb335ab18288",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4d39b2-60aa-43e2-a07d-a7fd943ea3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60dd8d3c-eef2-4197-ab04-fdab7cf15459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cee22b-876a-4b6a-9aaa-35ea3032b469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5f6c0c-ea46-4a64-ac53-a3c1cf7a3975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9517258c-9874-406a-a2d2-d88da30fcca2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe25103-e12b-4194-8c54-943d1301c3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84dc7a28-6afe-487e-8fa8-aba96d7743d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4ea1c6-c8e9-4c7f-b560-46d40054dec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9596f8-f93b-412b-9752-5a506bd9d876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb846d94-23d1-4a63-8906-a7158b9ad1f8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6988b5c3-bffd-4e1c-a292-6963094e93e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108b3fb8-9c6e-413f-9b59-c90dd68981ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865a6262-2db8-4275-8351-37e08cc8fa66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b988bd4-8d5a-41e7-8f87-05e1b0142400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ffcdf7-d016-4a31-9734-62bc2bef78d4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d98c65e-841d-459d-b0f5-b093cf72a702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff4b62b-8afa-4967-978d-8a83c4a269df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5188a465-d7be-42b2-b51b-5b9c3ca9f2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "07403af0-2692-458e-bca4-3e99fa1cb9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1238d1e-32fc-479a-9482-9a2f5fae8280",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac819ca-d54f-41e0-982e-6def95c1d459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4795a9-f5fe-47f9-926c-8aa378f46380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256cc211-0f54-4a46-a126-b94859577972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7843c99-35fb-4813-b195-cb27b6af59f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf557ac5-9cf6-4d65-a922-05561a13d500",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f6008a-19b8-4579-8f77-f7f7aa800125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5af99e-5df1-4fdc-9466-89786ad53172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c5672f-91b6-4709-8192-182dabad613d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20f19fa6-08cd-4fca-9dbe-aad09810c6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7869b7-dab9-495e-bf2e-e245620942bf",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d5e229-ea47-4179-bfdf-a1e2359e75a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be239a53-bf0f-4aa0-b6ff-4b6762861ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b9d80c-4b15-49a9-94d9-4a842699d9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4caf1966-860d-490e-b52a-edc4efe34fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4193377f-39c1-4905-b64b-3df0b7896008",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad25f67-13bb-481c-aab8-22220f549fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3efb287-4ce6-4cd6-affa-8f31fc0648ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a438d0a1-59b1-47ea-9920-8809b7cc3bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23df63a8-1138-4864-bba0-4e7482606b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344a3f88-2d5c-4628-a9c0-2a0ab19f1c12",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa5e908-2fd0-485b-8ed6-df4cfc88e617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878cb523-ef93-4c00-ba74-59cd6deddd4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515c210c-a834-406f-8810-1d17e5034b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a90c98-17d0-450f-a361-9b77c4feb0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2099df42-fb59-4040-907f-162e0ca90a55",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984cf967-8ca0-438d-9237-4842ec099956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c820a2-1def-4402-9bc0-0d8f82ddaa13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c539ea38-69cd-41fa-b1a2-8e3c6e8b27d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9602bb3b-4b13-4a60-889c-a1d0d6fe480c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6d3113-de24-4374-ba01-c5b9ddd59510",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579504f1-f183-4ab8-957f-6defccefe669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0bd639b-6ee6-4028-8295-34b75d1d7c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd36ed7-42ec-48e1-9205-165b633a8015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bfd006a-29b0-4955-903c-94a2679ad0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6381caf-7783-4c55-99e7-4ba92d5468e0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e716f0b3-0b22-419a-8ba5-88d74da950b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0e078d-efd6-4731-8408-c7730195be8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8640e0-f541-4fc1-8135-7509c2833a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96414c2b-88fc-4d16-92c3-5e67c75475ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a677ad4-d790-4854-8347-5ff4204c955f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da4f882-75fb-4e6f-8a44-2d24c53c7149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3def37ef-e9aa-48f3-adc7-5010c8d0b135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dd61b1-787e-43a2-b9f4-ef6bb702fc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd45799-01f8-44c7-a956-a549ae9ae8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b98efcd-83a9-47e5-a1ad-207aa62e38b3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0eeb2e-6738-463b-a4d0-829c297766f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d9c446-f59e-4a3e-b5e6-7a5e30d200de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b107bce0-cdf5-4b6e-b586-ec2190e4253b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a22a535-1604-4798-803d-677968f9dd11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9df3c9b-3b38-49b7-902d-e2fa94f82fdd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1532a19-6ec0-4f72-98be-936f3c9bebde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f32d497-2077-44d0-91da-09f6b5f41210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a40d53-9c2f-45e0-8f91-93518634fb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7a5a24-3ba8-4880-b145-ae110698285e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84c168d-7012-44f0-a127-7817c9fcf9cb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eae456f-e8bb-492c-ac57-0f19081b77b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23338cd4-f702-4309-9b64-3723146fc109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e2180c-618e-4682-8f77-a98503cc8dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d72745c6-3801-45c5-9c11-cd7d9c804435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad672533-a20c-44dd-afe7-afaadc1b0770",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86011e45-0b8e-4fb6-af9a-10ecac2c8465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda00228-7e50-488d-8d3f-2cac3cff4013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd61b5bd-9a8a-40a9-a00b-552323dccff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "576ce5c7-489c-4628-ba93-24acd0458c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b1add5-0637-472f-a146-6e41739220db",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02284465-44f8-48ff-b542-7f30c0220220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d5ba9b-907f-4de4-ba7b-bb6918eadb64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfce5f3-a966-443d-aee5-a3173155c54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3fafc7f-8b1d-4710-811d-e574a2301644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed016480-9ce6-4035-8074-a033d797828e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c62493-a10f-4fab-bf1f-342f3419f933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6aeb4d8-002c-422f-b0ee-63e24172b9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053d0f06-987a-488a-bbad-fc70ca7bb2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4119871a-b6a2-4c4d-864e-354c724a9553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a408a821-6509-43b0-9c71-9ff407d31cd9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2c7585-4c52-42d5-9bae-8a9237f46326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "947be37c-ee77-41c8-98df-9079a715fbe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e111f696-12db-457c-8ecd-7891d64e911e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f7fa22-3bcb-4bbe-a486-929245a5ad8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603e6f52-85cb-45d3-a52b-2c9a583cdcda",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031d0805-a3aa-4334-b3c6-7725f0319a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc25e890-c04b-4f95-b49f-67f24d9ecb9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9da9db1-71bb-4102-92ee-9839be5d8ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1dec2e7-2297-4dac-9d36-331215c1c218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e728cd02-cbd9-41e8-bd9f-26ea4abe583b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcac61c-b0ff-4f75-8083-745bad8eaacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b0ad5e-a38e-45a3-b8ac-d6d1d688f643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368391df-13cd-49d7-b36d-62b110047765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fecc8d65-b775-45eb-8da0-10693d72e40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133370fd-4bd9-4e02-8890-e25b953daf86",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29969fd-f276-430e-9b3b-57117f966f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d2cfbb-2263-4a1c-8486-2868682ee014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa26e84-cefc-4e56-b0a0-9c80f55e3eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "139b209c-7107-45c3-a96c-794b080b6bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f70432-900c-4202-bf82-16c84d70317a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65838a83-b8ec-44d4-968c-b2c1c083d05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ddcf10a-72a1-45e2-b625-840cfeede7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aebd38a-4f5c-4426-960b-60fdad3541c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e00ccc2e-421a-4774-8a10-c42d9d710c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae77ef89-c4f8-4009-8d79-9037dace58cd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465acc90-56fe-462e-98fe-043636bf3cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6cca8a-0a17-4313-9b13-50b1b98c7952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5e6767-684d-4ca8-9eb3-16b932ad08ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b3de3f-d5fa-4cc3-b0a5-4ce7743ce925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78143913-90f9-4477-92fc-9968bd43cac9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4e3ba9-ad62-4903-ae05-8fef3e792d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db93ce10-9723-46a7-bb86-8e271caa949c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529eefe4-2d53-415f-bd52-5f37a9f4e193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece59383-227c-4f0c-bc1c-1bc9a2dd442f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa46ee05-00ec-49ab-828d-4177d840716b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73465e3f-b846-4fc6-b174-7cb08789a4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01af0d5-d3c8-4687-98c1-0b1127cd8100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3e605a-ac5b-4465-bcdb-16c0f237093d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c83ff4a-4ace-4125-80e4-f323ef6438a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679d32aa-5315-4c92-b4a6-405d1c152c01",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c90a8f-483e-47bf-ae0d-9d9cca085629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1309dc45-81c4-4d0b-a866-608f7e301d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b68f40-b371-4f00-b5bc-91d4b1a08ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3cee99-afed-4e1c-8c94-f31e5e1bca65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170d3056-af43-4208-addb-533187c5b79f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a4278e-0453-4f7f-b512-79c287fcc56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4408a2fe-4c66-4523-986b-550cd54a690b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313da902-ed71-4aee-a7ff-6b750082313d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea0348e-d740-41f8-bb67-2f72ade5061c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82eb4e4a-e4e9-447f-8ade-f5ca6af97b3b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40beeb29-be0f-4c79-9380-e3ad2aa297cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133cbbdc-3d62-4f35-a382-ec7a27a228c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc18ed6-4f20-45ca-bd8c-c6be0eb65f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d2364e-7512-4755-886f-aa239f882b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce57f086-1164-42c7-8822-53794b417ead",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137e19f4-9c0c-4d57-8d12-35a3ba975d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff2ca6b-0273-47bc-96e3-8dd6e79d5318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86777325-5fdc-4b1f-882f-4daca9d54570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "12163e8c-70fd-4077-a28d-86cb6a6b2c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60c6b5f-3b82-48ab-babe-ce8edf4a740b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e98123f-9fb8-41b7-a624-94876c211ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb808b19-2936-41f2-aaa4-0d68efd2e2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b24fb01-27de-44c9-905f-fe6f6f750766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c55ff250-9435-4a3a-a448-efe732d7d2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ba59c4-0755-45a2-b12d-e5dc91ed3146",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b24139-af4e-4f1e-a32a-4b554bc871c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73eed2f4-5ebc-4817-908d-0b576a3a0c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a114a3-922b-4e12-9ec0-9ef781df914b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a946cb-38df-4370-940f-31a7d8221021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d31ba1-cd44-44a1-9ce8-a5f864f93e68",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcb416e-ad92-4550-9492-819d882a4c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c2fc5b-9579-4345-90af-09684b78a507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b0fa1a-ff21-411e-9dcf-560042089f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac92e55e-b698-449c-b2ac-0a4a1691706a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fc3a63-9342-40ad-b425-48282085c6f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11225541-6b12-4e53-a3cc-150a9ef9990b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34433fac-4dd6-4621-94ef-cd3a457bd61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3a7904-9d2d-447f-a415-7f9170151333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4574b7-3152-495f-b1ef-0daee2f29fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6e4a3e-70b6-479d-8eba-c0f6bab8d0f6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41de062d-56d8-4eb3-a038-ca0d6099311f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99fccac0-c67f-4938-8b69-17070c3777ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3c4ad2-05a8-41ca-a81a-ba5d5bcf3fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "29be9caa-9cb1-4d92-87d1-e8305f3750e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed1dd98-5fba-4318-a9e2-49a3ef248529",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb1e17d-fadd-4cd3-9e07-a2d86f43fc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c510a5c-5dbb-4ce3-9acb-714792cf578e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8aae0f-34b5-4651-96b1-bceabeb01293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1703ad3-6be6-45bf-aa46-7126c83b116e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcec8345-e0ad-44bc-aa80-b1268cc9e285",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3433c31b-6a8e-41e3-8c6a-5d30bc015cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da70a33-1686-4002-8e85-02f04e78a052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23d5e12-68c9-49c7-ba9c-c7ffc003e0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5451d9a-da1b-4a73-83e1-c149f5f22dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63ff1dc-25e2-4df2-89ca-331c923a0a5e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eef4039-57ca-4d8a-8128-f1c5d9262e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7118d4b-ddf5-4d26-8cf2-f36508e87b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebbe927-2371-4919-b463-02145a1c756b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "225a95d4-9460-42b0-8b1d-97c2ada6f3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c879978-539d-42c3-82f7-4a697bc268d4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381610ae-bc7d-4d4f-a881-b12a9499bad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d514a8-0b12-4428-9a80-2f12b02346b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e5391d-5559-4cba-82cd-243b4be2967e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "518ac827-3a52-4f78-8310-5cdaf7706a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be60eba1-37d5-4569-98d0-3c051ee0e943",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f480067c-1544-4f0b-a884-7628e483c3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2a6880-932a-4687-ae24-3290bf68346e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c463aba-de58-4306-afe3-3460d15083c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6e8e73-d4e7-4663-b601-62e9bfc1e9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01020815-5dd4-4805-8720-7dd7556cadd0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3914c7a4-7391-45e9-abee-751b783fe1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2247a10-fdec-4bcc-8573-a705499050d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8762bd08-eac5-4d1b-b190-61709a3bc474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff24af7-05d1-4127-a79f-795d73853c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba5dab0-f528-4288-a25f-7bbfc3a56a1c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cce55b-3950-45eb-bcce-8c69151eb26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024130b5-ec40-4662-901e-55e6b3189ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32c0319-6571-4454-9ff3-64b99fcc785d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "75e68d32-d1d9-40f4-bca7-44237d955d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca72ab23-fff5-4477-8b60-e5d80d4c53b2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d90619a-c516-4359-af82-262ff2438653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f17276-2c04-497f-90a3-0ec41701eca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845d182b-4454-4445-a703-a7eaaa3dea78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7edc8164-e5a3-4d79-ad35-82058bcb8b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b43eb8d-5f3a-49a1-8b50-0f27fddbfebe",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cc81f1-de01-4317-8a2c-01b0c6110a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519c3c5f-d77f-480c-8b5c-20b6f06628e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041c4b90-a37c-4ad7-af69-a60d67140912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a77dbba-494e-4f83-924b-23dafa19f3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27434622-0800-4989-a22a-3d75bef8efe9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a7f290-3fd4-4419-9eae-f5ac1daeda7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2150bf59-ddc9-413e-8708-34ee86b9714a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea0174c-2be8-46d9-8233-bea7ff9bdf7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dbbac3b-fb2c-4439-b276-d5e20472c43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc201bfa-40c4-4f80-a5ed-6cbcf22447bd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e62047-008b-454a-a55c-260b0236621f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93cfea7d-f033-4c3f-8242-12f252940dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3111b74e-a7ae-4e8f-8c41-1ec48e149b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0b4ab8-808f-45f8-96b4-aef41a659f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b174f47-cb6c-4de6-8a2f-f132fadd8195",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6145c92d-7704-49a5-8360-87169ddecbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f0b561-b93d-4e3c-970a-5227f2da41db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f094ea8-6180-4126-9e6e-933efba8f899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14b3ea5d-7ad9-4b22-b0db-a6d129936a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11805d96-9568-421c-8c6b-6bbcf3b0aff3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f2044d-ccaf-4d20-a530-c850115c26b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57de281-44d0-4fbf-8a24-589b4485cc15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abfedb0-878b-428b-a57d-0e031bf27c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3bc6478-4cc7-49aa-af58-926d3f998130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2aba740-0520-4a4f-bde0-67ade1fa7f32",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afccf0a-a44d-47fe-9051-d06a8e4ad0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c7d173-67f5-4560-8267-c401d8c32eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a120908c-2eb0-4fb4-b143-9b5c02578b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aaad17a-6d8f-4931-9bea-700c77ce7b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600b5301-05bd-4fc2-bfac-db856812f4ab",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be988c21-0753-4b89-ab26-5aa7e6623329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a341cb3-9c2c-47ad-ab83-ff1d6b87958c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bb9945-3364-4db3-ada0-3c7be35a2954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "327f6011-ef05-4dba-91c7-a3567d3402b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03c255c-c2f1-49cc-b325-6a648561b641",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7272a067-f156-41fc-81a3-0abcd46ade98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1c4dfa-35f4-40be-9af0-a17078709e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8915655e-d44b-488e-98ec-228c8b235798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd1c60d-7639-4097-94da-5fffa60a0e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338cd4eb-b8a4-4111-b984-bb95dc0fcd7d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78a2f48-1091-4910-a5f6-6d65b180f08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c48b308-fd35-460b-b213-4cad414e4a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391ebf76-c915-436d-b808-6f47b8a7aec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfbc23ad-99e7-44a0-896c-6209c514e624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6a55b9-8232-4ec7-a822-2d772ea19cff",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86553f0-7aa0-44d1-8c4f-75e2e01ea5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd61885-df4d-4da2-bd6e-dffea6f3955d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5561e7c2-11c2-4fa0-ba87-791a8e878573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "086b87ee-8eb9-4078-a0f6-1d91c470e8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827a075e-ad1a-4577-9910-bf54c8bb430a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc53e6f0-251f-4e86-bb36-10465f6184be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272ab6f8-4f79-434c-a9a8-b4349001474e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c636d3-58d2-4dad-ac52-e6f7ca8eb4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2a851c-1787-4dd7-a1f6-0fc18c3e0035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e263393-5881-4ab7-86a9-c7e298b9e68e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412dc415-1a2f-49d6-9ffb-9df0c0e38cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dca7281-11b5-42bb-a87f-5f4ec3996e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1913ebe-612c-444d-8917-ac5004283815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4739597-f8dd-4859-842a-a66562d411df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba27301-9175-423a-8af3-285a746f8341",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7652b8-aa88-49cc-a99f-d930b3cf67ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152f443d-203c-4bba-b12e-dd455488eef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8918b5b7-1d49-4246-8e56-70844f89061a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06ab1598-2fea-4bbb-8e86-cd0c5e0fb2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187cefe5-302e-4f14-83e6-741fd8e58ef4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f11996-54a2-4a66-8d21-2dee5a73f217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b979dd9b-5e7f-447a-a22b-4da06e6046fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960601f9-be4e-4ca0-8bdd-8dcec98454b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a29f28-eae5-4ee9-9257-56e80b4028a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed6f6f5-eb2d-4896-80a6-244ff9d8f16e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5fc5b1-6e97-4fa0-a156-4a6a30921fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63cc86ec-0682-43f6-9888-b23db7bf7d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3b5427-1ee0-4bf2-86a8-e35611a23aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e30ff488-7f21-4b4e-b2aa-17b454e37b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03349baf-c1fd-47b1-99be-a52d9cab1385",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc21034-602e-4e84-91c4-48338ae15a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859db1b0-3f8e-4757-8fa5-2e417a24831f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c461e8bb-17cd-4764-a146-418fe58a799a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b6b5e9a-1ae7-4982-819f-2f63152b5b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db75b52a-bf1b-4c41-a9ba-560a61ba85e9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25fb8d9-9310-410f-bfcd-ee5af3fef87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1a5b86-f0ee-4c5e-8f9e-f4c3b31d5442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3298d775-eb60-472f-8fd0-0df7203b7f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0e490e-3149-4cff-a4bd-61879fc085a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc89021-fac9-4f5e-a416-b45537955674",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97314869-dff9-42b1-934e-21d0992f78ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3bb14d-a567-4f5e-96b8-d1625fa73689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9288f7-5817-4baa-b252-c1f8510a5ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "165cd7f7-df26-484a-9aa4-b4f6abe3cfa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8199c8-4f1b-4dc9-9df5-0ed032ebe0ca",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2f602b-d0ec-4f2c-ac0b-213ef646d38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3da99b-db37-4e70-a1e8-4ec1e7ba6c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b09360-8521-4171-8a29-b4cab6ddeb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "54a9a247-70bd-44ce-a9bc-70e671004f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67f12d7-9698-4c29-b1c2-da688be7d13e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58e73d9-ef54-470b-b964-9d88ea290313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0510a2ab-ef48-42fc-8bc6-35b5f2307d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580e5559-4136-41aa-8b4e-02f03029fc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd086fd-12f1-4516-b31a-94c5216f24f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d09b8fb-afb8-464e-8ae3-11338018afc0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01527dbf-32ea-4890-ae9a-23579c3a004d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cafa375-d975-4c2e-bb1b-241d39fa0bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efcd1eb-73d0-4317-974c-3fed16855f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "106db6af-a6ba-465b-acb9-8d961913f1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293660aa-6051-4b41-8c2a-4c83b65e450f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c094d71-e4c3-4233-90ad-7ba9b55c4d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f5502c-d60c-4100-83d3-e8702875a7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6047970b-e5b2-42a7-9a32-4adcca0a53ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a17cefae-ac29-434b-a3d2-623f08173c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf4d285-0917-4184-ba89-24a54767c6b3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1ac879-751c-4222-88e3-80aad370621b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "80eff403-550d-4571-a8ed-a138a29ae1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c53320c-4b96-45ed-9ae3-f1ffc5c888b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dce3aaa0-acbe-4069-b0f5-8f4674c074c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "10cc2dce-b2e3-4b76-b549-5629a775c332",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ae6f2c1-0357-4beb-b446-724e4ac5c07e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e6c6af-7064-48af-b08d-01841853a42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3feea588-b08b-41ac-857e-44ab02ee0d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93721b5b-e1d6-4fbf-9d5e-db101e676b05",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "432794fa-70f1-4dbe-838a-bb254bc93523"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5e60340-8995-4182-88a7-ac9195c8f009",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3893d3e-6e28-4c1f-bf7b-4162ecc37633"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "101e1eef-84f7-4356-9647-d9f2ccd3bb2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bff27ff4-a898-4a7f-940e-0ead748b1a9b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d89caf9d-2fc5-41f3-b6b1-48ef9f66bba3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c07e4cbf-7290-43ed-be66-47beb3d4125d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4f352f7e-32d3-4d66-bc7e-e3bcabeefacb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28a01663-2787-4289-ad43-840109a04d05"
                }
              }
            ]
          },
          {
            "id": "aab0b020-e81c-4858-9c4a-3716012869a6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f084ecd5-d674-4013-8781-1156246741e8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1f56235-2505-41ea-872e-bcc8b5f4682c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "59da4824-e56f-4997-9bff-7df443f8826e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d491dd32-3b05-410a-ac98-197460cb2536",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ea20789d-4395-49bf-a15f-00dc9e939563"
                    }
                  }
                ]
              },
              {
                "id": "53d61ed8-b118-4ca4-b539-59ed57c1905b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "420e8d70-c898-4d78-ae5e-9f99866de3cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e7181a5d-5f72-4dda-b543-aacb3619d1d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92b9ba6b-2b06-455b-ac51-5793e12fede2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "061ad3a9-aff5-40b4-872d-5c6de689639d"
                    }
                  }
                ]
              },
              {
                "id": "4fc98ca9-e42c-4a50-b00b-549ca3512e3b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed93f712-caf5-4607-bb02-9b3e2f86101c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8f941eb-cac0-47be-bf6a-206c2d6d5661"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f41d4d0-2dfd-4120-b660-73b7915cba40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aab9bf83-837c-41a6-bee8-13cab015fcc5"
                    }
                  }
                ]
              },
              {
                "id": "c3b1223b-ddca-441c-b143-765d2569dfd7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da593a35-5b0c-4790-b45a-c69c038e136f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab206903-a922-49f3-be50-54e058700c1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58a9b972-e0ab-47f4-aa02-a1d012bedb84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7e9cffc1-5de2-4eca-9e4c-1dc3c5a2e093"
                    }
                  }
                ]
              },
              {
                "id": "3bc5e200-3332-4ebf-ba55-5f9430b0bb5b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ea8c622-8e6f-45e8-9ec6-508636b95b50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9e26e98-58a1-4f3d-8025-098f71f9f53b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d689796-2eac-49c6-bba5-21337f5851ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d4b0009f-5462-402f-aa63-4cec99863156"
                    }
                  }
                ]
              },
              {
                "id": "483f267b-d1c5-404a-a4ed-11974ef9b195",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee2991aa-5c6a-40a2-961e-1edda032db86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94b872bd-c452-47f8-8370-4086f2e338ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dc14f12-ea01-47d1-9003-d132e74e6ede",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0271ff40-63a1-4c47-8c63-7da59a4aa194"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a9a1a4a1-b506-4b7f-a789-8d69ebe987c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1d9bdd5-fc86-4f61-93b5-1c79e1cf6995"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4b0c04ce-7327-4da8-82aa-236f7d971774",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "356a4882-f054-430f-b887-0de9fcac3123"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c500ac3c-f3bd-42cf-adba-ce1c217e7208",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f6fc8993-16cf-4c81-95c4-a0d547a995bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f49968d3-707d-4c67-8405-7329ad774922",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1bd38114-5919-48df-9710-d53758b630d4"
            }
          }
        ]
      },
      {
        "id": "5082bb0d-db21-464e-9355-66040a138b6d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bd8d1207-bfb0-4707-b13f-84af6931b2d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57544550-5790-4a23-82c8-1aab310df3bb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3079b194-68ea-4ebe-8947-47bad8868112",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ae4203-e8e9-44af-8e3d-a1f91d3bce1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeee4637-f43c-4a3d-add0-990280aa798f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7be950-827b-4c0d-8811-d98821d7089a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "763e6fd2-afd9-4181-ba9a-3af05bce223c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22c0984-e16b-4335-a2d2-f39af3f3afb7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7a87e9-7b9f-4d21-acc3-2758f1ff07bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8859f282-892a-40d2-ae91-97a94945e523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e705d2-36bb-4abb-b477-8e6aa793cb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0e4d92-3bf1-43fb-ab27-e9c57bab87ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f14c47-1e65-4fc5-85da-837168d000cd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f668151-c067-4ebf-9cc1-e3c756ba42f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8904878d-e352-4eaf-aede-be2b0d8fb791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6f9a84-dec1-4a54-be20-f62267a223e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c404f3d-08be-4538-9dae-b388f742fdd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c651f66-a0e3-4276-bd66-719beb166204",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819db0f0-f67c-4d6d-aff8-ea06d5827d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6582e817-d505-4a9a-b9dc-c5f05257a18e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaec6213-f4e8-4e34-bed1-5e2951d9affa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d45eecdb-f713-437f-a2e4-074e81c1ac4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894ec4d6-1a0b-4f1c-a01a-c19d0f891173",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c582c70-9deb-47b3-b9ca-843e3e898b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92749ca0-1ae4-4b8a-92a8-e1128bd54c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abec140-b031-451a-a24b-254940b96bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1b89a3-7525-474f-b3cb-ddfdccc4472b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac25479b-fdc4-4554-a0cb-6966ad2a0935",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8f08cf-fbcb-44e1-8280-283850fad996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c883189-e144-41c9-b198-4ad7340044a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b5804c-fd2e-4da3-944e-35f4deb57b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a52c7bbc-ca80-4c38-9f44-3bf4ebda62a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa27b758-a77e-4528-95b4-57747249464a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45086c98-13a0-4299-8ce6-4ec487330bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5874b239-1d4e-403e-89ac-4ede35754c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2802507-8c6d-42ba-b74d-94906ab089f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7f4071-f115-4794-8f4d-3265423a59aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63ca3c5-97fb-4df2-8b9f-eb95d9cee483",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a4bd51-a53a-4ebe-9e77-42a43f7d3adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f9dd85-4246-4726-b1c3-de5c6cae21a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828e741c-8908-4c58-8c11-36f0c1179602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ecf4335-cc7b-4d74-a50b-704ca04ea6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ec0983-2c75-4020-9bda-4428da7e9562",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045bc6ad-5fe0-43cc-b02b-e26f8e004d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febbd9ff-668f-41d7-b324-4b7faa093a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1aa948e-db3e-47af-9399-3b001c0e819b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3d8633-033f-4c40-8d2b-c1df9be69bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f450a0d-4d8b-4a73-b0b0-5e0990b98fca",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2593342-509b-4bf4-aad4-f357725968b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63cfa0a4-ee44-46f4-a62d-f344486ed179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409b112a-379c-4c56-b205-d458c100c88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9818caf8-af5a-440a-a0f6-098de2163f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4829cd-6f7f-4d58-a19c-669860b9ba14",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5e37e0-3294-4e81-a5a6-e56e5eda23b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf75cc35-f710-4345-853a-3b4b9a1d4d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bc885c-4942-469a-b508-26d7477f2a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1331f3e6-f00e-4c6e-b137-be8e299347fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a86a33f-391b-46ed-816e-a3760c94768f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad228e4-37ac-4bc6-81e4-6d73bbf592c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fdecf4c-4a09-45b0-9cea-978aee192529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d580ecf2-a4b4-40bf-aafe-514910c185af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85bb29e2-f4ed-4023-b0c4-69e8a9f0f879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33bd5ad-b463-40ce-90ed-b25444cb4ac8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9afb00-0849-4da9-a07f-6cc5a8826815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba98eca-8088-40b6-a948-0b281dc6dcd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a6eddb-d230-4ab1-84e6-4597e478e0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "623c0b58-f546-4fee-9bd2-5d8656f2ff5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0252b79b-6a0b-48f0-be27-df723c2337e9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db2bf3e-a3d1-4202-a4d4-088131dda2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d8aaf0-cf68-4896-9463-c39784c94dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37c7950-bfb2-4f55-9414-f726da4659e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "828ef963-7a10-4e59-8c1c-d9afff0d3cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a78018-cf82-4b9a-a283-cfcc6b0c8690",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7387683a-92a8-4893-aa0e-16627c8a0280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ff91f0-0840-43bd-95e9-a7e99bee72bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856a2c74-1f45-4a06-80c3-890a9f122722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3690705-0b0c-4360-b7c4-0a04b6713703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8482aa-dad9-4646-b9a8-3e7a6e7463f7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af300e02-40bd-40da-af15-fbd4223a2db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a401cd62-d14e-4266-adad-aae1ca7bcc46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c8ee1e-304e-43bf-918f-71957c73424c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b412325-e7f7-4b23-a8e4-ae91be627a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb4a56f-abca-4fcf-95b9-ead876a67f0c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058df678-328c-461b-9bb9-31b24ad4cadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e8608c-76c7-4ceb-8612-a60eff78e640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea0b8fe-7b8f-4db9-b702-8bda02591ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c290a9-1383-47bd-95bf-c790c49d6592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9952e62-4289-4ef1-ae11-9d63cb97ae84",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6113132-0541-451d-9c45-27e91c37dcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd67336-64e1-4f88-80fa-79cd45d49726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53a725e-aba7-45a3-9193-4a2bb1d55b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f2c0c4-1616-4e3a-a4a5-c596981d43b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5adba2f1-9172-447f-9334-d932a401d19f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6251ff1e-a1d4-483f-ae39-1f993289ddbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1e6395-ab63-429e-80f0-69a1a14e899a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1472d24b-ed76-4ad2-8dcc-3db152366c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59a95514-627b-459e-9bc6-774a4c2d3329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f7b66c-4715-4c6d-ad47-f5648c2e2f91",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41aff8c3-85ae-4e62-9f3a-90ead13d097c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73083fc1-88e7-4dee-b51d-cbc39bc9e324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9767abcf-20f0-4459-a826-1dd4469b673e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67884086-0650-45b9-bd34-1cd941124615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a824d81-3238-42b1-b44f-8c5ee73173f1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1508123a-3c3f-40f3-94be-95d69d2c7cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53830841-3c63-4569-a11e-266faee6b796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4252cd5a-c159-4db2-b8a0-1810e38d1ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db19f870-ff59-4356-a946-7e9c59123771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e18a0eb-66a9-40d5-aea7-52b7a1e06d90",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b216e37-f3b8-41b4-95b2-857e1307f60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190aa6fe-5c7e-4478-9d80-688352123126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d2b7ef-17fb-452c-939a-0cb5d7f79eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a13ea10-b19f-4782-bf98-a888246d062d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6730fef1-4acd-4e0e-854d-116ab3cdf1a5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4ae52f-4c42-4110-8118-67c09b443db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4a172b-fb0b-4a1a-b872-8ce3f82a7351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8b3425-f778-437c-9488-9f9a5b6532f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efd7ef2a-1f7f-41cf-9c43-eeae93b37b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4b98a4-8d03-455b-9836-933af95cd2d4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c723894c-72c7-403e-b39c-67340e53955b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c6e487-9d2e-4576-9b11-fa2b0077b293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25b79a7-e3b8-4c59-aae5-ee22ddaed0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b66537-dc61-4b67-8740-80d25ff9368b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f248ec0-a539-4769-88bd-ac4a46784dfc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68ed821-6a34-4d96-95ef-fe0d958cb111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e94f967-f8c2-40bf-aa37-3ea808e428e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623f78e1-0ae2-43a7-96ef-ba4ea89d9f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac94c597-5e04-434e-8cff-53557f85e348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b6d629-8502-4eeb-8dfb-ca27b5efc4e9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88f18eb-e170-486e-8486-40d49e93e99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870dd42d-f3bb-4ec8-b195-feecf5bfa62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2f5cf5-cd1b-41a5-8377-6cc53a956faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2c8387-9119-4dfb-8da4-97ea98c3313b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10b0e2a-1965-4702-ad40-5fdec65b1aa7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c01974-a9a1-4a8e-a6d9-0351c3868b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea16c62-c2f6-4d98-b63d-e81c541f3306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b32943-1f63-4068-ac5a-d37927b1fb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1637b7d-0f30-45c2-9af7-cb7970f41e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff6e85a-c416-4cbc-82cd-229068d54db0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052b83e8-514b-4080-8a3b-12b2e67e4a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d1faea-8e0f-498b-a777-e878657495bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05aabaa6-c806-48b8-9a0b-a54e563583ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a5c3de-5bb9-45fc-a445-e6ff1a21d86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3850b85c-9591-47b3-8e07-05c00275517c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043b3ff7-7975-4fbb-b9a1-6becbf137432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4fcb62-8fa5-41b3-99e7-a0027087fae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea147a2-1ee1-49e9-9e60-86de4dbd3428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1528bc4c-a490-4c68-84d1-b7c5ad547e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7635a7-2ef3-497f-a506-15c819710b54",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b23025b-0fd9-4927-80ce-2edd77d26057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e146baa4-b843-41b9-b27e-a0b48f1cbcbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c4a400-218e-428c-ab93-bf5874e31be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d095eed-557c-49d5-8eee-14b643f638a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422fde44-e3e8-4d24-9b07-4ec5d6934082",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ee3733-e2b8-4114-ab96-b4f6e8a39f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28625656-6ddf-4ef9-90f2-069ce1a01d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1bf4ca-49c6-46a0-a011-0257d40920d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "005b0cb8-e911-4f2a-9650-f0009ee6837f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a953d6b9-64c4-4568-a271-78f737190443",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6e2209-4877-4859-8bd6-9defc2d5ab3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8dc4eb2-0e54-407c-957d-d9bbf7081618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076b6a7f-6840-439a-bf12-5f06ca2fc167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72234a37-b0df-4c89-ba5f-9ee3e906a43a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ea0bce74-08d3-4480-b822-f0871ef84d6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "abdf87c1-110e-488d-872e-d0f6c0e2e8f8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a78c2a-963c-42cb-aac6-8534e4a4eb1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5261a2b1-e776-4484-917e-55b8590e5352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d42a2a-f364-4e07-8404-449ac4dae0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "debb6a7f-57a4-4c12-9000-b212a3698eb6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bec7c2ba-237c-47b8-be68-dcbfc5341b3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1de46203-cfd9-4d73-81d1-32d87c5416bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96488489-cc10-4557-be5c-c45194b5206a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5962e80-666b-4f85-a498-d07e49935b57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ad7bc48-5d2e-403b-8a34-c307edc7d15d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "00a1298c-81d8-49e8-873f-af8eeda2bc63"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5eb23327-dec0-41ce-8ec6-3d55ed515a98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24384a6c-93e6-44cd-9ca7-726c1ad0c326"
            }
          }
        ]
      },
      {
        "id": "2fe323b0-0f5d-418f-8e54-41864405c323",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a971bee9-144a-432e-9636-bf349b19bda6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e9840b56-6b23-4a6a-9fa7-547653247636",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad2bdc76-1de7-401b-8bb6-524395421077",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec22a4ce-4f4e-4b54-bbbd-312d706d9b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3b3d24-1e62-418e-bda3-b0ed78899855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aba1c8e-0882-4775-a972-0f14d9947daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "132842cf-de80-4144-8969-025ad751ba5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac7c389-b712-45f3-a0fb-fcbe3185b425",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4296e0be-4652-4a8c-88ab-5eb0b9dd3815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d5e442-43db-42d0-8e13-74205984fc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf19273-9551-4bfb-89c0-03401bbc4ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1199f73c-cbe2-499f-af77-be3fa73bf213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d9dc76-1dd9-4d38-aaaf-985de9aafb17",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf63f8a-cc86-44de-8d63-1be5c36d3b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29612a00-2792-473d-bb93-900262c774e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b7d8f8-3b06-4e7f-87de-ab47cba4d334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb81d00-13d3-485b-a41a-6a4f768de422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda49c4c-0827-48f0-9257-6fac21a50bdf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab16b35c-5133-4ac8-88b0-76bdb29e24be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9e3140-b226-4e43-a97d-45f5d7d60501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd5878f-fa51-48f8-980f-0a75d71d912d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38f952d7-2684-40d5-a350-20cc64652914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae42cfd-16a5-4140-9c6a-3c546d755896",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e592327-007f-4dee-8a63-48b537638bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38ba604-d525-4528-8fc8-8cac3636cd52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400ebbcc-f4cd-4604-b487-13fa5f2eb741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4df7a9-6d2d-4599-b119-67d98d43336e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b3b147-a8bc-49a8-9dc5-819e3ab6f26d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15125d14-2bf9-4a12-9b63-75fbf766fd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c789cd4-a101-4ac0-99c8-4ba2312e7d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224dfccd-49a5-49eb-8fcd-be18b3279feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6765fc56-4958-43ab-9d6c-79c79e70dcbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5050792f-2a26-49ae-ab21-40f82382f760",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0cc0a8-5ced-43cc-a928-664cc1a1bf2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9684e0c9-210a-402a-a1ca-4bfd4d5ca2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a218db-86ea-4ccb-8c02-c233b91aee8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "75b8feff-5786-42c8-8c7c-7f8063e9fd0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922dbae7-a7bd-421c-8d3a-17494af2ae80",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de734ee-fe68-43c9-a375-45a2f427bebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f2bff7-8103-4572-8119-c983f9775e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ac7d2c-d5c4-4cc5-8a52-0645ebf0e760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcedfcec-5785-415f-ac1d-82783ab3dd2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667af8f0-c2e6-4370-894e-7d3e2a140205",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31262603-5f87-4c92-aea2-ff5e8174e338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a53397-de3a-46a9-8a75-f72fd4801006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db511a17-176d-4aa2-be31-3b21e61a39ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "058cac6e-1e6c-4300-b7dd-b59ba06819da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9094526d-9b7b-49dc-b907-3f70309c25f8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16362051-c049-4f16-9539-c217b635a800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30f1eb0-9bc9-4c75-bb12-28cb8dc9cdaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df2864c-5bb1-481a-8244-6834d99eb35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9afaa44d-f412-4abe-99a2-e0535018bf48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ab0226-ee8f-4531-9571-db98b582cbf5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9aafa8b-f105-4f11-97a9-32060a5a3d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5921a8-813e-4f3c-9ecb-2b9609d9a468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34abbb7-abd8-45d1-984f-277ff11273a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ce8540-46af-4c87-8145-3899db23246c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcf6525-5b2b-4d96-bb9a-2a174e4571e5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4819467-1afd-4fe8-8a88-f2fd486af522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca54ff39-c8b1-4772-814b-b37b9c4768b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3adeca-e1ec-4ed5-942e-2e98a14821db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc898a18-1e85-48c4-9ebd-2da83547c88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f5d110-a6fa-4374-96bd-9cab81b0afac",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4108771-e4f0-4b4d-853b-e1c177968672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d6c544-0a7e-4184-bbbc-854c4ecc2332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c0354c-4da7-48aa-b80d-90a14ec9bbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19968495-3c13-4f4a-91a8-b23b5f16a664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1ecc27-b930-4503-b4b3-504e81a4f924",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd295149-fe53-4020-a6e9-577541c89b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1555280f-0a0a-454f-8e7a-9fd5eb48cb41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f091d7-92de-43d5-8d40-c94c6a210b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "19058484-f8c1-45f0-ac10-72c09012e9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6533fc92-1ac1-4485-a1ab-24ae605a3c26",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad81306-009d-4e54-ab59-78270a4a5f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072c1af8-a83d-467d-b3f7-3aa7b24cee4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3f0524-492e-4ef8-8fee-733265e6e393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "21a3fa4b-bb6e-4001-b520-6aede75ea849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6460be04-9f35-461b-9533-48c1c4f04213",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68c053f-2e61-4f60-b020-bec2281cba03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c07202-d816-4c2d-aed8-0e7377451cd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5eff14a-58c0-44e6-8d41-8c36d282860f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d857b06b-acf2-49e2-86e3-d9fb4f374864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25633f75-36bc-40d8-9c41-76d7a8850c04",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea682d2-a7f8-4467-a136-a8ba6e7a680e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7729db8a-33a8-44bd-947e-925a4faf26b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af1d8df-61a4-4af7-8a5f-2e602740cfdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba430e4-3437-4f3f-9856-d58097f07144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f7044c-a4e9-4806-997c-b10af876bb90",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7afb4e-d01e-4fd9-be88-df9ae76842fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2009743d-82fd-40f7-9d8e-ae265f03af1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4049476-1248-4abf-8f46-60b3009d0cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee6716bc-1e1d-4b91-bb4f-0bcb27fefdea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c687d133-f224-4f9e-8344-5360900ba59c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48437995-9f98-4251-a7b0-ba41f214cf42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62dc9ad2-f6fd-4325-8854-9681564718dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf803ab-5d50-4566-af0c-aece0e7bd0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8262cd07-ead3-4274-a658-5f46aa644f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd51ddfa-3846-41fa-936a-9d390555b03b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682afb1b-489d-4926-900a-a9da18626e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca830588-0e87-437c-bd06-b56edf2d3a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5220fe-de26-433a-b715-6bf46a8c0ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38b98bc5-5771-4c40-bd70-51a566d1492f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08cc33a-009c-4d23-87b7-c301e81c420c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7a3ac4-a1a3-4037-a5b5-bfa3e97e7da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551b11e0-51af-46ed-8c4e-df94c9efd314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a8abba-b476-4960-8b65-0e871d0f14d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a29744b-ffff-442f-8808-1bd96ef6902a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef891f1-fccf-436a-a540-04d5daf56bfd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c30608-da70-475e-9210-8cca45ecd6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14e7531-6a40-4a04-8b41-525739daa580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611fd0c4-c1ce-4624-8200-a883543aec62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91653e22-f16f-4eed-b999-a801c37345a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f70939e-2f4f-4faf-970a-88178790c2a5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947c54a5-8319-47db-ab28-7f5b7dbc204d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a476833c-1bdc-4bf2-878f-42442eb4dfc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b730fa-5aae-4937-b7b7-c65a8bd04769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bff3b079-b3f7-453a-b74d-a7dd3dab6f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3979d438-1211-4748-b596-ec9b6ec11dc2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac2b05f-3322-4270-89a8-68bd3e37a065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a69990-fb43-4a43-8b04-cb9de607049b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cba3180-7214-4e60-ad12-5c8cac9d0a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3637012-2ec5-4d03-8fc0-46dcb68bee5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef61fac-b48b-4e36-be6a-61b87128ac8a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed6d085-cdf3-4e5c-92b5-5cefa59cdda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204f460f-213b-4ff5-9dd8-a9505830f7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f30665-fe61-49a6-b399-af218398564c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f22565-bcef-4ea7-bcb4-28512c9ecba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca728b1-30c9-4585-82df-a522b19c99be",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7a35fe-32c9-4da2-8807-26dfc0c8fb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73eac03-f20f-4da5-91d4-9e7536bf039e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75311b97-3d06-41b7-b96a-3ac06808e74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a46b77ef-3e4f-42eb-a576-f94c6cbbc7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000a0c01-6b37-4d5d-8961-3e7b6815ecef",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d51c1f-446d-44c2-babc-ba86b0165169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749e6ac7-b752-4cd9-b04c-534029fd54ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a11af4e-d8dc-4270-8f87-1e46fc1f2823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aab20509-5707-422a-8630-cf0da04119ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86d05db-f3ff-4390-8478-1455266c74bd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbb61da-0087-4598-ad22-476986068694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5476d4df-2397-4f63-a899-9acecad4c31a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9301ac-7602-4137-96ec-429b1272a61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d077d56-ef78-41be-80d2-3b64fcc7f3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f057023-1237-478c-b07a-593e5ab4b604",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b2c788-fb3a-4835-bc0b-66b8cb1d7baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53862c0-341f-4095-99cb-b81c000ed31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba66fd13-51d2-45c9-b9dd-189620a33691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca558a4-a102-41fa-9717-c86cd47f47d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e615764-170f-403d-8488-ce94d0fd7222",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42ad669-f164-4c7e-8c4e-975df3242d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5084ec-e075-40c9-8f45-7c6dfd04f120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6d794a-498d-4117-bfd2-4ced7d9bf0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "577ee9b7-258f-4a8c-ba3c-508eae893117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b897a6-a83a-4271-8af4-f2fc56f108b5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e2159c-227a-416e-a6a5-1017ebd0117b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b8ee72-8e50-406d-986f-b908ecbc106f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e08b189-ecf5-45e5-be1c-0211799dec60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73ddc874-d8e0-477d-9030-7bbccad0da08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445c53a6-b108-4ad6-9fd4-1a2da5042317",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712d2247-65c4-4788-b09f-5953ee7d32a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a40aef2-6261-48b9-b734-b24f656d307e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d011e6cc-5516-4a19-af1e-4791575d099d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26c90157-4ca9-4426-a936-e8077fbeb284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4602ba-e413-4f50-94fe-659afd80c92e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311a1566-3ec6-4a54-abf9-b683c336eef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d46561-a6e6-4882-8d42-335b2504bff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3ad3fd-3d37-4fa6-8653-0d23cf2f156e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e059f1e-3f3d-402c-9b4f-cadffd5004b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070c5cd9-6c07-4a0c-9b2d-dfe771f19299",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8056a6-970e-40c9-9763-cfe9485bff89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d7ab32a-7e24-4d99-bd04-7f47672851d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3ce1eb-45ea-4344-a19c-eb547a129d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da438c79-8bbc-41a4-92e9-d0134de8752d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0267c19f-a3aa-44c2-95c9-5e52fb632cec",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874df052-9396-4a7b-8c0c-7188429d0be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2057bbb-fe6e-4a70-9ede-d2f3937a6d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fefe33-09d8-4564-8018-759f7906bf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba7df960-345d-4d77-945d-bd683d530fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741b58e5-28cd-4a59-9f6b-d10776e7a5d3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00117060-9a1e-4cb5-899f-9e8a99c363a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ed49ad-74ae-435f-be7a-cbc34a45c3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3529b5-3b68-4719-8abc-9b9300aed777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b00b841-1c6d-47c2-b94a-fef7dfd2eb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f633cb5-9e86-44fe-8c33-024dd9d5e482",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafc7fbe-c669-4362-b189-1b4ae36e3780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989a533f-56f6-49ac-bf55-2a976ca1ea90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c58bbc8-b83b-4a16-a585-37f61b1b1c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b86428-251f-49d5-a448-7dfe1f765966"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fd804e6d-b365-450e-a378-acb37c9aeeab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db1ddbcf-c689-47ad-bd24-32f2bad2aed1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47300aea-9daa-4880-8d61-95acb726fa11",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "69707104-863e-40bf-874d-cc0bf738eae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70bcf0a-f4fe-4180-8c82-64fae052a8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5e1fd3a-1a29-4993-9158-9dd7d7e649db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c786ab8e-dc6d-4274-9b96-6e0173ecfbc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d30a0c2b-b74e-40ee-b31f-8f76f88cdc41"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a984263-87c0-4c44-a7d0-0c0af60fe420",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85f02594-f98a-4eba-8908-c000b197f222"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ac0c467-f311-4aab-a359-39e34f57744b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "36775bd6-e1b3-47c5-968f-ec7d82dbb1e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26b7e162-0121-4dce-be4c-a2c87351f093",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ccd2da02-79d7-463e-98dc-9fc01b27673d"
            }
          }
        ]
      },
      {
        "id": "da55c6c7-9aec-4e1f-a0ca-49c04c144f21",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "dba9f1fc-c24d-4e94-b36a-274746c8ca45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de11cae9-e698-40bb-ac76-1a6512b1270f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f0ec4591-c8df-45c1-963d-d1ffac4aa11a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235be9a8-289a-4a87-8a42-951a51524edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e85319e-2604-4588-962e-57528c0659f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806c4716-4182-4f71-9979-4f0d967fc184",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe48316d-99a9-472a-bc94-1069b3df60c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3496be-2da2-4d61-8779-1700590e50e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc0e301-46c5-4d4b-8fb1-8cb250b4d3ea",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290413b7-cc0b-474f-bca8-ca3ef24d5ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc662fc2-9fcf-409e-b1cc-37891b12e3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696c1049-40a3-4e9e-82fd-f7790a65a4eb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f76cb11-cf34-416b-97a6-84e0690490b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a714765a-73c8-46c8-b7d8-de4f6b6b12a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c14414-1980-4fde-8d54-e82ecaccd8f9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3344661-f8aa-4979-b07f-1be0be8cb91c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70fb5e1-3dc6-4636-abb0-e0bc15d47b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488cf27b-7fe3-432b-98bf-6c6fc3fbbde6",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff42b7cf-c356-4ff9-a829-53740ff636c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0deb0c1-a3f4-46bb-99d0-5cc0f3c2a19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8aa06a-99f6-4530-8be4-a4bb0002c947",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9210c281-6d4a-4c28-a18d-ab40f20a363a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b6d7c5-ff68-4135-bf07-6dd5fd4d69e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4c4afa-25dc-4d17-875f-6a986bcc8102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd25b78e-3b9e-462d-bb5a-5db7d7810729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f6bba1-e213-4256-8960-abea3548216a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8498a943-a3a5-4af9-9a39-e411cf581bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4cd8845-7ae3-487f-84cb-c5e5aa7174f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18577fd8-307a-4d39-9b84-3ad9c4dd0a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ead2a2b-de1d-46e1-90b2-c04eb6f421d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4083be26-7e7f-43f0-ba8d-ae72cc9a7c47",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2402aacf-4449-46a2-9be3-420fcb71de74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97c55c86-466d-4453-b524-c9168c3127e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a802ea-884c-4c44-ad7f-0eeae43e6c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9105fded-42be-4fef-8709-56b448981cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b78e69-7f49-4735-85cd-32113340cf27",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3da0dc3-4a49-49fd-9d61-a556eae32cdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61b1bd01-877e-4363-b69a-ac510856e8fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e7160a-ee6c-426d-a16a-f2df9395a504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b8a314f-867b-49a6-bd88-10ad7725a3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bde3607-431f-43cf-9f98-e02afc115c96",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33728cae-6584-4e87-8869-f03af4729a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6287b2eb-1a75-4b22-b0ef-9545ca8c97bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18aeef28-d594-4b6d-9b4c-f27e6ea515e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e79550-81e2-4501-a995-dba91212d763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94caeb9-e4ce-4e97-a6f6-24b51ec98ec7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241062c2-4ae7-419d-a4c7-21e5ae4b817d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05670dc9-6a56-4809-a40f-456f56a00573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb065f8-2579-494b-8cb4-33b5dce50ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37fa704-f56e-4f3f-a516-03ac80116269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132cea69-087b-4f9d-8fe8-7bd5e8caae0b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aab3123-6db0-491f-acde-589c02b91037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf5f846-a2d1-424d-b544-8665affaec17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede1656b-615f-4aad-8d50-56d28ca1e48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5295ca-5a63-4b20-8ec2-0d0f4dd047ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdabe93-b348-4433-a062-2be548a58696",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4b62f3-29c2-4d90-bdf5-00a718ad4c3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c2ed892-317c-4848-a78b-d3f09c610175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "392b2d52-bd23-43c1-8a80-3f4a6c27b1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764fe7f7-c1e8-412d-85a2-77a684112b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f5f0a2-1589-42b3-8873-279322145688",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b787f8-5cb6-4793-850e-47893ce6b931",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5dee8d7-4920-4dac-b4ef-c96ff3f9e488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2129eb3f-1eb7-4458-baea-63fd71bbbdcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65834240-67fb-4c55-b36a-66a07345588f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc75f583-4d23-4881-805e-51144580112c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ab0d74-7d23-4793-83c0-b98c8d26ce50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "453cebba-fd59-407d-8efb-ef4017f48713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03af52a0-dee3-4c78-8271-87805b788047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a198f13c-e291-456c-a165-395099bdb6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40e7a59-9f68-4aa7-afec-36617cb2442d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba2cff9-d10f-4500-95aa-027e56930a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339d8e69-85bb-4990-a256-a30bc7810df6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e364c9-fc52-49d4-abdc-7dab63c3ac2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb0f478-f189-4bcc-9001-ee72e2bede23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25df50b-9a31-46fc-bbf2-08df17c3fe56",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4f5946-bf2d-4660-8612-e0ce065a18df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "791a4b4c-a8bf-4621-9288-397708881db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0e47dc-34cb-49c1-9419-3964d899f054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f472941-218f-4739-90af-c8038158c2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba0836a-a92f-4aaf-b2f0-9809c46cb7de",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e596dc-a81d-42bc-8208-8d32cfc84a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d1c63a-8016-45c7-a4ea-14a08bbd5484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc0b013-32fc-46b0-9f1f-01bcec7e488a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7130331f-c1ba-441e-bf6f-d6a7980e0e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cc722e-e7e2-4c17-af51-ef90397b79d5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b509e6-7af0-4567-86fd-7a704d4cd88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158247c4-d05a-4266-ab0a-bed05c37e98a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "216d18bf-2c06-41e3-ba1a-e13c05fa283c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587f8e8b-c2d8-4d06-98fb-9ca97a5cc8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a23c1c2-2607-4d16-936a-994c896cdb83",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5811d581-9e76-4c6a-ae9c-19d54e3d19f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99afdba7-15d7-4e33-beaa-e5d4f58e9bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ba5bc6-22af-4646-a3c0-d29a6700c0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ebbb3d-7c8b-4aa2-8f45-c05f4b3ce31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e1e5dd-fd0e-4790-bf9a-9597eb8eed92",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46926672-a9f5-4a82-98a8-d3deaf156deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b823f91-3a22-40e7-8c1f-394304b1b0b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45496bd5-dd9d-4b98-97c0-25c0fa9d414c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a602e5-7535-48e0-8f75-f60527c8a50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07aaab1e-636b-4959-85e1-2fc65af02d0d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc57eb1e-b832-42a8-ae8a-4d4a8b319f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36957537-8ce6-4240-8519-19d1a8ca596d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14d43b1-dd2f-4735-8247-61e900955d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d49794d-4a37-4ec3-92d8-24e1c49ee1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82189df4-d169-4d48-ac17-be624bd6ca10",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3718e174-fb18-4c5c-879a-4861fc789208",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8449a199-2b50-48b3-a114-55e1f6c3aede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2a8e0d-7003-4524-b6bc-8fbbf79f609a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af04cbb5-2011-409c-9e02-e91172324112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f10d3a3-deb2-458e-ad8d-caf4a6bd00d0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec87d05e-3b9c-46d7-b8bb-03a4b2c3ddf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f42e5ec4-d62e-4dad-b94d-83cb037385b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1220243c-5848-4fba-80b3-3bf390ade2a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5b5489-08f7-46eb-aa7a-e260cab79d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d43be38-5251-4286-affb-02d7006ec21d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555026de-d81d-4e95-89e3-5b45569d9d35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbea16b3-a8a5-48ac-bf89-e934ab1d5f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd604578-a3db-48ce-83e8-6c6c4b290722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8af50f-9ba5-43c8-93cd-2988b9712a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484f13b3-0b2a-4696-9a50-a200113fb6fd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e706de36-7c97-40de-97db-be12c0f13a49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa1b95bb-a990-42ea-8769-cd71ebc11453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a805dbd-8b17-4a1c-a8b5-91488843dc0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58348e37-ec08-437f-b435-4257f184fea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86e6710-8ce4-47fb-9ffe-6965b672565d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8daef24d-3a58-4972-a827-c74f71eaee2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cea3505-c3a5-43e9-9705-a9249b0d2f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dfa992-e689-4558-90bb-b122fed531bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c83842-1b15-4e32-ab1b-833e8a67aed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9a7d90-9c99-41cc-912a-d34273af4c70",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734a5814-a834-4480-80b0-9713acf6fa6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c3b173a-5fae-4333-811f-e1d0210b5be4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb8b188-2065-43a8-bc2b-4937045ef1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12492d3-f86f-4ba2-b766-d163edf66df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb56513-818b-4b94-abc6-138744584739",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b92675-a3b2-4ad5-b26f-80ecb3dde45e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03be3072-8d3d-4e9d-8a52-f45dba182129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc77812-581a-4056-bfd4-a21350b74132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a62ff4-1d66-4b0a-87ae-55cd24b1a273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a1fc16-7c80-4ae5-b935-fc33472a0cbf",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e599066-730c-4619-87c3-1b6584bf1a8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78fa3956-be56-45e6-a415-3835460328ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a56f961-19e2-43e7-bfd9-5a56ce18c973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6823ddfd-b626-49b6-a1fb-2343fa926216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de3f0cf-76c8-4350-ba50-62f3230161d0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2662c001-ff85-41c5-b4e9-eaa336d7a12d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce4e5dba-c687-4ce3-be10-98192813307e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d9f575-6936-4cc8-bdfb-73c32aca6b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350ff06b-3452-46b4-aa9b-62014fce9ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cb2c0b-f116-4fc2-8eb4-760f58780375",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf51691-6b65-46d1-8456-e0e5b83f8cdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5f674a7-8648-492d-a3ca-b45ce1db9557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a04fe8-75bf-4c95-a4d1-a405e89cb999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5351722d-f72c-4318-af87-d92a8d84ea6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0012937-0c69-4822-94fc-a868f9a80e9a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df846def-7325-4160-aefe-33d9e164a08c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90a46068-944a-4b18-b2b3-1b530d13768a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d80d871-3a70-4546-b2d0-5edce97832c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2642968-1e8f-420d-83cb-bec569983a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3610f0a-e3f6-4aee-9d7e-866437624f16",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3fe87d-7646-4270-9c22-bfa8ca508602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97978f62-ab06-46f0-9c3c-1c351f0fa8e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea6df63-b184-442e-baf7-314537b7a02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e44e0f8-449c-42ab-9979-650e20a0dc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c885cb-2a8a-4390-ae8e-07abe3d7cde8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8021c638-5761-4b96-b52c-26f9a207af16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8a96a7-a144-4db6-8b6a-07dffcc69058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15085d8-ea63-4ab5-8550-7cb1df3cdd94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d702819-6db7-4f75-a717-b70f356b6705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323406e5-5808-4e4d-9355-7149baa3623d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840fb678-c787-4549-8beb-eb2dc4344dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd73812-f2bc-49b6-ab4f-05a2ecef5fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabdaae3-2dc8-40fb-b609-b91eb22b1f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f02352-90a8-4cda-b264-47a48a4e157b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bc44a6-1d95-49f6-81a4-f97b2b293806",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02510a12-bdfe-4ddb-9ba8-69cc3ffe4655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162c160c-bdee-4b42-ae42-aa612e5ce2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96defa5-c49b-4a45-b9d3-fe03fb0af877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1598bfeb-9bf0-4ee2-a903-16af1e03ca56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f76699-d6eb-4396-ab42-7be2fbc2248b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62c9eb1-5603-4ffa-82da-472b842cc04a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31b2816-9914-4d5e-8383-e78dd987e785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f962b3-1275-45f3-bcbe-c37484eb6782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c37f0e1-b900-4743-b3b4-c71244d83f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d96a55-4eaa-4937-9f53-87e4bd1b5dfd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c74772-07fd-4967-9387-88a862adffbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d76b04-1fdc-4f0b-89ba-f9c44325495d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d7df77-dd24-4df9-8162-02209ac23295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a88c50e-0a01-4463-834b-9f3882a90fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab7aa9c-462b-436b-8e0a-7ea64e30d19a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220bbbee-d2a8-496b-a944-07fb1ebb4307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7631fa-4051-4647-9583-7f389347e861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b268bab-d69b-463a-a0e7-804a852b9d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2922cd-fada-4adb-909a-7827b7fa86db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a84ea7-5cfb-45f6-b958-933f3dd746df",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25aa02c4-26a2-4559-9bf1-50b8cd7ef6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afce8347-429b-4f09-80d2-bfe1b3fcc360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a9f714-3a37-4933-a6b1-1c0ba4975420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e817f7f3-d3be-4954-ae3e-374cde5dfea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b744fb-df5e-4364-8c71-4c87bfc6e9b3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9678ac44-9743-4246-8f44-f9b56c4c8406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79bca52-4467-4844-ba42-f96a7c0a7fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47bfd27-3947-417e-a41f-63ae1a1cdb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d1439a-85f0-4778-a7b5-2b4d2130625a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c091bdf-d04d-4708-9e68-b6bb7400fbb6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884be964-ed0e-46ee-adeb-4a1015fc4ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d335a1-ca58-46dd-aed2-189bb8b7152e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "651c01e1-7101-468b-aed8-a458c14c7f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5eb4c4-f41d-4d75-a80f-d251e0d4e60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbac75bd-4000-42dc-91ee-4b51ed369c08",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac0b41a-727b-4de2-af49-f0a18ffe1a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7623561-57b3-4ebe-95e2-99d8ac2dd7f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38452a3c-cfbd-4838-98cb-b86ad3e00daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33b1bdd-33ec-4553-a105-b50697d956ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9703394-ec6d-4a52-bdf2-556bd0a1a54d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8faab60b-0103-451e-8cb9-a01f4651a31c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4fa1b26-512f-4118-929b-78a54321c2ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35088c77-3710-4f08-802d-d81002448b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89359d5c-9b6d-4d0a-a773-a20fc6abd97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d10f607-6c5c-49e0-a2a0-cd6c9bdb579f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111abe30-a311-496c-ab9b-1a4b3120c860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888e6670-4864-4e91-be36-e3140fb7bc77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a442e0f1-d9f4-487f-a1b8-c3d0d0264634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38de8764-32f6-4937-ad69-ef0fbf7f115a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cf1472-f408-458f-9f62-86da834a3920",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc72debd-4f02-46a3-92b8-9dfb1418d535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0381720-7a7d-4406-bdab-c12facd23600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5653bd3-e996-48bd-be10-c6699e54c3a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bcb820e-7eae-4a2a-83db-68e7a5b91410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ba7180-eb4d-4e40-88c7-bb871939096b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959e94bd-9e4a-481f-99f9-d1a858f6a48c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319c1284-eca3-4f90-a894-b0d5e725725f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883adedd-9615-4ccb-863a-14538c09c1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ce0280-a425-4bf5-a936-a6c1525c5df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1238ea58-d9fd-409e-8bf2-be05c7df0f9c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6f411e-e483-4aa9-a599-c68b6e6ea01b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f6c152-2b9a-40dc-a712-5e93bf6b67ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "249c5639-bf45-44b3-ba25-52d03799db74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83967fb0-9013-4f68-b8d2-a4a9af67baba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfe1110-1e5e-4adb-ac4c-a695d6935f95",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e4314f-192e-43d9-a773-55d7aaeeec8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd63e18-f586-4267-ad82-b318a368766a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50230ff-1f5a-41ab-9880-8298a12a4356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ae996a-6150-460b-963e-1b48da527bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fdace2e-6a21-4d87-b06f-bbf05616219e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dab09a-4b2a-419f-bde8-063ac836b261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8022cde5-18ac-4e72-a891-cb4f86555edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77833c56-ecce-4cc7-a1f3-4e3883e50d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8619cc6-9b19-4968-861e-bf1cb8f1597c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7133d903-60fc-4536-915c-22e6e5236a57",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82588ee0-5c2f-48d5-8bf0-8834dbca2f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c91f7d-07f4-4960-87aa-bffb6a08ce29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a606b8df-9464-4639-96c6-0c8ca8ccbe60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04368665-30f4-4a03-9d35-dd6468acbd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8228b6aa-1541-4bdf-9c3b-0158c33a787d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9c2b94-3179-474d-8145-6754a1343c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb3c60e-65b8-4cad-81ff-e41c07d9336b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f07e60b-3009-4bb7-9018-511aa6ca31b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3d2ba7-c4dd-4394-8264-c262557b37bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff5a033-6061-4ced-8b9e-0e1d5c008823",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc019b20-fd65-47ad-b23f-832ef2e534c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2784fda-daea-42e7-95e2-85867f6f5796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d510e922-7c39-42f3-ac1e-8677b3834efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48e6ef3-d49e-4d19-8632-35c26318c458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aafdf39-b392-463e-ad2a-f76597f96cba",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897e8062-e06b-41de-9d6b-835962df1f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c755be-f6d7-42e4-9e35-fed0b5b3a126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3471fc7-9086-4cb4-bdad-093123ec33d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d9ed5d-b3e6-43a1-a346-2672b63ad25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc595b8e-1fc1-486d-9647-243e50466386",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5265d5c3-66e6-44e7-babb-5a93dde48bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b366ec69-67a5-4f5d-9fa4-cb76515cf48d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5d0c55-4637-4dbe-bd5a-411f276c8ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada860a3-a28c-4a99-9c2b-5a29652a89d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451c19cf-f898-485c-b4c0-fe59664ec303",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ab99a6-7a78-4092-afe0-21fa4a9203e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85325ea2-12c5-4c3c-9a14-542a9cfb9098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e45242-2892-45d8-8ed5-6ec8ed5b9a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84473b11-b838-40f7-97b0-9f7cc0275109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a93fb9-5f74-44cc-8b19-67e69bdb8502",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011342ae-875a-4a9b-83fa-5e288088c88d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4e9c05-abb2-44f6-ad38-103f649e8487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2541b26f-bb84-42bd-a6d4-60d59272a349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99caa60d-6a58-4802-bee2-d2c22e8c90f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270c74f8-285e-4f14-9b60-db0df85b0dbc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d387fd3-164a-4ca0-ab47-8991df457a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17852e09-96f0-4e79-9f61-5b97a29f7ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0f46b2-b6e7-4546-b0f0-efeca1a21150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5b8165-b6fd-4c39-a2df-db55caf955ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88eb27c-30c8-4032-a8ad-152fadba577b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573eff2e-4980-42ee-b03f-195df95093f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f2f651-14ca-4e0d-a096-7b2882eb4cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90af106-7b3f-4f59-a717-6720f40c7057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2ccc52-4d59-444a-9d23-53bbb3f8dc52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d292b837-e266-420e-9550-a2f0b24c0681",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b64c0d-5c46-42bd-aad3-930ad4fb1d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c8035a-b6fc-4f4f-b786-0fb6312a4614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c493b2-4dcc-4d09-93c1-71894ab2051c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce767ba4-2fce-4a44-bb1e-1f38d45cfb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03031f3-1bd4-4520-aee1-98e174dfce2a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b26aea-812d-43c4-8056-0c5246bf7119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ec3d20-3f72-41de-98a8-eb63cfa83dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bfa153-3ffb-4284-9f8c-7f194037e049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c02f3a-65fd-4a8f-921a-0cbfedce4270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcff64d-0ea0-438f-99cd-303a121d3921",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cdb0de-4632-431f-9149-b495450ce08f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e24be573-e874-48e4-8f07-dc03505b0a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc57ca86-8092-45f8-8089-795ff9472907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21937283-d2bc-4c00-bdc7-3cbd5a086eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e9c167-092d-429a-bd5f-4b6bb4599735",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff8dcc9-b4bb-4277-b7a2-91e3dd03c319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13adf329-ec1c-48d9-a14d-ea57f7a48c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1510da-5142-49ae-bce8-6a194b9ca328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f967a39-0994-49df-9f2a-440aeaf182b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5047ae6-6b3e-4cb1-b434-7180d4715bcc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3207165a-c89f-4c62-a5df-1673685d7e71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "246d3ea8-0c39-49ba-891b-258fa60a6618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7bf950-5b0d-4225-915a-137a120d476c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4f6720-de68-4cb7-b09a-e8a5b6dbb07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7ca7a9-7fb5-4532-81e7-278a13c664a1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d3445d-a877-4183-8d9e-74746dd98575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea44ed9b-9900-4008-b0a6-276f6655d2bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab7c79d-941e-436b-8b1d-bd7eadf03379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60228b25-3b4e-4f82-83b3-1ef9c9040b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaa16d5-2cba-4f04-862c-a43baec7a9e3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d0d166-53d3-4aef-9a38-3b0d010108cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a60b3d76-ca94-4186-a453-7ddebebde9ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74f145e-e479-48c8-99f9-7913a84f1bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f43b71-e041-4834-9a75-edfb33c3a029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cac4f9-fcdb-4bbd-b836-082c39c5c38f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1a2a2e-0a4f-4819-8bab-cfade0423e2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fd65228-d942-4161-ace7-86f61773bb6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ebd948-cb98-49d6-a1dd-fbc4303e60d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9b82c5-9708-4fdc-9b52-5d474a6275ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a4f558-a0f3-46ec-9424-044c53122d60",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1654ce-0051-4bbc-8e20-9acd9b1c2aa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cac69f3d-c13d-4880-8025-e14405ca0d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1769fef-8d30-4f14-bc94-615dc8ae0fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8acaf072-838b-45ff-a9a3-719ff9989b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4aa51c-04a3-4849-a7f8-4bea3ac0542f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc2b884-5fdc-443e-93f0-966471e24afd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5141f051-9acc-43c6-9ac3-6c96a4111c82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9e16cd-9655-484b-9679-ed1680983818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21540613-9cfe-4a36-a3f7-7edb5a04d69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493ffd57-c458-42db-a424-23342596e604",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afdafcb-b7d2-4a8f-882f-1a023846bf96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cc7dfdb-d683-4b38-b7b8-2f44b67488dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf330dfe-b47c-4107-b7a8-889f5d9a01b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e962e64-9e7a-418d-9546-b9f4bd744e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd24fa24-2114-4158-891e-21acc623823e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdad6c44-2ae5-4230-a6cc-0fb52833295d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78d5cd56-1d95-4238-b51e-e16ce87d990b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a7611f-e294-4ad4-8573-4c707df942de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d91bc349-c428-4f26-953a-afee7f2f6cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1a0929-54ba-447a-a293-7426da947d83",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfb041e-5719-43e8-95c3-c8808e9cebbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac7ca367-109a-4157-9823-e2aaaf0e565e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e8d96b-0e41-479a-bd83-38c9f6d6804a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fc1316-139d-40f5-b21f-7515356b9071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193d905d-4d11-424f-943a-b62c151f52dd",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8611d193-67f6-4b96-b94d-fffeb593aff6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6591bb2d-d495-4d14-a4a1-35bdf5e985d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53ca52c-54dd-4d93-b34d-4ca8e568b5ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a463612-a76f-492f-9f6a-153a8d094147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822e5596-337d-48f4-a4ad-d34cba110b50",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898f27f6-a564-4e7b-ae04-c480d4c100f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed24764a-b277-4204-84e5-93e5074b3da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe243c49-875d-41bb-8abb-149a1bc899a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658e0512-b18f-419b-a5b9-d614147d3b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffb3314-7149-4b57-b803-e2c025621e74",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c273dbc-a19d-403e-9de2-264366e4e632",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea862429-bb79-4d95-9307-1596edcc77dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60247135-a8f6-4208-a627-27917dab01ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a8eab9-bd73-403b-9450-2c945cc69d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecefef8a-4ac9-4f94-8d0a-08a8dc52e739",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7649f3f-9735-49fb-862e-f4d07e324a8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "934ede59-277e-4219-9451-77cccba3722d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f4cddf-d0ea-4ce7-a4e8-a8af64026489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0ee070-3d47-40be-b899-3495cd984285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956657de-1856-4b7a-b42c-855de8aad880",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3e1299-b0dc-4336-b269-f1a4660e115a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a383f7e3-5f2d-4ce1-bd6d-fc6362a3ebb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "375bbeca-ea8d-48af-b24e-2451ea758474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb69d7b8-c98b-48d4-999d-628a6f060f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb69b8d-5340-409a-a00b-80a81bccac42",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ad73de-0cba-40e5-9f03-69276cb75d59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34c4d88f-7ba4-4c9d-a20f-392c71d9429b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b908d06d-42aa-4461-bd39-3be9b28fa62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86b2dbf-098e-48a1-9ec1-8af02e6423f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b32d17-1734-476e-8386-09fd7efa8917",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932a73dd-dd60-4ea5-89c9-98cdb37371a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0434170-7956-4c38-af40-5839d25829b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be81c8fd-5c36-48b1-9e04-6fb6c54c93e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94bad9bc-c0ed-4696-9c0e-e60dbf83fb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cba4bc-975b-4708-8cad-99214ae61acc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a51fe83-8e60-41f5-871e-9a0034dd0515",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37368029-74aa-4eb0-b00a-1f87ee192c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d444f5-adbb-4cc8-b94a-e741526e7816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85eb6aa-fdd8-4f24-8031-2e1c00bec886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3579419e-5425-42be-889c-a4d090af9649",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdd9037-d00c-4786-9d64-68d8ccb0dae6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae3d181b-685b-4f76-b895-80dc6ac662bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b58096-f3e5-4f69-961b-71671a49a9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d53f9c-7526-42e8-af72-08451c5f2541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0deef7e2-9512-4da2-973f-ec347ed57d76",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5267fee8-c4fb-4492-a2a2-5808047b6071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80c6ad70-e6ea-4960-9134-6fd26ed6d612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e84bfd8-11a7-47d3-a0c8-5d27ac8e1f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91acbc97-d9bb-4d7c-b42a-8d6a01790472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e2c9de-936d-47c8-808a-074e4ff54ac3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b638486-6ec4-45a7-9f7a-eaee6c60a398",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be4cb9c1-e778-4d83-ab0e-702b41b70d14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdffaf08-833f-407d-b615-74e83894fbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac26fde-7d21-406e-88ba-5df63bb7dddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa2e576-e5e7-484a-b4ac-a154fd370eab",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c39600-2ee4-464d-aaba-e46a8f0fb04d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9172e4b9-f4bf-48ab-bdfa-54e95e504f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c9a64d-50da-473f-b3a5-b704a7be21f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e0640b-b9ba-497d-8b78-8cc432e2ad95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6777682-0078-412e-bbf4-1be9cbc3c12e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd252f98-7ebf-48fc-b527-b248959d6fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54e96847-bcd4-4ee6-b044-2a1a7121abad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f6f7ea-d838-49d9-86d4-912e4e0848af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0feac93c-7672-4b14-b846-1079d171b69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572084ea-d5b9-494d-b897-400c5c1b78c8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df79168b-76f1-4dcb-98aa-64a972ef5282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1725a365-addc-4646-af84-b5cb22861268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba7f3f5-26c8-40a9-9c5f-1230ec33ec02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf87007-7064-42d4-9058-46d00017ede9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8984459c-397e-4779-b6d8-6cffd7c54c2f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d254bb55-7286-4196-8e63-1da4b8da469e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fa52338-3790-43e8-b76c-3fa749621cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58d32b0-7b8f-47c6-a3d2-3ca45b4309a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b383b6f-d900-412c-9325-f89aef027387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a13e2e8-5265-4737-9420-1b6e82c61d3a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98041945-4689-4759-b75b-6431514272c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfedbf67-f2ca-4c4b-b8d2-1260af96be35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1c8980-817c-47cd-ac95-765f7737f70d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8d80e1-cdeb-4ace-9a93-dffadee788b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5aabfa-1d57-458a-94cf-7df3509e742f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e0ef57-65af-48df-bf51-bcfc9dfaaeaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38a4ea9d-b1c7-46f1-b785-1550d1a64f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04df6c4-e56c-4782-bb6a-92b6b65246dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ac1073-ed7b-4802-ba8c-b3f087a7b627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a8396c-07a0-4ab4-b1f2-c4105119c9b3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed70a2b-65e8-4067-bec3-7e2ddf0e6088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad0485d9-29e5-4979-bead-8e0c40ded071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "081ee9df-6264-44cb-b2af-bdefc53f2717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87db9f45-e8a9-4432-ade2-33c1b3801368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b093718b-6d72-4aa6-9f2e-037776a5d543",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982fb868-421d-4dc8-a86e-b8c770242ed5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ce542c-5ac5-4960-934b-ac491ee36f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8440986c-af73-4921-8f19-8a6b02efe417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a20c576-413b-4224-a310-221d390fcbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c5ca92-66cf-40af-b59b-7a55aecd8d06",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00fe541-e163-48b0-be7a-d819246046da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05011ef1-1bb5-48a0-8aee-c30cfd8ad790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1de409-3b2c-454e-bce5-23ceb18ee8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5f902c-a612-472d-9a83-b3876639b342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a001d316-2901-4a5a-a1e1-09c1208ade6a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3115babc-047c-4d74-b83d-4a5c9ebe12e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b1729ef-c572-4eef-9e5a-057f2655ea1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb25bc1-07e7-4941-84eb-19d3885ef840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "461d1170-6f7a-4c5c-bb80-c45d6ebd83d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e233f2a-1ab0-489e-9273-61cdc28aa45f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac700aa1-35cc-4f4f-ba53-992fd41a0e8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51831831-132c-44cc-bbfd-8dcf4e611547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff66a5b-6215-4cbc-a7fd-9d033b5e1190",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180feeb4-4004-4eee-a8f7-5da9061ba250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b3fa04-abca-47c2-9b50-e9ede30bc244",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e7d3f5-5328-45a1-8247-f3f0f1ba3694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75960902-486d-433c-bc70-bafeea58518f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbae874-5022-4217-8221-fc2bd7d3f230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18cc20bb-a1f7-46e6-8f6c-5a418aacd0e2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bdae0e8-dba8-426f-a883-7aaf4a9f44e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0464c0fd-7ef6-4e45-8e33-d3d5edcfa995"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "716cb72a-07d3-42d4-bbc3-6ed133cd5ccb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8602b80-a299-4774-a9a3-4e288df948c7"
                    }
                  }
                ]
              },
              {
                "id": "6f008c4e-c2b2-41d4-b3ed-11a0e2f8b83f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17fc6028-ed68-46b2-a41f-b666cac64081",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c04d79-a338-44e8-b84e-8fdb56d8164e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bf3910f9-5208-4153-bcd1-c93828ad8997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc7ad61-c09b-4a9f-8839-d5b751973f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64054e23-f15c-4775-97b7-73e6d9d55f4a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55ca7086-93b7-42b6-8790-deb8c92264eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d667a307-84fc-4dd5-a4a3-39ae7d8662fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7766ea56-5526-4111-a1da-d11e6890c86e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d69e1aa8-1f8f-4056-87fe-b9787ae3b375"
                    }
                  }
                ]
              },
              {
                "id": "0148cea8-abf3-43fb-86a4-657e14804446",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "37f973e9-b68c-4d0c-9e38-6988eb669c5f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e885c068-d301-42dc-ae17-7b30d7403667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8821bc00-7244-4965-a095-4fab0afb5cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80b4cc3-f489-4882-b95b-1d0f91e527b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce125267-0f51-4861-9b35-43e3afb4dab6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "181ec168-29f1-4421-99b1-4a5609754922",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed604131-4f3a-446a-9d6d-c00dc517cc5c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3e3face-9428-4df4-8202-a84674132fd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "594cc97f-cf4f-43fe-8993-62d2951516ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af239b5d-7705-4087-a814-beecc9735115",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2779dbc4-643c-44ab-917c-f370de4a4f62"
                    }
                  }
                ]
              },
              {
                "id": "3f38ec23-f5d1-486e-b1a2-9249d87d5c7f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "899cc1d1-235e-4179-b979-a134d5129ca8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "82545ca3-cb9c-424a-8557-417a37cbfd95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39532ad2-d1ec-4d46-ac1e-7c3af6e18c5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5874cae0-28a9-4ff1-abf6-271faf460122"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab3dcfa3-77f2-460c-9d94-ca4f6f24adce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2f8712f2-d125-491b-9739-8858ed4af2f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54df349d-b332-42fb-bbbe-31e18762ccc0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7177f95e-9c0b-4512-a807-77c77e8a9906"
            }
          }
        ]
      },
      {
        "id": "560edb81-8730-4005-a8a8-4c163cb0e254",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9c83704a-64fd-4d83-966c-4e483ebb7155",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95cb605d-a597-4225-8b4e-163e3548e6ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c6f6cf6-da98-4349-b9b0-bfcd0039f8a4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbe1452-67bf-43bf-994a-683f81bebf0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ab66c18a-469a-49d1-8d51-bc159a0a4219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b71769a-458c-4338-a35d-d09319b3205b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3579acd-913f-4d67-b4f5-26d7e6168ebf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "751a5425-7cbd-441a-8418-0f20c54a215f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb0ae52e-097a-4b9d-9a4d-541bdf3626c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74a5308a-9ec6-4dfa-97e5-e40967829c1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d648369-2b64-461c-8910-95c7c6980565"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "194bb9ed-ae79-41b0-955f-c9fa428fa9ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4ad88098-9ae7-4368-ae4b-d6e9e3d5cc57"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5bb4d029-948f-4798-93dc-c0021c4ee10a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "818e843d-52aa-4713-bb62-90f9308c0a25"
            }
          }
        ]
      },
      {
        "id": "26413c5d-9eb1-4a6a-9c4c-b8e1d8c2fd2f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2f0b3e6a-d3c3-4c89-a356-d7002fd044ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09462fe0-55ae-44ff-b962-2d504af102a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9aed42c0-5d27-4dba-a269-a3f53add10ec",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db11588-ff45-4eb0-8039-212df6cc217c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "876dc443-1a59-4b0e-a24a-78edc327be6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee3c0ec-383d-44d3-9d5c-8a1fcb97773c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86e19372-9358-42fd-afe2-a0c7822a3acf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0aa36ef-95b2-4f30-9915-5bc6f9305932",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "723faa15-4946-43e2-bee2-18d385eca016"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b51d399a-08fa-4a29-bf66-ebc9227ee06d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bfa9ae3-589a-4f69-a65e-4940325bfa87"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e736423-03d1-4f8a-a512-4142a0159290",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c4400bc5-3a98-4d41-ab4b-c828bb58b5d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c614be83-0dce-48dd-baec-8361987504c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29e7ee16-3c85-4703-9f0f-df250a39c6cb"
            }
          }
        ]
      },
      {
        "id": "f5f5f629-863c-4d90-825c-115e7beb21f8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "23c725de-7c85-4d6d-959c-71d63260fbed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "013cc1e3-ebf6-4771-ac88-1b5b78fd961e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26304ac1-87d0-427f-9935-f75154f99b0c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9c6819-174e-475b-ac9c-0bcc40c2d386",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b39b6e84-e0fd-44a9-a366-ec2e6293fe59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d387a796-a244-4d9c-a0c1-1a4831df87a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46bd65fd-3343-442c-aa85-1a493a6bf000"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2db1f93-6fd4-435e-ad49-2522e2902b80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8bc3dcf-5470-4ea2-8403-9d699d6d1b6d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc32bb93-f3c8-46ef-8e1b-eee41a5600ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a88f0670-447b-48fa-81c2-21cc87774007"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d41cdb7-c577-4897-a284-97984fee0c61",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "069f9c3e-f812-49ab-b0f8-ecdbbcd401dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "716669b1-7235-4032-805e-0e5e35afeb96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2c7af9e-2194-4d5a-a004-501368bfb84f"
            }
          }
        ]
      },
      {
        "id": "0aa6956e-f895-4574-944b-de3c49b04344",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f01bb794-6b74-4ec4-ab23-2909dc0e38d1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64b3b5e8-04b7-4199-b8b7-f62b30f13fbc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1ed10599-900a-4f80-815d-25f417b04311",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "842a9c26-e4aa-4333-862a-d6cc48c0c08c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c237592-cf4b-4711-ad24-1c55a75cc148",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 113.75704225352118,
      "responseMin": 11,
      "responseMax": 4657,
      "responseSd": 484.1900898244505,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694737988642,
      "completed": 1694738032814
    },
    "executions": [
      {
        "id": "7baaade0-2002-45b9-a949-67373cbe5d1f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1edc538d-e9d2-4307-95b4-ae821c7afae2",
          "httpRequestId": "c666fc06-2046-47fb-a98f-6f243ff48cf4"
        },
        "item": {
          "id": "7baaade0-2002-45b9-a949-67373cbe5d1f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2545f524-cec2-4cdc-8ab4-5792fa1e956e",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "96ef58e7-33ca-4d5a-9a83-4469ca39c0e7",
        "cursor": {
          "ref": "1a59aeaf-bb47-453d-bc3d-75a9e15f63c7",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6ca4cb74-9d8f-41eb-8c64-bf8fa0031f7b"
        },
        "item": {
          "id": "96ef58e7-33ca-4d5a-9a83-4469ca39c0e7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "596afde6-6c24-4fbe-8642-dc7155c9f7f0",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "54f0c9c2-2a3b-4a29-855d-3776931fc391",
        "cursor": {
          "ref": "8c847bca-2832-409e-a1d4-9eec12da4a2a",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7db0fa26-0fb1-4bac-97fc-e7b00a10ae83"
        },
        "item": {
          "id": "54f0c9c2-2a3b-4a29-855d-3776931fc391",
          "name": "did_json"
        },
        "response": {
          "id": "c2067e46-14c2-47ef-8c66-ef462e11b377",
          "status": "OK",
          "code": 200,
          "responseTime": 284,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3563df7-4aff-41dd-b7c7-136f574ec906",
        "cursor": {
          "ref": "dac805d4-7a19-4d10-903c-a9e6cbd4e8b4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "64a7b983-6dbe-46a0-8588-36937ebb5647"
        },
        "item": {
          "id": "b3563df7-4aff-41dd-b7c7-136f574ec906",
          "name": "did:invalid"
        },
        "response": {
          "id": "91f1119b-8af4-4688-8b03-0d6b97c88d80",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2785,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3563df7-4aff-41dd-b7c7-136f574ec906",
        "cursor": {
          "ref": "dac805d4-7a19-4d10-903c-a9e6cbd4e8b4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "64a7b983-6dbe-46a0-8588-36937ebb5647"
        },
        "item": {
          "id": "b3563df7-4aff-41dd-b7c7-136f574ec906",
          "name": "did:invalid"
        },
        "response": {
          "id": "91f1119b-8af4-4688-8b03-0d6b97c88d80",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2785,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e228bf3-b017-4e5f-b9f2-498fcdc84b73",
        "cursor": {
          "ref": "e570e271-cbf5-4258-81a1-a7295cd3521b",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e63a593d-0e55-4459-88fe-575779e38095"
        },
        "item": {
          "id": "3e228bf3-b017-4e5f-b9f2-498fcdc84b73",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d2a4d72e-699e-4619-b7f3-6c1dcab68ef8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 83,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1009ce86-b8ce-4fad-bd12-c154d3230963",
        "cursor": {
          "ref": "167e9dd0-2f29-43bf-89c6-83a7bf8e7933",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "81f6e028-55c3-4e9e-bae1-58de5c3e0b8d"
        },
        "item": {
          "id": "1009ce86-b8ce-4fad-bd12-c154d3230963",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b437e35b-6190-46b5-b525-4d215d6e7d34",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78317b5e-ac13-428e-84c1-f790ffa95f53",
        "cursor": {
          "ref": "e518b458-6f17-45f6-9085-3a295941deac",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f04bb201-c436-4090-a987-2fc095e19578"
        },
        "item": {
          "id": "78317b5e-ac13-428e-84c1-f790ffa95f53",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "137175eb-a459-4bc3-aee8-c4073a23c076",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91874968-17f7-4893-a87f-dbb164293851",
        "cursor": {
          "ref": "73ef6396-e9ef-4387-84e5-85a4d90a76cb",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "aa9d1d42-8d57-4860-a256-da8052947b99"
        },
        "item": {
          "id": "91874968-17f7-4893-a87f-dbb164293851",
          "name": "identifiers"
        },
        "response": {
          "id": "b040a168-73cc-45f5-b160-e14a55537264",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebbda21-257b-4817-825b-cf092e4d9ac6",
        "cursor": {
          "ref": "266ae119-6d1e-4412-be06-1facdf3c0bee",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fa7fbceb-5f96-4f21-b2b4-fe6940361ee2"
        },
        "item": {
          "id": "0ebbda21-257b-4817-825b-cf092e4d9ac6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "17dccfbe-98bb-4c83-b85d-8476be45d656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8c645c-c31b-4631-856d-b21a74872398",
        "cursor": {
          "ref": "93d177e6-e7aa-49c5-abe6-eccff6fe4e71",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2d7e0f17-0f94-4bb1-bcb2-5bdbbd0d9bec"
        },
        "item": {
          "id": "eb8c645c-c31b-4631-856d-b21a74872398",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2364a24f-a4c0-4feb-94bb-8722f7ab214b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c450f4-5182-4675-b9a8-73113378cb92",
        "cursor": {
          "ref": "1ff27eee-a963-442b-99c3-f4fc5ea88a26",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c20c6a6c-6b7e-40df-befe-1a1d5d42601d"
        },
        "item": {
          "id": "d6c450f4-5182-4675-b9a8-73113378cb92",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a9cdf590-79f2-441d-aaee-82c779a55a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59986d9f-747a-4f46-baf5-0e79d52ebf27",
        "cursor": {
          "ref": "6baa7ab7-80c8-4631-9c3c-cc27967c2796",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5abf23e4-6dd0-4ed7-a2b0-b6621c7e9eeb"
        },
        "item": {
          "id": "59986d9f-747a-4f46-baf5-0e79d52ebf27",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "059980bc-99b5-46cb-a95e-17699564e6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c1f5f4-772e-4253-afd2-4e4a10a19c0f",
        "cursor": {
          "ref": "1edc030b-7e43-44ee-9bd9-f907791c4e4a",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1ed50a78-c327-4424-86b5-f8bda90a524e"
        },
        "item": {
          "id": "17c1f5f4-772e-4253-afd2-4e4a10a19c0f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3d360e7b-ac57-4c07-bc01-fc956dd8c4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d0aff9-5ab8-4752-a087-f66fb1f81a3b",
        "cursor": {
          "ref": "1829fc1b-8da5-4b80-8b95-4ff4baee4192",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2bf69115-c931-49d2-88be-488824b67991"
        },
        "item": {
          "id": "c8d0aff9-5ab8-4752-a087-f66fb1f81a3b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bf42dd42-e76e-425b-b14e-b47aa942c7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779847cb-d09f-4c24-90b7-8e4008f98824",
        "cursor": {
          "ref": "10de8420-49d0-440d-9738-d6781dfb8a87",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "07440522-0970-4ed9-b8dd-d0971b0d74f6"
        },
        "item": {
          "id": "779847cb-d09f-4c24-90b7-8e4008f98824",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e8da0a64-bfb8-47bb-8c44-f461aecf4a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d5ebb5-e99d-4d6c-be53-b39ff5a5c3f1",
        "cursor": {
          "ref": "051c37db-9fb8-43e3-8382-1fc4806e7c01",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "30dd5bc5-6fdc-49fc-8a92-b4c6b72e714c"
        },
        "item": {
          "id": "a3d5ebb5-e99d-4d6c-be53-b39ff5a5c3f1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c02c9eb4-a2c3-477f-a66a-4ebcd4e29bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d524c3-65f8-4a9d-afa7-1bbb69242c32",
        "cursor": {
          "ref": "f6d5d828-e246-4e60-b3f9-5364f918c8ba",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b63c1c65-fb34-47be-8c0b-efa67ac3e05e"
        },
        "item": {
          "id": "d6d524c3-65f8-4a9d-afa7-1bbb69242c32",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4e1014c3-88f5-4419-a02e-7a83d1993e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de09494-dcf7-446d-9527-9cb8849fd45c",
        "cursor": {
          "ref": "0b33e13d-ea45-4a71-8426-214e4bafebc4",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "95264b61-0763-4047-9314-a7512705d6b9"
        },
        "item": {
          "id": "8de09494-dcf7-446d-9527-9cb8849fd45c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "41358d25-b257-4c3a-9dd2-5692b5374dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d799365-4f2d-4385-b85c-583eca9cb2a2",
        "cursor": {
          "ref": "a94cdd55-3ad4-48e1-91d9-02f214d8fa42",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f314b95d-3edf-4cda-a747-029196039d86"
        },
        "item": {
          "id": "7d799365-4f2d-4385-b85c-583eca9cb2a2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c647f4ce-223e-4513-acb2-6a50d00eef80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5792de-09bd-4910-99e4-264f1a6152f4",
        "cursor": {
          "ref": "46416943-9220-428c-8187-789ca38deebd",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "326be206-e96c-44e8-a930-6e234215dca5"
        },
        "item": {
          "id": "cf5792de-09bd-4910-99e4-264f1a6152f4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3afb7a97-4663-4a18-a782-c211e15ad3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a044ddcc-2bf1-44c5-9e60-10ceac69ebb5",
        "cursor": {
          "ref": "9483b990-bdbf-4623-97eb-e527ef50b04e",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "91f87d06-facf-447a-813b-0cb19a474150"
        },
        "item": {
          "id": "a044ddcc-2bf1-44c5-9e60-10ceac69ebb5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6a988ac6-f60c-4ff6-86cc-6dfd1ea408c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c155c45-d075-4593-ac5b-2584baf15147",
        "cursor": {
          "ref": "4e1b45e0-3688-4370-86c1-dff03519f1a2",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ecc1fefb-ec9c-42f7-9e6b-a01f4a4fd2b8"
        },
        "item": {
          "id": "7c155c45-d075-4593-ac5b-2584baf15147",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "953118e6-1d69-4db8-8d44-d06b2aeb9be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275d4852-9825-4ec9-82ad-4b9469126dc2",
        "cursor": {
          "ref": "1ec352df-e158-492b-bef2-8c6af186bd50",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7b824c96-015f-4a2b-8ec4-ce3ee35b92b3"
        },
        "item": {
          "id": "275d4852-9825-4ec9-82ad-4b9469126dc2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c9fd5186-f212-475a-a281-b99244411bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd184167-8180-4e48-ba97-18272efb494d",
        "cursor": {
          "ref": "acc98d18-df98-4be5-9053-ffc38b51b34f",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1a23179e-c485-45ca-8ea9-301e49bb6bec"
        },
        "item": {
          "id": "fd184167-8180-4e48-ba97-18272efb494d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "92d88d08-ae71-414c-a15c-869d1a56bcd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee2cab2-1228-4cc7-9a4a-3ae3067e3fca",
        "cursor": {
          "ref": "dc3a71e8-75ee-49a0-b65c-6e134819ea8a",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ec5adca5-0b7f-4968-9c0b-d9e57c875b4a"
        },
        "item": {
          "id": "0ee2cab2-1228-4cc7-9a4a-3ae3067e3fca",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b3a066d7-8291-4ce0-8bed-7d7923043923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1208709e-670f-45fc-b005-9e1726494005",
        "cursor": {
          "ref": "7a96e763-a9be-467e-a44b-abfda5a756cb",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "47515434-528f-4262-93f4-8bdfee6f41d4"
        },
        "item": {
          "id": "1208709e-670f-45fc-b005-9e1726494005",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8d7d8c02-695e-4c97-aa9d-aaf3c8b98837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb67dd5b-d64e-407b-8ac3-8300c8030f00",
        "cursor": {
          "ref": "5439f2eb-2866-4b79-8317-0ec4242bcaf1",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8dfa8ce2-0acb-490d-af65-299c4cc9a420"
        },
        "item": {
          "id": "cb67dd5b-d64e-407b-8ac3-8300c8030f00",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9ae4996f-a5e7-433c-bbae-26f3bae1267a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c6fa29-a6c8-4fc5-a4ac-f3a23bcefc60",
        "cursor": {
          "ref": "32055e69-2904-42b7-be7f-a40491b07ae8",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2dc80af9-070d-4d2f-9917-ae86d95ebea0"
        },
        "item": {
          "id": "a9c6fa29-a6c8-4fc5-a4ac-f3a23bcefc60",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c2eecb0c-f7a0-4bcc-89f9-5fb189cab1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a58f470-e29e-49f4-80e9-9027fa107c29",
        "cursor": {
          "ref": "c7da59a9-927d-4524-8772-ad97be32439c",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5605b451-931b-4bf9-92ed-acdcddcd07c5"
        },
        "item": {
          "id": "4a58f470-e29e-49f4-80e9-9027fa107c29",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "be21819c-26a8-4541-bdf9-4b3c31d8437e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2470,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60d0952-61dc-4087-9d4c-380335d61287",
        "cursor": {
          "ref": "d1facbea-af44-467a-b766-302d28b3f232",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "13fe96a6-d30a-443f-8f72-438177108154"
        },
        "item": {
          "id": "b60d0952-61dc-4087-9d4c-380335d61287",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5df4b497-9074-4714-85a5-5992afd033db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504bac08-dd75-4e03-bfa3-5172682acec8",
        "cursor": {
          "ref": "bff722d2-dad7-46f7-8f6f-3ed618c90226",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "eb317e63-3bbc-4abc-8b2a-6de48ace8e30"
        },
        "item": {
          "id": "504bac08-dd75-4e03-bfa3-5172682acec8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "283e78ea-8743-4a94-9be6-e8adf1f93cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d2a337-b168-4262-ae7a-9cd851831acc",
        "cursor": {
          "ref": "af2ebde9-6a3c-43d6-b664-b83b9b2ce5f3",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5276eb84-4032-4a16-896f-d0e8e4e09f1d"
        },
        "item": {
          "id": "f9d2a337-b168-4262-ae7a-9cd851831acc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5dfc8d04-6e5b-4544-82e9-fa1b5237504c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c22bee-864c-40e0-82e6-3fde47f2d57f",
        "cursor": {
          "ref": "26d6d921-09dd-432c-8cb1-1f2bc91ddfde",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "201e17a8-2eea-4d15-9037-c7942a2ad7d5"
        },
        "item": {
          "id": "07c22bee-864c-40e0-82e6-3fde47f2d57f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "80fae1ab-b460-4242-a3d9-608fbb0df4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9ccf56-d4c7-4e60-8c17-cb335ab18288",
        "cursor": {
          "ref": "71502adc-e8b9-472b-926e-f2514ecd6a01",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "35f2e0fe-ed7f-45d6-b65a-a4b62b404678"
        },
        "item": {
          "id": "ee9ccf56-d4c7-4e60-8c17-cb335ab18288",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8b310275-acf3-409c-aeca-11d90ac96951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9517258c-9874-406a-a2d2-d88da30fcca2",
        "cursor": {
          "ref": "04db0a4a-6522-4360-afdd-90ee545661af",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "46c35d86-7d05-4713-b26b-1ddceec41fe2"
        },
        "item": {
          "id": "9517258c-9874-406a-a2d2-d88da30fcca2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2ef25baf-d42a-4638-89f0-841bbc025e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb846d94-23d1-4a63-8906-a7158b9ad1f8",
        "cursor": {
          "ref": "acb1e89d-c29b-4467-8cf8-1f2b1a592c02",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "965066ab-39e1-4c50-9763-6f0ea8e47649"
        },
        "item": {
          "id": "cb846d94-23d1-4a63-8906-a7158b9ad1f8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e018883f-7234-4f73-b406-a8a5ec9a21cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ffcdf7-d016-4a31-9734-62bc2bef78d4",
        "cursor": {
          "ref": "7a9606f5-4a51-4d6a-8a83-040348b85768",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "be88fb94-f6be-401b-9b22-cbdc599fcbb4"
        },
        "item": {
          "id": "66ffcdf7-d016-4a31-9734-62bc2bef78d4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f9c0d17e-9c05-44ba-9b9a-8f1835142c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1238d1e-32fc-479a-9482-9a2f5fae8280",
        "cursor": {
          "ref": "ddd08787-8060-4ec1-bd77-34b8b821f920",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b92879c7-9a56-4a63-a832-622f231b9d55"
        },
        "item": {
          "id": "c1238d1e-32fc-479a-9482-9a2f5fae8280",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5f6cd53d-dbb8-4ee0-bd6d-6d081479717a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf557ac5-9cf6-4d65-a922-05561a13d500",
        "cursor": {
          "ref": "983eab08-12cd-4ada-b557-be5f88f3f4af",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "da618d83-d15b-4c0b-8e2e-6ab328f5dabb"
        },
        "item": {
          "id": "bf557ac5-9cf6-4d65-a922-05561a13d500",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "81b563e6-c0a4-4c9d-b87e-1f35885b8b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7869b7-dab9-495e-bf2e-e245620942bf",
        "cursor": {
          "ref": "fc1b9522-28bc-42c6-8209-324486b21d0d",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "694e2f8e-9d0e-492b-8eb6-e49a5a53f84e"
        },
        "item": {
          "id": "5c7869b7-dab9-495e-bf2e-e245620942bf",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "019fd66e-06e8-42c9-8eb1-82b5ea151ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4193377f-39c1-4905-b64b-3df0b7896008",
        "cursor": {
          "ref": "0b4c2e32-9910-409c-9118-207307e9a4aa",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d5cc1843-85ca-4843-a950-1c7a0ee285bd"
        },
        "item": {
          "id": "4193377f-39c1-4905-b64b-3df0b7896008",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "aa011561-7dc8-4a4c-93af-bbf12c37345e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344a3f88-2d5c-4628-a9c0-2a0ab19f1c12",
        "cursor": {
          "ref": "d7c1b9ae-7c57-4832-ba43-b532031c06b9",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "83391a6f-85b1-42f0-9268-53fde0d2eaf2"
        },
        "item": {
          "id": "344a3f88-2d5c-4628-a9c0-2a0ab19f1c12",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "199583fa-8e95-4f7b-bc59-af6db6511469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2099df42-fb59-4040-907f-162e0ca90a55",
        "cursor": {
          "ref": "bf2c4278-faba-4793-9370-d1669b7ebf62",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "38e77635-9aa3-4da7-990b-1a6c529246a7"
        },
        "item": {
          "id": "2099df42-fb59-4040-907f-162e0ca90a55",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6025ec70-7cce-4aa5-8ba2-fbe70554536c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6d3113-de24-4374-ba01-c5b9ddd59510",
        "cursor": {
          "ref": "be35066b-bb1d-4e2e-a49c-9e23c385560b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "73ed257d-eaf8-43f2-92d3-80e604109955"
        },
        "item": {
          "id": "5e6d3113-de24-4374-ba01-c5b9ddd59510",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a177ab8e-9c07-4016-918f-9b3daab8cb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6381caf-7783-4c55-99e7-4ba92d5468e0",
        "cursor": {
          "ref": "4b3cb598-3c60-4782-a093-d43cd38a7391",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5c8d420e-1881-4b04-84fe-c5d3c1990bd6"
        },
        "item": {
          "id": "f6381caf-7783-4c55-99e7-4ba92d5468e0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "39d8be89-9444-4343-8366-ec243605dd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a677ad4-d790-4854-8347-5ff4204c955f",
        "cursor": {
          "ref": "38bcfdd7-56ab-4b93-902e-bfae6e97f39e",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "20a4a4d2-5178-4f76-9448-a7aa9b8a7068"
        },
        "item": {
          "id": "6a677ad4-d790-4854-8347-5ff4204c955f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f5c654c4-eb07-48e2-84a2-9365381cd434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b98efcd-83a9-47e5-a1ad-207aa62e38b3",
        "cursor": {
          "ref": "91d42257-c91c-45ca-97a7-2087a62fa840",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "51b0399f-dc94-4a1b-906a-81c3e68d5138"
        },
        "item": {
          "id": "1b98efcd-83a9-47e5-a1ad-207aa62e38b3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c5fe446d-c07d-4bfb-a828-64a35979f69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9df3c9b-3b38-49b7-902d-e2fa94f82fdd",
        "cursor": {
          "ref": "56ff0d71-76be-42b0-ac9f-8e0f338cf4de",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f4959643-02d1-472c-b67c-e9164e75e4af"
        },
        "item": {
          "id": "a9df3c9b-3b38-49b7-902d-e2fa94f82fdd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f7b0f352-f2ef-4c9f-9c1a-b9be2109f537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84c168d-7012-44f0-a127-7817c9fcf9cb",
        "cursor": {
          "ref": "99454dd5-fd78-420d-b178-ef3d1551f1df",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a05677f1-7aec-461c-bb07-c9754889aa30"
        },
        "item": {
          "id": "b84c168d-7012-44f0-a127-7817c9fcf9cb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "83dfe1c7-d255-498d-9629-43598a174196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad672533-a20c-44dd-afe7-afaadc1b0770",
        "cursor": {
          "ref": "96b65481-f988-4ebf-a0d4-3cb2b87d7b65",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e2310dcb-4f98-4b07-9391-1b309e3a97a7"
        },
        "item": {
          "id": "ad672533-a20c-44dd-afe7-afaadc1b0770",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "382b23be-3455-4649-bd9f-c3fb023f5bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b1add5-0637-472f-a146-6e41739220db",
        "cursor": {
          "ref": "34215c03-ddba-4fce-9f50-28497a349903",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e4d16a54-ccbf-4832-a2d4-03b50ce1653f"
        },
        "item": {
          "id": "e1b1add5-0637-472f-a146-6e41739220db",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8b821362-be18-420a-9abd-f8539c49ebaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed016480-9ce6-4035-8074-a033d797828e",
        "cursor": {
          "ref": "b7b43d9d-7056-4cf1-b913-7eae73281648",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "20f1d779-8c6c-48ee-8dbe-d01e35fe6533"
        },
        "item": {
          "id": "ed016480-9ce6-4035-8074-a033d797828e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "09b9f1ce-98d4-4a8f-be60-6d400a519a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a408a821-6509-43b0-9c71-9ff407d31cd9",
        "cursor": {
          "ref": "b21f54f6-affd-497e-9bc0-dd698fe23ba6",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a707adbd-492c-4793-9fcc-972601ed493d"
        },
        "item": {
          "id": "a408a821-6509-43b0-9c71-9ff407d31cd9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "cb8b68a4-15e1-45e2-9fb1-7d026523890a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603e6f52-85cb-45d3-a52b-2c9a583cdcda",
        "cursor": {
          "ref": "9fd89e34-4a5e-4301-991f-08ab9d4ca92e",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e18eb3de-3dd5-4d53-b41d-08170220711c"
        },
        "item": {
          "id": "603e6f52-85cb-45d3-a52b-2c9a583cdcda",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d902e832-a01b-4455-b794-3ed99bda597e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e728cd02-cbd9-41e8-bd9f-26ea4abe583b",
        "cursor": {
          "ref": "9a8339d3-ff02-4516-8a7e-c84c6e6605aa",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b7f28eba-396f-4b3f-86fd-16b78cee927d"
        },
        "item": {
          "id": "e728cd02-cbd9-41e8-bd9f-26ea4abe583b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c4e19fab-eba6-4cdd-9a2d-72c237e3cae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133370fd-4bd9-4e02-8890-e25b953daf86",
        "cursor": {
          "ref": "fdcd9204-fd75-420e-9e97-844d5b69e403",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "db4e8bce-5b75-4930-9e59-1fe514024ef6"
        },
        "item": {
          "id": "133370fd-4bd9-4e02-8890-e25b953daf86",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0dee8f75-38d3-4a00-8582-228cb6fca55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f70432-900c-4202-bf82-16c84d70317a",
        "cursor": {
          "ref": "c5ea5d29-b720-4e61-9d17-1c0019ba0f9c",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ad8698b9-b4f0-4ec9-a359-35ae2a8c6a2e"
        },
        "item": {
          "id": "97f70432-900c-4202-bf82-16c84d70317a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3eca5f1c-1d04-4f7f-a8c3-4d72129aa467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae77ef89-c4f8-4009-8d79-9037dace58cd",
        "cursor": {
          "ref": "64a8c602-e582-4600-a253-d96be44f6633",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "34cba3af-08da-47fd-ac2a-1a6776a798b1"
        },
        "item": {
          "id": "ae77ef89-c4f8-4009-8d79-9037dace58cd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4409a8f2-4a4d-48f3-b7b1-21f7abfdbfe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78143913-90f9-4477-92fc-9968bd43cac9",
        "cursor": {
          "ref": "dc8b4b49-3dde-4e71-a11e-18029c9d02b3",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "89a5ea76-232e-4a81-ae2a-7e41a4f6f7e6"
        },
        "item": {
          "id": "78143913-90f9-4477-92fc-9968bd43cac9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "31af8eec-3496-4688-8b1f-e062cebfb2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa46ee05-00ec-49ab-828d-4177d840716b",
        "cursor": {
          "ref": "ffc40daf-964e-4e5c-9770-71a2209b7ebb",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "dfd5c49c-c3ac-4262-9dc0-c5b2cfd75422"
        },
        "item": {
          "id": "fa46ee05-00ec-49ab-828d-4177d840716b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "75e25f0f-75a4-488d-8c10-ce6025efe6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679d32aa-5315-4c92-b4a6-405d1c152c01",
        "cursor": {
          "ref": "45845648-68e2-4817-be7b-afce8d84c30e",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "19fa58be-50e9-44ed-9594-122f277dd1ab"
        },
        "item": {
          "id": "679d32aa-5315-4c92-b4a6-405d1c152c01",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6fbdb041-0943-4906-a734-bc2fb3562858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170d3056-af43-4208-addb-533187c5b79f",
        "cursor": {
          "ref": "4042b261-b449-4534-8d88-9d938aa1ca22",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2d2f1475-a9d8-4cfa-a702-769e002a8b63"
        },
        "item": {
          "id": "170d3056-af43-4208-addb-533187c5b79f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1d651c1e-b349-488f-bd7d-050e99713225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82eb4e4a-e4e9-447f-8ade-f5ca6af97b3b",
        "cursor": {
          "ref": "e392f11c-dc37-40db-9725-a4c0dc8a43ce",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "76217d5b-42d6-4c35-adb0-5bf6658336d7"
        },
        "item": {
          "id": "82eb4e4a-e4e9-447f-8ade-f5ca6af97b3b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bc224aea-0f61-4387-bd05-2a492847a7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce57f086-1164-42c7-8822-53794b417ead",
        "cursor": {
          "ref": "f4b73603-bfca-4f2e-97d5-e793f7a0e67d",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ea48f786-3177-46e9-bea7-5c5253c5396d"
        },
        "item": {
          "id": "ce57f086-1164-42c7-8822-53794b417ead",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b21367cb-ab0f-421b-82b5-086cf6905f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60c6b5f-3b82-48ab-babe-ce8edf4a740b",
        "cursor": {
          "ref": "7c3f8855-074f-4353-8b3e-506c686d6760",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "73a10f25-3329-4055-a454-e9fadf1cd49b"
        },
        "item": {
          "id": "e60c6b5f-3b82-48ab-babe-ce8edf4a740b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "dd6cb7a3-64ab-438a-ac68-bab90f31843e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ba59c4-0755-45a2-b12d-e5dc91ed3146",
        "cursor": {
          "ref": "1bfb6d2d-6cbf-45c1-a846-90eb21ae3817",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "960a923e-347a-4a1c-a709-12d02f46730a"
        },
        "item": {
          "id": "77ba59c4-0755-45a2-b12d-e5dc91ed3146",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "10408e39-37b9-43d2-9f88-ca15b3d0bb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d31ba1-cd44-44a1-9ce8-a5f864f93e68",
        "cursor": {
          "ref": "51331dae-eeb7-4c93-abd7-eb9734c4bbd0",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e9665702-592a-41a7-9a29-5a283fbb3328"
        },
        "item": {
          "id": "48d31ba1-cd44-44a1-9ce8-a5f864f93e68",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b134ded9-4f23-4c93-a84e-c144e7dec06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fc3a63-9342-40ad-b425-48282085c6f4",
        "cursor": {
          "ref": "e6de0890-c197-4f78-8a78-138f2c76a801",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3da92f8b-c9c0-4b25-ade6-241a54555945"
        },
        "item": {
          "id": "09fc3a63-9342-40ad-b425-48282085c6f4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "27745246-30e2-4799-97bd-5803e844afca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6e4a3e-70b6-479d-8eba-c0f6bab8d0f6",
        "cursor": {
          "ref": "5be87e9f-96a8-4ebd-b5ce-add815f99a68",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "72c92fdb-ea2d-4f1d-94f2-c6362771d1a9"
        },
        "item": {
          "id": "1f6e4a3e-70b6-479d-8eba-c0f6bab8d0f6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "59f77a91-a3e3-43c1-8189-fdd71ce0554a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed1dd98-5fba-4318-a9e2-49a3ef248529",
        "cursor": {
          "ref": "5e59fed2-f2f2-4c3b-885a-8f95151bc73e",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "25ada6a1-6575-4858-9dae-331c1282b27a"
        },
        "item": {
          "id": "0ed1dd98-5fba-4318-a9e2-49a3ef248529",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "25d41104-aa6b-4414-8b4c-dec5b9491341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcec8345-e0ad-44bc-aa80-b1268cc9e285",
        "cursor": {
          "ref": "4ad5de70-02fe-47fa-bee8-6d3a52ddd0ca",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "121f1049-a85a-4086-b9d6-15970022ba61"
        },
        "item": {
          "id": "dcec8345-e0ad-44bc-aa80-b1268cc9e285",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3582fb73-0d19-43db-bacc-b20ed8952b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63ff1dc-25e2-4df2-89ca-331c923a0a5e",
        "cursor": {
          "ref": "e0845bcd-d5fc-4899-a3d0-05fdd367843a",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0d3393f7-77d4-42a6-bf34-e80b86f7968d"
        },
        "item": {
          "id": "c63ff1dc-25e2-4df2-89ca-331c923a0a5e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9d4708c5-da5b-4d59-9c94-c30457a7eddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c879978-539d-42c3-82f7-4a697bc268d4",
        "cursor": {
          "ref": "02331c03-f92b-42ad-8c1c-896bd723e2c0",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e9ddd4f2-dcb3-4374-afe1-b524c9fef148"
        },
        "item": {
          "id": "2c879978-539d-42c3-82f7-4a697bc268d4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bbd1b232-f028-43c2-8c4d-d0b7bef3e613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be60eba1-37d5-4569-98d0-3c051ee0e943",
        "cursor": {
          "ref": "c452fb52-4a1c-48b0-9be5-c6f2e177906e",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ee5cbdbf-fed8-4cdd-8cdf-4ea341d6615c"
        },
        "item": {
          "id": "be60eba1-37d5-4569-98d0-3c051ee0e943",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "eae53f93-e240-455d-ab14-b70100001199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01020815-5dd4-4805-8720-7dd7556cadd0",
        "cursor": {
          "ref": "7141a5b2-53e3-4eea-b26c-39876d97189c",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a8ff8c8f-e158-4243-9b67-89d82fc363d3"
        },
        "item": {
          "id": "01020815-5dd4-4805-8720-7dd7556cadd0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "98a3d541-2c79-48f5-941e-25888917a41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba5dab0-f528-4288-a25f-7bbfc3a56a1c",
        "cursor": {
          "ref": "5f49bd13-1e2a-4d7a-8da9-ed905c6937c1",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5b70e8e5-fb20-4512-8c07-5cd17cc24321"
        },
        "item": {
          "id": "cba5dab0-f528-4288-a25f-7bbfc3a56a1c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "079d7b5e-4f2e-4cb3-b167-4f54e0be0ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca72ab23-fff5-4477-8b60-e5d80d4c53b2",
        "cursor": {
          "ref": "6088fe20-fb9d-46f2-92bf-ba5d06f7240f",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0d186ba6-09cb-480a-8d16-7a97994ce104"
        },
        "item": {
          "id": "ca72ab23-fff5-4477-8b60-e5d80d4c53b2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "35c2a648-028d-4007-b53f-f75c3eef9114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b43eb8d-5f3a-49a1-8b50-0f27fddbfebe",
        "cursor": {
          "ref": "c8c6b8f3-5121-45db-a44f-0a31da4de790",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d99c4b24-42f5-4315-a5a0-387abec20242"
        },
        "item": {
          "id": "1b43eb8d-5f3a-49a1-8b50-0f27fddbfebe",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6bd81a4e-e920-4588-a825-442f3d86927d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27434622-0800-4989-a22a-3d75bef8efe9",
        "cursor": {
          "ref": "b9dbfb23-2777-4a72-9760-c6feccfd2b76",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f24b9412-609c-4f6b-8c53-dd772e547013"
        },
        "item": {
          "id": "27434622-0800-4989-a22a-3d75bef8efe9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d04bdc1b-49ec-4966-9a71-01da41d15aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc201bfa-40c4-4f80-a5ed-6cbcf22447bd",
        "cursor": {
          "ref": "992be4f3-e7d4-4af6-a642-7c9d5020fe32",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b0ddf4f4-5843-4a57-ad21-875128d6eebb"
        },
        "item": {
          "id": "bc201bfa-40c4-4f80-a5ed-6cbcf22447bd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "38e8bc64-ce55-44b6-9782-f1fb4042f7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b174f47-cb6c-4de6-8a2f-f132fadd8195",
        "cursor": {
          "ref": "186d68bb-8f79-45d4-8025-7cd761705694",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a1892e22-dcb3-4a23-9410-8b0cd4468602"
        },
        "item": {
          "id": "0b174f47-cb6c-4de6-8a2f-f132fadd8195",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "27fd4b18-10f1-4cd1-9a98-aa8d316d0a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11805d96-9568-421c-8c6b-6bbcf3b0aff3",
        "cursor": {
          "ref": "7da4dde1-2caa-40ef-b82d-15d325dfc7e8",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4a72f768-1f5c-44cb-88bc-ed5a65f5e4b9"
        },
        "item": {
          "id": "11805d96-9568-421c-8c6b-6bbcf3b0aff3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "186b6d29-39fb-4a03-b6c4-0ebd72465441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2aba740-0520-4a4f-bde0-67ade1fa7f32",
        "cursor": {
          "ref": "e1862e3a-43c0-436f-b5c4-6b99309da1d9",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "150d9ea2-72b8-4f5a-ba39-876cc71c8393"
        },
        "item": {
          "id": "c2aba740-0520-4a4f-bde0-67ade1fa7f32",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9c39fbb0-3fa2-436f-9350-95a2f8c600f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600b5301-05bd-4fc2-bfac-db856812f4ab",
        "cursor": {
          "ref": "36a1924e-7e21-4c0c-8e73-1238587e1bb9",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c8d2d7d8-d999-4ea7-846a-78adff7f1fca"
        },
        "item": {
          "id": "600b5301-05bd-4fc2-bfac-db856812f4ab",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "57ebd9ca-b56c-48a1-aeff-37c0e57c2855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03c255c-c2f1-49cc-b325-6a648561b641",
        "cursor": {
          "ref": "b57af193-eacd-4ed9-9a74-34e80f2c3ad8",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0639c6a9-c340-43fc-b328-3f25e92f629c"
        },
        "item": {
          "id": "b03c255c-c2f1-49cc-b325-6a648561b641",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "85e0e196-f80e-4274-a482-9cd9797ebfd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338cd4eb-b8a4-4111-b984-bb95dc0fcd7d",
        "cursor": {
          "ref": "afd61daa-8504-40a7-86c6-16c1b80d214d",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "112854b3-8d78-4265-b06c-5dbad047de55"
        },
        "item": {
          "id": "338cd4eb-b8a4-4111-b984-bb95dc0fcd7d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fe5249fb-ccc9-4426-b32e-fbe8c390d461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6a55b9-8232-4ec7-a822-2d772ea19cff",
        "cursor": {
          "ref": "b939ed61-3ce6-4b56-ba15-ebdc783a3c19",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0a937ff0-53fd-4451-91c4-8dc55b876b1d"
        },
        "item": {
          "id": "1a6a55b9-8232-4ec7-a822-2d772ea19cff",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c339ea75-37fb-463a-a7ad-12e2df24578a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827a075e-ad1a-4577-9910-bf54c8bb430a",
        "cursor": {
          "ref": "43c301eb-5caf-43df-a14b-6e372d55b487",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4d14eda0-a3da-4f33-a6ca-9b4c73a031bc"
        },
        "item": {
          "id": "827a075e-ad1a-4577-9910-bf54c8bb430a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6f278a3e-1bf6-4b02-845d-e43700d7c0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e263393-5881-4ab7-86a9-c7e298b9e68e",
        "cursor": {
          "ref": "63d5ce08-652b-460b-bd9b-69a0ca0d3bd0",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b016b385-7eb6-42c5-aefd-5d48e91e8285"
        },
        "item": {
          "id": "2e263393-5881-4ab7-86a9-c7e298b9e68e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "008c8384-ba2b-4a8f-8b2c-cb80818af1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba27301-9175-423a-8af3-285a746f8341",
        "cursor": {
          "ref": "2948264c-c4c8-4b91-8f11-fc65f6bec0dc",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a4bea08b-781a-4efb-9efe-426b598c2a87"
        },
        "item": {
          "id": "9ba27301-9175-423a-8af3-285a746f8341",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a93d612b-c669-4088-8e31-895f7d5d3f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187cefe5-302e-4f14-83e6-741fd8e58ef4",
        "cursor": {
          "ref": "ccdb6f92-6284-47f7-9d4c-83db5c65fd38",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5a9ccafc-47ad-496c-8101-9ab2fc9da5e3"
        },
        "item": {
          "id": "187cefe5-302e-4f14-83e6-741fd8e58ef4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7d86d308-69c9-4ed8-8206-2912289e0d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed6f6f5-eb2d-4896-80a6-244ff9d8f16e",
        "cursor": {
          "ref": "f76c74f4-5d3c-4263-9d4d-009e011f3a12",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bb8dfcf7-9272-406f-8260-a06c3ec20f57"
        },
        "item": {
          "id": "5ed6f6f5-eb2d-4896-80a6-244ff9d8f16e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "68e95b22-da19-4b41-a8b2-0379c7f91597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03349baf-c1fd-47b1-99be-a52d9cab1385",
        "cursor": {
          "ref": "9f76ad4d-ee16-490f-94d2-472e0ffe2205",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b8b26857-b20f-40f4-a76c-60b8fc5f23f9"
        },
        "item": {
          "id": "03349baf-c1fd-47b1-99be-a52d9cab1385",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8a751a51-e79c-449d-889b-d407d5dcab85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db75b52a-bf1b-4c41-a9ba-560a61ba85e9",
        "cursor": {
          "ref": "d0420f7d-81ce-455e-8f24-6b80a16d28ae",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "71a77eef-731d-452c-aecb-a484cb14396d"
        },
        "item": {
          "id": "db75b52a-bf1b-4c41-a9ba-560a61ba85e9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "53714d83-49a9-4e7c-a923-bab301f2e0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc89021-fac9-4f5e-a416-b45537955674",
        "cursor": {
          "ref": "4930c1e1-3c55-4509-8be7-72ec5372578b",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "24efe46f-0b66-4104-b8ac-950f9e2fe49e"
        },
        "item": {
          "id": "5bc89021-fac9-4f5e-a416-b45537955674",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "270a6107-eca0-42f3-ad51-16197e7c56bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8199c8-4f1b-4dc9-9df5-0ed032ebe0ca",
        "cursor": {
          "ref": "a80620cb-7dea-452a-9f22-a9cf32446250",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e6ca9e14-ab17-4614-b313-4f110a3805bf"
        },
        "item": {
          "id": "5e8199c8-4f1b-4dc9-9df5-0ed032ebe0ca",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3935075e-cb04-4424-8f82-a164d4ce16a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67f12d7-9698-4c29-b1c2-da688be7d13e",
        "cursor": {
          "ref": "67298e93-919e-46b1-b16e-bcfb7e844281",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fc23b165-94fc-4d7a-a8f4-1273ccf0d11d"
        },
        "item": {
          "id": "f67f12d7-9698-4c29-b1c2-da688be7d13e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bf7ec1ca-d6db-45a5-8ea3-c058fedf9231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d09b8fb-afb8-464e-8ae3-11338018afc0",
        "cursor": {
          "ref": "fe937c3f-a079-4a79-ab76-803bd17ce503",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "be961283-8976-43ef-a623-169151bab35f"
        },
        "item": {
          "id": "4d09b8fb-afb8-464e-8ae3-11338018afc0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f82948e2-5e1d-4a19-baa0-947b72ceda62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293660aa-6051-4b41-8c2a-4c83b65e450f",
        "cursor": {
          "ref": "c07a2c9b-f790-44f3-b01d-2329e03a2fb3",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3aa2fa77-43e3-4bdc-b538-949b43750eb0"
        },
        "item": {
          "id": "293660aa-6051-4b41-8c2a-4c83b65e450f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ebf26b61-0ffe-49a7-a311-5db60599b19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf4d285-0917-4184-ba89-24a54767c6b3",
        "cursor": {
          "ref": "2b014480-287a-41ed-8711-0aee0294593d",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "dd9fe0f9-83b1-4ddb-861b-b036b7386f62"
        },
        "item": {
          "id": "6bf4d285-0917-4184-ba89-24a54767c6b3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fdd96e0d-0387-4eea-bba4-3d22c26673d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae6f2c1-0357-4beb-b446-724e4ac5c07e",
        "cursor": {
          "ref": "26c3f0fc-783c-4664-8fa2-a73209b484ff",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "46f0d2ec-87ba-4a26-a45a-aba74617230b"
        },
        "item": {
          "id": "1ae6f2c1-0357-4beb-b446-724e4ac5c07e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "76a8bc1f-80f3-4ab2-808e-ad059028f7ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f084ecd5-d674-4013-8781-1156246741e8",
        "cursor": {
          "ref": "e23f22be-9169-4ce6-b6d1-0e9a71dc77b5",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8c74a022-58f8-46a2-be7f-46df8aa9a3d1"
        },
        "item": {
          "id": "f084ecd5-d674-4013-8781-1156246741e8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "eb2e338b-6d6c-4712-9f49-654d249b5c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "53d61ed8-b118-4ca4-b539-59ed57c1905b",
        "cursor": {
          "ref": "007c744b-1817-4e82-87cc-3c3a0094bb56",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "06bbf73a-db0a-43d2-9efb-867b861a64ce"
        },
        "item": {
          "id": "53d61ed8-b118-4ca4-b539-59ed57c1905b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "240a7017-d873-4329-bffa-c26d8c30ef4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "4fc98ca9-e42c-4a50-b00b-549ca3512e3b",
        "cursor": {
          "ref": "6cb88718-d77b-4325-b5ad-dc4e6b7f35b4",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "61acc509-9c8d-439e-92b3-57a4bfdaa08e"
        },
        "item": {
          "id": "4fc98ca9-e42c-4a50-b00b-549ca3512e3b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "769c2453-979b-4156-9c46-0ba58577cb5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c3b1223b-ddca-441c-b143-765d2569dfd7",
        "cursor": {
          "ref": "1e7a61ca-2b68-4f5e-8724-f569faadb236",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "22531883-d14d-4586-acd9-e1ffed3cf5e2"
        },
        "item": {
          "id": "c3b1223b-ddca-441c-b143-765d2569dfd7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f81211a0-903e-4ac7-adc6-3ab5e597f7b5",
          "status": "Created",
          "code": 201,
          "responseTime": 4258,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc5e200-3332-4ebf-ba55-5f9430b0bb5b",
        "cursor": {
          "ref": "c39e6146-c195-43f7-9199-2cf4829e5a25",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ac9fe363-abb2-4833-8014-ae95fca56e39"
        },
        "item": {
          "id": "3bc5e200-3332-4ebf-ba55-5f9430b0bb5b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "51476356-d57e-494b-b421-3261391f7536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "483f267b-d1c5-404a-a4ed-11974ef9b195",
        "cursor": {
          "ref": "bdacf608-6dee-4fc7-825f-1c2a33e9325d",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6f3e17a6-f506-4eb5-bfe3-c38d5ca97253"
        },
        "item": {
          "id": "483f267b-d1c5-404a-a4ed-11974ef9b195",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "edf5d221-2c3b-466c-9ea6-6c366f63ce4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "3079b194-68ea-4ebe-8947-47bad8868112",
        "cursor": {
          "ref": "b9e64ab6-ba92-479f-87f7-b44a331878a7",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bc0fd605-b593-4c07-a36c-30858881c5fc"
        },
        "item": {
          "id": "3079b194-68ea-4ebe-8947-47bad8868112",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "35eb56a0-389c-4b5e-a8d8-79a759abd24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22c0984-e16b-4335-a2d2-f39af3f3afb7",
        "cursor": {
          "ref": "dd67bcb0-f733-4b49-a56c-862500b82ae6",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "225a9562-d827-46c3-9c04-df49cd8a6f4f"
        },
        "item": {
          "id": "a22c0984-e16b-4335-a2d2-f39af3f3afb7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bafad15a-d371-4ab6-973f-5954c64d5f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f14c47-1e65-4fc5-85da-837168d000cd",
        "cursor": {
          "ref": "0338d9d9-13f9-492c-b4dc-66b88c6a019b",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "726f9704-e86d-4666-acc2-8fc51938b382"
        },
        "item": {
          "id": "e8f14c47-1e65-4fc5-85da-837168d000cd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7d4b3a2b-ede3-443d-b6f8-e2c78edc13d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c651f66-a0e3-4276-bd66-719beb166204",
        "cursor": {
          "ref": "896aefa4-09fb-432e-b181-0f8496a2d9b7",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a47d07ae-f905-4343-907b-dfd292864448"
        },
        "item": {
          "id": "9c651f66-a0e3-4276-bd66-719beb166204",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cb565712-4be9-4d3b-896a-e79f8ada8b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894ec4d6-1a0b-4f1c-a01a-c19d0f891173",
        "cursor": {
          "ref": "14e24922-d9f0-474b-82c4-136fe332b17c",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "90616741-4952-4958-9d5e-8a831d1bd5ed"
        },
        "item": {
          "id": "894ec4d6-1a0b-4f1c-a01a-c19d0f891173",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "30da8494-987d-43a4-a9ce-9c750d0ca3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac25479b-fdc4-4554-a0cb-6966ad2a0935",
        "cursor": {
          "ref": "d8d6fd4b-f018-4c8e-bc44-131844affba9",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7f91f848-d747-4b59-9630-ae30220e5ae2"
        },
        "item": {
          "id": "ac25479b-fdc4-4554-a0cb-6966ad2a0935",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a5a58fa6-d3f9-4f39-bcc4-6398ab731b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa27b758-a77e-4528-95b4-57747249464a",
        "cursor": {
          "ref": "a67dbc8c-4b61-4da9-a44c-10561bba665e",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d82ad504-2f9a-42c4-b74c-5acca58b0332"
        },
        "item": {
          "id": "aa27b758-a77e-4528-95b4-57747249464a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f192eba1-6821-4006-b403-a8a82c2bdbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63ca3c5-97fb-4df2-8b9f-eb95d9cee483",
        "cursor": {
          "ref": "904b13e5-47a8-4d8d-83e6-717145832271",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "eb560b17-6b20-4b8d-bcfb-04b82d393d56"
        },
        "item": {
          "id": "c63ca3c5-97fb-4df2-8b9f-eb95d9cee483",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "72b19350-4c6c-4027-adf2-366d53523728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ec0983-2c75-4020-9bda-4428da7e9562",
        "cursor": {
          "ref": "acbd08f1-63de-457c-be12-ac0dff480f35",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ed93f534-e2ca-4362-a1ab-d7f4e4f9f2c0"
        },
        "item": {
          "id": "53ec0983-2c75-4020-9bda-4428da7e9562",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7d7a62d8-8ba0-4a94-a04c-214190d198f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f450a0d-4d8b-4a73-b0b0-5e0990b98fca",
        "cursor": {
          "ref": "56f8cc34-4123-4982-ac4e-a6136571319e",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6e9b1c98-772c-437e-aee8-867df569bce9"
        },
        "item": {
          "id": "3f450a0d-4d8b-4a73-b0b0-5e0990b98fca",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "76b9caf0-9c3e-40a8-8506-83c9357fc34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4829cd-6f7f-4d58-a19c-669860b9ba14",
        "cursor": {
          "ref": "97cefe0f-f159-446d-bf06-18cd47538dc3",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8ef37bf1-39f1-4c9b-9235-b78941980a17"
        },
        "item": {
          "id": "8b4829cd-6f7f-4d58-a19c-669860b9ba14",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a5414f9c-c499-40af-9c61-eabac5ebe887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a86a33f-391b-46ed-816e-a3760c94768f",
        "cursor": {
          "ref": "7cdf4caa-2ef1-4dce-b770-ce37e2ecdb36",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0d232c21-211f-4cfb-8641-95a39e407254"
        },
        "item": {
          "id": "4a86a33f-391b-46ed-816e-a3760c94768f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "61be28b8-633c-440f-857c-ed596ec2e3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33bd5ad-b463-40ce-90ed-b25444cb4ac8",
        "cursor": {
          "ref": "baa880c2-b0d4-45e7-bef6-2a8e3b8ee2c2",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "79da056a-7303-413b-a6a5-2d54d6065d82"
        },
        "item": {
          "id": "d33bd5ad-b463-40ce-90ed-b25444cb4ac8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2b9cf021-b6ae-4348-ba4e-e31d87bd5db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0252b79b-6a0b-48f0-be27-df723c2337e9",
        "cursor": {
          "ref": "8ddb75e5-1897-4dfe-a535-4c5e1dbae41f",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7ea17ff6-55e3-4e88-ab37-a05ef77d19f7"
        },
        "item": {
          "id": "0252b79b-6a0b-48f0-be27-df723c2337e9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "24f78c85-9ed9-4a83-b6d2-53b807e60fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a78018-cf82-4b9a-a283-cfcc6b0c8690",
        "cursor": {
          "ref": "fa8f4d68-9833-47de-a769-fdbc23689c9b",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "caebf902-79bc-4b89-9461-5c3818caca11"
        },
        "item": {
          "id": "96a78018-cf82-4b9a-a283-cfcc6b0c8690",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "87714a08-c8d6-48b9-bf9c-6d31f91b8952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8482aa-dad9-4646-b9a8-3e7a6e7463f7",
        "cursor": {
          "ref": "71a6321c-d467-4e6b-9f14-04581e83a310",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "044d6ccd-cd98-4e43-a144-7756b1f8104d"
        },
        "item": {
          "id": "7a8482aa-dad9-4646-b9a8-3e7a6e7463f7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0820e3bf-0533-4c6c-8eef-2480f5334764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb4a56f-abca-4fcf-95b9-ead876a67f0c",
        "cursor": {
          "ref": "2be447b6-4ce2-41a9-9da1-1e6377679f02",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3d316e57-b8a3-4d32-9aad-08177c290c84"
        },
        "item": {
          "id": "4bb4a56f-abca-4fcf-95b9-ead876a67f0c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c9fb51b4-511b-4c33-a6c2-5d4262e69b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9952e62-4289-4ef1-ae11-9d63cb97ae84",
        "cursor": {
          "ref": "6ace3a93-7917-459d-84bb-87bce4b87c2d",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "082ac729-c716-4375-b0bc-849b282a8676"
        },
        "item": {
          "id": "a9952e62-4289-4ef1-ae11-9d63cb97ae84",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4ab1ca1b-6a28-4493-b3a9-31e8d097bd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5adba2f1-9172-447f-9334-d932a401d19f",
        "cursor": {
          "ref": "edbaf359-069f-4ecd-b133-5907022873dc",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "689be382-9a54-4ddb-a0ec-c821800f1779"
        },
        "item": {
          "id": "5adba2f1-9172-447f-9334-d932a401d19f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6a01aa7d-cdb0-4266-b2bd-96d882c4c2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f7b66c-4715-4c6d-ad47-f5648c2e2f91",
        "cursor": {
          "ref": "5c1e068a-91d5-4799-838f-419416a8911f",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5b4be1ab-66f7-4ecc-8cd1-db9635f1f9dd"
        },
        "item": {
          "id": "69f7b66c-4715-4c6d-ad47-f5648c2e2f91",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3a61bd1b-b025-488a-959a-ee544d8b8da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a824d81-3238-42b1-b44f-8c5ee73173f1",
        "cursor": {
          "ref": "0a659982-131b-4450-a90f-b96145ceb9d9",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "93275233-e0fb-4f9c-a454-09f338f04358"
        },
        "item": {
          "id": "6a824d81-3238-42b1-b44f-8c5ee73173f1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4c65d3ec-748e-4d65-86d3-1beaec5152ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e18a0eb-66a9-40d5-aea7-52b7a1e06d90",
        "cursor": {
          "ref": "77405ef9-612e-409a-bab4-eb7a275546a8",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7869e217-d649-4709-b813-573c052b8008"
        },
        "item": {
          "id": "5e18a0eb-66a9-40d5-aea7-52b7a1e06d90",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "94da63ae-cad6-4326-aab5-98d7064bead6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6730fef1-4acd-4e0e-854d-116ab3cdf1a5",
        "cursor": {
          "ref": "ba3c063d-8840-44fd-b2f1-cd500460226c",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b1368e6e-0bb2-4ad1-9901-35d6f9db22c7"
        },
        "item": {
          "id": "6730fef1-4acd-4e0e-854d-116ab3cdf1a5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c22b6146-209a-41a7-8c4c-3a6adca2dce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4b98a4-8d03-455b-9836-933af95cd2d4",
        "cursor": {
          "ref": "1dc9d7e6-3ae7-4485-b7e3-6c9205ee995b",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "024bd235-6a2a-4abd-9032-8de6784581ba"
        },
        "item": {
          "id": "7c4b98a4-8d03-455b-9836-933af95cd2d4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d140f80f-42b0-4313-a234-4dbc40455175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f248ec0-a539-4769-88bd-ac4a46784dfc",
        "cursor": {
          "ref": "c1f886a6-62fe-497c-8d14-04e957176ab3",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "15e167d4-b0b7-49dc-8f5d-4ed41e6f27ee"
        },
        "item": {
          "id": "6f248ec0-a539-4769-88bd-ac4a46784dfc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b14253a7-2a28-40a7-a2b6-4d4dbf6d9703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b6d629-8502-4eeb-8dfb-ca27b5efc4e9",
        "cursor": {
          "ref": "060da2ab-eafa-4f1a-a195-702cb24649d8",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c27bc61e-0e7f-4833-90f5-7935cb38e45b"
        },
        "item": {
          "id": "97b6d629-8502-4eeb-8dfb-ca27b5efc4e9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d9174223-0120-475c-87fd-998ad17e0f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10b0e2a-1965-4702-ad40-5fdec65b1aa7",
        "cursor": {
          "ref": "aa70ee58-db54-4c54-a8d1-aee8f1dde438",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e99e7a6a-e67e-46c4-850f-e075b8586fdb"
        },
        "item": {
          "id": "c10b0e2a-1965-4702-ad40-5fdec65b1aa7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5186cd22-3927-447e-9c58-080bf703e571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff6e85a-c416-4cbc-82cd-229068d54db0",
        "cursor": {
          "ref": "240991a9-4e56-4b7a-bfe3-87cfe7b9cc0f",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a6927195-6b0e-4e7d-8a90-7bd323ff9cc3"
        },
        "item": {
          "id": "aff6e85a-c416-4cbc-82cd-229068d54db0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b1463479-cc69-4e43-a57b-7e7947cb541e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3850b85c-9591-47b3-8e07-05c00275517c",
        "cursor": {
          "ref": "4bde050e-3ab5-400a-8091-3b7cb7d15796",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ccef1ed7-f537-4196-97d9-cf644d7141dd"
        },
        "item": {
          "id": "3850b85c-9591-47b3-8e07-05c00275517c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "49d5e65b-5306-43cd-aa18-015d367947eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7635a7-2ef3-497f-a506-15c819710b54",
        "cursor": {
          "ref": "d65438ff-4542-420d-9d3f-2b9b15925b5e",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fc732e44-9947-476b-910f-782103475ad6"
        },
        "item": {
          "id": "8f7635a7-2ef3-497f-a506-15c819710b54",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6ef74b5e-434f-47f5-9c0b-438efb516974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422fde44-e3e8-4d24-9b07-4ec5d6934082",
        "cursor": {
          "ref": "f9f36f0e-ac24-4e7c-8415-15519f63ec0f",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bbb0f871-dd50-4ea3-8e22-c76dc65c537d"
        },
        "item": {
          "id": "422fde44-e3e8-4d24-9b07-4ec5d6934082",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ac016ab6-956f-45a7-a08e-55b9db23a86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a953d6b9-64c4-4568-a271-78f737190443",
        "cursor": {
          "ref": "5831b220-a22b-48f7-8d46-85e7b991059f",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "af765ba1-21a7-4948-a0a2-d87b1042523e"
        },
        "item": {
          "id": "a953d6b9-64c4-4568-a271-78f737190443",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2ac23585-302d-4db6-ab6c-b2f0a85e7303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdf87c1-110e-488d-872e-d0f6c0e2e8f8",
        "cursor": {
          "ref": "db1f682d-9881-4043-adfb-33895c0e0ae0",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3db61637-b6a6-4163-b1e1-9a63d7fa9985"
        },
        "item": {
          "id": "abdf87c1-110e-488d-872e-d0f6c0e2e8f8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "20c5e412-f445-46ef-8564-6ba24480b925",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2bdc76-1de7-401b-8bb6-524395421077",
        "cursor": {
          "ref": "3c88a6f4-2f64-407d-982c-89ba871a5fb8",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "04fa92cd-585f-46ef-9432-af00e2e79f45"
        },
        "item": {
          "id": "ad2bdc76-1de7-401b-8bb6-524395421077",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f08ac26a-f275-4972-bf89-86a3ec53270c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac7c389-b712-45f3-a0fb-fcbe3185b425",
        "cursor": {
          "ref": "3801e39f-15ea-4d46-9850-40b8d9c3f983",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9f988f8c-39bc-42ae-aa0e-df7d9f854f03"
        },
        "item": {
          "id": "5ac7c389-b712-45f3-a0fb-fcbe3185b425",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1a638d31-1de2-4b90-96e4-5a36370937d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d9dc76-1dd9-4d38-aaaf-985de9aafb17",
        "cursor": {
          "ref": "d1c824ac-c031-4771-bc58-9ddc5a1c229d",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5aaaf0f3-9920-4b22-8fb2-fa1a2bbeddb1"
        },
        "item": {
          "id": "72d9dc76-1dd9-4d38-aaaf-985de9aafb17",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6bf6f266-ce25-4c31-b4a8-d3e07d850bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda49c4c-0827-48f0-9257-6fac21a50bdf",
        "cursor": {
          "ref": "e24ad4d7-5ba0-4f18-bbce-b82b78b86189",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4218e328-5fca-480b-8aa3-9932185c7920"
        },
        "item": {
          "id": "cda49c4c-0827-48f0-9257-6fac21a50bdf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ac566cd0-7951-4ee2-a17b-cb55100cd9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae42cfd-16a5-4140-9c6a-3c546d755896",
        "cursor": {
          "ref": "c7dadceb-5c63-43c4-91ef-f60ea9dc0768",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c0f4a87f-4064-472a-8636-f3f8d7b1c041"
        },
        "item": {
          "id": "eae42cfd-16a5-4140-9c6a-3c546d755896",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "99e77fcf-743d-4178-9bcc-ca9a19bfb0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b3b147-a8bc-49a8-9dc5-819e3ab6f26d",
        "cursor": {
          "ref": "e9a8f35a-5c20-4b7d-90a9-f9cbee00998d",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "27d86d8f-c995-4ee4-841c-06dbe4786144"
        },
        "item": {
          "id": "80b3b147-a8bc-49a8-9dc5-819e3ab6f26d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9b9efa43-b10f-40e3-8797-94bf3f3a2e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5050792f-2a26-49ae-ab21-40f82382f760",
        "cursor": {
          "ref": "67777d21-a771-4503-8d77-1050f5a10e53",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8b8c220e-3be3-4b26-b44b-24a105c64cbd"
        },
        "item": {
          "id": "5050792f-2a26-49ae-ab21-40f82382f760",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e590a50b-5d21-4735-ac12-86394ce099fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922dbae7-a7bd-421c-8d3a-17494af2ae80",
        "cursor": {
          "ref": "918c9e23-28bf-4d44-809e-90ed7a2c6fa6",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c4e73823-603d-4478-9f25-6bc670863eff"
        },
        "item": {
          "id": "922dbae7-a7bd-421c-8d3a-17494af2ae80",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "057e38d6-50f7-40cb-bbcc-e5107fd91d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667af8f0-c2e6-4370-894e-7d3e2a140205",
        "cursor": {
          "ref": "c85aa130-8c8d-4f66-9a2b-99ca2e871536",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "be6b629b-ae2f-4b46-9f88-0e85d7b7e584"
        },
        "item": {
          "id": "667af8f0-c2e6-4370-894e-7d3e2a140205",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "abd35041-1014-4fb2-b3a5-6078b404ef62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9094526d-9b7b-49dc-b907-3f70309c25f8",
        "cursor": {
          "ref": "d20a737c-3d34-4967-9644-85c1eb90fa47",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ffe593e2-49aa-49c9-8ce0-b5353aef75fe"
        },
        "item": {
          "id": "9094526d-9b7b-49dc-b907-3f70309c25f8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "107e314f-4d45-462b-a992-3c8fd65861db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ab0226-ee8f-4531-9571-db98b582cbf5",
        "cursor": {
          "ref": "c89ec305-0837-43a7-8f53-8e4de3ed6348",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "40bdc1e0-8345-4594-b0a3-47ef0c33984e"
        },
        "item": {
          "id": "98ab0226-ee8f-4531-9571-db98b582cbf5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cf60dd7a-c425-4dd8-8032-9fd4d02e251f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcf6525-5b2b-4d96-bb9a-2a174e4571e5",
        "cursor": {
          "ref": "f53777c6-8c96-4f4a-9ac8-80528cfa03dc",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ee6d2072-7d94-4d34-b2f4-5590d6c94a3d"
        },
        "item": {
          "id": "2dcf6525-5b2b-4d96-bb9a-2a174e4571e5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ee65bfbc-e3e6-47ea-8bec-fbd0e280fced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f5d110-a6fa-4374-96bd-9cab81b0afac",
        "cursor": {
          "ref": "b815cdfa-71b2-4641-b423-f398f98df45f",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5e063aed-46e1-4300-a53b-071a5fa28b7f"
        },
        "item": {
          "id": "40f5d110-a6fa-4374-96bd-9cab81b0afac",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d04b273c-51d6-4543-8b0a-c5b32c56bd5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1ecc27-b930-4503-b4b3-504e81a4f924",
        "cursor": {
          "ref": "5a44e43b-1449-4231-88f8-579be1e38a7e",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "eed245fe-47be-4dcb-9298-b5fb4fac3078"
        },
        "item": {
          "id": "9e1ecc27-b930-4503-b4b3-504e81a4f924",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b96cfa6f-42ce-470a-a0cd-c1238303b947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6533fc92-1ac1-4485-a1ab-24ae605a3c26",
        "cursor": {
          "ref": "cd946572-61b0-42d6-a32c-76343f25bf6d",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "23872623-bd4a-4c75-816c-764953130994"
        },
        "item": {
          "id": "6533fc92-1ac1-4485-a1ab-24ae605a3c26",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "74dad7c7-ee0d-4231-af39-324d377211ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6460be04-9f35-461b-9533-48c1c4f04213",
        "cursor": {
          "ref": "7e754c79-b54b-43cf-bf9c-1918c0c234dd",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c1c94970-a261-4e41-bacc-12cc2089e4bc"
        },
        "item": {
          "id": "6460be04-9f35-461b-9533-48c1c4f04213",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9f46a574-bedb-44c1-92ef-476ca9f243c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25633f75-36bc-40d8-9c41-76d7a8850c04",
        "cursor": {
          "ref": "c6cb85c0-8614-4287-a624-81a5976b68f2",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a597ae16-42c3-4975-8e80-ba1c470b8025"
        },
        "item": {
          "id": "25633f75-36bc-40d8-9c41-76d7a8850c04",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ff4de16a-0584-4582-bcc9-7753d2227da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f7044c-a4e9-4806-997c-b10af876bb90",
        "cursor": {
          "ref": "4a64b584-78e1-44e8-9445-19daa0c60f5b",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8126ac4b-f59d-43fc-9f98-6125ede58c31"
        },
        "item": {
          "id": "84f7044c-a4e9-4806-997c-b10af876bb90",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a4e63d61-81d7-464c-b933-3ffc230240ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c687d133-f224-4f9e-8344-5360900ba59c",
        "cursor": {
          "ref": "4ea99d75-3b12-46f5-ac07-b6e5ad05ff39",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e4f46552-927e-4536-9287-83130b3034a6"
        },
        "item": {
          "id": "c687d133-f224-4f9e-8344-5360900ba59c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "61a8129d-80cc-4f2e-b25a-d4b96d2c521b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd51ddfa-3846-41fa-936a-9d390555b03b",
        "cursor": {
          "ref": "b9eb203b-c788-42ac-bc70-f71fc3787932",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c3571204-fb9a-4cc3-a2c2-d8a739a060b9"
        },
        "item": {
          "id": "fd51ddfa-3846-41fa-936a-9d390555b03b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "41cc0add-0cd2-410e-8392-6efabfb03b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08cc33a-009c-4d23-87b7-c301e81c420c",
        "cursor": {
          "ref": "9fa312bc-3b60-4417-a436-b1f64dff5344",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e5fd1c94-5bb8-4e03-b7a4-c2d058077ea4"
        },
        "item": {
          "id": "b08cc33a-009c-4d23-87b7-c301e81c420c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "60f50a07-c41b-483b-8cb1-b0aa0fecf56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef891f1-fccf-436a-a540-04d5daf56bfd",
        "cursor": {
          "ref": "48475536-c4c1-4ff8-a87a-080a4e1e453f",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b224c4d9-515a-4453-83c4-630ac9bd706a"
        },
        "item": {
          "id": "0ef891f1-fccf-436a-a540-04d5daf56bfd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "80e7a72f-3bb3-4de5-b927-8874d49dcabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f70939e-2f4f-4faf-970a-88178790c2a5",
        "cursor": {
          "ref": "6bc511b2-336f-44bf-98d6-a79bdeadff2b",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7399e6bc-8d34-4605-a4e7-3ee99046437d"
        },
        "item": {
          "id": "7f70939e-2f4f-4faf-970a-88178790c2a5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "368033c7-bd70-409d-bd30-883ad350b604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3979d438-1211-4748-b596-ec9b6ec11dc2",
        "cursor": {
          "ref": "d8edde9a-0b10-41dd-829c-0f1d756f459b",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0defad49-fbe4-4ba0-b537-bb41bf0dc845"
        },
        "item": {
          "id": "3979d438-1211-4748-b596-ec9b6ec11dc2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d3be3d81-12b9-4ed7-8aa9-f09f1649dcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef61fac-b48b-4e36-be6a-61b87128ac8a",
        "cursor": {
          "ref": "eb3b84b9-c522-4980-b45d-94c27f1d64ec",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4e258b69-f5cc-42ec-bf6b-7823f8762d81"
        },
        "item": {
          "id": "6ef61fac-b48b-4e36-be6a-61b87128ac8a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "58916643-6cc6-4ada-ad5d-f35d10e89cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca728b1-30c9-4585-82df-a522b19c99be",
        "cursor": {
          "ref": "779ed077-1df3-429f-94be-be22f51a4ef1",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "233cb782-c5f0-48ac-91e5-a807857d5bfa"
        },
        "item": {
          "id": "cca728b1-30c9-4585-82df-a522b19c99be",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fec11b18-0d87-4bed-bad4-3b725b4158a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000a0c01-6b37-4d5d-8961-3e7b6815ecef",
        "cursor": {
          "ref": "62d17871-a9ce-4c3a-9a10-cd092419dbc5",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fd31f4b2-874b-4274-bb56-675d05a52e8c"
        },
        "item": {
          "id": "000a0c01-6b37-4d5d-8961-3e7b6815ecef",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3ba8437c-a7f8-4e02-8be4-da42e02de368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86d05db-f3ff-4390-8478-1455266c74bd",
        "cursor": {
          "ref": "27bbfefa-3713-4d63-99a0-7d32f199027d",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "02887bee-0558-49ad-ab6f-439350b7dc2f"
        },
        "item": {
          "id": "b86d05db-f3ff-4390-8478-1455266c74bd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f01f0d0f-6bd9-4361-85cb-4f541adeb6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f057023-1237-478c-b07a-593e5ab4b604",
        "cursor": {
          "ref": "43aef9c2-d641-438b-8048-18885063230f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c1e11d09-d4e6-4752-872e-b2eb3bbe075b"
        },
        "item": {
          "id": "4f057023-1237-478c-b07a-593e5ab4b604",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "65d6242c-cc13-4f2a-98aa-baabff7e30aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e615764-170f-403d-8488-ce94d0fd7222",
        "cursor": {
          "ref": "3c6bc5e3-30be-4c91-8a21-9f0e4674b6ec",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "717efd4e-19f1-41b5-8529-04717297d483"
        },
        "item": {
          "id": "5e615764-170f-403d-8488-ce94d0fd7222",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d6c85db5-848e-4498-8e71-5de31f7980d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b897a6-a83a-4271-8af4-f2fc56f108b5",
        "cursor": {
          "ref": "07910601-7825-493c-a588-fbd19ecff71f",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e5d62298-da9f-4847-a971-0d4017223f71"
        },
        "item": {
          "id": "88b897a6-a83a-4271-8af4-f2fc56f108b5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c17d6710-8aec-4872-a290-ddc29e2a103d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445c53a6-b108-4ad6-9fd4-1a2da5042317",
        "cursor": {
          "ref": "7ecff55d-c8bf-475a-9b4b-54de486e63da",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e8bb2096-2553-45d5-b462-ec432dad0b80"
        },
        "item": {
          "id": "445c53a6-b108-4ad6-9fd4-1a2da5042317",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d3f391ff-d5cd-411d-9930-e0cba9a55e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4602ba-e413-4f50-94fe-659afd80c92e",
        "cursor": {
          "ref": "ff84fcab-8859-4f2d-800e-ed0e67171bfe",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "491b8203-f25f-416c-9b19-c803adce2790"
        },
        "item": {
          "id": "1b4602ba-e413-4f50-94fe-659afd80c92e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f8c50e1b-d56d-4e94-a356-33a3f3502c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070c5cd9-6c07-4a0c-9b2d-dfe771f19299",
        "cursor": {
          "ref": "3ef54531-1907-4829-a979-fa37d3d8608c",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e7d050ee-d1f7-4143-9f95-d940797a90ad"
        },
        "item": {
          "id": "070c5cd9-6c07-4a0c-9b2d-dfe771f19299",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "23ebe66f-98fe-4527-833f-5b96a66176d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0267c19f-a3aa-44c2-95c9-5e52fb632cec",
        "cursor": {
          "ref": "09fc6e51-aa4a-4c55-a112-15d1fcd5ebe3",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5c32b897-2396-494f-87c6-4d5bc9f70271"
        },
        "item": {
          "id": "0267c19f-a3aa-44c2-95c9-5e52fb632cec",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6536a09d-6041-40d1-8534-d5e9838d2f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741b58e5-28cd-4a59-9f6b-d10776e7a5d3",
        "cursor": {
          "ref": "748dae4e-4d8c-4912-bdfa-fb4f12059cb1",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c7c9749d-8985-4c0f-8d15-e7886f01f1d7"
        },
        "item": {
          "id": "741b58e5-28cd-4a59-9f6b-d10776e7a5d3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d9334457-d370-4bc9-ab5f-3005209fb09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f633cb5-9e86-44fe-8c33-024dd9d5e482",
        "cursor": {
          "ref": "a3b18b41-fd06-46a2-bfac-d5d22155ff88",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8e650210-c65a-4e6d-8ab7-a38186d445eb"
        },
        "item": {
          "id": "8f633cb5-9e86-44fe-8c33-024dd9d5e482",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "450ac745-c64b-4207-b695-a40ff83c5580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1ddbcf-c689-47ad-bd24-32f2bad2aed1",
        "cursor": {
          "ref": "78b58dc3-4cc1-491c-857b-377900afa37a",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4250ad92-5d9d-4844-ad6a-203bd1283e82"
        },
        "item": {
          "id": "db1ddbcf-c689-47ad-bd24-32f2bad2aed1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "72617e49-ccc1-4cce-86ed-777908c99c95",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ec4591-c8df-45c1-963d-d1ffac4aa11a",
        "cursor": {
          "ref": "b2eef4f8-4ec7-4fb6-a912-5bd6e4ebaacb",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "960511dd-9e2d-4c5a-845c-fc0e593f4847"
        },
        "item": {
          "id": "f0ec4591-c8df-45c1-963d-d1ffac4aa11a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "eeb525c3-32a7-42cf-8fb0-df5b03b7d586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806c4716-4182-4f71-9979-4f0d967fc184",
        "cursor": {
          "ref": "22c2b50b-ed02-4ddb-a6e8-876b5487e6c3",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "75fcb5af-eee7-4a72-af6e-07a8ebdc8be6"
        },
        "item": {
          "id": "806c4716-4182-4f71-9979-4f0d967fc184",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7a2a6108-63d5-412d-9329-f4f1e0ebb267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc0e301-46c5-4d4b-8fb1-8cb250b4d3ea",
        "cursor": {
          "ref": "69b2bba0-7c33-46ee-ab9e-dbf7ed086538",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "04285083-c007-432c-b7c4-d945cb04eb9c"
        },
        "item": {
          "id": "bbc0e301-46c5-4d4b-8fb1-8cb250b4d3ea",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9fef41fa-0278-43d1-9f8a-b649b7649bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696c1049-40a3-4e9e-82fd-f7790a65a4eb",
        "cursor": {
          "ref": "071268de-0179-4f2a-bacf-04a9e3eee1f0",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "302a9a44-a32b-4bf9-830e-be9bc69d6198"
        },
        "item": {
          "id": "696c1049-40a3-4e9e-82fd-f7790a65a4eb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "090d98d2-4b41-4830-9d9f-b1827dec219d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c14414-1980-4fde-8d54-e82ecaccd8f9",
        "cursor": {
          "ref": "b58956d9-772b-4b55-98fe-731d402d0f38",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9502dd6c-f93d-44bf-ab60-07271e8a9d51"
        },
        "item": {
          "id": "71c14414-1980-4fde-8d54-e82ecaccd8f9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "610b44b9-67b8-4b80-9576-9a7d2e1956c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488cf27b-7fe3-432b-98bf-6c6fc3fbbde6",
        "cursor": {
          "ref": "d9e8e4ed-43c3-487b-b61a-16cd0410510b",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4d1b3aea-5630-442c-b7da-997c80958deb"
        },
        "item": {
          "id": "488cf27b-7fe3-432b-98bf-6c6fc3fbbde6",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e5c593ee-be04-4620-b74c-4d6db7ef5747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8aa06a-99f6-4530-8be4-a4bb0002c947",
        "cursor": {
          "ref": "80bdbd86-ddd9-48f4-90e8-c617b6250fb8",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3c0e96c2-de7c-48b0-8992-e609698fd87d"
        },
        "item": {
          "id": "8a8aa06a-99f6-4530-8be4-a4bb0002c947",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d9649560-062c-4dfb-b702-72e49da92d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f6bba1-e213-4256-8960-abea3548216a",
        "cursor": {
          "ref": "ab1a26c7-df10-4686-be95-2c281e28efb6",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b8211c43-2ab0-412d-8dd2-1f89b5daad7f"
        },
        "item": {
          "id": "40f6bba1-e213-4256-8960-abea3548216a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3efa780d-4ad9-4f51-987e-6dfb9d5aa95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4083be26-7e7f-43f0-ba8d-ae72cc9a7c47",
        "cursor": {
          "ref": "441cefdc-398d-49ff-bc17-b681311bb567",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8a454fdd-3967-440c-bb19-c3b362a4c0e4"
        },
        "item": {
          "id": "4083be26-7e7f-43f0-ba8d-ae72cc9a7c47",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "12ce6969-a52f-4729-9f6b-bea1b28d818d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b78e69-7f49-4735-85cd-32113340cf27",
        "cursor": {
          "ref": "40168ac2-297d-412e-bf37-b939aca4f798",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "faa4d58a-d39a-4378-952a-3358f5c0ea90"
        },
        "item": {
          "id": "23b78e69-7f49-4735-85cd-32113340cf27",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f6d25f00-319a-48ad-b74c-fdd5c1696f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bde3607-431f-43cf-9f98-e02afc115c96",
        "cursor": {
          "ref": "0be21337-49ce-42ef-8b0f-8f77ce8fba53",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ddae5ea9-3548-4b95-b43a-cec3882b3f90"
        },
        "item": {
          "id": "3bde3607-431f-43cf-9f98-e02afc115c96",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a48419d4-1cfe-4ee6-9218-2b6872504ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94caeb9-e4ce-4e97-a6f6-24b51ec98ec7",
        "cursor": {
          "ref": "9ceff76a-4b6f-4b58-9edf-9c380a69d95c",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5f211311-f5c1-45c5-a7f8-884564af7623"
        },
        "item": {
          "id": "d94caeb9-e4ce-4e97-a6f6-24b51ec98ec7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a789a1d6-f486-4222-a66a-412f536bce9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132cea69-087b-4f9d-8fe8-7bd5e8caae0b",
        "cursor": {
          "ref": "91980768-d0b3-4c21-8d9c-9462a7f1edf0",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "73805db0-67e5-444e-86cc-9c4c2768cd7f"
        },
        "item": {
          "id": "132cea69-087b-4f9d-8fe8-7bd5e8caae0b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2daf4787-1116-41d3-81c4-a8ee5a35c8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdabe93-b348-4433-a062-2be548a58696",
        "cursor": {
          "ref": "a16e895b-2308-4e82-9ad2-d6bfeedd162b",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "565fa7cf-cd07-4519-a7bc-3d0f8e919d44"
        },
        "item": {
          "id": "dbdabe93-b348-4433-a062-2be548a58696",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b71e09e8-fd81-4ac0-a5ad-6b3b4f2e7505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f5f0a2-1589-42b3-8873-279322145688",
        "cursor": {
          "ref": "29bdbd79-5375-4456-a7bf-42c6cb506ad5",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9a11c5e6-0e08-4a98-b232-f148c57fb68c"
        },
        "item": {
          "id": "13f5f0a2-1589-42b3-8873-279322145688",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ad4205c5-04bc-465a-8a2f-b634d283d616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc75f583-4d23-4881-805e-51144580112c",
        "cursor": {
          "ref": "5bb39e87-ed2e-4fa0-8434-94704538e201",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4e85a136-c393-4ad1-9e5b-a4c34854935c"
        },
        "item": {
          "id": "fc75f583-4d23-4881-805e-51144580112c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d97adcc8-577e-4e0b-9be5-1bafff8a8ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40e7a59-9f68-4aa7-afec-36617cb2442d",
        "cursor": {
          "ref": "9109b183-d918-44f2-bda3-102e467046e7",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a4815366-b565-4c2f-8272-2e3a82b8a08c"
        },
        "item": {
          "id": "d40e7a59-9f68-4aa7-afec-36617cb2442d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "96e70cdf-e8f7-477a-a09a-5e203eccc915",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "b25df50b-9a31-46fc-bbf2-08df17c3fe56",
        "cursor": {
          "ref": "8b3ce1d7-a99e-4132-8a6c-b2ef0625e1f2",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "be5c8bf4-31b1-4388-9434-5ec189f40276"
        },
        "item": {
          "id": "b25df50b-9a31-46fc-bbf2-08df17c3fe56",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cfeb36a4-3437-449f-a623-30a16951698e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba0836a-a92f-4aaf-b2f0-9809c46cb7de",
        "cursor": {
          "ref": "ba8b6008-4722-4a4c-9cb3-54739a0b0054",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "074c22c5-93aa-472f-a98a-6fd515930f8e"
        },
        "item": {
          "id": "4ba0836a-a92f-4aaf-b2f0-9809c46cb7de",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e4d27898-dcfd-433b-b08f-c315657c853c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cc722e-e7e2-4c17-af51-ef90397b79d5",
        "cursor": {
          "ref": "77554097-c7cd-4058-9515-ccf5ca2423d9",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "335e5362-a6fa-4f69-8adf-abd2faeab9a6"
        },
        "item": {
          "id": "e8cc722e-e7e2-4c17-af51-ef90397b79d5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "38fa4938-477d-451e-a29e-bd28b114656a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a23c1c2-2607-4d16-936a-994c896cdb83",
        "cursor": {
          "ref": "16bc199b-f603-416d-9910-09f0716e3fa4",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "70923383-45d8-430e-824e-f2c5ae073f5a"
        },
        "item": {
          "id": "5a23c1c2-2607-4d16-936a-994c896cdb83",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "95c3b5f2-b5f6-4ad0-bfc3-f162b987e51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e1e5dd-fd0e-4790-bf9a-9597eb8eed92",
        "cursor": {
          "ref": "1ecf3600-6f38-46f9-8942-e3cdf47a96d7",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "041d091f-bc8b-4eb3-b6dc-f3eb02138b73"
        },
        "item": {
          "id": "e3e1e5dd-fd0e-4790-bf9a-9597eb8eed92",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "756c90c8-e04f-4c5e-b5c0-46ad80248522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07aaab1e-636b-4959-85e1-2fc65af02d0d",
        "cursor": {
          "ref": "377d3520-fcb4-49d4-a3be-e700ba737a61",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bbb12ad4-e146-434c-b210-e3dcedb9f35f"
        },
        "item": {
          "id": "07aaab1e-636b-4959-85e1-2fc65af02d0d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4484a14a-bb23-4f91-86ed-aac71bccc8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82189df4-d169-4d48-ac17-be624bd6ca10",
        "cursor": {
          "ref": "8b55c775-aac5-4a19-82cd-ef443140af64",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4fa101ea-e038-4dcd-b361-7497b48823a0"
        },
        "item": {
          "id": "82189df4-d169-4d48-ac17-be624bd6ca10",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "91ecf396-dfd8-467d-a632-9c465e29ca38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f10d3a3-deb2-458e-ad8d-caf4a6bd00d0",
        "cursor": {
          "ref": "fcf3e639-e17e-4564-b14d-6b66b72e180b",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "84c511af-eebc-42c4-b2f0-72136faeb181"
        },
        "item": {
          "id": "2f10d3a3-deb2-458e-ad8d-caf4a6bd00d0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "69c55c88-341a-4097-b77d-516c31ee12b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d43be38-5251-4286-affb-02d7006ec21d",
        "cursor": {
          "ref": "9d21b32d-7083-4ba7-806c-08e8c4ab9fd6",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fb6a7426-4197-4135-969c-1be486bd9dcb"
        },
        "item": {
          "id": "6d43be38-5251-4286-affb-02d7006ec21d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9e7a313f-56d2-4797-a85c-dfd81c8cb5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484f13b3-0b2a-4696-9a50-a200113fb6fd",
        "cursor": {
          "ref": "6b5719d3-0244-46a1-a993-ba1a89dcb9ce",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "805d5564-27c4-42cf-8580-70ab2991e320"
        },
        "item": {
          "id": "484f13b3-0b2a-4696-9a50-a200113fb6fd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9967cc56-5aef-44e7-a732-6d125021a68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86e6710-8ce4-47fb-9ffe-6965b672565d",
        "cursor": {
          "ref": "bf2167ed-8be6-46ea-b92a-22b5430e8d13",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "26ea0805-3ef5-427f-ba08-4bff73c8d709"
        },
        "item": {
          "id": "f86e6710-8ce4-47fb-9ffe-6965b672565d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f73b31f9-eeba-425d-9eda-3cdd2d64e618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9a7d90-9c99-41cc-912a-d34273af4c70",
        "cursor": {
          "ref": "85dcd1fc-0994-40f3-906e-7b12e4369e39",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "47b19694-41ec-4636-a108-b87b777b228e"
        },
        "item": {
          "id": "9c9a7d90-9c99-41cc-912a-d34273af4c70",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "72d0fa69-9b76-4e21-8967-addd4b067ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb56513-818b-4b94-abc6-138744584739",
        "cursor": {
          "ref": "c555b518-9ac9-43ff-a2ca-735e7ad30931",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c2bdf233-ec93-49c7-a763-9c81fca8e801"
        },
        "item": {
          "id": "deb56513-818b-4b94-abc6-138744584739",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "923642d1-64e9-4a04-bbd8-59938351f41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a1fc16-7c80-4ae5-b935-fc33472a0cbf",
        "cursor": {
          "ref": "960807cf-0421-4c24-b220-c74c5cdeac93",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3cd31621-c8ea-4a21-9e72-d7d4fbb93bc5"
        },
        "item": {
          "id": "28a1fc16-7c80-4ae5-b935-fc33472a0cbf",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "026a96a6-e701-48bf-94ed-c7a5e642a4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de3f0cf-76c8-4350-ba50-62f3230161d0",
        "cursor": {
          "ref": "3d3aaa99-ad99-47fa-8178-b1c09ca6321f",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e554da2e-b347-4551-a7ab-441fdb35698b"
        },
        "item": {
          "id": "8de3f0cf-76c8-4350-ba50-62f3230161d0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "85f7ec7f-fcd7-4815-80c2-646b11a3f0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cb2c0b-f116-4fc2-8eb4-760f58780375",
        "cursor": {
          "ref": "fc2b85d3-1a83-4b80-84ad-2337e8665c4a",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ee706c3e-f8c1-41a0-aae0-fd6771034635"
        },
        "item": {
          "id": "72cb2c0b-f116-4fc2-8eb4-760f58780375",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2c0f9815-8397-4e29-9058-9b707c8a7f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0012937-0c69-4822-94fc-a868f9a80e9a",
        "cursor": {
          "ref": "e69c1cdb-49c3-4047-8b6b-70432831fe9b",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "28a6f1b8-cf3a-4ca1-b9e4-6e425e96c115"
        },
        "item": {
          "id": "c0012937-0c69-4822-94fc-a868f9a80e9a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8b95196d-dd5b-454a-9454-fc5ccbe6511d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3610f0a-e3f6-4aee-9d7e-866437624f16",
        "cursor": {
          "ref": "062f0912-890c-422b-be6c-13e87b1ce517",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d97d647a-e02b-4e34-8299-23b6f3e1824a"
        },
        "item": {
          "id": "a3610f0a-e3f6-4aee-9d7e-866437624f16",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f9dfe289-1c27-4518-b915-62d0f536d81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c885cb-2a8a-4390-ae8e-07abe3d7cde8",
        "cursor": {
          "ref": "79bf7259-e6c2-464c-be87-56969d0280fc",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f8b2b805-6227-46b7-9e13-c27abfd916c1"
        },
        "item": {
          "id": "c9c885cb-2a8a-4390-ae8e-07abe3d7cde8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b51d02b7-dedf-4054-89cc-bbd1fa23f015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323406e5-5808-4e4d-9355-7149baa3623d",
        "cursor": {
          "ref": "dde4aa13-49b5-4a64-a173-9feb7d069d6e",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "182e9660-19a7-40b1-91b7-d2ceafd161f9"
        },
        "item": {
          "id": "323406e5-5808-4e4d-9355-7149baa3623d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "aaf3e4c2-b3d8-4326-833a-4c4bb20f4116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bc44a6-1d95-49f6-81a4-f97b2b293806",
        "cursor": {
          "ref": "5ab8dabf-9a61-4677-92b7-e53da30f50a1",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8a429e6d-1b41-41aa-81e2-b0c185b9aa9c"
        },
        "item": {
          "id": "d3bc44a6-1d95-49f6-81a4-f97b2b293806",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8ca942fc-9a12-4980-bda0-1c1a40937091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f76699-d6eb-4396-ab42-7be2fbc2248b",
        "cursor": {
          "ref": "7a9f5bcd-5b69-44f7-9919-219d03fb77a4",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "633997ca-8b2f-45e4-8595-5f146596e913"
        },
        "item": {
          "id": "16f76699-d6eb-4396-ab42-7be2fbc2248b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "98abdcd6-4720-41c2-85d7-f6ac94d59203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d96a55-4eaa-4937-9f53-87e4bd1b5dfd",
        "cursor": {
          "ref": "22a7fbcf-8a65-4d09-9f19-f426a3fff433",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5fcb02d1-051c-402c-9a85-a972ebd2fdf8"
        },
        "item": {
          "id": "e8d96a55-4eaa-4937-9f53-87e4bd1b5dfd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fe5bf94f-b564-4c1d-b13a-b56b5b804e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab7aa9c-462b-436b-8e0a-7ea64e30d19a",
        "cursor": {
          "ref": "f33a456f-a961-458f-81bd-9c218009ea14",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4ab7a748-49d9-42b5-a64b-8eeb09f3c89a"
        },
        "item": {
          "id": "eab7aa9c-462b-436b-8e0a-7ea64e30d19a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a8ae307e-ae56-48a4-bc85-7b179f1ff567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a84ea7-5cfb-45f6-b958-933f3dd746df",
        "cursor": {
          "ref": "e67c442b-0aee-41af-97e2-c7a4b83f224d",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a17d2942-791e-4487-a97e-eea4ad83abf5"
        },
        "item": {
          "id": "01a84ea7-5cfb-45f6-b958-933f3dd746df",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9f645190-1f24-4fd2-b88d-299789dab9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b744fb-df5e-4364-8c71-4c87bfc6e9b3",
        "cursor": {
          "ref": "f4cc6ed7-66f0-40ee-bba9-d7278a67af11",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9fee9f7e-6300-43fb-837b-275b3fddfe20"
        },
        "item": {
          "id": "68b744fb-df5e-4364-8c71-4c87bfc6e9b3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8f64b22a-8493-4117-8067-d15e761f2e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c091bdf-d04d-4708-9e68-b6bb7400fbb6",
        "cursor": {
          "ref": "566bd129-b658-4fc2-a13d-25f28b9016ca",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fba76f32-620c-4ec8-926f-e277c9442433"
        },
        "item": {
          "id": "6c091bdf-d04d-4708-9e68-b6bb7400fbb6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e9773fde-ac12-416f-9aa1-52509b9cd755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbac75bd-4000-42dc-91ee-4b51ed369c08",
        "cursor": {
          "ref": "25495622-fe9a-4549-bbbc-75f158546796",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1985b8dd-6dae-4dc7-84bc-f235735c7687"
        },
        "item": {
          "id": "dbac75bd-4000-42dc-91ee-4b51ed369c08",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c38eadaf-65ad-400a-87f6-9d09c049ad11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9703394-ec6d-4a52-bdf2-556bd0a1a54d",
        "cursor": {
          "ref": "55e48f9c-e421-48c1-8cc6-e262e4de8d4c",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1147ecdc-ade6-4ea3-b13b-997a7e9b2aa9"
        },
        "item": {
          "id": "d9703394-ec6d-4a52-bdf2-556bd0a1a54d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "67fbf27b-e1f1-4bf6-b457-86da926221ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d10f607-6c5c-49e0-a2a0-cd6c9bdb579f",
        "cursor": {
          "ref": "c77c7fa2-d588-4956-b56b-2f8896caac93",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a8c2e422-9e84-4716-a0d4-161c1ad1e2e6"
        },
        "item": {
          "id": "5d10f607-6c5c-49e0-a2a0-cd6c9bdb579f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "daa2cbeb-63cf-4bda-a20b-8c07a989fff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cf1472-f408-458f-9f62-86da834a3920",
        "cursor": {
          "ref": "8645d08a-3b4f-4990-85d8-af02bbed90b1",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f7968b07-249a-4432-9f20-9fbb0ab310de"
        },
        "item": {
          "id": "17cf1472-f408-458f-9f62-86da834a3920",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cb393e83-6d39-4b33-9bbc-001691d4c001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ba7180-eb4d-4e40-88c7-bb871939096b",
        "cursor": {
          "ref": "ee08a22f-ec97-4705-ac28-ddfb005abdeb",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "137f7c1d-89a9-48d1-aa23-a8d7b9d581fd"
        },
        "item": {
          "id": "25ba7180-eb4d-4e40-88c7-bb871939096b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c53fdd80-872f-443e-9e69-6625fd05569f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1238ea58-d9fd-409e-8bf2-be05c7df0f9c",
        "cursor": {
          "ref": "e8d7f94b-1b88-42c7-afd1-3136b6d909fe",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4f43f180-81e8-4790-ba5a-dbe82d091c29"
        },
        "item": {
          "id": "1238ea58-d9fd-409e-8bf2-be05c7df0f9c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6598fd7d-feed-4533-bc62-4f7f1f9a27eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfe1110-1e5e-4adb-ac4c-a695d6935f95",
        "cursor": {
          "ref": "dcfa50c2-bbbf-44f9-a095-a349454914dd",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f1ffad35-5f53-450e-a015-97143c32b4a2"
        },
        "item": {
          "id": "7dfe1110-1e5e-4adb-ac4c-a695d6935f95",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7d42e4a5-b1aa-425f-bbca-f011e4980dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdace2e-6a21-4d87-b06f-bbf05616219e",
        "cursor": {
          "ref": "17a18ce6-3601-4704-8fa9-1ed664be1bbd",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "499970fa-5739-4a02-a07b-51a4b52aaa6b"
        },
        "item": {
          "id": "4fdace2e-6a21-4d87-b06f-bbf05616219e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "288a231c-8e25-4410-9e43-81b9ef867909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7133d903-60fc-4536-915c-22e6e5236a57",
        "cursor": {
          "ref": "666b337a-330b-481d-9ea0-7394dd5d0982",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b9b71cef-3ed6-4665-bb2c-12805ea9ee7a"
        },
        "item": {
          "id": "7133d903-60fc-4536-915c-22e6e5236a57",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "008d9e30-68f7-4bd2-b599-f8118e3741f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8228b6aa-1541-4bdf-9c3b-0158c33a787d",
        "cursor": {
          "ref": "f2943676-83ac-4239-a240-123d0a9bd17c",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b1689825-0d21-4664-8334-d53907c280b9"
        },
        "item": {
          "id": "8228b6aa-1541-4bdf-9c3b-0158c33a787d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7e47c7a8-77cb-4065-9e74-cc47167237e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff5a033-6061-4ced-8b9e-0e1d5c008823",
        "cursor": {
          "ref": "caf646c2-b983-40a6-b87a-959f9937c5c5",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a2359e37-6640-472d-8ad7-6030df5d5f36"
        },
        "item": {
          "id": "cff5a033-6061-4ced-8b9e-0e1d5c008823",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fa01e709-892c-44eb-b375-dabc0880e72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aafdf39-b392-463e-ad2a-f76597f96cba",
        "cursor": {
          "ref": "79e07128-e0f0-466a-805c-f28ba5a4b6c9",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b4610a84-901a-4a96-95ea-f602d617cd06"
        },
        "item": {
          "id": "7aafdf39-b392-463e-ad2a-f76597f96cba",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7f2f621d-8e07-4c1a-a927-caaa5b55d760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc595b8e-1fc1-486d-9647-243e50466386",
        "cursor": {
          "ref": "f6836620-66c8-4efe-93e6-f8c5ec6eae63",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b3de0a36-b9b6-4924-b492-6e449638c8ea"
        },
        "item": {
          "id": "cc595b8e-1fc1-486d-9647-243e50466386",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0bcccfbd-5caa-4fe2-8faa-bfcb2ee6b33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451c19cf-f898-485c-b4c0-fe59664ec303",
        "cursor": {
          "ref": "a714f951-6de4-4321-8d6f-4fa0a32cd9b0",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c26cf319-67f8-44c0-8518-15f7cfe0ca5b"
        },
        "item": {
          "id": "451c19cf-f898-485c-b4c0-fe59664ec303",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "08be0fdd-b39d-4aba-84fb-d853ecd1b3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a93fb9-5f74-44cc-8b19-67e69bdb8502",
        "cursor": {
          "ref": "b0c6c08a-d119-48d7-8059-112d8b98482f",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3931e76f-c17a-4165-99f5-0d23dea03208"
        },
        "item": {
          "id": "08a93fb9-5f74-44cc-8b19-67e69bdb8502",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "35a6f275-bf4e-43f5-8e2f-22417134d413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270c74f8-285e-4f14-9b60-db0df85b0dbc",
        "cursor": {
          "ref": "c4049978-f7bc-4545-86e5-3ce85eab6853",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c0f8e7e6-b773-4d07-9ce5-aad397d9c66c"
        },
        "item": {
          "id": "270c74f8-285e-4f14-9b60-db0df85b0dbc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "86158cc2-56c4-4b8e-82a3-df05d40c036c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88eb27c-30c8-4032-a8ad-152fadba577b",
        "cursor": {
          "ref": "3b36ddb2-edda-4d23-8c70-bda2c7a34665",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c95da19b-e4de-431a-a7e6-838cb2f33541"
        },
        "item": {
          "id": "b88eb27c-30c8-4032-a8ad-152fadba577b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a127dc3f-2b8d-46fd-be5f-c72bd814a22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d292b837-e266-420e-9550-a2f0b24c0681",
        "cursor": {
          "ref": "0133f5bc-d302-4eef-9f45-7c2bfa962216",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1bec0163-099e-4b49-b2bc-c68b4d179d90"
        },
        "item": {
          "id": "d292b837-e266-420e-9550-a2f0b24c0681",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6aae20ea-2f55-47cb-a915-14cd3638d065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03031f3-1bd4-4520-aee1-98e174dfce2a",
        "cursor": {
          "ref": "4608bff6-23ed-4a03-8cf6-ab11ca8a3f2e",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fd73a8fa-de9f-4d71-a11c-c64af8a113c1"
        },
        "item": {
          "id": "f03031f3-1bd4-4520-aee1-98e174dfce2a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7a21d301-46b8-43da-ae2b-a3b353b018e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcff64d-0ea0-438f-99cd-303a121d3921",
        "cursor": {
          "ref": "52aff624-878e-42a0-8d86-03258fa78c00",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7b21bc27-3e94-49bc-b3c8-5ffe3949ffe0"
        },
        "item": {
          "id": "5fcff64d-0ea0-438f-99cd-303a121d3921",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e6463f53-3b7c-4055-8aac-2201171f3f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e9c167-092d-429a-bd5f-4b6bb4599735",
        "cursor": {
          "ref": "bb5a3dfa-63b2-407d-af84-797d49a3a326",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1ca5021a-8912-405d-acd2-415cdf7df985"
        },
        "item": {
          "id": "70e9c167-092d-429a-bd5f-4b6bb4599735",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3817865f-6a1a-4471-a494-b78451215bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5047ae6-6b3e-4cb1-b434-7180d4715bcc",
        "cursor": {
          "ref": "c1020774-a88b-45be-b70f-d2a1ea0f342c",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b2ded4c5-eaeb-46f5-91c5-070c491fef56"
        },
        "item": {
          "id": "e5047ae6-6b3e-4cb1-b434-7180d4715bcc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4becfba7-1e16-472e-8823-36390cc2e4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7ca7a9-7fb5-4532-81e7-278a13c664a1",
        "cursor": {
          "ref": "ff83d6ba-fdf7-4278-9e10-10cb4ca67c9a",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "92891f82-ac90-4fd1-9e97-874bb9f1cfbf"
        },
        "item": {
          "id": "cd7ca7a9-7fb5-4532-81e7-278a13c664a1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "83d6b694-605a-41c8-8429-51d9dae4e153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaa16d5-2cba-4f04-862c-a43baec7a9e3",
        "cursor": {
          "ref": "f3512500-6e59-4398-9e69-5f7e555ad805",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "19ab64a4-7b5b-45f5-8ae5-f48e87f9aa9e"
        },
        "item": {
          "id": "cbaa16d5-2cba-4f04-862c-a43baec7a9e3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "616b49bd-6071-4e35-a381-7bb5be8be8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cac4f9-fcdb-4bbd-b836-082c39c5c38f",
        "cursor": {
          "ref": "8ab4b70e-97a9-489f-9c5a-86ab3508e72e",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "531eb70e-2cf2-4d8a-a3e4-77c64f96805d"
        },
        "item": {
          "id": "07cac4f9-fcdb-4bbd-b836-082c39c5c38f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8f207c9a-7441-47c6-812e-bd619ef03505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a4f558-a0f3-46ec-9424-044c53122d60",
        "cursor": {
          "ref": "4349478f-803a-49eb-8c8b-46109fbd0620",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4bb95bb9-bfd7-4f93-8a46-26176e40d7c9"
        },
        "item": {
          "id": "19a4f558-a0f3-46ec-9424-044c53122d60",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f02926c4-0054-4bb8-b31e-b6aaed24a6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4aa51c-04a3-4849-a7f8-4bea3ac0542f",
        "cursor": {
          "ref": "cc860ca0-57ec-456f-a147-c0e058583174",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4af96248-a063-4b91-8e75-65d17d5f70cb"
        },
        "item": {
          "id": "4c4aa51c-04a3-4849-a7f8-4bea3ac0542f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c2120079-850f-454e-9c7e-6af7e9e541d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493ffd57-c458-42db-a424-23342596e604",
        "cursor": {
          "ref": "d8555416-7eba-4d69-a445-13c9199681df",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c094b0eb-4340-4827-a27b-403e04a8d009"
        },
        "item": {
          "id": "493ffd57-c458-42db-a424-23342596e604",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6ed9e264-1163-4ddc-9457-f6e8817c2030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd24fa24-2114-4158-891e-21acc623823e",
        "cursor": {
          "ref": "3cf43cb3-2747-4ff6-b97f-8eea02e6955e",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a7e20bab-e13d-42dc-b7df-b2071f81042d"
        },
        "item": {
          "id": "cd24fa24-2114-4158-891e-21acc623823e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cee07280-d362-4fb1-910f-cc024c495730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1a0929-54ba-447a-a293-7426da947d83",
        "cursor": {
          "ref": "6bec9944-76a2-41e2-bac0-98e85719a9cb",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "cec6661b-d270-424b-bc53-2a6ab796a81a"
        },
        "item": {
          "id": "9e1a0929-54ba-447a-a293-7426da947d83",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "717cda50-c4dc-4a97-8ef7-90cc75bbb872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193d905d-4d11-424f-943a-b62c151f52dd",
        "cursor": {
          "ref": "58e64756-b4b1-4ba9-b13b-e26f541e72ff",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "13d18168-5635-410e-bdb9-a9e6580e90e9"
        },
        "item": {
          "id": "193d905d-4d11-424f-943a-b62c151f52dd",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7220c62b-edd0-4b17-93af-9602c2818cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822e5596-337d-48f4-a4ad-d34cba110b50",
        "cursor": {
          "ref": "65cbd0df-60aa-4e1b-8798-c876d68af0a8",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "939bfb9a-6a05-4a43-85bb-687853c191d5"
        },
        "item": {
          "id": "822e5596-337d-48f4-a4ad-d34cba110b50",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "391ef8c2-84cf-45fc-bc26-d20eb3c7a02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffb3314-7149-4b57-b803-e2c025621e74",
        "cursor": {
          "ref": "d4f67c10-beff-4098-8263-cd147a4341f4",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "86c0efb1-50e4-42a8-b550-00c22fc7d308"
        },
        "item": {
          "id": "3ffb3314-7149-4b57-b803-e2c025621e74",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0e7ec269-bb49-4027-a3f4-95f8434d577e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecefef8a-4ac9-4f94-8d0a-08a8dc52e739",
        "cursor": {
          "ref": "040e46bc-4b5d-4a38-b6d9-244ed1f663d8",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6196e5c1-aabc-45a1-a509-4e8248baa577"
        },
        "item": {
          "id": "ecefef8a-4ac9-4f94-8d0a-08a8dc52e739",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "12f8bb25-5a81-453d-bc5b-01c1dfd2e5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956657de-1856-4b7a-b42c-855de8aad880",
        "cursor": {
          "ref": "9bdf9306-2b6e-48a0-885d-3c7e1a47fdb2",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "05f0a11b-31a5-4fab-9dc4-e2e71cb51031"
        },
        "item": {
          "id": "956657de-1856-4b7a-b42c-855de8aad880",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0ec90a95-11a4-413c-8e6a-9a9f33863f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb69b8d-5340-409a-a00b-80a81bccac42",
        "cursor": {
          "ref": "9f96cf0a-d183-495a-bba5-b5d582cdcea8",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a81536d0-b648-4b76-8e8c-1b52800c0d38"
        },
        "item": {
          "id": "9fb69b8d-5340-409a-a00b-80a81bccac42",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7c6e9ba2-e9c3-41fb-90a8-2011b92d73f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b32d17-1734-476e-8386-09fd7efa8917",
        "cursor": {
          "ref": "d5928252-5915-4c44-bc84-5d6628f6281b",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5680eb6e-018a-43ed-ae5b-6fcc4b0c99fd"
        },
        "item": {
          "id": "30b32d17-1734-476e-8386-09fd7efa8917",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e5a4856d-51b5-4aab-999f-759c5a9e1fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cba4bc-975b-4708-8cad-99214ae61acc",
        "cursor": {
          "ref": "b99c1ec1-232b-4b37-ab29-69cc315d45f1",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "553600fd-bde0-488b-ae4b-6294256f8fea"
        },
        "item": {
          "id": "92cba4bc-975b-4708-8cad-99214ae61acc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8d00f65f-3e5e-4343-8e49-ae2be6a849ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3579419e-5425-42be-889c-a4d090af9649",
        "cursor": {
          "ref": "50c8f598-61dd-4892-a122-26e77fe3491c",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "71c2ab07-12c9-4d8c-9952-06a74d936cd2"
        },
        "item": {
          "id": "3579419e-5425-42be-889c-a4d090af9649",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ce4d4a3e-36cb-463f-baea-7fead144dc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0deef7e2-9512-4da2-973f-ec347ed57d76",
        "cursor": {
          "ref": "885caaf5-fbff-4d4e-9a12-7a1c5816c61a",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "175dcad3-91a0-438f-98a0-ccddcc4afd3e"
        },
        "item": {
          "id": "0deef7e2-9512-4da2-973f-ec347ed57d76",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "857e21aa-a1cb-4393-8be0-f833089947fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e2c9de-936d-47c8-808a-074e4ff54ac3",
        "cursor": {
          "ref": "5184364e-dac3-4bd3-987c-b87834e36d1a",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b72cbe97-d0ca-4f77-999c-2bf3479857e5"
        },
        "item": {
          "id": "84e2c9de-936d-47c8-808a-074e4ff54ac3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "75d238ad-da3a-49b5-8f02-bec7cd89e8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa2e576-e5e7-484a-b4ac-a154fd370eab",
        "cursor": {
          "ref": "df45540f-b0b0-42a9-ab8a-b28947d8b6fa",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c9915cca-a829-48a7-af70-c0c6ca53728c"
        },
        "item": {
          "id": "aaa2e576-e5e7-484a-b4ac-a154fd370eab",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "16209c2b-b313-43b2-96c0-dfec6e8a93b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6777682-0078-412e-bbf4-1be9cbc3c12e",
        "cursor": {
          "ref": "9a9ae5a8-d593-490b-a84e-d0dbdae061a6",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "10e62d73-1b5f-452a-8e9d-1d4efebb362a"
        },
        "item": {
          "id": "e6777682-0078-412e-bbf4-1be9cbc3c12e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d1fefa21-d95e-4e8a-af44-e86cc8399e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572084ea-d5b9-494d-b897-400c5c1b78c8",
        "cursor": {
          "ref": "354c5d13-1271-4c63-842d-fd69c32ac248",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a38fb30b-2fdb-4dd4-ac09-79fcda44c905"
        },
        "item": {
          "id": "572084ea-d5b9-494d-b897-400c5c1b78c8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e3d23ebb-c382-4e68-9cf7-ded49e6c21aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8984459c-397e-4779-b6d8-6cffd7c54c2f",
        "cursor": {
          "ref": "76c992a2-9cef-462d-97be-2439329ec953",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6bf50e98-9daf-4cb5-9f46-d2dc5d5fadd5"
        },
        "item": {
          "id": "8984459c-397e-4779-b6d8-6cffd7c54c2f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "eb0dae06-7b67-4019-9263-36a85d75b25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a13e2e8-5265-4737-9420-1b6e82c61d3a",
        "cursor": {
          "ref": "7de538a8-fb37-4a3b-b6bc-fe50365d883d",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "76aed8c9-f41b-4b9d-8ed2-123e103d8d3a"
        },
        "item": {
          "id": "1a13e2e8-5265-4737-9420-1b6e82c61d3a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "67b195c1-db26-40f9-be72-1e5835c7c9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5aabfa-1d57-458a-94cf-7df3509e742f",
        "cursor": {
          "ref": "4b383747-5495-4381-8a2d-c768fc9914c4",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "06184635-77f9-4c40-a54e-c1ba15392378"
        },
        "item": {
          "id": "7c5aabfa-1d57-458a-94cf-7df3509e742f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "16099797-822d-46bf-8f07-07c340e0a87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a8396c-07a0-4ab4-b1f2-c4105119c9b3",
        "cursor": {
          "ref": "2c4e0e58-fdc7-4000-a29d-a69fcf23431e",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6eb19ce9-a14e-4ac1-b403-8e4370f0ecc0"
        },
        "item": {
          "id": "76a8396c-07a0-4ab4-b1f2-c4105119c9b3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ce8ad9b4-fbcb-4644-9eba-08769528a323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b093718b-6d72-4aa6-9f2e-037776a5d543",
        "cursor": {
          "ref": "108a2c3f-625f-47a0-8353-d2c9bb543576",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "43e9172a-5193-4826-873d-072d41eb790f"
        },
        "item": {
          "id": "b093718b-6d72-4aa6-9f2e-037776a5d543",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "72e3edb9-a939-459e-ad6d-dbab89d67f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c5ca92-66cf-40af-b59b-7a55aecd8d06",
        "cursor": {
          "ref": "d801032b-405b-4322-9027-e63e60c1a24c",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "fc0511b7-523b-4b4c-8d08-d97427633c7c"
        },
        "item": {
          "id": "20c5ca92-66cf-40af-b59b-7a55aecd8d06",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f5bb6e0a-5f1c-4d5f-b9ef-1ac61c642558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a001d316-2901-4a5a-a1e1-09c1208ade6a",
        "cursor": {
          "ref": "41b7aa57-d118-4595-9002-e448297d7d10",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c9ee924c-9c04-413a-9014-cb1576b39312"
        },
        "item": {
          "id": "a001d316-2901-4a5a-a1e1-09c1208ade6a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cf0c6060-8a18-40dd-9507-f481352e4191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e233f2a-1ab0-489e-9273-61cdc28aa45f",
        "cursor": {
          "ref": "8bba6971-822b-418d-9bcf-5485ef9b0c99",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e1e541a6-e863-4512-9d28-6b1c3b3f1d08"
        },
        "item": {
          "id": "4e233f2a-1ab0-489e-9273-61cdc28aa45f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4dfb2c59-23b5-4eb8-849a-9e71f219bf03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b3fa04-abca-47c2-9b50-e9ede30bc244",
        "cursor": {
          "ref": "c16f2d13-0498-47b1-8b86-3f197e0e5973",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "22ef8c28-e71d-404f-8209-2d45a999ccfa"
        },
        "item": {
          "id": "c1b3fa04-abca-47c2-9b50-e9ede30bc244",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2ac860ba-fe51-4064-8179-df86c4d12914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fc6028-ed68-46b2-a41f-b666cac64081",
        "cursor": {
          "ref": "691b5e93-6f5c-47d1-9745-cc853e9ecbcc",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "29eef844-1d2a-477e-8607-5b4dc0767481"
        },
        "item": {
          "id": "17fc6028-ed68-46b2-a41f-b666cac64081",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3f9ef670-df5e-4f11-8c70-24fa21f25e8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f973e9-b68c-4d0c-9e38-6988eb669c5f",
        "cursor": {
          "ref": "dc63bc93-0e96-4a4f-be32-b51d02e44d99",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "610a07f3-ccf6-42d7-af1f-5e6899d92a24"
        },
        "item": {
          "id": "37f973e9-b68c-4d0c-9e38-6988eb669c5f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "342230d4-58c8-48df-a353-ff6b3db6be75",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed604131-4f3a-446a-9d6d-c00dc517cc5c",
        "cursor": {
          "ref": "04fd5fa8-1d15-4338-b418-66f80dc7a8a4",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "45b03190-529d-4035-bc46-cf12442b540b"
        },
        "item": {
          "id": "ed604131-4f3a-446a-9d6d-c00dc517cc5c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4c894d57-1360-4194-a1de-60e74565638c",
          "status": "OK",
          "code": 200,
          "responseTime": 2867,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f38ec23-f5d1-486e-b1a2-9249d87d5c7f",
        "cursor": {
          "ref": "1a9c6e7a-8fac-4102-befc-8ef9c7602437",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d0a72353-693a-454e-8ff5-9744dddfe1da"
        },
        "item": {
          "id": "3f38ec23-f5d1-486e-b1a2-9249d87d5c7f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dc9f7da4-14f5-4788-b1bf-c2f788499327",
          "status": "OK",
          "code": 200,
          "responseTime": 2765,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6f6cf6-da98-4349-b9b0-bfcd0039f8a4",
        "cursor": {
          "ref": "fc130fc3-73dc-4641-9da2-865929a3c439",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "109fa52e-fe37-44bb-b559-5302ab5f1225"
        },
        "item": {
          "id": "3c6f6cf6-da98-4349-b9b0-bfcd0039f8a4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4f7e4f51-fff8-4ead-943b-80367b8485a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6f6cf6-da98-4349-b9b0-bfcd0039f8a4",
        "cursor": {
          "ref": "fc130fc3-73dc-4641-9da2-865929a3c439",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "109fa52e-fe37-44bb-b559-5302ab5f1225"
        },
        "item": {
          "id": "3c6f6cf6-da98-4349-b9b0-bfcd0039f8a4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4f7e4f51-fff8-4ead-943b-80367b8485a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aed42c0-5d27-4dba-a269-a3f53add10ec",
        "cursor": {
          "ref": "c1879e6c-a630-4785-9e0c-6b2a1ca4e4fe",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b813013e-ef9b-4f5c-8fd2-1071da3f9f60"
        },
        "item": {
          "id": "9aed42c0-5d27-4dba-a269-a3f53add10ec",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "41e65ace-41e0-48ea-aa45-97f7b3f1ce47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26304ac1-87d0-427f-9935-f75154f99b0c",
        "cursor": {
          "ref": "53ce0901-63f5-4262-8c76-a6c679c67210",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "38e36d70-5e2f-4e72-83c6-c6756fd9b4d3"
        },
        "item": {
          "id": "26304ac1-87d0-427f-9935-f75154f99b0c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b87d180e-9031-4a76-afaa-0101ae6b2da6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}