{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4208c728-5e13-472f-8de1-b4db00fe35cf",
        "name": "Clear Cache",
        "item": [
          {
            "id": "138af468-f0da-43e8-800e-c40f03184bdd",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4e890554-a474-48b5-bd14-ef6e1993b46c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "367bcae2-fd19-416f-b298-f3851dfc396c"
                }
              }
            ]
          },
          {
            "id": "b2698faa-8641-4dd1-9bcc-15fd672bb905",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a7054910-1db0-4de7-bf3a-cb902efa412b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6d12d7ca-30ef-47e8-a3b7-d153379b58c5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b6e1ec97-0cd8-407f-86de-71c789624099",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e856763f-ecf9-4a04-8764-3a726d3a00d5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9cae5b96-bc6f-4d37-b4dc-43efa9f6f6ef",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24624f34-d008-4384-9f0e-9d95f779fc23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "daeef95d-6488-4b1e-abb6-a63e9474930c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4eaddf97-4bc6-49be-b4c8-f9fca33029a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f4fdd2c-6bbd-44fe-a64f-82e01bbd403d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "19301f80-2b5a-447d-bdd0-952700959f61",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2cb1bed8-40a5-4725-b6fd-5c5c2dbc79b9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e578a99-1043-4f8a-b321-a949c538e45b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "78a4d4b0-7ec4-4d05-8e42-650ee13cad41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "672c1cbf-780b-43b9-a718-5daec92fc5f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "527680d5-ecbb-4638-a398-062c7f3215f4"
            }
          }
        ]
      },
      {
        "id": "7eb7abe0-0498-45d0-9b8d-af64d50a4578",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6835255b-43a9-4296-810e-ed7378d4171d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e44a216b-7b6c-48be-89c1-9fc1a86bf88b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "260d838c-715f-49ea-a84a-7a0f5e110809",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194c879c-23ac-4222-abdf-859db844ab88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5720e11a-d36c-47bc-88ec-f7eccdc31763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c355407e-767b-4204-8fa7-12e3fe6ba71d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cc3078-9faa-4a82-89d8-0477733bf53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4ee64c6-ad9b-4f1c-a030-63d8b4ee8fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ee67df-0450-48c6-b552-99868e5abc5f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67e5f76-16c2-44d4-bfe4-4e1f288756b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8152299a-3687-4739-b886-a9dab48d8db2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d0275c41-f997-496e-8dea-334440a3f0fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f335a1f-072e-48aa-afaa-9ba5e7e97935",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da98a3a-8a19-421a-a5f0-54634bfa29a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38eb7087-c4a0-4045-b38f-17d2f9e6e0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bad60e5-18dc-42d8-a9f3-96c6154e6bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6e6fc6-d368-45bc-89f0-14bfb2c0de17"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "31a64d3e-7bab-4125-8d27-29c69f7a2495",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e9886d8-2564-4e0a-8f97-3c1a321e5ff3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9daf284c-ffc2-4bf2-bfb3-ff7a4e4bc8f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3f926bde-ca85-4c08-8a3d-18196269d919"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf521c11-f952-4fde-9b94-dc02edfd9893",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9a14d550-acd4-423c-94d2-35d0a2337743"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0156c2cc-a6af-4e60-b82d-35a66b46d82c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d58950ff-5755-457e-9e46-562440d926a1"
            }
          }
        ]
      },
      {
        "id": "04e2ff59-f265-4d9d-aa93-ffbfb50f8ecd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "297cd994-e36e-4570-933b-b4ee7e33ca3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b577edc6-c577-4a02-99af-e7fa34c139a1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ddad8f13-22bb-47c5-b28a-9d7ce0e14336",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe58e604-e7d2-45bd-9a11-793bf9dc2619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726e6e15-8ae3-48db-8035-e4fa4db29abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4154112f-56d3-45b8-a8e1-fe5047a02a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aec4cf8b-eed7-4169-aea4-a06db3c65476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2076f60-119e-4c05-9cfe-aab9d5d8da3b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee1b2f7-735c-4eaf-bfe5-bd1793c39fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49548957-176a-4056-9026-798a3f80a7eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c5c2d1-7b53-4975-a95d-247333df0364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9effd225-2f6f-4713-b47b-35830e6e184d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75de8a0-34a9-4d48-bef9-ba34345a3503",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2a6ba6-f40f-442f-b284-a86a39f3deaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12032dcf-9774-473f-91f7-70c7b648d52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3148b3b-2153-4b30-9366-b4cb7400b18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc1603a6-2662-4b2a-bfdd-f942358f35cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272fc487-150a-4646-adc6-c6632afe70b3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c6026f-4dbe-4ee4-b44d-9c45ad771e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4deb7018-eca7-4682-876b-2acb3dbb4564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd010b3f-51eb-432f-96b2-877ac3f577ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef34b0f3-a3b5-4a3d-8e1b-b0fd29a5e33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c94f94d-9546-495d-a8fc-2f6b593daa5a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd93e726-5051-4cce-9036-42470db1a30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce72d2f-21e6-47f2-9f2e-3e0289e7ae5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80be21fc-d185-4bb7-a822-1ef404e9a0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fede3ad6-edbb-47b7-8791-a1237eac2d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c44e6b4-3614-4598-b985-5805265be3f9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a3d230-748d-4f10-9fa7-5a01597330fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b6aef7-5449-4302-892b-d7159b45303c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2634bb93-0139-4958-9a6d-ea81e9f19b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12bdf21c-90c2-45c3-af3c-f521b6312894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3090bee-baa1-413c-b643-68d26e7b9374",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a1f70a-fc68-43a9-b054-f4d8dd3ec6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a599df8-b9d9-4401-b085-b999cf23473c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b32fa5-e98b-4c63-833f-661c89094708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1836554b-abfa-41a8-8f2a-745ed6886d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4417994f-5111-41d0-93bf-91de99c668e0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bb006c-af0f-4be2-acb9-5d9bf80f651c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7911b77a-56cc-4d76-ba2f-c7921bd4e9d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b6e026-38d0-4187-a4b7-20a4cca06123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fccc5de0-8f1b-4ca4-b7b6-ee7c0c80e861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798da919-7fd7-4c2f-9c25-7c9b7c614bd6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e06f57-d1ab-4fe4-8874-4bcea495eab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0c4a65-7e8c-4370-b66b-da428fdbbc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184f34bc-1562-4282-868e-dae2327ac035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fe97e32-e74e-4158-8c59-393b6bf39cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad14780c-aed3-4d1f-92ed-3da8b29b2291",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b9ed8b-e6b9-4647-bc76-6c8c31c708ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7339e4-f3e8-41c7-a81f-188b6d564c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b088944d-8de5-476d-8c0e-4b671ce75bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8680c8e-c50c-4085-b8d1-62aee09d7c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b028dc9c-2cb3-451c-90cb-f11fe71afe18",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c16a22d-e2ab-454f-8c33-259f85e08b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e43e093-3de4-449a-9ed4-b5ea474897d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ab3a4f-6e76-497e-9694-b8606dd21c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bcc5614-42c2-45c3-8e75-ad9e54becaf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df00917-0c35-4469-acfd-69e2b51e6d94",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76ea073-63b8-4ae6-a4a3-edc6cdba066e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1bee6d-162e-403c-bbe5-ceb81804df20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2bbc65-1f2b-4dbc-98d5-a752bd9e9c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcef3bd6-e529-4c09-91f0-823907499b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9f16f4-9cab-4d15-82a7-9c202eb3867a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c218ff7-d240-46c5-a8e1-5e238a72cbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f18a26aa-fc73-409a-9982-ccfdb1bff4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6fa0f3-c6b3-4382-b3d8-e1f8627ffc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05fe3325-1f0a-4433-9dea-1cb118f0f701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8c1bcc-fc60-4b01-843f-4e21d866b808",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5b4ac6-374a-46c3-b618-e706f92d8686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f15c4d-eb25-4252-bf49-a196f7adf283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2677bf-1869-4de5-a786-244ba2d2bfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "681451e2-988e-47a2-a0fb-de44d97159fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9645bb-6aa1-459c-99e6-79be8f788186",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a379584-b2ad-4ce6-9e87-5579580b2220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1ba1fa-57d0-43f0-9855-ec644287a539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89057a01-6a8b-4896-86fe-7cea5fd59a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8701eb0-e2fb-42de-81ed-29ec7ade34ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e29918b-fd1e-4493-8e02-2b1485152669",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c716add9-2a9f-421b-ad8c-4b670ace0170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4561a0-01ef-4347-bf8d-23047af4dd8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534728b6-c7d8-404d-a089-8a9d302189fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc502cd4-eff3-488c-8e1b-5e502446bbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d323239-c16e-439f-bf7c-807165d27360",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41e7ff2-e8e5-4e6b-9b03-7b9e1a5c7c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8b3d4c-5723-41fa-be4c-f1d28da84e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505d12be-ca23-439c-87a3-c36c99720eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "106cc849-3f1f-4d05-9f6c-ff09616bb1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890e9ff3-712c-4557-8ccc-681b2a4370c3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f6f502-5939-41ee-9524-a455a208efe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3829b577-58c9-482d-a2dc-0ff79ae2e70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99dc26de-b59f-470d-8693-ca20a0863051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a686bfde-ef36-4cc1-8194-3b1d3814fbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e54a4c-45e9-4a84-9317-0fe03e4f0e1b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381b2b83-8157-4c9b-a6ac-67c470af10fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9f65d8-82a5-456d-85ed-224c3842b304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8148b9b5-d9aa-4d77-a448-0dc2500fc0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93fa01b9-9a41-46d9-9b18-fcde53d2cea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467b3523-597b-40f8-b628-909348412808",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af54ea8-043d-40ba-bfb3-23793983daa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53eec505-5acd-4876-9a87-e1bf10787073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311aeb38-d96b-4290-8dcd-de2dbea1c43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9c6b8f-c8d4-4a7f-903f-72759909a1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b6f69c-7e1c-4e34-b8c1-c7cd395a1b8c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027a153f-ecc3-4c19-9c79-6d0a9376b8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d3766f-493d-457b-af19-c77253de79b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01d01a3-7b2f-47b3-9af4-5885ae454061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8e1ba4-816f-43d2-b955-e22165387e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcb56d2-0e4a-403b-8d95-3e5faa4bb41b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6383b305-deb9-48d6-9c7f-491138f5a3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a2fe60-46fb-4b36-b080-5f422f992bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9480822-1b08-40db-b82c-538279c1cc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1941c442-e823-40b2-83d8-1348c1b3941c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f08179-9532-4ea1-b263-d7d5931ad2bb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4527b6a-3785-4be5-87d3-42d21cb18b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad54432-3932-49fe-84a4-5b5a3faa71f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9427b82-db07-46f4-844c-c43d7313713d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23674541-1df7-4835-a786-63b5a0e02fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700b65b8-bb96-407b-9e43-b7614a624c02",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d8e845-67ab-4a53-af70-e59de6ddcb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4a334a-567b-425f-a52c-69a0d55964e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79415fb-889e-4137-adb6-0b86944d6769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce81b33-306b-4ad9-a6fb-0a493cfae1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d872a050-a9b8-40ad-b67a-8d4d8137ccc6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa233a42-6f6f-4c73-a8e6-bffbdf10dd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1289ba69-e4b5-4417-b2cb-e934fb0c4447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2998072e-3fd0-4856-b1eb-b665f844705c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82e7b09b-d020-4adf-b9e4-d955f9496ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b185d25-6618-4725-8771-5939243a5d18",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb430ca5-5879-4909-8e9e-063146aaac95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea758fbb-1542-4ea6-a0c1-cf6c2567704b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438ade24-8284-45bd-a495-dcd3ea0b2032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39e5f7dc-cb10-42c9-ae9e-3fcbe53786d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064d30f2-b87a-47ef-b215-3c8d2db0db37",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9f2999-036d-431f-9300-4e68a0ef3834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d38c5e7-daec-4aef-ab2f-f488b6d67bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a38af8-a1ec-4a41-b802-2f4c923d7f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f720eba4-c537-462a-9253-27284805deb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672e0afb-1301-4974-b961-1a176520c5d9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26985b9-9300-4717-898c-381698bbefd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4833d141-ffd6-4348-a3be-86a04433bd2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee73171-8f9b-4d30-b1ca-2d13f6372211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "063735cf-dd70-4955-86e2-5266e6fbf43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630208e8-1ce1-4121-a2e4-eb2ad1d535c8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11911bff-571f-4d5c-b70e-424dbb6c1152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a44606f-b4ae-4ada-ad0c-9fe02aa3912e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4181840f-7feb-4f34-a737-7ee6064cdcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cddce197-8262-4591-b356-c7e8bb5f7087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58dc953-d093-4041-8b7c-dda509bbc3d7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f3eeda-0a39-425a-b991-00c6741d6870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde8621e-437a-4bd4-96ca-5aa08bd0e953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bd590c-eaa6-4ef5-89c1-d028cea05c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4918d5d-e5d6-47f6-a2c9-531f1cc3b459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85958a1d-20d8-4682-8089-b8a95e1eff7d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c64f73-9053-4a34-a665-39755f8e7775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9c29ae-005e-4efe-a6e9-8b66763a3bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9776b4-ec55-4bf6-9abd-3233c4fd77c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c24d7c3-680d-4e66-96cf-7a24d073c573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95f5867-43f0-45e8-9615-2a7536769080",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc24cc2-10db-4cea-ba01-cc363f047340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab33583-8387-4127-938e-4d4ae9921c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabe5fae-4a9c-48a8-ac7e-6e6cb35aa126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f459cbed-039f-4908-aff1-b44d68f557e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0a2fbd-76c4-4e45-9465-def1b4765a15",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdb9553-b26f-4dee-b66f-a32601d7235f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6833e4be-6388-47aa-b3b3-54a22d817eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748b3b34-7cc2-4002-8523-015f676bc87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "126f94fe-a929-49d1-9246-629688220267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22732a04-5f16-45c9-addf-5ad83a5cd0bd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788cbf42-818b-4c51-8596-f53ff9f4e546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be75734-98a9-45b5-a3bc-c80a6712b553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c115c84c-d096-41fa-8dd7-80a30ab5452c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd00a469-3c70-49d0-84d5-9d470430d491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f147a63-9a84-4f3e-a241-14578c5baf28",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8557291-7018-460f-adb2-672d4337ec1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f6d5cf1-905b-4074-8971-f0d0a2335388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f33d46-2b92-42ad-895a-7260257a8baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a6f800-c9d8-4411-af56-ee6cf56d4bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56bd501-24ef-46f9-9f8f-1638ff3e7ffa",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35217fa1-746a-4bf6-8515-d125215c84f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3185db27-d7e5-4a90-b37c-09d4c50cd96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618be7a7-a17f-4c3f-8c10-95ed3782e892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1520ecf9-1ffb-49c6-b297-e7f4064b1a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3084f7-abdc-4557-88d4-644505da841e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df840257-88df-4758-82a0-e7aa802dabae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3fbe2fe-7ba3-46f4-9140-d0b48ded8682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cc654e-0f1e-4195-9f5f-b7abc5d58d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59b183c9-8a5c-4f6b-85b1-8e9ea8a9595e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23d80a2-35f8-4d5f-8fa7-40e2d6906636",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb25221-8388-4b76-8fe7-1ed6d5f33888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43571c9a-2410-4562-a52b-182d7e504831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88397cca-4f7a-4612-8daf-b036f925a350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9a09a1-147a-41cc-b915-573f80f10748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6d7fb0-a2dd-40e7-9adf-4b038534e6f2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20f57ac-7fd6-4c91-a700-dc2c1a24d0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebc85a5-7701-4276-b2b1-a712acd5b208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9bb209-08c5-4b59-a86e-4bef43431a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4eab1d-2ecf-44fc-a8a4-391ae4e71b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cfcbfc-083a-4ace-aec0-60e43660ff22",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a3a5ef-dc61-4fc6-95d3-fd2e516e1233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080ef2d2-6858-4515-b258-c6c7cb0d6cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1665c95e-8b24-4e17-8394-4f63828ec9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b164e64-397e-456b-879a-199eb2e6d72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c0ccff-ac04-4df8-9552-9ad64d0e3fec",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebbe3df-e877-4957-953f-2283fdcb6a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5044b6-0619-46fe-a804-435b0e7d960c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223f8a3a-cd85-4a9d-83a6-0e907cb36edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "590cb045-29dd-4280-b9f4-7be9be35795c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a70df3a-27e8-4fcc-80bd-6f82c158d9dc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03599db0-9d2c-4b21-af95-db2d4d90aeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c993b64b-6cd6-44d8-8d8d-481a39d8e089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddc28e2-60af-478c-b6de-ef1be331fc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bc30b16e-1bda-402c-b0ee-c48e0ad1b462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43feacc-b4a5-4946-8542-fa84645d8827",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f36c51-cdd1-4b8c-bc75-aba8f2296144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5cc6ad6-0781-437f-a3c6-d8f86a392ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9114703a-a83a-4836-bc63-26e93a1b6660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "34917837-809c-4651-a19a-7e19e66c84fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be06822a-b2cd-458c-8897-21e13a638fc6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b7dae5-b704-4c13-b7d6-952a3039059a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d6f3bf-086a-4dc2-a7e0-1900d25a0351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7811b1-7254-48a5-85f6-200f1d739c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "208424ec-d1e6-4e72-ab86-b74d301ff36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96424930-a45e-45df-b8ae-94a247c12fe1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caffc5a7-8a60-4a0a-8d04-a776405f5f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "409b322d-e051-4bba-8e41-43cbc1a486a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96ef438-b298-4bc5-9d30-2a8667490410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "52cf1ec8-ff09-4cb8-af01-6ed5e56c1b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0eaf332-62b3-45cf-8f38-8f72d83be575",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f8fb40-7d6d-4f7e-9547-d8dd69e49efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae9c492-dab4-4438-b2cb-d5fde2aa0292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad732fc7-e95d-4c3a-b966-9483a9aae7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06499190-324c-48d4-98ac-6fda70c61ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223a564c-657e-43c1-ab39-794dfe1b5514",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b910a678-15c0-40d1-bcf0-5f31c99d05f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be828aef-399c-4d30-8580-8b03e6e8433f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f6d8c0-c68b-4f89-a287-431b3ac8db51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5f640a-71f6-4f29-a9ab-e20472f8d7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a4a31c-5b32-44d4-b603-6be062e66f60",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a278472-ecaf-458b-9ec8-171b1bb016cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7a890f-b755-46f2-a333-687ca1d2e060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c48f07-1d4c-4643-8b77-42079b88c173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f962a7ea-12ab-4a45-96b5-c2b385e7208e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3110cb7-d9dd-4f69-80d4-6aaa61c5f304",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af29dbf-fddc-48d7-b376-7eed79a2101e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc78541-6a84-44cb-b138-8e69b06be30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f29e60-0dde-4a43-8999-696ddbb4129d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bfef060-90c0-4fcd-be58-d2a9353ab3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f890f577-6d73-4556-99d9-484bb13faa6f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9133f56c-f98c-4076-9edd-9569b98b08c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f2224c-4740-4448-bfd8-2ceb06c0244d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd76abc9-d014-472f-a176-d77f141e50da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "14893650-4e44-4d08-ae49-1b513a5cd625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b1458a-092f-4f20-94c1-4c445bcbf3c1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c225f951-1f7e-4983-b3b3-535c5fa9f694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2631580e-382f-4ca1-9f72-45e1e176706c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54901ea4-ab1e-4ab7-915a-8958450ffde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f11003-459c-4913-8370-780f0ec39b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4bff32-731c-4abc-a950-339a814fa875",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74a099c-c214-4cb1-b04c-1a23557f1ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15515f83-36eb-48b3-9a23-ee4c66d864f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c20b34-d398-4106-8e59-434765bec680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "51af7350-2e1b-4634-b8f4-057a790d2bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc63d46e-6960-45e1-a0f8-5d6de6d3b29a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a362e507-efd8-4392-b782-c9d24041b9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e73867-b5a1-4b01-88cb-6bdf1ab15103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb79481f-8700-4d27-8305-10541026a160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5aeedb5-bb8c-4f89-afb3-9b62ecf216c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e4d9fd-72c7-4d5f-8f7a-33c9d271f15e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b09c02e-b0ef-4993-957d-a790e0c8b42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2923a9d-7773-4883-a686-dba37bf39c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0a08c3-3439-453a-9200-9b2c016c13a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc81e514-eb01-4070-8591-44f3f93ce1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109f99d2-60f0-42c0-8120-07ae8b334662",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e2f0d2-c64c-48ad-9954-14a944cb3094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d86101d-fd76-4662-b999-843af8dc8777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463af91e-4b32-429b-8223-dbc88d2caf21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "755773e2-9717-4509-b414-57ad129db7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d87b20-2ae6-4777-bda8-94c3f07afa27",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150c4193-82af-4864-a120-5155c8809d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3d31e3-03b9-4924-8660-34ac84aa5b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca31f0d1-0aa6-4e9a-b9c8-0223e63c4a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6550ab-f567-4a49-abfa-0610c94a857e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763cc3ee-4150-4b56-bf5b-1f3772aa48a0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a4365c-b317-43a5-ac38-3f12da1d435e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e831b91-e7f6-45b2-bce2-a51cdadf1706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31dac4e-dfcd-481a-8be9-3ebbefbf2139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5886e776-cdbb-4688-b230-c650e55004e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75463da-3f87-445b-966f-46a250cb91bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eaeed84-8ba1-45e7-a337-84c50777be9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ebba7c-9a70-4651-8321-813d667d3b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1aae1e2-c535-40e9-8871-bafde2fa7e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e463191-be64-4ee0-b916-26e5dee6783e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4787438-4c14-4178-ba7b-46576d1ff9e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d145c5d-c290-4336-9c34-c8e3db5564ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4a8606-9966-4dab-8742-9c6bbb9a510c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b924d7a8-f162-4dde-83c1-defc2cb8f6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4add0cdb-d418-4af5-8df1-0ce1c366645c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec976ab6-d806-45f4-82bc-907b28494fcc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f44386-7d41-4cb5-8236-e7f73eba8fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400ceb9c-7948-4c06-91f5-ce9f380bc72e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27158601-f0e8-4048-96d7-2cd67cb3afaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "337154e0-d35c-4cc5-bb57-6f1a3b7b3c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c7f815-39a3-472f-a778-d42d66647574",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71db142-09be-45f2-9097-315a49326368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e997e847-3fe1-4141-b2f1-856ac76862af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd7b027-244e-4f05-a223-63eeacd1ae9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "159d9adc-e34f-4d1b-81ea-93fa9d1e421a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5fa90f-5bfb-4231-bb29-0ffbf5238ad6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f62ad8-d1fd-45cf-8376-cd1260d1b3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b24a56a-6ada-4b7e-9f15-468e1a06b3fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7426a206-2410-4ca6-b385-4511a4c3213e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6ecdf9-901d-4550-8cb9-9104ed573e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19297fde-9a5a-481b-af9a-a4e8137ef8cf",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204f99d5-f2df-4129-a9c5-6483f7b30242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f52f50-5a5d-4cab-9b8a-663e387242c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984e23a3-0263-4495-8662-5e380e5a3bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf72357f-e203-4765-8a19-2962ba71e6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec23bdc-51c5-45ca-a449-bc9b52bef977",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70b18a1-c630-4f5b-b548-6b7f4c4f9872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f66b65d-cbd7-4309-8d29-aa943f037351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebba528-bbcd-4a10-b718-dd74d058ad33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69b961c0-7753-460f-b984-f703fdf42658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d809002b-575f-4f04-9a4e-1b5eddfbefab",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46383a6-1105-4930-a8a7-66c69dad55b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f21a46-574a-4bc7-8cfe-53010414574f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0b9c50-e5d8-4511-bd1f-d29b7606efbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f25282ef-8332-4aa9-8484-8c696086559f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb8dd51-748f-444d-a9f7-09c3b7065ff4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef3e74d-0bd7-49bd-a5db-bc95beae1317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aade707-9c3a-42a2-b7ad-a44e15909fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc23feb-ce02-41fd-ba87-26eb16c85eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ead8c0e-1b66-42cd-bf2e-59403d2d27b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c742a48-ad94-4bc7-9057-ca75877cdafa",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d39f08-3b8f-4cfa-aae8-25fc7e46299a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8da9db7-1689-4538-b16d-0b04eea714b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fd9c08-417a-4918-a255-5524e802897e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a363c1f-f847-4e3a-bce5-7e7de32c9461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89c0caf-a01c-4240-aefb-e01f0c17b772",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92bb525-db11-4258-a0ee-c8b5fbbd6720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157d93b3-1639-4b47-ba3a-10d0780a8998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5405ff7d-8f36-4a31-9bd2-32df1e0af81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c17b0246-6547-45da-a7c7-a0173aa2167b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07927ba1-e589-43cc-8646-ea767d5dca90",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683af265-5634-4521-b517-77f5d1613696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada9ea9e-b7fa-4bc8-90bf-cc4c0d2bb206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc46535a-e948-4262-9b27-d7ed9191d48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db360e87-0db2-4652-b088-d5410aaab751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b24940-bb15-43a3-965d-16b11d7c3956",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540eb154-1174-4c4f-a400-5be02b2bf293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32731c89-17dd-4191-b608-af9c45cc4af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b277d9e7-02b3-4b00-93f3-cbfc8136eb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf61dac5-cfc0-452e-adf4-e433b1f19c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc03885-fb42-488f-8b00-038cbc596191",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453ec459-6e0c-4d88-a641-9fb3dbca13ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8d105b-f7e6-439e-9a20-60d7feb3c39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09448fb0-377f-4efb-85e5-4ff2594cde30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1f8cdd-1900-444f-997d-2b5cd372e880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbdfd3f-b36b-40ce-85ba-f6f0ff973d5d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38710bb8-f6b6-48c5-8348-582c61f4f1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4481cceb-5975-4b53-809b-60aa3ae0adcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9c9813-986d-4a52-a2ad-e15dc25bb2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c82b0b40-8fc3-4aa8-94ef-3bf32806e7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f736edb-d4f1-4b8f-9ef7-3e739723474c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28f69d7-a820-4ffa-8c19-bd2aa1807c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9d8830-b002-44f4-b8ed-9d38882b1700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edc65f5-684f-4b44-9287-e9de9fce3dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c93084-5a27-47b2-8bae-64a9d2db48f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368df791-2866-4aaa-a7fa-fe1f6afed7da",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4db695e-e0e9-4b48-b81b-2d12fc25de16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c75dd64-1770-4971-b5bd-68979b985a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3decef36-511c-45aa-ad08-4a0f21a99c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd3ca58-47cf-4e79-841d-d40b3c7415a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5dc362-5bbb-4144-8e28-35d7f7e37901",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a64947b-b69a-4a0d-8c14-32ff84611289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ccf1d4f-3de8-46b7-aad8-77a23bf62f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496ffe08-b1cc-41d6-8f2c-3e55cdb768fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "baedd12c-d137-45f0-8aa3-62e250defc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8653c70-2a82-4243-8b5b-8bc1358b8b54",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9bdcda-b3db-4fea-a4dd-8a8d60fca0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10d4723-a344-4e35-a297-296bf19d59f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263040fd-ce5a-4acd-8e61-988a8d2e1da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "513b6169-752c-4b34-9d0d-214d44f0a5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1958a859-1b86-4492-a3d6-f9e057df9428",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12b4acb-50f0-4189-9727-e685c7275004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ee2d67-eab3-4b50-b6c0-cb5ba542ec86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e975df99-5a69-4ed6-b98c-6967d7674860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "838c375b-491b-4e7a-b323-3c4655617a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a2673c-ab7e-417f-b964-54076803fec6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba6d788-aaa1-49b3-8521-582eee1aae3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d143da9-1bd6-4276-b58e-9a9ae9e61efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d820791-320d-4d97-b393-ad30f6ae7f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8a2032-2f92-4531-9d0a-2bf5802df4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46b0029-73fb-47ec-9eae-7281d44f31b7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08132d4c-5f69-4e06-8c58-0a6b5894850e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2c70f4-06a3-4645-8c6f-a0ad1eb2a411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a230a8-07d2-49d9-aab9-95baec34c40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8fe3ae-0c2f-4988-87ae-02fcb6211f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db66a25-2988-4b9d-849f-e086b01fdc1d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33f3cfd-4388-42d7-8e36-a48b2df06c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677fa980-f0fc-46e5-8171-726556ffe8b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca74c17-8fbd-49f7-87b7-c108e4e3a8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd1fe9e-2b16-47fa-8901-de39fae39d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c74e56-4ce6-4ea6-97e6-6b35379aee5c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6927b614-a7dc-49a6-b1b2-b8351027e507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9eafdc8-b715-4bd9-97f1-59ee9211844d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99ac451-152a-489b-a0a7-4af0dae77e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ace79c9-298e-4bf8-a908-345230bea909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd89d6e-8ae1-4642-894b-4142cebc3fb8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acd99a0-41d9-4ab6-9b5b-4bf8849c4754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11853bd8-1365-44c6-9d56-96db03a7be3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f18cdc9-39c7-4f08-9f8d-facd93b04cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40179733-c6f2-44dd-8661-77a873a90805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e839fe-142d-4399-b501-121998f7f0ef",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66aad2b4-3c34-4b79-958e-39a90bc63df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a78276-20e5-4503-83fa-655c714fa46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f899f088-0f1e-4e68-9aa4-ecaca5f4f540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59d87a4a-7bcf-4f6d-8338-0b49a9e91eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f95f6b-2dde-471c-bbb7-55c1e0cc302f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e0072a-bc9c-4a87-8836-9d6f2a74788a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6883fb5e-e1cd-4a51-a4d9-fb567f66d04b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7545c89c-9383-4bcc-ad08-505ca523d255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95e35cef-6e07-4c9b-abd8-71cbe20a0f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33625d5-1bb9-40b7-aac3-5fae69b9b63e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95dc6c1-ebf1-400b-be2c-78ba001a9616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f53226-3c56-4120-a532-ba1cb461d9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ca37a4-57b6-446e-ace2-2fac5cfffc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b34db3e-b683-4190-be80-c96dcafb140c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09882b24-5447-4e4d-8140-12e439c9dbff",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a0f8bd-1c50-4ec3-a4e0-11c14324dca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7b8379-a161-4bf2-93a8-cd5d9d325752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d71edd8-6123-445c-8619-0d7ab0fd6a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb5b94d-0ad7-464d-94bc-24b5484cff54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd57f384-4968-43f8-b6aa-b805ece4a84f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a526b7-9aab-40e8-98bd-0334a89196d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0cc33f1-f72d-450e-b8ab-327dd5553280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283c25a5-6586-41ec-9bf0-3a30423472e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "093e67a0-e8a4-4575-bc42-1f0721afcad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bb295b-b1bf-4514-9df2-f0576d063ac0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc13729a-7c5f-4777-ab5c-0f4164baf281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975b2b83-aeeb-4c7a-8c20-bf99ac22914b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d65bc4e-577d-4f74-a19e-3fe8b2518b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca8dd22d-ac02-46a6-b11f-83d6f5054f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdb8ec1-98de-4ea3-9c64-92385efd2bd7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709227bf-57f1-4ae4-a993-4fc59760321f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f147516-cf59-4e82-8dfb-d0fd3deb77d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6c473a-7d8b-4b91-a395-50cc2fff3fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5692758b-0d05-4f68-bc2f-0834603c9158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5af06a2-953c-42de-aacf-fdf3c0150781",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b45186-cb78-4cc9-98fa-dd5c3609c867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a5ff0e-7ae8-4325-80ff-2fa0324e8db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b89f9b-e56e-4c44-ad59-8da741d1526e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "332425ab-2162-4f1c-ac27-7d35b3fcdb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6492f1bd-923d-4b7f-b768-75170fe49512",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dee6c68-f78c-4e84-92c0-008833bc6d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9423c7-6283-446d-a66b-78fe2cc83691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0605e107-1117-4da6-8b86-02e0e355f271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "35a32c9a-d367-445d-a977-3325b00df789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e8fb44-2f55-4996-adb2-713951f8c8fd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d35f7f-55c5-47f7-86a3-a1e5b375aa9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8fdabf35-09ad-40ac-8624-958420a1a345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301b572d-09a9-443d-b975-9dff264f184a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "31a428b1-4952-4759-a2b4-89a9c2eaca74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "393e9421-078b-4e18-a8d9-ed17a442329c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f86b4a5a-43ec-43f5-87a8-8172525694e9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65496ab5-7375-408a-a9aa-05003726fedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1b73c95-3fa7-456a-8a6d-491c7547700b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d5b704-2870-4a05-a1e5-97ec3a860145",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f48b95e-4843-451c-9d04-df1a00e20987"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ceb74fc-6fd1-4f7f-9433-c925f591fecc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "890b3f64-a809-438a-98d1-683cbf4ee889"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b24aefac-36db-4095-bf6e-bf1588621eae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5e718b2-22ab-45f2-a977-0cf43b488ae5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc74e29e-cb31-4495-8cd0-6416430f8cec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62c2c47d-9025-48cd-807c-f8822b3fbe9b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ba20ed8a-231b-4818-b10a-60e14c37c8c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68ff4ab8-dcc6-4911-9e00-6206fd0177ba"
                }
              }
            ]
          },
          {
            "id": "7925db93-3f3b-4468-bab1-865bf8a93326",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b6bb3e42-b798-4d8c-950e-7c3115e7bddf",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a2d39bc-5d90-453c-9553-1fc92b1ff0ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "43ac1b9e-5712-4eaf-b474-8f829800631c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce444395-2d00-4ef5-a509-d4817632b9ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "efc05354-dfca-4a89-9bae-585bdefa17c4"
                    }
                  }
                ]
              },
              {
                "id": "5a866111-8e4b-41dc-a343-e83b60b02fb4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc7a8be4-b4d8-401a-bb98-c66b207f19b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de84df1f-08a7-43f0-81a9-3d9418050eb1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cddf3c7f-c7df-45a2-ba57-3595100643da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2e0ff8ac-fa72-4fd3-9d07-45f1ce324d13"
                    }
                  }
                ]
              },
              {
                "id": "9cb9cc0b-7631-4565-914e-056ba0e19e3f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5db22810-2435-4ec3-9e68-a25fa5c48ba8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "003e40fe-57f5-4c7f-8a1e-32975236d18d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b4ff1b3-d763-4298-9f5e-6b43f1b8eeba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cbb18ef8-fe26-45aa-819d-afe8336826ba"
                    }
                  }
                ]
              },
              {
                "id": "490407a8-f0f3-4740-8117-3836bbfdaed1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16db4dd1-4a14-432d-8197-bae53281056d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef6f4605-8287-494e-ac33-9867d7ceb550"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4dbf4e39-08d5-4c36-ba3a-caa2def65792",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a76ede0c-a33a-4388-a6c9-499522c28c59"
                    }
                  }
                ]
              },
              {
                "id": "652cdec6-129c-43c0-9312-b2367499906a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d44df271-edb5-47c3-8f2a-d90f45f01fbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "344748f4-9aa1-4334-a902-8d8e12eaa864"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "018a3dfa-2727-402a-aa61-ad8489dfd956",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3cdfec8a-7b61-4412-b516-1d78883fe58f"
                    }
                  }
                ]
              },
              {
                "id": "d2932705-0af9-4a3a-8ac7-1f1eec719194",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bbf9b62-bb8b-4680-bdf5-34cc835f6b8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce3863d7-6589-4ac1-9650-450a82acb085"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03011299-b23f-402b-a1f5-50580cdf0a4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3ce38a9a-70e5-43bc-b4cd-572ee413623d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f9cc97b9-945c-425e-94f9-faf94c96de55",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad4d1cc6-0fdb-4189-8852-dbbbb221123a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d1cd6ace-33cf-4a69-8c1d-45aa2c5c439c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0aab3dc-1d67-4549-9734-6cb2ad2eea92"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "888443c1-e0f0-42b0-b0a7-da8a380c84c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1d6462e3-7195-4eaa-a686-1cfcbc6fb16a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7857a65d-bb3c-4826-a85d-dda9e4210c94",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c62adaf9-65da-4808-8077-78467591d879"
            }
          }
        ]
      },
      {
        "id": "bf6f5d99-2405-4225-80f4-07175e75d13e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "64ae5e82-cfd5-4060-a0fa-04235d8e37ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "574e6e26-8f92-4f98-9c0e-431492f3bcee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d2e7403a-f7b2-4d3e-bc0a-8a2c54a587f0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ef71c4-893c-4946-b093-29171038e81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9cb4ad-a2d0-4e86-ad11-3aadb6c69fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4027e4a5-c60b-4095-bd2a-7a012ad479ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "537a2b67-89f9-47d2-8a03-dfe258074c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b19c8b-2da9-435c-a664-9a7d6ab916a8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47724ab2-8294-4ea5-904c-b58c75ac63a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a1b7c2-54d1-440c-914e-4b1420732725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc75cb7e-098e-4dbd-af3a-0d53ffca480b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df0e3920-ae87-4402-b12b-3366df54e3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6464b96-3097-4ef9-b10a-8b276c358f59",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de197245-3e40-4387-95ee-31a60a218255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cce1e03-561f-4f24-afe0-473d39fd835b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d08057d-a5f8-48f9-a823-c242759cdef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae22b006-e9af-4074-9b8b-829bbb954aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e1be7d-0162-4d27-8036-3f8a399428f6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3df3f17-48b2-4bf3-9a19-d08981921bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bbead01-74ae-490d-83a0-4454c8d4c778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf84c567-5b18-4521-97b2-65e26b7bc48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "055f8388-9205-4881-9715-017cca8dc87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7e0163-02fb-4295-b0e5-35873b20c9ff",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52adac4-5a50-492e-8e36-52ece196b63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8074b8-1853-4e17-bf36-0cd40238b78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6510f3-c7f8-4e46-a2e2-4749223e9803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5d579e-2a78-46ec-86ed-1d1f3aeee7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a0aff6-a15c-44e5-bbbd-5274a30a3f31",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76785dd-4b2a-47fe-ae51-968b5cce947d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858ef386-84f2-45f0-89fa-cbe6435b8c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd721ea-86a2-4b7c-ba36-eb1af0bf49d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89d12df1-c620-4aef-becd-08d5a40e5409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce76c0c2-db6f-4167-956e-bf7fe6f594b9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a763d63-73f2-4ece-b326-3b9146c23bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d90050-9a64-42ca-92e2-005d995640dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab1ac6f-5248-492d-bded-f3b46f98538c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e01957a-fe15-4349-b14d-7a16a40a25db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc547a76-68e4-48f7-96ae-f8f13792b3f9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28278da-bd1a-4bd1-b5ed-49acfe251037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6e11c9-ae94-4292-b20c-bed21f83f404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb21a4c7-4426-4952-94fa-7e5ad9555844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7234d540-8491-4335-8cd8-0394d4bd12fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558b8879-5007-459e-ad15-3254a1e491a7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0823a81-65f7-4758-8d45-076c35566c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5d3545-c856-43ce-89da-75b4d4be4be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9c9ba0-a4b7-4f02-8bae-9a610c0070ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57c35aa6-2f57-4433-a3a4-332d78c226f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9900c8b-9baa-4d9b-a701-7b3fe7a964d2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6535ac27-dac5-489e-9240-6b97e2651a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c70329b-34c1-4b52-bd1f-2e8995906fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd72d7bc-1c3d-41b8-9036-40417cdeb4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b208cb3a-e28b-40ce-b0c1-885f742ff531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a70b7a2-6ff6-45a2-8527-4d37b5bc25dc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccf975a-edcc-4549-bdec-9e4fc17f7cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6009996-035a-46e2-aefc-ebee6da90ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4855ab85-b3f6-4acd-905c-aecb6265e210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6b10e9-20d7-4f3f-b604-f3115be54265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5652794c-2988-499d-89a6-697448d01fb1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d4fef6-4b70-4caa-870a-bf589d8cfbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d0cf9c-e25f-45ec-9bc7-8965ac8adb04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37b7845-8dd8-46e2-ac7e-6ef16ac3f69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db187d96-4119-4fc2-a25c-f754eb1d9f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ca5bbf-5765-4f3a-8b55-1cd2fd5e0c29",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0e9bf0-6908-4c4f-b990-4a05e9319c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b96501a-a6b3-4940-8001-b45bd9762711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcecca3-d6ad-4b66-836a-0ac759213a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e039f6a-ee3a-46ba-88dd-1be7171acd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a315183c-5007-4992-83d9-cbf13d051015",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644fe42c-7220-4e32-ad16-16607f149a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b223f7f-94dc-4af0-ba61-46625cb9678c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8207f7b0-d998-40d7-b46f-ca1ae3b925c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc67ed60-52b6-4d69-b359-79224deecc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edeeead-b543-4226-a5ed-de4691903dd3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb605ce-66ba-428c-8c22-3b7ec61456cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5f6499-f216-4857-be3c-3f0ce77c45e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff6ac29-7252-414b-a7d4-bd44320daa63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "81813eba-85d6-4b55-878e-d6ec5244e70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa49cc4-e7a4-439c-95fb-5c2306fcfd6b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadc2961-61c5-4606-a35b-7539eba55843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6036b10-ba04-4f65-bcb6-be501a891d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3d7e07-905f-4309-bbec-3a7f979b1b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7cbc008-6492-4d60-8462-a0bb1d7cd0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12040173-79ce-4cd3-8d19-d2fa4f4c7a47",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02e0b11-2333-4e60-b263-c94544f9fd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1afbbbf1-969c-4b82-ae86-4ebecb27be95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f6d649-244b-4721-b2e6-7f1af8b34e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1924fb5-123a-4103-bd90-11b17f88f45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bf209a-6096-44ce-87f3-06d1786bae87",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce8bf97-0fd8-4885-9463-00f0bd5f2b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f275bb0-9337-4473-8eb9-0ed5ce05712d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6659f6f8-1118-483f-9d86-861010b1ea9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5689fd-f23b-44d3-87cd-99bc5da89433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c2aa4f-9c00-4c88-8305-65ffc2d28b09",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f771fcec-b242-4845-94d6-a497d1113938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a96653-5ac0-45cc-9a7b-a1bba20e63d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76ee754-c765-4a72-aa8c-dc086fba4742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5733e56-ecf5-4a78-9cdf-7cdf5d517f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b683f390-d8ac-4008-9879-4209fe4751cd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9044795-cf46-4587-bbe3-bc390e24fd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5152a696-d868-4cac-85a8-b0285505b248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde906b0-c8a6-4f7b-94a2-94f137b5a975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57980cda-0a55-4d7e-bb45-e29c789dbef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edb5735-e762-4757-a543-d05efe1a9512",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17541e67-b2ea-4fec-9c89-b5f536573853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c10628-d907-4352-9391-6b150976d43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e63ac80-b400-4b88-8bd5-29c05ca18119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c10c5b-e0ab-4e16-865a-cb942230be15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072a4055-a5ae-43f3-b3cf-ffe20d0cd9d2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9168b194-1882-4967-8a52-c0c1d4d49ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07704eb7-cfd2-4382-b518-eaeae4c5684e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5f2d48-d412-4115-9eb1-2d149f85d281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cebb128-b0bc-4e6b-82cb-1571d8ed9f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959e1670-db3a-4da5-b94c-6b14b9d4dcda",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67d7bc5-7b54-41e5-baab-e5f8740cb9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d48012-051b-4128-9965-ec6038f4d79a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e21a034-ef57-4c99-80bb-deeba548db4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4aca8a6-cde2-4b79-95b4-6b1f3177b3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f56cb23-3836-4c07-ab1f-a5593431cda3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a6968f-8cb0-43a6-9f56-dda6ba1d1d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf1dbd3-a382-441c-9be6-c74e23c7325b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23a9e93-01ae-4609-9d5e-f2585097d027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1db64cb-9fca-4173-97b3-546984d136fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efacb31-a258-4990-9428-07d72a125b49",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6af743-a354-4913-bd97-66bfa888e06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360c32a2-a354-451b-9270-a808333f3cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377a08e1-881f-46c8-a437-2577ee4af25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9e5b8f-aa65-45e7-bdb3-35d7c4ca5876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de141cb1-4c91-4a94-8271-62cd59613756",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e15f12-debd-4e96-9849-25c68b4b66ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb2165a-41b9-4df5-ad5b-4fc59e370d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce6ecfe-577e-4a44-91fd-8e1561ff8e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b7990a6-1204-4bbb-9dca-dc368968adfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5727c889-6c85-44c7-a95e-ad383c56e87e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4045c700-fd41-4b6a-8ecb-3491283c65ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c026ab1f-1b0e-49e1-9819-154fb55c5ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8371dfaa-9a1a-417b-b95a-85329ec50926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c95439a-b7fc-46c3-9374-fa93e602043d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fca579-b4e2-424d-a39b-500906b4c6cd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b08d43-d77f-4f04-8596-959f25053327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9cd213-668d-42b4-8a75-46144a6adcbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4d7b4a-108a-4d05-bfc9-e8d4d8980897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b015fb-7c1d-4d97-bc3f-62eee8889c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135da0b5-a2ac-479c-81ef-15a8540f2d51",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d324c492-b47c-461b-a755-30bc0fade05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df41ea5e-8174-45c9-92ba-4dde8c94e3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4b90c7-7460-49c3-9f4b-ceef6399bb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2fa5f74-ccd8-4818-b4ee-2a07f0941efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19c8a48-425d-4b84-bcfa-e4ddc37e3488",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef652ee-978b-4514-a34e-2eef4722914a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca06804-1170-4e4f-91b8-94a96ebdb1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4272a05d-00bf-460c-bd1c-752e5a2765d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "619cb1df-0b23-41f3-9e5f-45cd33a1efb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3d5ef5-e07b-41ea-a372-05545ea6aa61",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e391240a-7e41-4d3b-9cef-21560fe6b7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a47fce-4ab6-4fab-ae18-0251f0991eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edbf09a-c06f-4a2b-9c48-972cb4877c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06b48191-fca2-4deb-b80c-0108f6ed23aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdb85e0-2d01-4cbc-99e2-3408e6196350",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d10f16f-671a-4c88-a2f3-7cf45482966b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "927fba61-e7c2-439a-85d2-f3f26b4c9bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e23a27b-444c-4b45-ad15-4803b81dfb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00c1aeba-b9b2-4da0-bb72-0d2260c34de1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1f9d5c4c-0a1d-4894-9c69-2d8e25179187",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b604f12f-34ad-451f-a0ef-4487287af49a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89c49c3-dacb-4704-ab72-91e3992974c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9e555c27-997c-4423-93bb-ffc2b765e498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41070c20-261b-4e86-80ca-3015fa0bdbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9316233-c0a7-420a-816c-4d8aeb55b378"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5482c0a4-a3b7-4f02-a1bc-563e675e6434",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0c19420-bc25-474a-958f-19643c90a1bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "601e5cce-6c18-42cd-9eb8-703813d884ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46387578-33f9-4ece-be36-19176e65fcae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "980d959f-781c-41fe-a95b-bb13b251f31b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7c406590-6fc2-44cc-9222-37ccdf11c68d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69888bb1-23fd-42f8-9a88-e4ea4401bb19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15bb0a24-c1bc-44b1-a607-75635ad91e16"
            }
          }
        ]
      },
      {
        "id": "8d1f7942-553b-4d01-84a6-be392f3acd67",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3cf6d101-28ed-4363-98ff-d0d9a458b37a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e74afb3c-9239-4b44-906e-6baf554e41fd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "60558acd-281c-45c1-b080-87591ba88285",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a775ce-2536-4992-8eea-0da0d6d48246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b550da1e-22c5-4f35-a716-b2c03002528c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5521ba-de3d-4c10-a901-686e3405e582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "048e8c20-6591-4530-a262-591aefb564b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46ca3ed-bbb8-4a55-856f-da4dc22d01f1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f22c911-9a56-4c2e-a440-e3013b1ca9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a9f42c-fa3f-4194-85bb-a32c13f1cb40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48d8e02-fa2d-4a6a-85eb-0c0a9f75aed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "00b46617-20c2-4beb-b181-b3b784c7f41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64318eb-8893-45e1-a7d4-60b34d7681f2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea89f31-7aea-4193-9eee-d8018dd088b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778144a5-223a-451f-bd93-633da4a67df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd718e4-5298-481c-bed1-ef6545630a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72ee3eb2-af5a-47cc-90ea-ec736f0b0a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79c422a-37fc-4808-9302-3e272226a19c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1007f5fc-2a87-48e7-96cd-f84f40eb2d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86566d9e-a8ba-48a8-84cd-6407b5c788ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9d20c9-4ad7-456e-9356-b76e15a9a5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "470bafde-3430-45c1-9e32-67db698ea1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b97c92-9099-4df3-a1c7-32a71e2f5a92",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43684dfc-5f29-462a-8e1f-670608fa3435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450c92a9-70bc-4e21-96a7-e45b9bb5d79e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30024b85-2aa3-4866-bef5-11e0278032d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5b43e2-7733-41fa-b897-c6f7bd43e4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53cd2a9-9ce0-41bf-900c-b1d243be1aae",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068ae20f-438b-41b4-b6ca-776598bb00fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a7a905-f81a-4e2b-83f0-70e748fd8fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff2101d-7719-42e9-9d10-284233f46e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab91d1db-5a10-40ee-8a7d-e8eae25bcd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c28b985-c1c1-4752-981b-346ec4673928",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0309c007-fe2c-4a62-be8d-5bbacacfba81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ce1913-b6a3-4ca8-9526-88e427d3f8bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df44014b-6549-4678-af0b-6b11aeafa462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d85c5a2-be6a-4a60-957c-56ebbd8dc8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a45243-a994-4e02-96c0-a92ad13b4058",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc55d84f-6ff9-4b8c-92b5-b53f8177b6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3d8670-df42-4510-af72-64b65497eb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c88d877-7144-4fd2-8af1-408b3f23755e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "edd42400-4d18-44f2-a323-15e4adf7b0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782f0434-c9b4-46e9-8624-3632ea5fa19d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a4f077-3a9b-42ff-9e40-8ac5a073bba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4b0ba6-451e-48c0-adb8-7b7f81158ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9576b4dc-959c-4147-b5fa-1e6dcc4968a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2514160-792d-4f0f-a889-ca83802d9791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b6e14a-a7a7-4367-938f-f128827af52c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b11c55-5d9a-4f20-af78-5e3bd34806a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9736199e-2726-4586-bb76-ddc2c94e7492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6a68e8-a566-4c9f-947a-c0619a46741d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76bb9438-6fc5-49e2-a3dc-e41447b9c690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4347d0-f53d-454d-9513-a61384a2ff55",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2885a02-3b9c-428d-b0a1-e3025e4737d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "141f7162-685e-48b0-b5a5-ffcca146b729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ff5fcb-e4f9-4200-a79c-3ce12ca1b533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ce03ca-5516-412b-b9f3-4dfe286bc51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3709d39-ff1a-4060-b0f9-0c717e040985",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17515f64-163a-4cf2-a878-2299e5606c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb6bd04-9da8-4d0b-b2d9-293786a6a892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3caa7fe-cd77-4b53-bf5b-679508dcc9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "988d24ef-6f29-4d59-bbd8-df6da7f1fb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a552ee-0efe-4a7d-a91c-242165f6dc31",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d5f614-f983-4e41-ae52-6e5b0c7cbe46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb14abe-3c5e-409d-bb82-73ffa7a46176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff696b5c-13de-4b82-8250-757278e78f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13be6509-5aa7-4614-a45e-a5090f73feea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7dc3d62-49a5-423a-b36d-ed2bdd894592",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3aacd97-2cae-461a-aa55-e3222b6b03b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e025980-a3f5-4845-b8c8-35e4ad8be4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4b119b-b986-4630-a879-66c88c23ac22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "07a8fa1d-a79f-4a5d-bbfe-7b08554be390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ab0013-cfff-4601-9416-b5737eb76392",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc6ba48-7f77-441d-99ae-f278d9f8ff05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2941b203-1c34-4681-8531-19412b7c7ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd40d11-196b-4573-babe-c8376408e544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8863b21-490b-4a15-8723-66120bf5d61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2adb04-644c-4fb5-9be3-45bc499e3f95",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc071df-ff7b-47a8-a038-459e483757fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eba6ea5-c292-4ebf-af15-bfe5efcbb24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c082bf-b03d-44c1-b339-6f195fd16ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "471d3d9f-a0b4-4fbb-bf3a-a5660267972c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242d2dc7-b67e-428b-b312-5334b1a5a022",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b32ee1e-37bf-4bd5-b2a9-e413b4c55703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545577b2-5d19-461e-ae16-17aff1f69179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2f2b92-2362-4d2b-97c6-f8bddd05ccf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "90abf4dd-8504-4844-9287-0f48afe7ef9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b809eb08-d75c-40d6-9514-94a18691d30d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68cc639-b024-4225-a27a-8c1690cba51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fe20de-a222-4a11-b8bb-a1ee1ab6c1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfb6d6e-8236-48f9-ae44-187dc306f77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "970e5e0f-ec7a-43a1-9042-666ba854abfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10f7d98-5ef0-4f71-bffc-d7854095b770",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f69ed9e-2756-4d1d-8f8f-d67531848eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e728861-1e69-46f5-a3fa-e76c3f03a539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fef9173-3eeb-4bdd-865f-e533922a4fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19aac023-15d6-453e-ac56-bbdce1701bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec59316-ed68-453d-b54c-77030c5ac1eb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248779a1-488b-4643-b740-2089ad18b032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca09f4e-02de-4ebf-babb-a25430d036ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cd50a8-4d4f-406b-a675-4892c2fe5a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b37a09dc-1c08-4185-9dd6-46d00c4387f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc747463-0c2d-4362-be33-1b2f16af1af7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3659de-ed3b-4a29-8937-cd02762fde38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8d86c2-419b-4d9d-bddc-5697e7fc5d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d52286-65bd-4fa9-b52d-4462b361ecf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9784cd8-e5b7-4f74-bbc6-cc138ddcad39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8abd8e4-1461-4a1a-a9d5-663f85138a9c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd886a34-3c84-4730-ac3c-e29fc06a778c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9427848-9734-497a-b5a6-cee90a5fcdda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32d3cd7-0453-401f-84eb-a63fbbffe37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5746fc-aa83-459b-8a41-09c61f0d5ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a25d28-00e4-4f4d-8285-8f0fc24b03a0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d6712e-0365-4493-9570-b18fee4dbb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548e2223-4111-40a9-84b6-04bea5d8f644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a0bd66-3871-47ae-8af5-076caf28436d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "412300bb-1577-4455-84e3-275d102c8f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c92508a-15d3-4f82-b4ce-353654effe27",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b309e603-aec0-42dc-84c5-a55f9ba575eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a153cc-24af-4bd2-847b-c99580cfa12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc5a539-8b08-4b97-b459-16f844b10aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdbf29b-5d0f-4836-a17a-cd04f8c25892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55264e2-77dc-4f0d-a836-cd3722420ec9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa52b89-503f-4fa3-83ab-8517195f24fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f65b3cfd-5b22-44e8-a8ab-72d4d08b1224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb6b7ef-d553-4b21-9954-2a0b08ffac3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97083064-93ea-4fdc-ad31-7a2a8efd5db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6187340-54be-4e86-8f47-d1ca23419dc6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164a02e0-38fc-4be1-bb32-e71a0488fedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20003b0-a63d-43e0-9108-2d940c5f3d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c002ddb-eadf-4b51-940f-b7bef6e3c88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b476b621-c023-4ed8-b789-a91b1cea6b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ed0483-e79a-4ea7-8127-b2faf657abed",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39dc282-5051-421f-89a0-27a1224fd6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "672ef355-37fd-4f6a-8cfc-2a18fbd7e436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6fbcda-d943-48ef-8f2c-19cef3421a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1650ee-a41c-439d-a020-c4215b2d866c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76aa31a7-eef8-47f2-b4b1-521b7c0dcc3f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd2467e-b0a3-4772-8fc7-3ba50fb1d718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c59aff-1cc6-4118-b463-67e474bfab5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f03836-4403-4ed6-9cbf-0f6265bb238b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1cdf86-30e0-4cca-aaf9-916bc45c7482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0200d235-b8d3-48b4-acb0-a2b0f9a3345d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2760d2-93c5-4adc-ab46-ca16087ca949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025adef5-e3a4-4c13-8b0b-46063c59e341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9868aff8-8555-4725-b23c-68e8bf121118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81f0e7cc-226d-4e9a-8851-aa133d604124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67b8b3c-d90b-4335-bcb5-d62f058cff50",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4057a845-37eb-43b8-89ee-fcdf974941bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ca01c8-4cd9-4eef-bb5f-9f80dfd62296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d5d20a-b90f-4e81-8605-ad0a9372eaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5797c6ee-67ba-4d23-ba16-d3ae521145cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61663971-f56d-46b1-9d6f-4e42bf6dceab",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4587297f-e9c7-4177-8621-f0dfe4610079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49f0d37b-d473-4a54-b2b7-795fb3afcf15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b11101-3717-4608-a7d3-257f5e0ea1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b39e2f69-94d4-465b-986f-2de8c5297311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c48f358-bc4e-45b2-8b24-0ddf4e97b0aa",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00806a96-61cd-4f4e-b586-cf7f8736c19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd30fe0-da7b-4553-9b82-ae4c83a3abc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c9c9a8-dce2-4e95-852b-80eb9c1bdb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb71623-5cec-4484-9ea8-9976bc910fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e63a560-fe76-46b6-a5d6-24e39420a723",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36402cc-f8df-45bf-b49f-21fb30e84919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d62e364-7121-46d5-94b5-c928cb6c9459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befceff6-4107-4950-897f-dacf1703dd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "412442b5-3819-48d6-aefd-a3b661628479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239c5463-8bb6-484f-82da-5a689650471b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5f61b2-c894-4774-8419-9ec6e2621ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb60106e-a28a-48fb-8569-79b7325a1e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4897633b-795d-48c8-b042-68a50622bfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b80eca62-d39b-4b89-a96c-283a96589524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a357d2be-2e67-4ec5-80fc-18df33b05c39",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcc3ec3-809a-40b8-9957-ec4e92b55b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b573509-f070-43fd-8619-b6cb66743a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142100f3-0995-400a-be87-25b64dcc4d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7124aa5-2b59-4544-86fb-529e24e4426d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec71a58-454f-4046-81b3-96ee94c015d6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbb3c15-4a2f-4dc7-80b9-fd430b31317a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95839fa7-f68e-418e-ad2c-5f6c91fd4978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa17c4d-b292-45b6-b317-68ad42c35e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d585dc4-a40a-46a8-858a-e6d5cf4b536a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac90b67-74f2-43c2-9467-84da7b9f6fc7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e984e912-795e-4b5e-b054-f2cae03ab3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0625662-b784-4831-b165-954dc4b1fbc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3d5654-6de2-45a2-a241-fa8553399535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b046e43c-05aa-46fe-9a05-44f1de37216c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "37daff95-2d41-46f9-bd03-4da642eaf7c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e383c146-1c4e-4d17-8207-82f72e18def0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb5876f-e2e2-4347-80ac-342a4e039bc0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d05cb479-aca1-4680-ba45-8e2fd762c9fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f6374e-0498-451d-8d30-afaacaf3ccb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "472636d7-9516-409f-9abe-8538d097f965"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e35a491d-bfc2-49b4-82fe-3d59025323eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8489cfc-e3ab-4077-aabe-680ad8e1d253"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e569d147-b257-4dbc-afbd-bbdacfcc5d61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "059bab79-89d7-4a40-8f6b-0233bbc67465"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8ef21c1-cc7c-4055-8cef-f867583794b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "32fe4164-6df5-4192-b08d-4b48343e8db9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "672676c3-d701-49db-9320-912f0fdd7bbc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8a4033e-6181-443d-b024-f80c1c687677"
            }
          }
        ]
      },
      {
        "id": "1be47b94-b276-426b-a926-3e22824cbe8d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "57630170-40dd-45f1-83ad-0ad42edafed2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e82a116d-f815-4be8-89d0-facfa4a65965",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "007a8bf0-9d1b-4ba2-8adb-afd22a5ba40b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964bb82f-789c-4375-ac5f-1d8b24cf8645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845071ba-587f-491b-981e-30b0e9834142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baedc652-a954-4769-9cb2-a69928919526",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509943cb-38f3-4216-b064-9b9fcc403fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c66e704-b90c-4115-813a-763bc1264e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f999b1d0-096a-4c73-af6d-9a963853c5ea",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c832886-65a3-461d-bcfc-c630c325040e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf04665c-036d-4f7b-b62f-5c711131e277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a99367-2f8e-4abf-a55f-3f05d5420b49",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2e1074-0836-48b8-bef6-08c2b1156af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa86d7f-c8ec-4a8c-b6c4-934cd0ce05ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d205ad-9e3e-4923-a710-02e248d5cb20",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca83732-0ffb-4854-98cc-bf350694f9f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf1ece7-0c55-4e0e-b865-0c16f94cfdbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc7fcb7-b6ea-4446-b31a-3e477cfe386c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b33384e-49a8-4692-9f9d-38df3e65c214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec3c97d-8dc2-4689-8227-4661b058786a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7801d722-d839-436f-9f4c-ac59b06d1ad1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf87e2d-2af4-4645-a11c-8de905aa2f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a399fa-5bae-4d6a-9d18-e445760093cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98acf29-a63d-4b72-bf52-f685d4c1e106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2202e8-9f6c-4b2f-8707-56bf76d4557e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae86560c-0837-42bf-a8de-3715c0168a8a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b914315d-f5e8-454c-b87b-311a246f5eb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d12fd139-81e7-4238-bfe8-1601d2bf8157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "888f6997-6d07-47e0-9e1d-acd343e60825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c28818-f2c5-4302-b992-24254ba7d7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14aa589-d6f3-4158-877b-22ccce5e497d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a78bfab-1f9c-448b-9043-9853be819f96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a9eedc7-814b-491f-a963-0985fe44c2ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b676fb9-c157-4c32-94c3-3fcd7de0130e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53348975-3bf2-4352-89f9-55335b067853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff55a110-e4e7-4370-879a-ad3edd1c329a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668f201c-5064-4fb6-bd40-b0962f2bb002",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f4ae9eb-a9cc-4ae6-96ef-6d7da7142c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf5b5b8-b0a2-4d6f-a569-48e8f4ce605a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b4e45d-7c65-49ed-95f2-859fd1b9574d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327d4c8a-030f-419e-bdc6-320fcec7f632",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d380d5a9-62c5-4a89-a438-59c369b26161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200c5a2c-375e-4cf0-a9db-5c0be919083e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5f414c-9d3c-42a1-b142-91e4d7f591a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb52e68b-2d06-457f-b63f-ee5f3b231e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fa0796-5df7-438d-906d-fc8d0b8816c7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679ad85b-5a90-4420-89b4-e39ffc575fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274a44ee-0ae5-4e87-a35d-903e34d1b88b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6bc9ac-167b-4b51-b8a3-589613934ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae0044ec-d664-4084-b7aa-5f12d01a03e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7244fad7-0758-483b-833f-54a73401b961",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c6d3e3-c171-44c3-811d-24d30d3e48cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fcc2370-ed4c-402f-8fdf-36bebbb60a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cb8985-768d-444b-8513-acabf5ae0835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc0a46d-67b8-45f9-b31a-ac6492c717aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f045da9-9040-44c1-b37e-b6f6b60f09eb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36be2d9-ac30-4358-812f-715b17a09847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dc78afb-9334-47ff-898a-c9e2fc6e3517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bae1c78-bd4c-48aa-b555-54019985295a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06440b17-0381-4bba-8461-aedf9600bee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb27bd01-9de6-4f0f-a3f7-a21d75217885",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d890909-a0d4-4623-be21-be57e9941d8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fbbd440-f4b8-4793-a4f0-d4e6c9933b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31964e08-1791-4116-9045-30cc7d826ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be38856-8c86-465d-a974-163b38f504c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfcb003-d5fa-4434-846d-08cdc5b8287f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fea0963-fc22-4d37-8949-233c2cab30ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e060bfa5-ce0c-4642-b6b3-ce1cf19fcde2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33155334-ce09-49a9-a34e-b5d39436673b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd23e42b-e142-4591-8c70-3687d4424dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb13056-99ea-486f-9240-d27d59afd24f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421ee00d-b784-4a64-9552-7ce5fe6e8bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec13041-7433-44d0-90d8-7073cecb6928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a525e0e2-091c-4740-ae09-805d82bc56e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5dce156-f120-48a0-ad5b-5ad9abef723a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16b82b7-77ed-427e-817d-85512d40b478",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94b9512-1b48-402a-b1da-b9d13cb0536f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb01d54-2ab2-4ca6-998d-dd75e8e4c9ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a974f33-524f-44c5-9594-2439f47ba250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f31f51-ec3e-49f9-9ebb-4ace53123bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8772f42f-0762-468f-bc22-0c79cb389859",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17dd00fd-9f31-45c4-b563-ffe6cc039597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cec6f0e-d3a1-40e1-b488-ad35810e8385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db220694-0d5d-452f-a5c0-9c074c1284b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a6abca-39e9-41de-9614-0ed72c8b8308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b41782-3346-43a9-ab1e-3abbb083f12d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cbd654-186e-4b2d-a0c1-71d85ee8cfe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8272a6-9e97-406c-8b57-37b1b7750138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce0cb9d-ab31-4a17-857c-2c2b56ac86a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a52075-21ea-4447-977f-c59ade2d5d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fe27de-0102-4291-8ebd-7bfec097f1a9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9073d5b-b49e-4586-8ae0-50c95124aa8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4b926e-0634-4b05-aeed-1f6d031f7964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb01855-375e-4f3a-a175-b7fc24a03d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5df1159-8fc4-44a3-b90c-c65f048a8010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dae4b5-b039-4854-8571-3c1543b35ca3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee35ff9e-e46d-4251-92fe-d07894b49f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c190af7-0e24-4784-a5d1-220e10727796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d651266-9be6-40d2-9a37-22c15f158158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28124d6c-a4ab-4ab9-99ee-27bd18a344b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152d0f65-41a6-4048-b4e6-67451321876e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77c6578-95e4-441a-863f-2a6e3429ba76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25902786-0a5d-4e38-b3a3-33a0f011e11c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef20f62-017c-40ab-9158-4a2df88c4030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3512c97b-11e0-4a1c-a81a-11b37c311440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167d3500-28c3-46e4-9e2c-058cd59f89e9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3229e99-8ad1-490d-9eb4-693a8ef30187",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ff22b4f-529f-4900-b14d-45f0afb21f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bfeffe-c4c8-4263-9519-7916a9250256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279ef47b-a021-4e17-97f4-9315bacb4df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4aadd9-a7a9-4ea8-8d10-9e8c068efc5e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0774c2-8247-4038-b304-acf70d41a981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c465944e-9094-46ac-a862-80afb1f3233b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846fdd55-8462-4624-bf70-b7628d4834b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634b6f57-969b-4cb0-9a94-5347a5575caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6208254b-bd30-4a09-b9ea-047bf7e00150",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d3a6eb-2d9f-4942-b7d0-fe5f4ad0a459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73647fb2-fcfe-4fb7-a1f8-e9cda2e9660b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe2e63d-c601-434b-9cee-e4e9413147e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8ae4dc-6700-47d8-95de-12a9ac0ecf3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622343e1-317b-43d5-9cdc-7ed5e718eee2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df98dff-9b33-4647-a43f-ecec672f8fc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a7c29a2-ca1b-41c3-8c3a-6f341aae4f6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62d794d-4dbd-47cf-a87b-810d8042d9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1803c46-99fb-4a7b-b7a7-5b6f83a45990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a50d555-cdf5-4370-8039-a1c4a8492ff9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15749d5f-81a0-421f-8e11-7d2d5704ffc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270c8c41-737b-41fd-95b6-056d9d429840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee19d3a-ce93-4a3a-a437-c2803cc30705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da965dc-bb4a-424a-abc8-0b1dec37e30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d907af6-652f-4ff9-9c8f-b813411f6a98",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749dd19b-14a8-4170-9b72-eeaeea6a4f5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f14a651-b480-4240-80a6-406acc5b64b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b90f2dc-5e5f-4e07-bbb0-585fd6d543af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27a8f63-d0fe-4f30-89a8-2d7de05ec47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e37c21-be5c-466c-a9d8-8ccc119e10cf",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b112cd-b2ba-4e13-8cfb-54d0e7a3d128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "559bdc89-7676-44d8-93e0-4325bce2d158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc48ea28-20aa-4ff9-90d9-1f4593cd83b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "facf3d8a-d41b-41b6-87d3-0a8ea5777254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d65c543-889a-48a3-9e7d-d6849673b7cb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f454eb4a-e2df-4e5e-93aa-32c12af7207d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb1ee2ab-0ed8-4e0c-9d0b-3699038df5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7483dded-4d6c-44e5-b74d-1c58d22bb32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a83f059-888a-4c1e-9353-c4c0ab3247d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf52e5ab-3938-4106-acd4-d14e371f0779",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cbec95-a462-4282-a59c-2751e951d55f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ce408fa-d207-4f07-acd2-fe96b56ec9c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bdfab8-561c-429b-81a6-e17142981779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1aad84-e0af-41a3-a9b6-718a32055080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148c3068-0c9d-49ce-b6b4-9b11b45f38bf",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8ca56f-ab0e-4957-bc2a-2d484fdb47b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a145c60-cab6-46e4-b070-91014bb455c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c55384d-7f1a-4b01-86fd-8974dc5571de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f325193-5d2e-4c79-8e97-360cca45decd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a100fa-b8b2-4e12-bd1e-9d6e236a681b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bb5c3c-4d62-4aff-ab89-cd60e7a373fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03c529a4-7de4-4ca0-b8e4-8b463951fb2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "040477df-d695-438d-a742-e617658db8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe668168-1dd5-4a84-8a31-cba4cc80a51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae11aa5-4efb-4a7b-9dd1-c823370b0d84",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42f6900-7429-45e7-9999-1a86efb06c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2078c04b-440e-445c-ba0a-865220b1f419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16cd009-d432-4973-af2a-a4dc420f35a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ced7dc-f884-4d9e-b216-0add1e02d347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe9a88e-3422-4f6e-ba9f-4376a1a01a6e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e4202e-c4b3-4d86-a368-68ac117cbb4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf39d39-9ff5-4c84-9960-7fd3300fd681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec371f57-3319-433d-937c-3c80cdbb90dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5477f448-082f-45fd-b689-155f6289303e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ca4a99-c886-443e-a794-98968c497f96",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f74b2b-aa4d-43f1-8c08-bc1eab59fe85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671dd7a3-85ad-47c7-b8e7-0f150f292e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be218c00-b77a-418e-b4dc-6abdf8c60bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65a299c-480c-4a3e-a1e0-a2f50d262b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3900cc-d97a-4dde-b217-69f8afd618f1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82902c4-638a-4641-9ef8-577785603654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b322a0b-901f-4afb-95da-a6edec023345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c4427a-2b49-4407-9bdc-6b6cc43f2645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb00b874-747e-426f-a6f9-833c02712a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f17e28e-7a45-4747-9b8c-67d241f3074a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c2b991-1fc7-49f1-aa91-4c8b214d4a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07423c6a-97e7-4c87-8a03-3d32c7c228b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1d090b-d7bc-4b18-8f82-5c86a198113b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d076ef-030b-4e21-a309-e265f3f472de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d78103a-c0a2-4514-aa5c-16f01ce1c888",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6028f31-6e10-4f52-98b0-7f48dc8d9b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "801cd1fb-d6fc-4ecf-a631-58572c4e388e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855930fc-a832-419e-ad0a-29d29355a438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "696e2ab0-beb5-4b9c-b4a8-8eeb724f33cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c64ce4-35a4-468c-8230-bd6f1124a6aa",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119f5a3d-b522-4976-819d-61a1767ba109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e9c211-ab60-422b-97cf-17cbee656431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50f9afb-a74c-4742-9423-3e5d87226ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f03085-9329-4ea3-ac83-0340814bd669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4478c381-c5c2-479e-820e-bc708c54e61e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65416a0-cb2f-463f-bfb5-8dc694414de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55cdb73a-e034-48d9-8429-d1b34d701f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a93aa3e-8520-49cf-ab37-18ca45432605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9dbca4a-9882-40a6-8a3a-86b585ccd80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6075e86a-0ec4-4c87-8f19-7c77a097202d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b7ef91-df2a-4691-8bf7-f47154dd1069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b597ca-7b01-4cdb-a350-934fd04622b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a519fe-35a0-4496-9f24-030018b15ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada570c0-14a8-4d2d-bc2b-672db616863c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bc2ad1-7a2a-4a4b-9866-760dcc47600c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b587df9-4a73-4cd5-bd89-5929a73cf3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b499cd-72af-4b9c-a718-00a3bf4ed749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90faef9-8e83-405d-92d1-572a0df99fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685288ce-85a6-4d98-b2f0-dc5974b36fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08997ce0-b1b0-4fa3-934b-df94160cdda3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d02afb-aef6-4267-9835-223347c9880b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23caeec6-47e7-45b3-b97e-217ed6c4ba3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b558071-62a4-43d0-8508-b095c61821cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77781aef-6b6d-490e-ba7c-ffd51f4c3df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cbbc83-5c3a-4aac-8237-aba7a1b5565b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf7abc8-b515-412d-b245-8e79b7d12e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6165544f-87e9-4b5e-ab6e-9dc9e44aedc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "619e9389-3657-460b-a7f0-664a49aac4a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1f021d-44c8-4c44-8e5c-0e1275913f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4760179-f778-49c4-84a0-cc54fb4be5c0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a910e69-e4dc-4cd6-a5de-30235e92bf18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de6880a-dd7f-411e-9af8-43501c9af32c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6c4dc9-d002-451e-abcd-eccb8fc56d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d993c609-922d-4e45-a3dd-00dd439e4938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60be372-4194-4951-b1c8-1fc056329ea6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb0471e-f60d-4e6a-bd57-14a5ebebfc7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1b95bf-76d4-44da-be69-74efe3de1802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab7f259-e8af-4f71-bb9e-b78c7a16dd06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f83035b-dae9-4a92-83a6-a27e6873f70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65aa19a-a6a7-46c1-ae09-4e280af75489",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e872a1-7966-4445-b4c8-08bcdc0b518c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "499536b8-603f-4cfd-92f6-3ba04ccb2b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d594dd1-dd75-4117-ad65-849c79884f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09682e2b-4232-49c3-80bc-c6ca1a1eec1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d520b44-b6f9-44a9-ad13-f9a89ada679a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfe0a04-e455-4804-a857-e42778b9859c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa12e458-66cd-4151-b45d-8bd0f9b95899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32ddada-46af-46f2-a7d4-12cbe80eabab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49cc203-a2e5-4c00-ac8d-bf20a52c5205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c583e4a-c531-4500-ab08-0aad3eab06e1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf9a652-c4d0-40f7-a8b2-fb20deb67f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b804ee7-32fc-46c1-b6e1-fc3dc6a69a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "956e107d-e60a-47e2-95a9-bc193da2ed80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee1aa6c-ac31-4825-8f46-df810e4b3b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbebffc-662f-4ed3-83ae-2fd69b007e65",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913dd10f-1e57-456e-bccd-d3b25e1c49c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21f93e5-e8df-47b1-9258-528780decef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e101e4-4001-4fb9-8b23-84130a89d3cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea2ff20-e827-41e1-aece-e5887e11ee0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9b45c3-de0d-4345-b68e-4456861fe8eb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba4b0dd-576e-4871-bf6a-afd439963c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8c0985-7e2e-4e34-8178-27663da5025f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d2a7bd-a90d-4d4e-978c-3882f985489f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9c5adc-273c-4ae3-ad75-85da50ccbf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f904a747-3b94-447c-9788-888769cab7af",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ab6785-1354-488e-b765-19238d2ea5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b40b9e-36bc-41f8-81ee-9f1594a00d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "942df163-fcc5-4936-932c-0b053ca29e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ad2987-55fc-4693-845f-6d23d45b24f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d93bde5-126e-4127-ba83-4536b8283354",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7093ea67-2610-4131-b65b-505f2e5d3f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dabb38a3-f0ed-43a3-bedc-4cbda7769ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e5f870-769e-458b-ab4c-a8e7c886daba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f19ca67a-8866-4e31-a1e9-2f622acdcc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c635d8-d086-4c9f-a70e-bb6d29cab23f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17a2db8-e8ae-45eb-b074-dc8528f2afa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fedded9f-afb1-4e19-afac-fbab62d3e230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c5cc74-4d54-40ac-a01d-87b1e2302781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87bd1e69-213f-490c-b45a-4ab1d6ca095a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a4e43d-15f9-4f3f-bf3c-ebd4f531bf34",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd85657-2e68-4bda-9d77-d62d89f7ff0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13cd97e-351e-483d-9bef-00ef5f90cc4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3eae7ed-e127-4556-8f64-5cc49d68db72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c861fb72-fd2d-43c6-b745-79daaa9ec0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f33352-b723-4bba-ae76-58bb6ca9c786",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff37414-cfcc-484e-b245-92293dc8fb03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a85b13-dad0-4c35-8aed-495de1e95f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b342d411-805a-4f84-8150-d88bfa44d7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb09b5a8-e845-4c67-9a9d-34c351d89388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88cdee3-8177-4d90-85b5-7e9902ade5ba",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda34208-54ea-4314-8594-b63410f47b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445d90a0-6f06-4ff3-a58d-3dde70e3712c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3271f46-53f2-4e07-bcee-fb12a27001fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17002038-afc5-490b-8ef7-df9761da5e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d98bb08-aedd-431c-ac04-4f3cace03027",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b772f062-b122-4ce3-b101-8f2d360fc7be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91079f35-5330-4ebe-8d8b-aac61ac31402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "185db4bb-4df4-4558-80f0-6c8cce890a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9e7c4b-5f9f-41d6-8cbb-f38fc7e45f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af37149-1c5d-44ac-b721-130e417eb0e9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe97f6f-6229-403a-b260-4e3bf6c76123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdbcf20b-3fd0-4636-98d8-2a2f5aa3fc92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "550acd1a-cd61-4104-90c8-491b382029ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9daed5f5-8d5f-4948-b61f-f54ada6ac87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56c815d-5bb8-49dd-a496-edb2b855beef",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4098a79-da9b-482c-a95e-613d26cd13a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d5ea10-65e7-4a12-a3dc-3076b65e09ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2adfff-e3ee-4226-aa0b-9bd35fed92e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ea1a21-6cac-4c83-a229-4d1dce8994bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58826288-7568-4773-92a8-8f54d3373574",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668cdd26-dd20-4341-9975-7da1c3f29759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6fbec8-1037-4ee0-ab07-42344be84b0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d2608e-70c9-4046-9568-d32bb9e7a94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce981ff2-4c97-40f9-a958-8206a8b75255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dde86e2-d2f2-4cf4-a090-55ff2a562c07",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccceb023-1717-48bb-8d30-dfc9ea6d0d10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0e06ac5-188e-40b1-a05c-f65e10453820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd24f54-dc45-4011-b14b-fd609ea4f66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50192cce-4b6f-491d-9400-4d10157ff674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15310f41-4d86-46ae-bee0-005e6d58c4c6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3ad902-f7be-4b95-9433-97af6a6440d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "680f7917-7b34-49f2-a036-7ec08dbc8ebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fd6ced-db73-4eac-aa74-3daf17610ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27cc327e-31c0-41f1-9fe7-86d5bee06447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed3e368-73c6-4f6c-b1dc-6802deb175e5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38596bda-fb52-4984-8c5d-35ed7d7ce121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2e5dd34-f8af-44ed-9ee0-8de8f276b7a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c66ff92-a3a8-42d0-8c4b-19e322a0e784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c06dcc-4a61-4e23-b12f-df98a4bc5a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5275ab-e3fe-4015-9786-c4a3bbe37047",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a2f1ec-e32c-4358-a331-625f80187327",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdf4cd28-4d48-4552-ad81-962a22098198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7051669d-5bda-4eba-b796-7a99cf5ebc92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "461ac55b-13f2-4508-85fd-44485916cb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af5c2d1-8310-472f-a010-434cfa26ef85",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8fa2eb-67ea-4882-995c-b07a19b4f3cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7858d3c1-e7cc-47cb-9179-7c491734c677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b22514-4264-44ae-94ed-3b7c5b08126f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae7d0ed-0fe8-4dc8-815c-63b97bae8a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22aa627e-b499-45e7-8b45-389654df1e83",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab21aaf8-2742-499f-a98d-17a354e58f3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e0a448d-e4a2-4c49-9d68-e141b1e6a56a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a78d39f-f946-42d2-b519-4c52944de0e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc6f627-6617-4f72-887f-80e46c99941c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f17d049-0c61-40b1-a381-5fff2de910a9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522c08b5-614c-44e0-a2c5-1c51b7b5d044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c9b8db8-007f-40d0-ac1a-bb2052942ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b784b5-ad86-44f5-a23b-ee3bb772a55d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9553f570-20bf-4c8f-a6d2-3850cfe2e482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677dc0c5-027c-441a-8fe7-eabeb3f8c67a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d176300-b306-4c8a-9662-1c591a8f68e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95bf4ad7-2be8-44c0-8333-7cb3247dc6ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3519858-eb3b-430f-9125-dfa3e0b86f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dccaa67a-a01f-4a55-8c0e-b3e32da4ef1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d58d729-0bf6-431e-b08f-fb2f14be82ab",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd89d03b-6349-427f-95de-e3f94f29b1c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc9f239d-84e6-49f7-ab99-e782d52a508b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505c9d4b-c81d-49cc-bded-8bd7f5cad457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd870f97-ad0b-4d5a-b9ee-b3493aec19b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31e0f33-c002-4029-80a0-69d6592f2988",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24ff0d8-f155-4e0d-bce3-93056a8596f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fa8e3ab-5fc2-46fc-9861-0ab359297386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7db013f-2f50-43e1-bde9-8b01cd8b189a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0561993-5e50-4e28-8c9f-6ad553822bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f41d1b-0473-46aa-a100-b18e5d28bf12",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e855871c-e790-47c9-8f3f-30241c4f2a45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edd0529c-6e57-4209-b805-5b25fe9fd398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e52b33b-3d18-4a30-a005-dba22ef8ccf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6328d43f-eb98-4611-90b3-b14c3ad75396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad79ceba-2f5c-4b69-8d0a-faf501c7227c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe02d38-3696-4c1f-8630-c53f2b990235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69c605eb-9bbf-4c1b-89fe-a5baa117bde8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2983ce2d-e58c-4378-8485-59de38630cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd11181-8b49-443c-b64b-68038c65cc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114f68a0-0aef-4adc-b901-ac10fa385779",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bd7038-5f19-40ab-92ef-34117f42f95b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b81b5df4-0dde-4751-bfbf-b12b8b2ada80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd573021-584e-4be7-a278-ca52721881a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e2ef96-67b3-4f25-bdd1-3480bec03090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c64f9a-a1fa-479e-9c5d-897c1fbae909",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aabd36e-a17e-4b37-be32-a5de90cd5088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c77ab64a-b310-43a7-ba2a-051824b9b233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88ce01e-ea2f-4f3c-8be2-da48ac38eca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96f373d-392f-466c-bad2-d351d7ba3b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e4f7bd-2f2b-45c0-ba37-1f405e66263b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad79bae-bac0-4f1a-9b4b-5e922f0fa085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33d70e7f-3229-48bb-949c-3271ec7133a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa99180a-cca0-4685-bb22-b69c6cbb3d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b00b1da7-8b4d-4d5e-84e7-5b0c20e62ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fad01ae-26d8-4d4e-a0a0-143ef08929d9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b50dde-c6c2-43bb-bfe6-3e175e64961e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3559b87-64d1-4ac9-8cf5-2e6a07f050f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35304d8a-38f0-4481-82db-8594813ed6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05baf34a-eb73-40cd-8cde-22809f406437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fd522a-c99e-4088-9952-2f0a0c669096",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051173a1-056d-4550-9de6-9f66d4563931",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7dd7d12-dc64-4aaf-b444-e263cb3acc76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a01b48-41ec-435d-a6c9-89b0f99c75a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee3aa9f-9ab3-4f6c-9921-aef9323a2cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afe917b-9749-4505-b8ad-f9fb9e903853",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c62083-a2e5-43d8-ac96-62560528798d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee20255c-cf98-4fec-bb7e-2a8b9f49f635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cdd5f5-40cd-4f19-9930-83be93c6b37e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f422e63-fe27-46bf-9e5c-ba1f9bfc3f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab15cc2e-062b-49ed-ac0e-93fbbaea4e53",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b72a951-f2d1-48a0-8187-ee3526976eaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed22f114-6120-4707-a78c-deee1e02cd5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f810dde-e962-45a5-a92e-3f57714dfc44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e81dde7-a284-447d-9e5c-27689689c60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb798d7-a977-43b2-9fdd-b392d9399676",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166c3063-80db-4cd9-ae47-1cfc8b0a87dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f4c416e-c924-4bbb-abba-a13f0d80fb11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fda7e0-1316-4df1-8be0-bf2586aba221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b246af-6846-40df-8e64-1c5825902a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9aa309-06d9-44a7-8567-e1c825ced990",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34a7556-229f-411c-8a81-aa970dfb4f23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b6a6c7f-6fd8-460f-a82b-9820985b3c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0e65e3-cc5d-4bde-8bcf-589848d949ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb74477c-6765-49af-acdf-91d96e28c5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabed648-28b3-4e40-af16-05e11c4796a6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8076a594-a26e-4d3c-873c-21debc3e5e33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8632d68-d221-4a66-adb3-bcb6dfa66f56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68366e77-1a74-4e11-b097-e52fd9937107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ca06c9-5d22-463b-9e62-fd865345e2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99404377-23a1-42ca-9e9f-39e77caf4b86",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1a2424-85d3-4655-9e76-8d087fd4c5af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe36e5f4-3293-4b03-b7f3-c2681ddfa095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33fdf51-a0f9-4ffd-8dd5-d1b223862c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269c4537-3624-469d-9508-d6531c3dda11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5243d7c1-e854-4aa0-839f-457026d4d3c6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26267dd4-3f3b-4faf-97bf-f4d6c7d71cc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efe061af-9b7c-4489-9b5b-7c3f00898f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35c1b45-20b2-4935-8a7a-a82f0d537816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8222f9ce-1dc3-484a-8fac-f8f4f0d6e068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfae6bd9-b20f-4390-b52f-698699e45bb0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9408471-1270-4e29-93a3-e6cf438d1979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54cbea5e-a2d9-424e-99d2-ff1240d81696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad0a79b-29b7-42cd-b07c-bdd6c47bf2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d3c6a9-36a2-4916-af5c-56085063171a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a760db-06db-43b5-a62f-24e16edcf54f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13325627-7c53-4891-9025-bf1960be1e6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fff376ad-2412-48ab-8350-57f8d7eaefe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d863bd-99fb-4510-a4e7-8b50d0e4a45e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9ae01c-6739-4cb4-8b07-3e41885e9e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f9d50a-8fc6-4dc3-b768-8ffc1460e5be",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c4e0a2-b976-4623-a54e-d21c28a30c36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8388b550-dcca-4c1c-8fa9-0e44f7211c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3719a1d-4008-42ee-a61c-352d018ca3d4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac46a9e-2e07-4982-9e5e-2d8da5b78478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20fe7f3-6cd6-4306-8fa2-49f17e506e67",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3968c84-8689-424a-938e-f918d4eb4088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "400f6631-4954-4000-89b2-14183136f34d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8668761b-dffc-4e94-bbd4-386c3296ad2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5cb4c62-b5dc-4e53-9dc0-16291db5c720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4838a5f0-6c41-470b-a04f-162e3ee18753",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece41ab9-9b41-4d3a-bed2-7940d7c63237",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec7cf345-d9cd-4224-a005-0ccc766b8252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a210ec21-ddb9-40f6-92e9-abf51812c603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1db7e1-9ba2-4579-a163-9be535c17011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49dd9c6-153a-4c02-b9a4-07782b461386",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c8da41-7e30-4043-bd9f-e6ba60d79ace",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3c3630f-72a2-418c-8fde-a9f78cfd5e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a925e62c-b892-4bbe-876e-de4582527bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a14f43-fe31-4dd7-a38e-f2308695b4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba356382-2fa8-4d57-b183-4ca0223bc788",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4b3bb7-bda2-460d-bd96-c2f599f5caac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24c10d4b-f9b1-4ebd-aee9-54afecdcb726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b46359-6f12-405c-860b-e4c287939e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f115f3-00e7-4553-96ed-d3c93b1ad802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdbc849-7b9d-4e4e-9ba4-80b8a29aa2f9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379ae1df-405e-43c6-a846-ae9d79ac1a56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c70b794f-492e-42c2-bc70-b9c27f0d3c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c662394a-fd7e-4245-99d1-ed5b3a5a22bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b88c16f-f530-4e47-9c87-186709216848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fa450f-7803-4f86-9037-2e0ee95dc429",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc076ec-7392-4add-b539-3c6bcf253803",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2084eba7-2e56-4508-a90c-67a32a8bbad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0bf840-4243-4f72-a04f-85341e8f9cdc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0920934-09b4-4038-95ca-cd070504c20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f030ca-fb0c-4ec8-af18-2ff39214e56d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d1af67-3873-4408-a632-dd7b4628a1d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca053b18-5400-484e-807e-bf8d2a4624a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f2ff9f-5966-46c7-8001-91a5122b3759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068917c8-4470-4d22-b709-34842ea557ea"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7124456d-f699-4bb8-96d8-d1451904ee8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84e0b06e-d079-4749-8b4a-e223f7a09175"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8a50cbf-43e5-4e40-a39e-2722943c3d5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d445acf-bc8b-438a-81b7-c374368e0f29"
                    }
                  }
                ]
              },
              {
                "id": "c0af93c0-e561-4859-a5f1-bfd51eb53b1b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a176b7ef-1d89-4001-86ed-4f43dd45ca74",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c725a72-ebae-48ff-831b-783a79924728",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "615ca9dc-2394-4687-98a7-dcd52e761e5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5100cbaf-fb08-4a5a-9f57-6772820726b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c8e9484-ded3-42cd-8a6f-c73117f4ecb4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0eea7df8-1eba-4b5c-8cff-dec91a952bb6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23f63769-417e-48d8-9690-4a264cd659f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bde3f6d-12e8-4309-af07-5e851f67fe8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdb9811f-6bd8-4940-b8f2-f4416e99f9e9"
                    }
                  }
                ]
              },
              {
                "id": "08ac5d61-d497-477e-923f-1ce415d1257e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "318a4d6e-3bf3-4de7-b589-3222867ebc50",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e11d19-74f7-49cd-92fb-a6cab7ee7608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7457f3d4-2a7a-4c3a-9fb6-70da34ce2158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8eef94a-b411-4c10-afd9-5cd62b83beac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50938892-99a3-4a6b-9dec-e425520b9a4c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a591722e-2835-4b03-b98c-0b717914768f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4aa36ebf-e503-486b-b0c3-e6b1d9881d83",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eff6fe4e-1a89-402a-9cde-65845c887b16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7e2ea56a-09a3-430f-bc75-5dfe1419de72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40ed6c46-423b-413e-a225-f74c1ad6e70d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb5c0513-2293-47a2-b1cd-98f299542116"
                    }
                  }
                ]
              },
              {
                "id": "5e314a55-eaca-48ce-b0fd-54b87a58d940",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9890f29a-4e18-4e46-af0d-ff90d896db21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ae5b14a8-947b-4ab4-8713-17cf09f00752"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73b5bba2-db1e-4907-836a-d412d40ad825",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64633f2b-7a2b-4b4d-9ace-f50d1dcdc0c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba24b747-4f4a-44c5-bd72-996bd2fd4f18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "12cba8d1-21b9-4960-befe-04e1128ff499"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "394d9318-2b0d-4b28-b4b8-9d28c8abc5d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34304bc5-072d-400f-a894-e77743767253"
            }
          }
        ]
      },
      {
        "id": "3a1f6381-f071-4a7e-8fea-2c93b8d71e5c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c34d1124-5446-4234-96a0-0b000e2d045d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "846f5c0a-0d34-47e0-84ba-9cc979270b8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65ba4355-e2b5-4ef4-82e7-7ed419935256",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f55173e-2212-4281-8f6f-fea9d292813b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e14660ca-814c-455b-8859-bca67902bbfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "234e1112-3133-4643-b275-46a4c2113e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2979ac93-99c7-4e84-b93c-1fa3c5add0ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67d4c0cd-d679-44f2-a283-2c36b2113842",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a45a642-643e-4917-8124-702ac99feaf9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd71b1d5-3757-4167-b039-8aee5fea291b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a27cb89-53b2-439f-813b-9dd05ec8eb8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "857166b4-830d-47e5-929f-dfc67fda14cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "70d304e9-a534-41ea-b3b6-5e202dd199b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d2da639-27c8-437f-a301-3dc2ac3742cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75d83bce-95f9-491c-9782-0d7aba3a1644"
            }
          }
        ]
      },
      {
        "id": "939d096d-e9e2-4dc5-b875-e41e5e8de78e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e4790d24-079b-4975-9421-bf42f3102685",
            "name": "Negative Testing",
            "item": [
              {
                "id": "019a1023-a5a0-4dfb-91bf-1b7daa8c4b03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0d9142f-838c-43e7-a06b-f5e18e6d1c22",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863515d7-f089-42f5-9c76-4da77beb9336",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d9e0abc-7dcb-4974-b127-d3d5e26081d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db304568-7a60-4f4c-95c6-2f74bb659110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4ce846c-88c7-4e55-a3cc-51636af01ca9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "107aeca4-20c9-4e08-bf0c-a984ddcb90eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3978e9e8-ae30-411e-a8c0-fdd075fdd522"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "675334c5-14c1-44d1-a76c-2c5a8ce43913",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ea0c162-ebd9-4864-a40b-87d2e0b27ac5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dbb6cde9-15db-4399-9c98-5952cf2a5155",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4a71b6c1-ab12-4d6b-8de7-dddefd460875"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0d8d7f3-b612-4ba5-bd7b-f312293cb0fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "685bc1e2-939f-41f6-a66f-194f1a501385"
            }
          }
        ]
      },
      {
        "id": "fb8253d2-0247-4239-8d7b-310fbd1babd8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d8fa757c-62cf-4a6a-b5e5-bc3e2996bc76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d454cac-add4-4f95-b8ec-8f3bc8cc0aaf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b8958f7-c440-4f97-8490-add08ce7ffce",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b281d171-e4d1-4099-a998-e3b233bd0e4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bde4c38c-262f-4387-81df-d33ca0d741a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91a6ea4-9952-440e-9771-82fa80c0a638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "484b39de-b502-4771-adc9-8c259ccfd1ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc62be1f-1172-4ad4-af8d-519a2ea6181b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11e472c5-2ce0-4f83-af19-278d2c9c8c0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "619e801d-c124-4e94-925b-1c2cd5465436",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0211d6a8-636c-4625-8ca7-cfca638650b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e11a5d4-9cb7-44fe-a08d-74efccb38d9e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ffcc1080-a217-4ba1-8501-5b993d22df37"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "acf55e93-ef02-445e-96a3-261cf4480486",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb937377-2c5d-4860-9117-d731fe20c18c"
            }
          }
        ]
      },
      {
        "id": "d8308d3e-a859-4a7b-9782-f4b046d9e601",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f90599d-4288-4da7-b695-3cd2453c5dba",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a88313ab-65c6-4756-a9b5-e696f9cfd827",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f9ac2816-a36f-4269-8835-b0362db232f5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d473bc9c-10fd-477d-9e97-942840cc1423",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b41cdfb-94e5-427a-a00a-e9c6d540a3de",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 219.7570422535212,
      "responseMin": 10,
      "responseMax": 6370,
      "responseSd": 408.8460411178403,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691282140651,
      "completed": 1691282214832
    },
    "executions": [
      {
        "id": "138af468-f0da-43e8-800e-c40f03184bdd",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f8345884-44e0-49b0-b047-5f043f53115f",
          "httpRequestId": "b5bf8979-7885-49bf-813c-e27f140586c7"
        },
        "item": {
          "id": "138af468-f0da-43e8-800e-c40f03184bdd",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bb1a0e1c-9065-449f-94b5-db72fd4b942b",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "b2698faa-8641-4dd1-9bcc-15fd672bb905",
        "cursor": {
          "ref": "a1bc2493-3243-49bd-8c19-30b65a4fac6d",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "56b2d198-021f-466c-9906-789d946966cf"
        },
        "item": {
          "id": "b2698faa-8641-4dd1-9bcc-15fd672bb905",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f35c2521-9b36-4805-a6ff-e4c2ef96674c",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "9cae5b96-bc6f-4d37-b4dc-43efa9f6f6ef",
        "cursor": {
          "ref": "ba121c3b-a11d-421d-a2f4-6ca922bade0b",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ed72d1e8-818b-4ae6-872e-c16ded52047c"
        },
        "item": {
          "id": "9cae5b96-bc6f-4d37-b4dc-43efa9f6f6ef",
          "name": "did_json"
        },
        "response": {
          "id": "1ba76630-c2a7-4cd8-8a63-018fe65d36ca",
          "status": "OK",
          "code": 200,
          "responseTime": 1279,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260d838c-715f-49ea-a84a-7a0f5e110809",
        "cursor": {
          "ref": "7f953b6e-56b6-4c74-b186-d25b07e76931",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3dfa1067-d980-4365-8446-926dac293838"
        },
        "item": {
          "id": "260d838c-715f-49ea-a84a-7a0f5e110809",
          "name": "did:invalid"
        },
        "response": {
          "id": "2b88422a-5513-4b9c-b1fa-d2c114299169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260d838c-715f-49ea-a84a-7a0f5e110809",
        "cursor": {
          "ref": "7f953b6e-56b6-4c74-b186-d25b07e76931",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3dfa1067-d980-4365-8446-926dac293838"
        },
        "item": {
          "id": "260d838c-715f-49ea-a84a-7a0f5e110809",
          "name": "did:invalid"
        },
        "response": {
          "id": "2b88422a-5513-4b9c-b1fa-d2c114299169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c355407e-767b-4204-8fa7-12e3fe6ba71d",
        "cursor": {
          "ref": "08824541-e9cc-4b7d-a985-5494cfb7cb9a",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3e670b15-ca1e-417d-978d-8f07308448c2"
        },
        "item": {
          "id": "c355407e-767b-4204-8fa7-12e3fe6ba71d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1c14376a-6a87-4110-8ee2-62fff3584ddd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 448,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ee67df-0450-48c6-b552-99868e5abc5f",
        "cursor": {
          "ref": "c7ce2a94-993e-49c0-b025-497979d46759",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6591bf6c-055f-4b6e-bf49-6aeaed4c2ff7"
        },
        "item": {
          "id": "e3ee67df-0450-48c6-b552-99868e5abc5f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "759e9359-ffad-4f3a-9349-1c2afe21f44a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 263,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f335a1f-072e-48aa-afaa-9ba5e7e97935",
        "cursor": {
          "ref": "0bbcfefa-2324-41aa-91e0-99210d4b1728",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "392f0697-00fa-4904-bf72-a9c55b899c6f"
        },
        "item": {
          "id": "6f335a1f-072e-48aa-afaa-9ba5e7e97935",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1b7d940b-5ed3-4513-9487-66cd5c2d7e62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9886d8-2564-4e0a-8f97-3c1a321e5ff3",
        "cursor": {
          "ref": "3e629df0-a711-4943-8e5c-c43d635b4d79",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "54038cd1-74ff-44ef-bdf6-7889e83bc161"
        },
        "item": {
          "id": "3e9886d8-2564-4e0a-8f97-3c1a321e5ff3",
          "name": "identifiers"
        },
        "response": {
          "id": "e5040b4f-8e0b-46a5-b2ba-b684a761832f",
          "status": "OK",
          "code": 200,
          "responseTime": 1132,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddad8f13-22bb-47c5-b28a-9d7ce0e14336",
        "cursor": {
          "ref": "e6ea6b40-275a-4221-b00d-ae7299424377",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a845622a-5efb-4f2f-839c-78936137da26"
        },
        "item": {
          "id": "ddad8f13-22bb-47c5-b28a-9d7ce0e14336",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b907ab83-2d9d-4c94-96c8-b0c18737eceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2076f60-119e-4c05-9cfe-aab9d5d8da3b",
        "cursor": {
          "ref": "6c69183a-f38f-45e0-a7f3-c46654bb96c4",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "85d79446-91d6-486a-8aec-fa0fb6e7bf05"
        },
        "item": {
          "id": "d2076f60-119e-4c05-9cfe-aab9d5d8da3b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f218e1c2-7897-41a2-9c21-5dfe3005e51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75de8a0-34a9-4d48-bef9-ba34345a3503",
        "cursor": {
          "ref": "1a927c45-ce2f-43aa-82b3-48ab44b28c11",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8b1ba5fd-cda9-457c-9a8f-0f1fe7d05fbc"
        },
        "item": {
          "id": "f75de8a0-34a9-4d48-bef9-ba34345a3503",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3910e87a-b4fa-4270-9591-1abc60fb5cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272fc487-150a-4646-adc6-c6632afe70b3",
        "cursor": {
          "ref": "d2b3bbb2-5551-4591-9712-81c6e6798761",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1b018af9-83c3-454d-8a68-e1a3df0b74cb"
        },
        "item": {
          "id": "272fc487-150a-4646-adc6-c6632afe70b3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "df7e5341-93df-4cd6-93d2-895d92e80fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c94f94d-9546-495d-a8fc-2f6b593daa5a",
        "cursor": {
          "ref": "82c5f4ef-0f83-4b90-a6e3-40c80285f193",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "05203ec1-20e4-4d77-9ed1-84c060791f0f"
        },
        "item": {
          "id": "9c94f94d-9546-495d-a8fc-2f6b593daa5a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "04b8cac9-5750-409b-aed5-0fb5c8d6c9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c44e6b4-3614-4598-b985-5805265be3f9",
        "cursor": {
          "ref": "2560e52d-bb1e-44be-b774-b84b1e255781",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3fa00925-dfe2-4072-93df-4d7ef6351d9c"
        },
        "item": {
          "id": "7c44e6b4-3614-4598-b985-5805265be3f9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ef866e0b-e718-44b3-9035-15686e0c1179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3090bee-baa1-413c-b643-68d26e7b9374",
        "cursor": {
          "ref": "8e780d84-fef1-436b-ad2e-21b80baad4e7",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "89cab625-f487-4084-828d-b9dc62260db2"
        },
        "item": {
          "id": "d3090bee-baa1-413c-b643-68d26e7b9374",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5d4870c4-a48d-49f4-8e53-ada06b41a97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4417994f-5111-41d0-93bf-91de99c668e0",
        "cursor": {
          "ref": "9593a25d-0f7f-436b-9df6-4c83d2cbc27b",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0b8c527c-7836-4f81-bab4-65fc04e25966"
        },
        "item": {
          "id": "4417994f-5111-41d0-93bf-91de99c668e0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3b200070-b871-478a-8801-6cd9fe74810a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798da919-7fd7-4c2f-9c25-7c9b7c614bd6",
        "cursor": {
          "ref": "a9d6109b-44b6-4ac9-a61d-587d49af8ca8",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6832ca12-6f62-4b61-9d3e-bc8391e8720f"
        },
        "item": {
          "id": "798da919-7fd7-4c2f-9c25-7c9b7c614bd6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cae5ea17-18f8-432e-8cf8-ab3705838586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad14780c-aed3-4d1f-92ed-3da8b29b2291",
        "cursor": {
          "ref": "46c46cd1-769e-449c-a266-21b54b5aeb58",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6057279d-ce31-4e4f-95b1-4c444df7de46"
        },
        "item": {
          "id": "ad14780c-aed3-4d1f-92ed-3da8b29b2291",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "559ceb3f-ea02-46ae-b212-5bdab07c269d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b028dc9c-2cb3-451c-90cb-f11fe71afe18",
        "cursor": {
          "ref": "f7b8c8e9-d7d4-4e75-af0d-b74e421914fb",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "97d7ba75-d6a9-40ea-8863-3b1b10fdb7dc"
        },
        "item": {
          "id": "b028dc9c-2cb3-451c-90cb-f11fe71afe18",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "54bc5542-80e8-43dc-8a59-3a7b8d27ce72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df00917-0c35-4469-acfd-69e2b51e6d94",
        "cursor": {
          "ref": "e0f176d7-afa8-4b57-9e2d-3970b111da5b",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0bc11288-7527-492a-8812-fd2c01464f08"
        },
        "item": {
          "id": "7df00917-0c35-4469-acfd-69e2b51e6d94",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "96ad2339-2116-41f0-831a-37caa65b43ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9f16f4-9cab-4d15-82a7-9c202eb3867a",
        "cursor": {
          "ref": "9ac25d33-a6db-49ef-b861-223da4cdc97a",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9825187c-4da7-49ab-a629-b14b58ca58a6"
        },
        "item": {
          "id": "6a9f16f4-9cab-4d15-82a7-9c202eb3867a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2a09a1b8-8b29-4282-bf70-a3031f96b5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8c1bcc-fc60-4b01-843f-4e21d866b808",
        "cursor": {
          "ref": "c21bc508-5a49-4dfa-82f4-7f106b6725ca",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3bed2932-09ff-4816-bd03-f005ee906d07"
        },
        "item": {
          "id": "bc8c1bcc-fc60-4b01-843f-4e21d866b808",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d03df7b6-d586-4083-9ff7-ffa95bd5d3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9645bb-6aa1-459c-99e6-79be8f788186",
        "cursor": {
          "ref": "79bd9ca2-cff0-4f4f-9e8a-1f321f6fd054",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "25b206f9-9911-4df7-b24e-4c6a193fe9d0"
        },
        "item": {
          "id": "3e9645bb-6aa1-459c-99e6-79be8f788186",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bb1e25f5-5708-44c1-8aa6-f88f0bf00344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e29918b-fd1e-4493-8e02-2b1485152669",
        "cursor": {
          "ref": "381c1bdb-0230-412a-9154-11e1a8326b81",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1ce96ad3-c8bc-43d5-a754-eaa7cd5c1e3d"
        },
        "item": {
          "id": "1e29918b-fd1e-4493-8e02-2b1485152669",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d47caac6-2612-45d1-92aa-425166e8321e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d323239-c16e-439f-bf7c-807165d27360",
        "cursor": {
          "ref": "ebe46282-a50a-40eb-b3dc-53ba975585d5",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a70a1816-1e0d-4703-a939-98cac17ac376"
        },
        "item": {
          "id": "0d323239-c16e-439f-bf7c-807165d27360",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "dd70dbdd-140f-49e0-a011-c663eef1dd34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890e9ff3-712c-4557-8ccc-681b2a4370c3",
        "cursor": {
          "ref": "8af8787b-3278-4cc0-ae76-d3412f8a693f",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a23e9306-fada-4abc-9440-d25a44a39fc4"
        },
        "item": {
          "id": "890e9ff3-712c-4557-8ccc-681b2a4370c3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9beb9835-b4ac-4e2f-9fc2-c9c6366c2274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e54a4c-45e9-4a84-9317-0fe03e4f0e1b",
        "cursor": {
          "ref": "c1deeb9e-683d-45c7-a912-2115b93d896b",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "92cf3979-ae3c-4bf6-aa0e-6a276014ab5f"
        },
        "item": {
          "id": "45e54a4c-45e9-4a84-9317-0fe03e4f0e1b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c646d68a-d750-446d-8019-f382ebbe5b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467b3523-597b-40f8-b628-909348412808",
        "cursor": {
          "ref": "98b76d02-ffb1-4381-87a6-f90803b4ba75",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c93b4b05-f5dc-4a63-8d7c-4ddc11cfef2b"
        },
        "item": {
          "id": "467b3523-597b-40f8-b628-909348412808",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "651a2612-06ce-4ac1-809c-5534d0fb6a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b6f69c-7e1c-4e34-b8c1-c7cd395a1b8c",
        "cursor": {
          "ref": "66a47847-7c43-4ede-ac99-f39c4f2ff4dd",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "95110cdc-b612-4985-acad-a39e179f062c"
        },
        "item": {
          "id": "70b6f69c-7e1c-4e34-b8c1-c7cd395a1b8c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "46b68a0b-fe85-4d02-8697-9e852857f716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcb56d2-0e4a-403b-8d95-3e5faa4bb41b",
        "cursor": {
          "ref": "e19bd770-d55b-4a80-bcca-5884bfbe6cde",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dd060b4d-8737-46a1-b105-a13b5567b295"
        },
        "item": {
          "id": "8fcb56d2-0e4a-403b-8d95-3e5faa4bb41b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "50c66dad-8afc-4968-9f88-7c01428c59fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f08179-9532-4ea1-b263-d7d5931ad2bb",
        "cursor": {
          "ref": "c99112c9-9594-4501-af0e-22b108bdf4b3",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "79d5af37-bd50-444c-8740-a75f8c4966e1"
        },
        "item": {
          "id": "53f08179-9532-4ea1-b263-d7d5931ad2bb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a4a5acc7-ed6e-46e5-9680-ab1de916c30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700b65b8-bb96-407b-9e43-b7614a624c02",
        "cursor": {
          "ref": "25e5d1b8-fac0-4da1-b6b4-b1a42729d45b",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6b410efa-f3a8-48ab-a491-9aed1d11a194"
        },
        "item": {
          "id": "700b65b8-bb96-407b-9e43-b7614a624c02",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dbce292e-20c5-44c0-9d95-461685e8b9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d872a050-a9b8-40ad-b67a-8d4d8137ccc6",
        "cursor": {
          "ref": "6f4d4299-808c-4890-8cbb-14040aaf7811",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "21aff671-29b1-443f-b49d-365ceef21d2c"
        },
        "item": {
          "id": "d872a050-a9b8-40ad-b67a-8d4d8137ccc6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "40ff74e8-ffc0-4bcf-a34b-1702f09e4e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b185d25-6618-4725-8771-5939243a5d18",
        "cursor": {
          "ref": "ab265169-2007-4722-95d0-54563b82c924",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fcbeeeac-12c0-490b-ba61-a6a9f2c50f69"
        },
        "item": {
          "id": "2b185d25-6618-4725-8771-5939243a5d18",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c2136840-9891-47de-8c3f-ecafdcbb219c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064d30f2-b87a-47ef-b215-3c8d2db0db37",
        "cursor": {
          "ref": "5598ee4a-9ef0-4f8a-bfff-b24f6dc38b63",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2d9d25d4-a0dc-450a-81a1-ae7c80aabed3"
        },
        "item": {
          "id": "064d30f2-b87a-47ef-b215-3c8d2db0db37",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b25e3211-f6c7-48c0-bd40-ebceb5053dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672e0afb-1301-4974-b961-1a176520c5d9",
        "cursor": {
          "ref": "3ccae227-c80a-4324-9e9d-c7f810ffa6f3",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "871a9f3a-7f2f-4769-8d4a-a37f7e0f016f"
        },
        "item": {
          "id": "672e0afb-1301-4974-b961-1a176520c5d9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e8172913-7a97-4b06-b500-3edf3221c319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630208e8-1ce1-4121-a2e4-eb2ad1d535c8",
        "cursor": {
          "ref": "e40e85c9-4f8f-4aeb-bdf7-63c62c04c08e",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4587e45b-27bf-43d9-8831-6f95828f23a4"
        },
        "item": {
          "id": "630208e8-1ce1-4121-a2e4-eb2ad1d535c8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c9eb4837-3f8e-4257-9083-043693330e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58dc953-d093-4041-8b7c-dda509bbc3d7",
        "cursor": {
          "ref": "5bca7de1-d9bb-45f1-9818-cdf26d9f7bce",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cd262b62-0ef6-442e-a44a-a24e1cf4ce60"
        },
        "item": {
          "id": "c58dc953-d093-4041-8b7c-dda509bbc3d7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "02cd2694-7d7c-4a6e-a4de-649c434b7d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85958a1d-20d8-4682-8089-b8a95e1eff7d",
        "cursor": {
          "ref": "7b445bb3-4fce-4f5a-bc6d-48318fd2cb5e",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7f509b49-8984-4860-9cbe-5699a657474f"
        },
        "item": {
          "id": "85958a1d-20d8-4682-8089-b8a95e1eff7d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2124843f-cf8e-43f7-8d2d-fca0c84dce7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95f5867-43f0-45e8-9615-2a7536769080",
        "cursor": {
          "ref": "b517661f-1aa1-4b06-9e71-7c89d24a93ac",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1ae438a2-883f-41ec-b080-d18d92517186"
        },
        "item": {
          "id": "b95f5867-43f0-45e8-9615-2a7536769080",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c0984c87-2011-4452-a3a4-f6361fbc0f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0a2fbd-76c4-4e45-9465-def1b4765a15",
        "cursor": {
          "ref": "2c466235-e8c7-4f24-8c6a-f5e5678f3095",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d33958f1-b86d-49a8-a11c-b2d76b0d6282"
        },
        "item": {
          "id": "3b0a2fbd-76c4-4e45-9465-def1b4765a15",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d4f786b3-a4bb-4b4c-8015-2ca3e089540e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22732a04-5f16-45c9-addf-5ad83a5cd0bd",
        "cursor": {
          "ref": "9b8011b5-f2a8-4552-b143-10018074319b",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ef88fcbf-b8d3-4ba4-9f7b-07771372d730"
        },
        "item": {
          "id": "22732a04-5f16-45c9-addf-5ad83a5cd0bd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a052500e-673d-4aa3-8fd7-26a07c945bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f147a63-9a84-4f3e-a241-14578c5baf28",
        "cursor": {
          "ref": "62a6d2bc-619e-4cf5-89c9-b68d5b022b26",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e77dabe1-3ff0-4c6e-85fa-f8b9e6d334e8"
        },
        "item": {
          "id": "1f147a63-9a84-4f3e-a241-14578c5baf28",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "cfdb7790-d4f9-4330-924d-8028c120589c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56bd501-24ef-46f9-9f8f-1638ff3e7ffa",
        "cursor": {
          "ref": "ad245189-afe7-4112-9489-e5a0f2d00049",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3c81c107-8e4d-4b54-b5ef-43660410b45e"
        },
        "item": {
          "id": "e56bd501-24ef-46f9-9f8f-1638ff3e7ffa",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a2904593-3609-4005-8085-e2fab9de0782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3084f7-abdc-4557-88d4-644505da841e",
        "cursor": {
          "ref": "6956012e-936c-41dc-bdc7-a448a05fb1af",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5ba3891a-1e0c-4f58-b713-70c4cbf9425e"
        },
        "item": {
          "id": "0b3084f7-abdc-4557-88d4-644505da841e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "dccbfa0f-e571-4f2e-9bd9-e7f48d554b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23d80a2-35f8-4d5f-8fa7-40e2d6906636",
        "cursor": {
          "ref": "756d3edf-08a9-49e6-b788-48c852e02401",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "456844d6-f4d5-4cd5-9c7c-3ac2465c16d6"
        },
        "item": {
          "id": "c23d80a2-35f8-4d5f-8fa7-40e2d6906636",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f8232bdb-055b-49c7-bed6-03ba1fb61ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6d7fb0-a2dd-40e7-9adf-4b038534e6f2",
        "cursor": {
          "ref": "2d69c42f-a95e-44c5-9a30-4edf32c71e02",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "99514786-4e8a-49f0-b77a-07e5a666d1a5"
        },
        "item": {
          "id": "da6d7fb0-a2dd-40e7-9adf-4b038534e6f2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d8ca3ebf-0f67-402a-828a-6eab3c47ff75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cfcbfc-083a-4ace-aec0-60e43660ff22",
        "cursor": {
          "ref": "b6d989e1-a199-4f34-a15b-89006b369e39",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "38f4fca8-f6c8-4fa4-ba8d-c6e2042e00e1"
        },
        "item": {
          "id": "66cfcbfc-083a-4ace-aec0-60e43660ff22",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "eda05287-5310-4cb7-83d9-3e69cb2964b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c0ccff-ac04-4df8-9552-9ad64d0e3fec",
        "cursor": {
          "ref": "b567449d-86a8-4f72-9b30-63a9140a6a15",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "477f4236-6f95-4e0f-8565-37d5fc7ef950"
        },
        "item": {
          "id": "81c0ccff-ac04-4df8-9552-9ad64d0e3fec",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b74f8034-9b19-4913-8fbe-6c045b2b20a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a70df3a-27e8-4fcc-80bd-6f82c158d9dc",
        "cursor": {
          "ref": "b39e2cf4-5943-485c-bc23-bd9910836e53",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e99b0f6e-f3a2-4b3f-b24e-64f0a0118bd3"
        },
        "item": {
          "id": "9a70df3a-27e8-4fcc-80bd-6f82c158d9dc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "05d2892d-a2bc-49da-92e3-f11720cda810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43feacc-b4a5-4946-8542-fa84645d8827",
        "cursor": {
          "ref": "355bbf59-f8bb-4ac0-8aaf-b42d5b60ee0f",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "29b50b36-07fe-48ab-8a76-637abdc7d698"
        },
        "item": {
          "id": "d43feacc-b4a5-4946-8542-fa84645d8827",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "014152f8-ac89-417b-b1ae-f58cfd5d18e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be06822a-b2cd-458c-8897-21e13a638fc6",
        "cursor": {
          "ref": "bcd803a6-0302-4b2d-bc37-bcc2642a519d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d741eac2-f103-4f77-bb70-94b588d1cb61"
        },
        "item": {
          "id": "be06822a-b2cd-458c-8897-21e13a638fc6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "19fe12d5-da2e-4ae3-93e9-e44acb5bce6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96424930-a45e-45df-b8ae-94a247c12fe1",
        "cursor": {
          "ref": "f9380d3b-54ec-458a-8e25-a7fed5777b23",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "20ca3004-682a-4b34-9478-82745c9aa4a6"
        },
        "item": {
          "id": "96424930-a45e-45df-b8ae-94a247c12fe1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4f271e21-1d6c-4838-a6b0-94cfa76011e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0eaf332-62b3-45cf-8f38-8f72d83be575",
        "cursor": {
          "ref": "e820c069-c07f-46d9-9715-70caf64ca020",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "be536fab-04dc-4e88-9469-2b71b54a891e"
        },
        "item": {
          "id": "c0eaf332-62b3-45cf-8f38-8f72d83be575",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "73cf7d4e-315d-4a51-a968-1b79e0f633ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223a564c-657e-43c1-ab39-794dfe1b5514",
        "cursor": {
          "ref": "a85f3784-f329-457b-a84c-28d7306f8ae7",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6ae4721d-739f-4845-8808-2052b8ea5be6"
        },
        "item": {
          "id": "223a564c-657e-43c1-ab39-794dfe1b5514",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d9f111a6-9555-493d-87c5-93c3483b43d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a4a31c-5b32-44d4-b603-6be062e66f60",
        "cursor": {
          "ref": "9e93166f-bdc3-45ea-8350-21eebb10ff93",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4e39dc8e-ea7a-4e7f-8bad-1a8988f09290"
        },
        "item": {
          "id": "c7a4a31c-5b32-44d4-b603-6be062e66f60",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b246a622-ec39-4f7c-9afd-ce102af7bd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3110cb7-d9dd-4f69-80d4-6aaa61c5f304",
        "cursor": {
          "ref": "b75fe372-86ad-46c6-a319-d4cf3b0e0913",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ddbe9ef5-c6cd-407c-a574-68824f87b182"
        },
        "item": {
          "id": "d3110cb7-d9dd-4f69-80d4-6aaa61c5f304",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0f0acb3d-436c-4642-ac22-31320a1fc886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f890f577-6d73-4556-99d9-484bb13faa6f",
        "cursor": {
          "ref": "7a867452-051a-4277-8d3e-d9ca39a68395",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6e1e6b32-f0f9-4aa3-8bb4-eb5dec45a256"
        },
        "item": {
          "id": "f890f577-6d73-4556-99d9-484bb13faa6f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9d3ef4b1-1f56-4b96-b2ba-f30f6cf061f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b1458a-092f-4f20-94c1-4c445bcbf3c1",
        "cursor": {
          "ref": "2b199e84-afb5-4553-a10b-9e8a5bc5d0af",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "299ff308-e5b4-4328-b3c6-516d2955958f"
        },
        "item": {
          "id": "c0b1458a-092f-4f20-94c1-4c445bcbf3c1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ad9d8cba-8354-4665-9cf9-6afc6041d5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4bff32-731c-4abc-a950-339a814fa875",
        "cursor": {
          "ref": "d13fc013-1e27-4b84-8546-9cd724703f49",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "67077dec-9f67-4b54-a61b-a7af22769be2"
        },
        "item": {
          "id": "0e4bff32-731c-4abc-a950-339a814fa875",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8ed5a397-ab88-4357-ab4f-0c6523a398fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc63d46e-6960-45e1-a0f8-5d6de6d3b29a",
        "cursor": {
          "ref": "58653962-213a-41ce-a152-004bea7dede0",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9c7f8e4b-6a7b-4149-a820-0eca10c28e56"
        },
        "item": {
          "id": "cc63d46e-6960-45e1-a0f8-5d6de6d3b29a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f046ed1c-4af3-4f08-8285-c58ece25ef1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e4d9fd-72c7-4d5f-8f7a-33c9d271f15e",
        "cursor": {
          "ref": "03576c1f-9e80-47c8-bda7-7c52b8bff79c",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e85b74bd-efac-4bf7-8324-f8f982d64df6"
        },
        "item": {
          "id": "53e4d9fd-72c7-4d5f-8f7a-33c9d271f15e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "dd7c0ca3-c3ef-4b77-8092-f48bd6544a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109f99d2-60f0-42c0-8120-07ae8b334662",
        "cursor": {
          "ref": "bfc0d4d1-1da3-471d-be7a-a56cd8d85402",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b7c1bc4f-9f7d-404a-94c6-99d92972233b"
        },
        "item": {
          "id": "109f99d2-60f0-42c0-8120-07ae8b334662",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0f03aae0-abaf-4dcc-a797-6e53fd45c5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d87b20-2ae6-4777-bda8-94c3f07afa27",
        "cursor": {
          "ref": "fa9ae13d-89df-4818-98d6-46d04357bf7c",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "91e74808-fb56-47e9-a9ba-a5772b9e84f6"
        },
        "item": {
          "id": "71d87b20-2ae6-4777-bda8-94c3f07afa27",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "37a7e5f5-c6a2-4770-87ed-6e6f709f3474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763cc3ee-4150-4b56-bf5b-1f3772aa48a0",
        "cursor": {
          "ref": "f6a1b373-bb0e-49de-873a-1daf4fa48115",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "39f7e493-db74-47f2-b250-37b2a04b8dbb"
        },
        "item": {
          "id": "763cc3ee-4150-4b56-bf5b-1f3772aa48a0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8ea55bce-d587-4ceb-81bc-7fd7269deea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75463da-3f87-445b-966f-46a250cb91bf",
        "cursor": {
          "ref": "71e82e55-d06f-4fc3-be20-2ec596c3ee03",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "22ef9cc5-fe9d-4917-948e-6fe7ec863c97"
        },
        "item": {
          "id": "c75463da-3f87-445b-966f-46a250cb91bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "861df7a4-e111-4f6c-ac3a-7b208996ca3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4787438-4c14-4178-ba7b-46576d1ff9e8",
        "cursor": {
          "ref": "0409d1ce-e238-4c2c-af82-62ec941573b1",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8ce51660-05a1-4609-a517-72b52da486e1"
        },
        "item": {
          "id": "c4787438-4c14-4178-ba7b-46576d1ff9e8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2ea514ae-b025-4492-81e1-3578a9138d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec976ab6-d806-45f4-82bc-907b28494fcc",
        "cursor": {
          "ref": "febec02e-7f29-4ae1-b344-16f1f70c1f0d",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0bc9fd3a-7d57-464e-90ec-71239d4c7767"
        },
        "item": {
          "id": "ec976ab6-d806-45f4-82bc-907b28494fcc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4f139181-3270-44e2-b977-aafe0e6fbbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c7f815-39a3-472f-a778-d42d66647574",
        "cursor": {
          "ref": "dcdd2c9d-a29a-4326-9636-e7bc08c59f78",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "79db250a-e796-4665-aa06-4fdc616344f1"
        },
        "item": {
          "id": "48c7f815-39a3-472f-a778-d42d66647574",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4ca3fee7-bad7-4271-89c1-d25b9c5a20a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5fa90f-5bfb-4231-bb29-0ffbf5238ad6",
        "cursor": {
          "ref": "f5354f89-0a07-4f35-81a0-8447db30312c",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f99f47fd-0484-4811-954f-b27ef843e110"
        },
        "item": {
          "id": "eb5fa90f-5bfb-4231-bb29-0ffbf5238ad6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "56fc61f8-243e-48d8-8782-1217afdb5a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19297fde-9a5a-481b-af9a-a4e8137ef8cf",
        "cursor": {
          "ref": "2117f186-c4e9-46b0-98d6-53fd156fbf91",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "76b52674-7f38-4132-ae2a-73ded27dedc6"
        },
        "item": {
          "id": "19297fde-9a5a-481b-af9a-a4e8137ef8cf",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a95a31b4-dbda-46eb-938f-6534fa8d7ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec23bdc-51c5-45ca-a449-bc9b52bef977",
        "cursor": {
          "ref": "925419ee-d5ac-4649-89b2-c7425e94c179",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bfa408cb-d825-4959-9f15-0827326fc929"
        },
        "item": {
          "id": "aec23bdc-51c5-45ca-a449-bc9b52bef977",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3c10811e-9a80-4503-a971-cc42ea336d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d809002b-575f-4f04-9a4e-1b5eddfbefab",
        "cursor": {
          "ref": "c732d8d2-8629-4056-b741-0bb3e35da5e9",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1f694a4a-fc5b-487b-8140-b29613105332"
        },
        "item": {
          "id": "d809002b-575f-4f04-9a4e-1b5eddfbefab",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "027c6cb6-bbb2-4bbb-8ae1-007148cb197d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb8dd51-748f-444d-a9f7-09c3b7065ff4",
        "cursor": {
          "ref": "d9fd948b-de33-4018-bd13-a35c6e1f6e7e",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "60baa9fb-d153-4367-8c08-10d4441bf24e"
        },
        "item": {
          "id": "6fb8dd51-748f-444d-a9f7-09c3b7065ff4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "35d58a49-a067-40f8-a3f3-3e694400f34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c742a48-ad94-4bc7-9057-ca75877cdafa",
        "cursor": {
          "ref": "4d93de93-8877-4424-8e9b-30895c521411",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fa2c111e-7ad2-4e55-acd1-9f6d418b8e40"
        },
        "item": {
          "id": "5c742a48-ad94-4bc7-9057-ca75877cdafa",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ddf034d0-0987-406f-83fc-dcdaeb407dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89c0caf-a01c-4240-aefb-e01f0c17b772",
        "cursor": {
          "ref": "ab7c9fe2-edac-45dd-a227-b6dd89eb865a",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "347c349c-eb1c-4a65-b130-bd0f654ce8e0"
        },
        "item": {
          "id": "d89c0caf-a01c-4240-aefb-e01f0c17b772",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a5c71eaa-88c7-45c6-97c4-6a8f1ab5d762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07927ba1-e589-43cc-8646-ea767d5dca90",
        "cursor": {
          "ref": "48121fd8-9ee9-48bb-8ed8-cef3dbcc3eab",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ca171eef-8b4a-40a7-aaf5-5fc9ceb5c47d"
        },
        "item": {
          "id": "07927ba1-e589-43cc-8646-ea767d5dca90",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f9d53ce1-61cb-4cd7-bc40-cfc00d734282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b24940-bb15-43a3-965d-16b11d7c3956",
        "cursor": {
          "ref": "be37d1c8-3621-442c-8da9-9b1c3a9e308b",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4553092f-880f-49ee-8e3e-5a06b57aa30f"
        },
        "item": {
          "id": "a9b24940-bb15-43a3-965d-16b11d7c3956",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b6b60ff0-dc58-4961-89ae-f4e2b487d259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc03885-fb42-488f-8b00-038cbc596191",
        "cursor": {
          "ref": "0568c82b-5108-429d-864e-86d6a536d695",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "345cfae7-735d-45e5-add0-543c7a5d9f54"
        },
        "item": {
          "id": "acc03885-fb42-488f-8b00-038cbc596191",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f1e4fcd4-b1f5-4545-b557-87fd258ca0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbdfd3f-b36b-40ce-85ba-f6f0ff973d5d",
        "cursor": {
          "ref": "600a1b40-876d-46b9-8933-3509da700ad4",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fa834e51-3b6f-4213-918b-5bf713a041b0"
        },
        "item": {
          "id": "ebbdfd3f-b36b-40ce-85ba-f6f0ff973d5d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e21b6687-b3e9-4b5f-bdf3-be57b906ce77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f736edb-d4f1-4b8f-9ef7-3e739723474c",
        "cursor": {
          "ref": "52e626f9-c5b5-4ef1-8b22-7de825477126",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cf775baf-3e21-450a-a5f1-8ac281354bac"
        },
        "item": {
          "id": "2f736edb-d4f1-4b8f-9ef7-3e739723474c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6d676db4-4f8f-4c83-b207-ccb4c64bb6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368df791-2866-4aaa-a7fa-fe1f6afed7da",
        "cursor": {
          "ref": "b9b87342-15f4-4161-9157-ab8413889c58",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "39459312-77ba-405d-8b23-3893f1e76321"
        },
        "item": {
          "id": "368df791-2866-4aaa-a7fa-fe1f6afed7da",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f35e58f7-e3d9-40ec-9f9b-4822cf3178c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5dc362-5bbb-4144-8e28-35d7f7e37901",
        "cursor": {
          "ref": "ace05b30-20c3-451f-a022-e693085d7763",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "51093ac1-f252-4f86-aad8-90b6f0f4fca9"
        },
        "item": {
          "id": "6a5dc362-5bbb-4144-8e28-35d7f7e37901",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "54a964d2-e2f1-437f-abe4-7e41db212fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8653c70-2a82-4243-8b5b-8bc1358b8b54",
        "cursor": {
          "ref": "023a0ac2-b187-4bd7-a538-4010e1242ced",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cd60be40-a4e2-418a-a7bf-4deb3da15e2a"
        },
        "item": {
          "id": "f8653c70-2a82-4243-8b5b-8bc1358b8b54",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7e957c90-a510-4122-b0f1-8ac6cd861c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1958a859-1b86-4492-a3d6-f9e057df9428",
        "cursor": {
          "ref": "658428bd-d085-48f0-a526-6401c6f49feb",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f466c15e-a5c2-4188-bf81-1e1aa5a101f6"
        },
        "item": {
          "id": "1958a859-1b86-4492-a3d6-f9e057df9428",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d6d5ac04-99d7-4afb-817b-6c0fd58c5fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a2673c-ab7e-417f-b964-54076803fec6",
        "cursor": {
          "ref": "4a841755-0c3f-49ac-84d1-fadd905beff8",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "22bad204-c3dd-4929-aa73-a3d8a67f04d2"
        },
        "item": {
          "id": "f1a2673c-ab7e-417f-b964-54076803fec6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3f0aaea4-22f9-46f1-acd1-83bfe310e7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46b0029-73fb-47ec-9eae-7281d44f31b7",
        "cursor": {
          "ref": "d88ccca4-31d0-4812-a6e5-1d189e5db4c2",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "373c34b2-b308-43cd-9a28-827acf2984eb"
        },
        "item": {
          "id": "b46b0029-73fb-47ec-9eae-7281d44f31b7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "726798a7-1a15-498a-925d-d7ca6db89db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db66a25-2988-4b9d-849f-e086b01fdc1d",
        "cursor": {
          "ref": "c6e509d7-fd09-4359-910a-9809837f68a6",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6c0c8840-8349-471f-b097-a3ac86049aa7"
        },
        "item": {
          "id": "4db66a25-2988-4b9d-849f-e086b01fdc1d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9df247d0-0566-4d17-b4f3-0e9007d13b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c74e56-4ce6-4ea6-97e6-6b35379aee5c",
        "cursor": {
          "ref": "6ec44316-9f90-4bb4-81e1-c390da5083eb",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "646bb75f-e52e-47cc-928d-1bba0e8454ff"
        },
        "item": {
          "id": "90c74e56-4ce6-4ea6-97e6-6b35379aee5c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "58863c19-5d3a-415c-8db8-d75a37c1837a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd89d6e-8ae1-4642-894b-4142cebc3fb8",
        "cursor": {
          "ref": "2b7db946-cf90-4deb-90fb-4b2329b3278d",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "45dff06f-17ba-485d-bd84-c1660c1f365f"
        },
        "item": {
          "id": "abd89d6e-8ae1-4642-894b-4142cebc3fb8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "16aa39fe-857c-4c37-b2b9-6b541262eaf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e839fe-142d-4399-b501-121998f7f0ef",
        "cursor": {
          "ref": "85df1c71-c871-45b4-906e-bb15760440d8",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "050dc564-783f-4b2a-af33-d60484303945"
        },
        "item": {
          "id": "68e839fe-142d-4399-b501-121998f7f0ef",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7dd20596-c48d-4764-8266-465ae706dbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f95f6b-2dde-471c-bbb7-55c1e0cc302f",
        "cursor": {
          "ref": "d9925feb-9a20-4130-a12b-0cc714706e56",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5a996a18-f149-4b46-b4cf-675d0f6169ac"
        },
        "item": {
          "id": "12f95f6b-2dde-471c-bbb7-55c1e0cc302f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7745de31-1753-4689-96db-915d1a4d411e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33625d5-1bb9-40b7-aac3-5fae69b9b63e",
        "cursor": {
          "ref": "1d525ab9-fd49-4ffd-a0b6-d7a3ec1ad62d",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "67d21d84-d4e1-4e8b-a347-336fdef504a5"
        },
        "item": {
          "id": "e33625d5-1bb9-40b7-aac3-5fae69b9b63e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "29e2bffd-c365-4ad9-b7b7-6c475729a61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09882b24-5447-4e4d-8140-12e439c9dbff",
        "cursor": {
          "ref": "be1df4c5-65c1-41b8-a753-e5b286f5ee16",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "72a02ce8-773d-4d3d-ac6e-b5ef510e8f06"
        },
        "item": {
          "id": "09882b24-5447-4e4d-8140-12e439c9dbff",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bd9cac7e-bbe4-4eb5-b23c-18628411a21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd57f384-4968-43f8-b6aa-b805ece4a84f",
        "cursor": {
          "ref": "1e533be0-f466-4fd0-9075-5b59e78e16be",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2a43fb44-4986-446f-84d4-c2d6735ca986"
        },
        "item": {
          "id": "dd57f384-4968-43f8-b6aa-b805ece4a84f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b74d6377-e07d-4ff6-9db7-f47169185e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bb295b-b1bf-4514-9df2-f0576d063ac0",
        "cursor": {
          "ref": "47feecb1-ed71-4111-bee4-eec7a8c89493",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a12e5d5f-7ca8-46ac-ab90-08f323e68216"
        },
        "item": {
          "id": "d7bb295b-b1bf-4514-9df2-f0576d063ac0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5e7ce2fb-88c1-424b-a78a-acae111a5285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdb8ec1-98de-4ea3-9c64-92385efd2bd7",
        "cursor": {
          "ref": "e208bfe9-6520-46fb-97de-58bd1157753c",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "939a75ad-6dcb-4fa2-91be-d9ef850f7b47"
        },
        "item": {
          "id": "dcdb8ec1-98de-4ea3-9c64-92385efd2bd7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "26ec5c86-fb19-4f8e-85bb-a368c6bed1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5af06a2-953c-42de-aacf-fdf3c0150781",
        "cursor": {
          "ref": "aa937217-4ea9-4a20-88ed-a05937333810",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8df704b6-037b-4c09-b878-b1d44b682073"
        },
        "item": {
          "id": "d5af06a2-953c-42de-aacf-fdf3c0150781",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0dd306c1-965f-4ef7-a2a4-85764f8bd797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6492f1bd-923d-4b7f-b768-75170fe49512",
        "cursor": {
          "ref": "5eed8bf5-0260-4d37-b245-976fe2724502",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "85791350-4b3a-47a1-aed0-79bec91bcc59"
        },
        "item": {
          "id": "6492f1bd-923d-4b7f-b768-75170fe49512",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ce389a8e-7911-4bf8-88be-33b60b0b904f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e8fb44-2f55-4996-adb2-713951f8c8fd",
        "cursor": {
          "ref": "5b152166-310a-4308-83bf-77744f22c3ec",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e45c098a-12b3-4d60-877f-bb623508368f"
        },
        "item": {
          "id": "f9e8fb44-2f55-4996-adb2-713951f8c8fd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e95045e8-2b88-46b8-bddc-4a21ca718062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86b4a5a-43ec-43f5-87a8-8172525694e9",
        "cursor": {
          "ref": "dd762846-f43a-4802-bb25-ad1ae8c70091",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b35767c3-a75a-4d21-a28c-58cd800b167c"
        },
        "item": {
          "id": "f86b4a5a-43ec-43f5-87a8-8172525694e9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "04d3ab68-6f32-44b5-91a2-6fabb0367998",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bb3e42-b798-4d8c-950e-7c3115e7bddf",
        "cursor": {
          "ref": "73c67b61-7064-4344-a1f2-11c1015c8e07",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a28431ad-0904-4070-b09b-367f35cbf67c"
        },
        "item": {
          "id": "b6bb3e42-b798-4d8c-950e-7c3115e7bddf",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1b2cc9ed-1213-42d9-8bb6-75a1456bd49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "5a866111-8e4b-41dc-a343-e83b60b02fb4",
        "cursor": {
          "ref": "5db11447-3e29-47ce-9d6f-e6361de94f8b",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "54343fc4-2998-4f6e-bace-b5721dfc0b1a"
        },
        "item": {
          "id": "5a866111-8e4b-41dc-a343-e83b60b02fb4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e71cd3cf-7f55-49ac-b4ed-fd6022a95209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "9cb9cc0b-7631-4565-914e-056ba0e19e3f",
        "cursor": {
          "ref": "90ac8588-5339-47fc-bf92-330137d6a621",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d0d95220-d0a5-4c97-826a-dce14fc4f42b"
        },
        "item": {
          "id": "9cb9cc0b-7631-4565-914e-056ba0e19e3f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4655f3d8-e99d-41e2-b380-f5edc9271e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "490407a8-f0f3-4740-8117-3836bbfdaed1",
        "cursor": {
          "ref": "f4c3558d-5114-4446-8df8-c4fdd09e551c",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b75f7846-beff-491c-a058-d3bc830d78a3"
        },
        "item": {
          "id": "490407a8-f0f3-4740-8117-3836bbfdaed1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "65b0687c-586e-47d9-8dff-9cdac6efcc3b",
          "status": "Created",
          "code": 201,
          "responseTime": 6370,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "652cdec6-129c-43c0-9312-b2367499906a",
        "cursor": {
          "ref": "f840f506-399c-418e-972a-8a19683b0702",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "98fe3322-c74d-4105-a28d-c6b189eb7ed5"
        },
        "item": {
          "id": "652cdec6-129c-43c0-9312-b2367499906a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6072fabc-88ba-4ced-864b-ff6edef6b369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "d2932705-0af9-4a3a-8ac7-1f1eec719194",
        "cursor": {
          "ref": "fc51de6e-4279-445c-b33d-66b99323f13b",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a542fc41-34f0-468f-8250-9a49a8322f83"
        },
        "item": {
          "id": "d2932705-0af9-4a3a-8ac7-1f1eec719194",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b1eab52f-feaa-4a66-8402-2141e6718954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "d2e7403a-f7b2-4d3e-bc0a-8a2c54a587f0",
        "cursor": {
          "ref": "5080270f-6d84-4a83-84ac-f8e9ac3a154d",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "35312bb1-5c85-4d0b-9fd5-50b7edd5598f"
        },
        "item": {
          "id": "d2e7403a-f7b2-4d3e-bc0a-8a2c54a587f0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3c6e62a5-d621-4af0-b993-869e052125c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b19c8b-2da9-435c-a664-9a7d6ab916a8",
        "cursor": {
          "ref": "e35dca10-2b4d-4087-96d8-8da4a38df2c1",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0269588c-38f1-42e4-8d3a-7ac5ba0a63d1"
        },
        "item": {
          "id": "33b19c8b-2da9-435c-a664-9a7d6ab916a8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "35af5937-7deb-43e9-a7ff-42801c1248bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6464b96-3097-4ef9-b10a-8b276c358f59",
        "cursor": {
          "ref": "e22a1b73-e9f4-4223-b984-074ddb982c13",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a07afe01-6259-4dca-9290-91971af19f17"
        },
        "item": {
          "id": "a6464b96-3097-4ef9-b10a-8b276c358f59",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c98d722a-49b7-4549-9432-3adbc1118e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e1be7d-0162-4d27-8036-3f8a399428f6",
        "cursor": {
          "ref": "14004096-8ea9-4bec-ac26-f2982d59f443",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "02fa9854-685a-45d3-80d6-347cb62091dc"
        },
        "item": {
          "id": "d9e1be7d-0162-4d27-8036-3f8a399428f6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "87742bcd-487d-4fba-bca7-94ce6e00296f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7e0163-02fb-4295-b0e5-35873b20c9ff",
        "cursor": {
          "ref": "f99bf3e5-7418-4ea6-a9b8-f4bade0ce22b",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "44fcc54f-8f70-4ee9-83c5-22d199258ed6"
        },
        "item": {
          "id": "4c7e0163-02fb-4295-b0e5-35873b20c9ff",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8df900fb-d332-4304-bb94-e88c3e30a647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a0aff6-a15c-44e5-bbbd-5274a30a3f31",
        "cursor": {
          "ref": "8cf857aa-3d31-42e2-bcd9-0371f25316e5",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7b36bbac-0607-440d-9c58-b93ccaef5b27"
        },
        "item": {
          "id": "b6a0aff6-a15c-44e5-bbbd-5274a30a3f31",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0961df3d-0572-4021-90bb-b5585edb8864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce76c0c2-db6f-4167-956e-bf7fe6f594b9",
        "cursor": {
          "ref": "7468c868-1c77-4928-ad2f-e02d9f4a03c4",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d6f2cd0a-1fe3-4c28-9f8b-d64d81b133b3"
        },
        "item": {
          "id": "ce76c0c2-db6f-4167-956e-bf7fe6f594b9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "819d1081-468a-492c-9e3d-67de0abc96f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc547a76-68e4-48f7-96ae-f8f13792b3f9",
        "cursor": {
          "ref": "85610aa9-dff0-45b3-a251-bda080db596e",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "02377668-5f29-4b7c-ba82-61a121c8d610"
        },
        "item": {
          "id": "dc547a76-68e4-48f7-96ae-f8f13792b3f9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "30bc374d-b21c-4ab6-9910-1f8656f24fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558b8879-5007-459e-ad15-3254a1e491a7",
        "cursor": {
          "ref": "0aa78ee2-0686-4b4a-a3f8-66e527ba01cd",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a730599f-b88b-47eb-a79b-1df728d667d3"
        },
        "item": {
          "id": "558b8879-5007-459e-ad15-3254a1e491a7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d43d8dc4-c2ef-4279-bf26-0a7d8b56cbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9900c8b-9baa-4d9b-a701-7b3fe7a964d2",
        "cursor": {
          "ref": "cc6f4806-b65f-40df-afb1-f0bce32074a5",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fc004afe-75af-445b-9d1c-11b3c4a81cd0"
        },
        "item": {
          "id": "a9900c8b-9baa-4d9b-a701-7b3fe7a964d2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "443ab86c-1f5d-4bc5-8b33-443c10a43d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a70b7a2-6ff6-45a2-8527-4d37b5bc25dc",
        "cursor": {
          "ref": "2c85b9b8-7b7e-4305-a249-9e642a11c6f2",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1a1087e6-50db-4aa3-af58-b516dc0b6e9a"
        },
        "item": {
          "id": "4a70b7a2-6ff6-45a2-8527-4d37b5bc25dc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f403524e-d526-4a35-b1b1-9249061c47d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5652794c-2988-499d-89a6-697448d01fb1",
        "cursor": {
          "ref": "6547f86d-c662-4e48-beca-79176b7bd3f0",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6ba7bed7-bb58-4fc1-a367-b32182ea936a"
        },
        "item": {
          "id": "5652794c-2988-499d-89a6-697448d01fb1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d6a2a1af-8a1c-423c-808a-42829c53b0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ca5bbf-5765-4f3a-8b55-1cd2fd5e0c29",
        "cursor": {
          "ref": "f615671f-2c4b-4a59-961e-60ef50489d60",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "02bed7ea-f614-4c5a-a778-a4f8400b1277"
        },
        "item": {
          "id": "72ca5bbf-5765-4f3a-8b55-1cd2fd5e0c29",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cdabacd1-5e77-4cc9-a32b-05ac1d6f529a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a315183c-5007-4992-83d9-cbf13d051015",
        "cursor": {
          "ref": "7cb64e93-fe93-41cb-bb5f-848b234760c7",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0f692695-9466-4a44-9856-688b6435dbcb"
        },
        "item": {
          "id": "a315183c-5007-4992-83d9-cbf13d051015",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "36cc7c37-5b20-4982-a49f-dfa3235da097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edeeead-b543-4226-a5ed-de4691903dd3",
        "cursor": {
          "ref": "1973bfaa-fc86-4917-9e97-1e7caf6d6369",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "959de7f3-ccf5-4777-b26a-f9d1901b25ba"
        },
        "item": {
          "id": "2edeeead-b543-4226-a5ed-de4691903dd3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4b89f67e-51f0-4a3d-9324-afd18b213a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa49cc4-e7a4-439c-95fb-5c2306fcfd6b",
        "cursor": {
          "ref": "b907c70c-99f4-47a7-9c2e-7af7d99cee6c",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "52bf419a-2ff7-45e4-a230-1adbfa67a276"
        },
        "item": {
          "id": "1fa49cc4-e7a4-439c-95fb-5c2306fcfd6b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "15906add-ae88-4ef0-9357-dd915b88430e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12040173-79ce-4cd3-8d19-d2fa4f4c7a47",
        "cursor": {
          "ref": "69185522-9f2a-4b94-9a57-33e45aba7ac3",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b5798714-840d-42b5-a6ff-a4a1d96d4a10"
        },
        "item": {
          "id": "12040173-79ce-4cd3-8d19-d2fa4f4c7a47",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "261d2757-71e8-4ea0-a271-30684bb80ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bf209a-6096-44ce-87f3-06d1786bae87",
        "cursor": {
          "ref": "9dc887d5-eaa8-450c-b174-6092f2cab41c",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "845e85fb-e754-427e-a131-7d7409d2da70"
        },
        "item": {
          "id": "18bf209a-6096-44ce-87f3-06d1786bae87",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9d001fa4-9e8e-4689-974c-8fd8825a6970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c2aa4f-9c00-4c88-8305-65ffc2d28b09",
        "cursor": {
          "ref": "0cf5e280-38e5-4dfd-8353-26fa5fb666ad",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d9c576ee-f406-4ae2-81dc-c1de60c820f2"
        },
        "item": {
          "id": "84c2aa4f-9c00-4c88-8305-65ffc2d28b09",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "68da888d-6008-4183-8121-8c87991d9f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b683f390-d8ac-4008-9879-4209fe4751cd",
        "cursor": {
          "ref": "8278e95b-5383-4813-97cc-431b1a342537",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0b717dff-31eb-4544-a6c6-6e0e98b8a8e2"
        },
        "item": {
          "id": "b683f390-d8ac-4008-9879-4209fe4751cd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8808113b-c6f8-40f1-b28c-a97a7765a8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edb5735-e762-4757-a543-d05efe1a9512",
        "cursor": {
          "ref": "25de9262-b4e7-4a20-9df1-24b33fb2d134",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ac17050c-3a47-46ef-bfab-d0c71e2d1d80"
        },
        "item": {
          "id": "1edb5735-e762-4757-a543-d05efe1a9512",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a95f2133-1863-4975-8e48-3d5d909f241d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072a4055-a5ae-43f3-b3cf-ffe20d0cd9d2",
        "cursor": {
          "ref": "9bdd66e2-1cda-4f57-babb-fd9203533e7b",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5b7c1254-64ff-4b23-929b-62cc4d60f597"
        },
        "item": {
          "id": "072a4055-a5ae-43f3-b3cf-ffe20d0cd9d2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "364bd68f-a6e6-4e17-adf8-fb55ec96d9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959e1670-db3a-4da5-b94c-6b14b9d4dcda",
        "cursor": {
          "ref": "748e05a7-a1b0-43fa-addf-f8378d5454c9",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "60c698ce-d7f2-4f09-be35-d2c36499035e"
        },
        "item": {
          "id": "959e1670-db3a-4da5-b94c-6b14b9d4dcda",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b5e28a23-5707-46da-97ca-9e2d74f7e12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f56cb23-3836-4c07-ab1f-a5593431cda3",
        "cursor": {
          "ref": "6e19ab19-ef4f-459a-8452-d0468757074c",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c9876df2-a804-4f13-9931-59c8a22bbf2d"
        },
        "item": {
          "id": "3f56cb23-3836-4c07-ab1f-a5593431cda3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1823d687-f459-44b5-b83b-9d74677783cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efacb31-a258-4990-9428-07d72a125b49",
        "cursor": {
          "ref": "0ad760c3-c6c7-495e-89d6-64705de73c9d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "84ced8f4-2925-4a2d-a98f-c02216de90cc"
        },
        "item": {
          "id": "7efacb31-a258-4990-9428-07d72a125b49",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "71879ed1-7a1f-4f63-91ab-c27a3ea09e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de141cb1-4c91-4a94-8271-62cd59613756",
        "cursor": {
          "ref": "b6aa7ea7-8349-4051-b275-fcd7c4234e25",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "829fe495-7408-4464-b33c-e53768b161c3"
        },
        "item": {
          "id": "de141cb1-4c91-4a94-8271-62cd59613756",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "232870e9-80b8-4fc3-a166-c4f32938e6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5727c889-6c85-44c7-a95e-ad383c56e87e",
        "cursor": {
          "ref": "2939f9b6-a2dc-4065-ac05-a22f4bf43071",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d34170db-731d-4552-bcc5-785053cdcc4c"
        },
        "item": {
          "id": "5727c889-6c85-44c7-a95e-ad383c56e87e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ea383bf2-a9f8-4c88-abd3-b595ec42c1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fca579-b4e2-424d-a39b-500906b4c6cd",
        "cursor": {
          "ref": "8d1018bd-8de1-4175-9a0a-0f7f9fd39de6",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "87406846-58a2-4aba-909f-19b90e82bebd"
        },
        "item": {
          "id": "d7fca579-b4e2-424d-a39b-500906b4c6cd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "218ddfdb-0e34-4610-9536-358d50de1e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135da0b5-a2ac-479c-81ef-15a8540f2d51",
        "cursor": {
          "ref": "f3778167-b4a8-41e5-a94b-4a9c844a6f19",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ab337ef6-da89-4dce-9f4f-2d97663d12c9"
        },
        "item": {
          "id": "135da0b5-a2ac-479c-81ef-15a8540f2d51",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "afc6bf91-9397-4fb7-b2bf-0c23a643195d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19c8a48-425d-4b84-bcfa-e4ddc37e3488",
        "cursor": {
          "ref": "40da619d-709b-4f01-a34d-c499266cbeae",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a53ef122-5519-4455-8c2b-367920983224"
        },
        "item": {
          "id": "d19c8a48-425d-4b84-bcfa-e4ddc37e3488",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "61d61306-1660-4b0f-bade-33257050ef51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3d5ef5-e07b-41ea-a372-05545ea6aa61",
        "cursor": {
          "ref": "b4a3eb08-2117-41b4-ae70-ecd8dc6970b1",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "27132663-9a31-44f7-803c-bd909dc7f302"
        },
        "item": {
          "id": "ce3d5ef5-e07b-41ea-a372-05545ea6aa61",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2303322b-9d3d-4721-bd0a-1af1afd04a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdb85e0-2d01-4cbc-99e2-3408e6196350",
        "cursor": {
          "ref": "1d2013a1-80b0-4485-b04d-549bb1036b64",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9b85e81b-c95e-4cdb-abc7-b2247b3de205"
        },
        "item": {
          "id": "1cdb85e0-2d01-4cbc-99e2-3408e6196350",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cd853374-648f-4685-8ce5-f9264e6b4167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b604f12f-34ad-451f-a0ef-4487287af49a",
        "cursor": {
          "ref": "246bca39-1847-4e7d-a85a-30ee8b7ef346",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "36aa7114-74d8-4004-9e49-3ca66587a713"
        },
        "item": {
          "id": "b604f12f-34ad-451f-a0ef-4487287af49a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "70347449-5744-46c1-8619-28035c32b628",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60558acd-281c-45c1-b080-87591ba88285",
        "cursor": {
          "ref": "ec2e3f3e-fa2c-44f8-9c7d-9405f8ef9c1f",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6ac9680e-31c8-4c9d-a787-53d088af9fee"
        },
        "item": {
          "id": "60558acd-281c-45c1-b080-87591ba88285",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "36823690-77f5-41aa-a844-036d6a704331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46ca3ed-bbb8-4a55-856f-da4dc22d01f1",
        "cursor": {
          "ref": "733063a2-f70e-4474-b1c3-25769757f6af",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "04bceee6-1547-4362-8156-325791331b6a"
        },
        "item": {
          "id": "a46ca3ed-bbb8-4a55-856f-da4dc22d01f1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9456549d-5f6b-464f-89cf-dcd653dd8575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64318eb-8893-45e1-a7d4-60b34d7681f2",
        "cursor": {
          "ref": "01224b13-2fc8-4b6d-b160-eb8e32a4ec8b",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "54cc997a-266d-4788-a1ec-e5488c71800c"
        },
        "item": {
          "id": "f64318eb-8893-45e1-a7d4-60b34d7681f2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "53e88934-fd56-4cc4-90bf-46021552061a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79c422a-37fc-4808-9302-3e272226a19c",
        "cursor": {
          "ref": "d4bc003e-9d0b-458f-9826-faa948adc10c",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "12734e85-48e6-4fbe-9ec5-2d7f3e93baea"
        },
        "item": {
          "id": "d79c422a-37fc-4808-9302-3e272226a19c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ba2ee406-f5f8-482e-93ca-440782b55296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b97c92-9099-4df3-a1c7-32a71e2f5a92",
        "cursor": {
          "ref": "01e62c98-437f-4c96-8c48-3baac393df11",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "71fa4184-e510-4515-9aad-3b2774014232"
        },
        "item": {
          "id": "74b97c92-9099-4df3-a1c7-32a71e2f5a92",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d13e40a7-243a-40ea-82fa-223014ccad3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53cd2a9-9ce0-41bf-900c-b1d243be1aae",
        "cursor": {
          "ref": "952e1526-daba-4c7e-885e-fe0ce362af25",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fb74ac0b-60d9-45e4-a1ac-ce168cba50ec"
        },
        "item": {
          "id": "a53cd2a9-9ce0-41bf-900c-b1d243be1aae",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1033b5e7-16a3-473b-a8d6-7b115c2592ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c28b985-c1c1-4752-981b-346ec4673928",
        "cursor": {
          "ref": "533fa43e-883a-4873-a02d-1fec712465e5",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "57b54f94-fd48-42d0-96b3-ac0bc987484a"
        },
        "item": {
          "id": "1c28b985-c1c1-4752-981b-346ec4673928",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9c91ab76-ab0b-4491-87ef-e57467227e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a45243-a994-4e02-96c0-a92ad13b4058",
        "cursor": {
          "ref": "abfa03cd-3e74-443a-b7a0-04bb54d9695b",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "adc9acb5-0b97-4a81-87fe-ceca3d8fed8e"
        },
        "item": {
          "id": "d6a45243-a994-4e02-96c0-a92ad13b4058",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a3b4106a-1aa4-4a6f-9235-d7adc8537bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782f0434-c9b4-46e9-8624-3632ea5fa19d",
        "cursor": {
          "ref": "689a5bd9-a740-469a-819c-c3cdbf839201",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2946a913-642b-4809-817d-263873b40a7f"
        },
        "item": {
          "id": "782f0434-c9b4-46e9-8624-3632ea5fa19d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9632fb42-5037-420e-b5be-d896baa2846f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b6e14a-a7a7-4367-938f-f128827af52c",
        "cursor": {
          "ref": "05e2c2d8-f325-4ba8-922d-aa9deb5f2a5f",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d7eb5029-4ac5-401b-9287-8c4c01b089e7"
        },
        "item": {
          "id": "f6b6e14a-a7a7-4367-938f-f128827af52c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9c25431e-e5db-424b-86b8-c0aa8af55424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4347d0-f53d-454d-9513-a61384a2ff55",
        "cursor": {
          "ref": "799b1979-3b57-45ca-8921-0186cf05f42f",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "83f367b5-cfe1-4316-a50f-7bb2389e6699"
        },
        "item": {
          "id": "9b4347d0-f53d-454d-9513-a61384a2ff55",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cfa8de30-ce13-4027-b90d-a6ff32953b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3709d39-ff1a-4060-b0f9-0c717e040985",
        "cursor": {
          "ref": "4cb29634-5415-4e07-abfa-34cefa6b57e1",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ee695723-4f34-48bd-a0a2-b2e070041f4d"
        },
        "item": {
          "id": "b3709d39-ff1a-4060-b0f9-0c717e040985",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7d37b362-6bda-4f45-a23d-4fb395833523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a552ee-0efe-4a7d-a91c-242165f6dc31",
        "cursor": {
          "ref": "13a7d439-374e-4245-95f4-a246727cdda8",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "50f7ab3a-46c8-428c-a8ae-f453a66ab1a6"
        },
        "item": {
          "id": "21a552ee-0efe-4a7d-a91c-242165f6dc31",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9ec9a401-b5b0-4bc0-9b1e-c390c4c34ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7dc3d62-49a5-423a-b36d-ed2bdd894592",
        "cursor": {
          "ref": "8bc2c261-0612-45f9-8098-e82b884fa131",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6373f4da-5444-4075-b8f5-fc66b3c57f16"
        },
        "item": {
          "id": "c7dc3d62-49a5-423a-b36d-ed2bdd894592",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "90b78529-e9ca-41bd-8aa3-616573ca8bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ab0013-cfff-4601-9416-b5737eb76392",
        "cursor": {
          "ref": "2f2c66b0-1a55-4ea3-937b-281a4da82e4b",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "929bd62c-e720-4861-9ba3-d0ad105ed417"
        },
        "item": {
          "id": "25ab0013-cfff-4601-9416-b5737eb76392",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1c40d875-39c2-47d3-9ac0-07d10b5412b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2adb04-644c-4fb5-9be3-45bc499e3f95",
        "cursor": {
          "ref": "bef3f71d-9752-490e-b8b1-72c28a551995",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f226f6b0-6b24-4b46-a00c-d307303ce452"
        },
        "item": {
          "id": "ca2adb04-644c-4fb5-9be3-45bc499e3f95",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "05983984-8f9f-4a0c-806a-4feba8c74e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242d2dc7-b67e-428b-b312-5334b1a5a022",
        "cursor": {
          "ref": "bccbdb72-e5c2-4fc8-83cb-723b15c79eb6",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b8997d4e-8a47-43b8-af2b-c3bf7e6cbfc1"
        },
        "item": {
          "id": "242d2dc7-b67e-428b-b312-5334b1a5a022",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "84425fe2-c485-45d1-8cfd-d765ac50fdd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b809eb08-d75c-40d6-9514-94a18691d30d",
        "cursor": {
          "ref": "5da30237-c43b-4299-b0c2-1d6aa682cca8",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bb7a4792-d094-43ff-8874-7592ece10b3d"
        },
        "item": {
          "id": "b809eb08-d75c-40d6-9514-94a18691d30d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "11f2f628-f844-4db1-9d36-41d57f782635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10f7d98-5ef0-4f71-bffc-d7854095b770",
        "cursor": {
          "ref": "65a2f578-6407-47bb-938f-2549e1e03a2c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2a811697-b902-4339-988b-b903007abca5"
        },
        "item": {
          "id": "c10f7d98-5ef0-4f71-bffc-d7854095b770",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a6b7c47b-0612-414a-8e42-7df8b19ddcd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec59316-ed68-453d-b54c-77030c5ac1eb",
        "cursor": {
          "ref": "e77657bb-68c6-44d2-9bb3-57a33b797934",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "631f8bc7-6395-4c61-bbcf-ca7d52a8bf5e"
        },
        "item": {
          "id": "1ec59316-ed68-453d-b54c-77030c5ac1eb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f71be787-e50e-4b84-a112-f7f229beed3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc747463-0c2d-4362-be33-1b2f16af1af7",
        "cursor": {
          "ref": "373e9fab-6642-4041-a9b3-d581ee5b54d9",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0cdc3432-d8be-4355-94ec-a7de9495503a"
        },
        "item": {
          "id": "fc747463-0c2d-4362-be33-1b2f16af1af7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4c338509-1083-46c8-8afb-e82bbeecf61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8abd8e4-1461-4a1a-a9d5-663f85138a9c",
        "cursor": {
          "ref": "c6ab5560-3786-4e82-85ab-6b8d36b73ff4",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8a818f4c-44c4-4b7d-896b-b8a9daff9acd"
        },
        "item": {
          "id": "d8abd8e4-1461-4a1a-a9d5-663f85138a9c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0b13fe31-e83d-4772-b9cd-4007cd547bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a25d28-00e4-4f4d-8285-8f0fc24b03a0",
        "cursor": {
          "ref": "18ec7163-0aec-4600-ae7c-5a09f759a9b9",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ed91614f-703d-4de5-9a96-54f87a617b6c"
        },
        "item": {
          "id": "37a25d28-00e4-4f4d-8285-8f0fc24b03a0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "10231737-1c74-4a0b-889b-3f51c4ada180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c92508a-15d3-4f82-b4ce-353654effe27",
        "cursor": {
          "ref": "b76ed3c6-f843-4edc-80f1-ea968af0c417",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c5e81925-4c89-40c9-8c28-5dbe90984910"
        },
        "item": {
          "id": "2c92508a-15d3-4f82-b4ce-353654effe27",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f723dfd0-6bbc-4c25-a2a7-823d5b0cda19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55264e2-77dc-4f0d-a836-cd3722420ec9",
        "cursor": {
          "ref": "f72c2d4e-8df1-496e-841e-7a79fb2bd79e",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6b957097-b68a-488d-b9c4-07b3918eba4e"
        },
        "item": {
          "id": "f55264e2-77dc-4f0d-a836-cd3722420ec9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e1e33b49-3b67-4e8b-8860-7c0ad877ed22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6187340-54be-4e86-8f47-d1ca23419dc6",
        "cursor": {
          "ref": "16c97226-23d7-4687-aab3-0e1d359669b2",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "581a4bd6-5ef6-43a5-9fe7-a8d443ee1524"
        },
        "item": {
          "id": "e6187340-54be-4e86-8f47-d1ca23419dc6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7253dd4f-9a52-4115-bbc7-f027db3a6a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ed0483-e79a-4ea7-8127-b2faf657abed",
        "cursor": {
          "ref": "bc9dc650-c21c-4118-82ce-3fa69b8d9b21",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8408bdd3-f2d6-44a1-a194-bc5792d1d080"
        },
        "item": {
          "id": "17ed0483-e79a-4ea7-8127-b2faf657abed",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "386427d9-686f-4903-aa45-f5609c6c100f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76aa31a7-eef8-47f2-b4b1-521b7c0dcc3f",
        "cursor": {
          "ref": "393479a2-e782-4812-89f1-b4ad05bc849b",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "29a40536-1327-4ef1-9cf5-0d95369b692b"
        },
        "item": {
          "id": "76aa31a7-eef8-47f2-b4b1-521b7c0dcc3f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "94b28904-0742-4b57-8318-76e3c0340fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0200d235-b8d3-48b4-acb0-a2b0f9a3345d",
        "cursor": {
          "ref": "06d565fc-a61e-4e8f-bf3c-af2b03838b82",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9d3a8ef7-cf9e-4e9a-a25f-cfbd6103c533"
        },
        "item": {
          "id": "0200d235-b8d3-48b4-acb0-a2b0f9a3345d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a4eaea01-bcfb-4848-99f3-3121e51ec2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67b8b3c-d90b-4335-bcb5-d62f058cff50",
        "cursor": {
          "ref": "9f2bed2e-5f2a-4fa8-bf13-6350b14260be",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "af5f1296-a756-4c0a-85ab-416d3719cede"
        },
        "item": {
          "id": "f67b8b3c-d90b-4335-bcb5-d62f058cff50",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "14debae1-7424-406a-8d0c-343d66cf5585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61663971-f56d-46b1-9d6f-4e42bf6dceab",
        "cursor": {
          "ref": "0ced6823-964b-4457-a948-67a1df63cb9b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fdd4a509-3178-44ac-838a-ce667203222c"
        },
        "item": {
          "id": "61663971-f56d-46b1-9d6f-4e42bf6dceab",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "eabb17dc-303d-4610-b6a3-22a170433cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c48f358-bc4e-45b2-8b24-0ddf4e97b0aa",
        "cursor": {
          "ref": "5a234296-a5dd-4528-8854-a6af8bae0638",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "93f139d0-a249-4876-a175-208a91534fd0"
        },
        "item": {
          "id": "3c48f358-bc4e-45b2-8b24-0ddf4e97b0aa",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "18fcbec1-f779-4a52-b6c5-8cab67bacd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e63a560-fe76-46b6-a5d6-24e39420a723",
        "cursor": {
          "ref": "0b92ed00-feb9-466d-8027-43511c2b9828",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d2a1f325-51aa-449f-94c4-08c92e52cb82"
        },
        "item": {
          "id": "3e63a560-fe76-46b6-a5d6-24e39420a723",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "09c8ed8a-280e-4668-8557-aec799228be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239c5463-8bb6-484f-82da-5a689650471b",
        "cursor": {
          "ref": "6b46c870-7ccc-4e75-ac1f-6fa6d2234d34",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b6a6bd92-f32f-42af-b4bb-51242b5ebbbc"
        },
        "item": {
          "id": "239c5463-8bb6-484f-82da-5a689650471b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "324b1c5b-c177-4ce7-a6a0-ce8989ae9d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a357d2be-2e67-4ec5-80fc-18df33b05c39",
        "cursor": {
          "ref": "d6ce1f93-9bac-44d9-b462-2d31cb551e44",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "16599235-b8cf-440e-a6e0-a25a3a16660f"
        },
        "item": {
          "id": "a357d2be-2e67-4ec5-80fc-18df33b05c39",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c100bf81-7f3c-4dac-9e57-45e20e1818d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec71a58-454f-4046-81b3-96ee94c015d6",
        "cursor": {
          "ref": "e82bb65a-b3e8-4630-8158-e4c93ba8136e",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "04a4b54d-a86b-47e3-8c5e-9737c70d9e64"
        },
        "item": {
          "id": "1ec71a58-454f-4046-81b3-96ee94c015d6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "cc479dba-d800-427c-a41b-a0ef9c827ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac90b67-74f2-43c2-9467-84da7b9f6fc7",
        "cursor": {
          "ref": "3bd1d8fa-b541-4dc8-beb9-95dfeefe4d69",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6cc11a97-fa8f-46bd-86c0-f7c3731ae42e"
        },
        "item": {
          "id": "cac90b67-74f2-43c2-9467-84da7b9f6fc7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "178fff46-a4df-4614-9b11-a8af45025ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e383c146-1c4e-4d17-8207-82f72e18def0",
        "cursor": {
          "ref": "56125524-f81b-4023-a2ea-aed1ac1004e4",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "eccfcfa6-e38e-4fe8-aa9d-e8d22f02f8e4"
        },
        "item": {
          "id": "e383c146-1c4e-4d17-8207-82f72e18def0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9de259e2-b17e-48b0-8646-4111a7852557",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007a8bf0-9d1b-4ba2-8adb-afd22a5ba40b",
        "cursor": {
          "ref": "ca483aa6-d21d-47f2-84f1-fa81c03ad1e1",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1db2ec28-a55a-4003-8c52-eff131cc61cb"
        },
        "item": {
          "id": "007a8bf0-9d1b-4ba2-8adb-afd22a5ba40b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "37028a53-47ad-4032-a976-100532503494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baedc652-a954-4769-9cb2-a69928919526",
        "cursor": {
          "ref": "3f37a2e7-1b71-41d0-854a-370b8819a16c",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "92e8c18d-81fc-4a4e-82c5-32d089a8de50"
        },
        "item": {
          "id": "baedc652-a954-4769-9cb2-a69928919526",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6b636ee9-f680-49ae-b488-b5e99fee4c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f999b1d0-096a-4c73-af6d-9a963853c5ea",
        "cursor": {
          "ref": "53e1055b-3421-47aa-ab6b-694d3ef72c77",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "84c0da54-5a84-4695-8f72-cf27510ef038"
        },
        "item": {
          "id": "f999b1d0-096a-4c73-af6d-9a963853c5ea",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b193eaf6-e948-440a-bd56-d3123e8ba484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a99367-2f8e-4abf-a55f-3f05d5420b49",
        "cursor": {
          "ref": "8dd145f6-1c26-4edf-8c91-e87eec8071a4",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5b3a61b2-f538-4a57-9474-762b49942a8c"
        },
        "item": {
          "id": "74a99367-2f8e-4abf-a55f-3f05d5420b49",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "271fc97f-141f-4828-8058-da784a587d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d205ad-9e3e-4923-a710-02e248d5cb20",
        "cursor": {
          "ref": "6810d7d6-9c10-42e1-9965-87329eedfc32",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "426e828e-a59a-40f7-9d98-3c69c0ce358a"
        },
        "item": {
          "id": "37d205ad-9e3e-4923-a710-02e248d5cb20",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ea39e9bc-ff2c-4d6a-951f-639458f6b8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc7fcb7-b6ea-4446-b31a-3e477cfe386c",
        "cursor": {
          "ref": "2f8a562e-dc7c-4bb1-97c9-2abf1aa70424",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d1267a7d-e426-4a0b-80bf-1145bc70092d"
        },
        "item": {
          "id": "7cc7fcb7-b6ea-4446-b31a-3e477cfe386c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "378c4e0f-a6b2-41ed-90d3-db0a36a431e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7801d722-d839-436f-9f4c-ac59b06d1ad1",
        "cursor": {
          "ref": "c51f5c44-5772-4be9-ae74-15cb1d695682",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a752bd7b-b470-43f3-8ca1-2076229c73cc"
        },
        "item": {
          "id": "7801d722-d839-436f-9f4c-ac59b06d1ad1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3e7a2e46-ce51-42d4-ba18-bd4d0f4190d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae86560c-0837-42bf-a8de-3715c0168a8a",
        "cursor": {
          "ref": "c21fd0ad-3408-4b86-999d-6bae4ac89b1f",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6e04df70-0e14-4996-9e42-246d6bd9e615"
        },
        "item": {
          "id": "ae86560c-0837-42bf-a8de-3715c0168a8a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f9010d83-c859-4984-91bb-9fd9e2576609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14aa589-d6f3-4158-877b-22ccce5e497d",
        "cursor": {
          "ref": "2aa7889a-165d-4778-9b11-3b61b1e75055",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c3b5220b-2081-435c-92b8-c2da045be665"
        },
        "item": {
          "id": "b14aa589-d6f3-4158-877b-22ccce5e497d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b5e285d5-65b6-48a8-93c8-5009cf92c303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff55a110-e4e7-4370-879a-ad3edd1c329a",
        "cursor": {
          "ref": "2418cf6a-383e-4dec-8906-2273f8e7d36f",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cb9527f8-515e-4b7d-98f3-f6cc746d98b5"
        },
        "item": {
          "id": "ff55a110-e4e7-4370-879a-ad3edd1c329a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "536055e1-96d9-45ac-be8a-df8588b60912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327d4c8a-030f-419e-bdc6-320fcec7f632",
        "cursor": {
          "ref": "205e55c3-bdf0-4a50-a96d-4f661657a2d7",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "fd131534-ed63-438e-9447-fdaeeec7aedc"
        },
        "item": {
          "id": "327d4c8a-030f-419e-bdc6-320fcec7f632",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7378f9ea-4233-49d2-be09-abc90d45d4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fa0796-5df7-438d-906d-fc8d0b8816c7",
        "cursor": {
          "ref": "c05fa3e1-f6b2-4007-b6c3-152ae9558b01",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c1e1128e-144b-45e3-818b-a22996d51054"
        },
        "item": {
          "id": "33fa0796-5df7-438d-906d-fc8d0b8816c7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f6342725-e718-4571-b2fa-8087fd689b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7244fad7-0758-483b-833f-54a73401b961",
        "cursor": {
          "ref": "f3dc682e-86f0-4133-a2e4-a819c9ce896b",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "45e43d84-63e9-4488-8337-54732f2dccb5"
        },
        "item": {
          "id": "7244fad7-0758-483b-833f-54a73401b961",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8a8e7d10-94e0-425d-8d69-eeb7ea744230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f045da9-9040-44c1-b37e-b6f6b60f09eb",
        "cursor": {
          "ref": "1b5111fc-ddee-4be2-b0d8-22f8cf07caf6",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3f138b46-f66d-410b-8520-a03b516c3b82"
        },
        "item": {
          "id": "1f045da9-9040-44c1-b37e-b6f6b60f09eb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5505a7f1-cc38-4771-b632-7065a0d25479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb27bd01-9de6-4f0f-a3f7-a21d75217885",
        "cursor": {
          "ref": "e78108b7-9e95-42dc-8575-3a454faef77c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b700f6d1-f53b-4426-a367-e3c8cf69879a"
        },
        "item": {
          "id": "fb27bd01-9de6-4f0f-a3f7-a21d75217885",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6f48b7b5-fa52-4339-92b0-83b68b94c3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfcb003-d5fa-4434-846d-08cdc5b8287f",
        "cursor": {
          "ref": "e4b5f1d9-a885-49a4-a085-61788cda40fa",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e5b333cd-8edd-4826-82c0-9209b118b917"
        },
        "item": {
          "id": "fbfcb003-d5fa-4434-846d-08cdc5b8287f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "27118d7a-7c12-4242-a46f-c288b501b5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb13056-99ea-486f-9240-d27d59afd24f",
        "cursor": {
          "ref": "b4d67ea9-a056-4387-8278-3b7d57a19c24",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ee149ccd-6860-4928-9379-652be9ca901c"
        },
        "item": {
          "id": "9bb13056-99ea-486f-9240-d27d59afd24f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "78338c58-6962-4ee7-a463-b4d23b7b8581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16b82b7-77ed-427e-817d-85512d40b478",
        "cursor": {
          "ref": "e0cd0458-cf9a-47e5-a515-770287722140",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5b35c9f3-d6dc-46b6-a144-013b067b5b13"
        },
        "item": {
          "id": "b16b82b7-77ed-427e-817d-85512d40b478",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c4b98c20-5e63-4693-889c-c8b39d58f749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8772f42f-0762-468f-bc22-0c79cb389859",
        "cursor": {
          "ref": "be4b512b-d511-4e09-8038-15ed3a1cbe09",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cde25d5c-f0f1-4360-b9c5-556d69bff98a"
        },
        "item": {
          "id": "8772f42f-0762-468f-bc22-0c79cb389859",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b6834049-04fc-44f9-88ac-2658926cacdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b41782-3346-43a9-ab1e-3abbb083f12d",
        "cursor": {
          "ref": "b4b4c844-20d3-41d6-8d6f-85b8bbc8d816",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9a2c7d0f-3d36-4d39-842b-ad683d6091d8"
        },
        "item": {
          "id": "53b41782-3346-43a9-ab1e-3abbb083f12d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0fc5a702-77a1-4a38-bb99-07cb3b7c1866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fe27de-0102-4291-8ebd-7bfec097f1a9",
        "cursor": {
          "ref": "c65bbfb6-cd76-477b-b3b3-f3f308e198bd",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "12aeb8fd-9fd0-4244-ac95-3035b97eb535"
        },
        "item": {
          "id": "59fe27de-0102-4291-8ebd-7bfec097f1a9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "72a09400-0c9d-4fd6-adae-88ba2e30b12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dae4b5-b039-4854-8571-3c1543b35ca3",
        "cursor": {
          "ref": "4f53f719-0493-4dd5-839e-fc11f701bc8f",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "04ba6d48-1584-4f75-bd43-5a79d764c797"
        },
        "item": {
          "id": "08dae4b5-b039-4854-8571-3c1543b35ca3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "89181d6f-ed8c-4c3b-a2fb-b23aba7cf322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152d0f65-41a6-4048-b4e6-67451321876e",
        "cursor": {
          "ref": "2ed3707b-d660-47bb-828a-56330fcf565e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fda72243-0a6d-4c35-b20f-a7a260a97811"
        },
        "item": {
          "id": "152d0f65-41a6-4048-b4e6-67451321876e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "142a9860-6b07-4db2-b5c1-06ec6ba6165e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167d3500-28c3-46e4-9e2c-058cd59f89e9",
        "cursor": {
          "ref": "f2590495-16f8-4d1c-bff3-20ce58332927",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1864af9f-130c-4044-86f0-0106c1baef0c"
        },
        "item": {
          "id": "167d3500-28c3-46e4-9e2c-058cd59f89e9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4cee5bb6-1d1f-4667-ac46-0611d3d3e73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4aadd9-a7a9-4ea8-8d10-9e8c068efc5e",
        "cursor": {
          "ref": "83f5b265-114d-44b1-aeeb-7a508f469bd0",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f20d27ca-c5b0-47d2-81fc-2a9f53bfc624"
        },
        "item": {
          "id": "4a4aadd9-a7a9-4ea8-8d10-9e8c068efc5e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a46c75c3-0185-4424-930b-750dd9820891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6208254b-bd30-4a09-b9ea-047bf7e00150",
        "cursor": {
          "ref": "942fade3-f2b9-45d0-853a-c82d5029c25c",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9c7f66bc-4393-414a-88b3-c658a31eacd6"
        },
        "item": {
          "id": "6208254b-bd30-4a09-b9ea-047bf7e00150",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "58ee1de9-6327-47d2-863a-80fe2362b34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622343e1-317b-43d5-9cdc-7ed5e718eee2",
        "cursor": {
          "ref": "342541cc-ec02-47c9-b625-3f357fccdcdf",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0cf73561-3dc6-49f1-969e-3cbe4b91790a"
        },
        "item": {
          "id": "622343e1-317b-43d5-9cdc-7ed5e718eee2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "311e045c-ef36-4787-9e96-c7f37a224ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a50d555-cdf5-4370-8039-a1c4a8492ff9",
        "cursor": {
          "ref": "a365b440-b72f-4504-9f6d-52e49fd8a98b",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "89ddc26a-6470-484e-9cfb-4b6eb54aa73e"
        },
        "item": {
          "id": "7a50d555-cdf5-4370-8039-a1c4a8492ff9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c2e13dcc-1069-450e-ab5f-df7a506f8003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d907af6-652f-4ff9-9c8f-b813411f6a98",
        "cursor": {
          "ref": "ac57730c-a825-46bf-abe1-977c5176e769",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2bc94b67-0b06-487b-8aed-b71c6c4c18df"
        },
        "item": {
          "id": "4d907af6-652f-4ff9-9c8f-b813411f6a98",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d8cdce0c-42d7-4978-81a1-f05dcbf9267c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e37c21-be5c-466c-a9d8-8ccc119e10cf",
        "cursor": {
          "ref": "fea3eaaf-7128-4662-8aa3-6af5a9d038ce",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6e14b422-f7c0-49cf-ae7b-38674493982e"
        },
        "item": {
          "id": "a3e37c21-be5c-466c-a9d8-8ccc119e10cf",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9305f242-6182-4210-81ba-a14f7e4ba677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d65c543-889a-48a3-9e7d-d6849673b7cb",
        "cursor": {
          "ref": "bd1c460b-3bb0-483c-880e-43ed2fc15fed",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0fd57035-9b4a-4512-8110-a1554134d0c5"
        },
        "item": {
          "id": "8d65c543-889a-48a3-9e7d-d6849673b7cb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "16ae666b-a322-40c3-819b-d398715986e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf52e5ab-3938-4106-acd4-d14e371f0779",
        "cursor": {
          "ref": "f19cb8cc-5eeb-4c9a-a45c-fb88d14b1993",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b07beef2-fb78-434d-b0b0-8b42c61939b8"
        },
        "item": {
          "id": "cf52e5ab-3938-4106-acd4-d14e371f0779",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "04b2a9f7-d192-4791-a40e-9ca38f507e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148c3068-0c9d-49ce-b6b4-9b11b45f38bf",
        "cursor": {
          "ref": "adb39c38-9c7c-46e3-bdbd-57c5980cb52a",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6f2622fc-fa44-4a0c-b408-3b65d573acef"
        },
        "item": {
          "id": "148c3068-0c9d-49ce-b6b4-9b11b45f38bf",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ed9cbf97-4c1d-4da7-b8cc-20f82bed42a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a100fa-b8b2-4e12-bd1e-9d6e236a681b",
        "cursor": {
          "ref": "b269b44b-e9f0-4897-b3a6-25b2f6c599fd",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5a509308-390d-4c00-8e71-0e4fc036338a"
        },
        "item": {
          "id": "45a100fa-b8b2-4e12-bd1e-9d6e236a681b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9462c0eb-ff0f-4eb4-b23a-07c83ad83946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae11aa5-4efb-4a7b-9dd1-c823370b0d84",
        "cursor": {
          "ref": "388b188f-cb70-4314-b63b-c763da672abb",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0e31cd3f-8aa9-432a-a80a-090dfd853b32"
        },
        "item": {
          "id": "3ae11aa5-4efb-4a7b-9dd1-c823370b0d84",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f2aaae44-93d8-4526-9aa2-7b4ac6034759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe9a88e-3422-4f6e-ba9f-4376a1a01a6e",
        "cursor": {
          "ref": "5f2370c7-0f9b-4354-bf54-1415da607638",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "01eba466-ed59-4a04-a32f-a2cb3d0ca1ef"
        },
        "item": {
          "id": "ffe9a88e-3422-4f6e-ba9f-4376a1a01a6e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "400c82b5-0fdf-4c72-95f0-8b41f101038f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ca4a99-c886-443e-a794-98968c497f96",
        "cursor": {
          "ref": "38bb5193-9d1e-4451-b498-2a5fafb32bf0",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "62b370cf-9dca-4564-80b4-2ff20784de0f"
        },
        "item": {
          "id": "d6ca4a99-c886-443e-a794-98968c497f96",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2ace2a60-3fde-4013-a712-a1df64d1b19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3900cc-d97a-4dde-b217-69f8afd618f1",
        "cursor": {
          "ref": "6f7ee42b-9ed0-4b40-9085-902d4102b7f6",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4a12a0b0-0345-4dea-9309-34d52b622159"
        },
        "item": {
          "id": "ac3900cc-d97a-4dde-b217-69f8afd618f1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f71cbe15-4c97-474a-b152-c3c8c204078f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f17e28e-7a45-4747-9b8c-67d241f3074a",
        "cursor": {
          "ref": "174a6c86-9820-4616-93b7-9956963a0a88",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0b3ac449-155f-4f2f-95cb-7c567e34b715"
        },
        "item": {
          "id": "2f17e28e-7a45-4747-9b8c-67d241f3074a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fb0b5fc3-1d35-45a0-b24f-ae70ce213561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d78103a-c0a2-4514-aa5c-16f01ce1c888",
        "cursor": {
          "ref": "68566cd4-3559-43ff-90ea-4e6bdc3f3e02",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ca954116-69a9-4d5b-9451-49242c409f30"
        },
        "item": {
          "id": "4d78103a-c0a2-4514-aa5c-16f01ce1c888",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "856010c9-3c7c-4b44-a52e-14045bd3ff5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c64ce4-35a4-468c-8230-bd6f1124a6aa",
        "cursor": {
          "ref": "0ad507fb-7a5d-4181-949e-b9b9cb164ad5",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7f7d26b2-f6e8-4107-93fe-ec2087f7df4e"
        },
        "item": {
          "id": "17c64ce4-35a4-468c-8230-bd6f1124a6aa",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "31bcc4d2-c2de-452e-ad66-eb9a7faf6ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4478c381-c5c2-479e-820e-bc708c54e61e",
        "cursor": {
          "ref": "aa7fac49-0e26-41d9-8529-8e8ee89dea09",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c6bf2dbb-47c9-4fa0-8743-3afdcd645cd0"
        },
        "item": {
          "id": "4478c381-c5c2-479e-820e-bc708c54e61e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "98f6c2ed-ca49-4188-abee-e5cce2edd83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6075e86a-0ec4-4c87-8f19-7c77a097202d",
        "cursor": {
          "ref": "dda30cea-5cc7-42e6-9fa6-6881c3f22523",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8beec399-c034-44c7-8367-f44d70932116"
        },
        "item": {
          "id": "6075e86a-0ec4-4c87-8f19-7c77a097202d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7770e4ea-6754-4e6a-9f07-d813d97c84f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bc2ad1-7a2a-4a4b-9866-760dcc47600c",
        "cursor": {
          "ref": "5be44004-b195-411a-ae91-07b1fdb00c98",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d26f96e2-5941-49df-898e-343cbdfe1e69"
        },
        "item": {
          "id": "42bc2ad1-7a2a-4a4b-9866-760dcc47600c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9ee0b026-fb33-4549-aa33-414c5ce385ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08997ce0-b1b0-4fa3-934b-df94160cdda3",
        "cursor": {
          "ref": "93fb40c7-e0f7-4743-8f07-8739da6998c7",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "13934be1-4e3f-48e9-8067-6ba13f4c5755"
        },
        "item": {
          "id": "08997ce0-b1b0-4fa3-934b-df94160cdda3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a2518814-69f8-486a-ba06-9597b3d27982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cbbc83-5c3a-4aac-8237-aba7a1b5565b",
        "cursor": {
          "ref": "ebcf3f18-1700-464b-9797-f36043827b3b",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "47ad1dda-53c2-4181-a3ca-4d18e061dce7"
        },
        "item": {
          "id": "77cbbc83-5c3a-4aac-8237-aba7a1b5565b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5c508252-d713-4ea8-be85-aa3b66c8d31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4760179-f778-49c4-84a0-cc54fb4be5c0",
        "cursor": {
          "ref": "d7c6761d-e712-4f4f-a410-6166b40f3985",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "583bef7c-0bfe-4be7-b863-a830d547f3c3"
        },
        "item": {
          "id": "a4760179-f778-49c4-84a0-cc54fb4be5c0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "85be26af-adcf-48d8-9f19-4bd68d212ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60be372-4194-4951-b1c8-1fc056329ea6",
        "cursor": {
          "ref": "3106348d-76a0-4776-a995-8b0299e64a18",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8c594cc0-fb90-45f9-884e-16a5fff126a5"
        },
        "item": {
          "id": "e60be372-4194-4951-b1c8-1fc056329ea6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9c0b88ed-4074-4671-b395-b984fc9337cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65aa19a-a6a7-46c1-ae09-4e280af75489",
        "cursor": {
          "ref": "832ad3ed-8646-4a0d-87b6-20a035dbf8a9",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1057a21d-d429-46c7-b176-b7de146dddee"
        },
        "item": {
          "id": "d65aa19a-a6a7-46c1-ae09-4e280af75489",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "03c8373a-3928-4e52-8ab0-073f45dc1f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d520b44-b6f9-44a9-ad13-f9a89ada679a",
        "cursor": {
          "ref": "67c6ce13-2725-4ba2-8fe1-1e6de005ecc3",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "af7e9ce0-f1ef-440a-8390-2e5101020303"
        },
        "item": {
          "id": "0d520b44-b6f9-44a9-ad13-f9a89ada679a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c8f979c0-2d0f-4cb6-8467-51ffb06a4603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c583e4a-c531-4500-ab08-0aad3eab06e1",
        "cursor": {
          "ref": "5b4ab476-f15f-4a45-bc19-f8a184c88f20",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "64bda503-67b9-4bb3-8ccc-a71d3ac81b8a"
        },
        "item": {
          "id": "2c583e4a-c531-4500-ab08-0aad3eab06e1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "13309328-c44b-4a03-bdfc-d0eaf25362b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbebffc-662f-4ed3-83ae-2fd69b007e65",
        "cursor": {
          "ref": "ac22151e-94c0-4c1f-95ab-ceb002e55b42",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cdaaa134-48a3-4157-a7f5-6b40ffee8a1b"
        },
        "item": {
          "id": "efbebffc-662f-4ed3-83ae-2fd69b007e65",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "49588f88-1012-46e4-b08f-fce62c5ad030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9b45c3-de0d-4345-b68e-4456861fe8eb",
        "cursor": {
          "ref": "d08bf78b-bf82-4721-b863-eda29c3a535b",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "816710c6-f7f6-4b5a-8b3e-359038ce38f6"
        },
        "item": {
          "id": "4c9b45c3-de0d-4345-b68e-4456861fe8eb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "245fcfae-3905-470e-966d-743d491bb16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f904a747-3b94-447c-9788-888769cab7af",
        "cursor": {
          "ref": "ed5af5b6-4dd5-4138-9f4f-1b57fea99c53",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f4e5d820-193f-4db0-8e71-d02299b5b568"
        },
        "item": {
          "id": "f904a747-3b94-447c-9788-888769cab7af",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1a6dadb2-6ec9-4fb3-8474-10bcb01d8f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d93bde5-126e-4127-ba83-4536b8283354",
        "cursor": {
          "ref": "80220ee3-0c5a-40b5-8b76-3167de659542",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ead02ad8-4f2f-4fba-b3d0-74e0f4c683a1"
        },
        "item": {
          "id": "6d93bde5-126e-4127-ba83-4536b8283354",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3975c066-6fcf-425a-9767-b7001aab3d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c635d8-d086-4c9f-a70e-bb6d29cab23f",
        "cursor": {
          "ref": "89574b77-3167-48f0-a792-4d7e11075781",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "db54d886-464c-4cb9-8608-d5a756a8df75"
        },
        "item": {
          "id": "e3c635d8-d086-4c9f-a70e-bb6d29cab23f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5b327bc7-5e09-4dc3-9b86-d8cff8caa347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a4e43d-15f9-4f3f-bf3c-ebd4f531bf34",
        "cursor": {
          "ref": "22d19c32-1826-4696-b5f7-aab52b865c6a",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a91f3d33-6084-4df1-a1a2-0614e6778bf5"
        },
        "item": {
          "id": "78a4e43d-15f9-4f3f-bf3c-ebd4f531bf34",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bdf5c1d9-e965-4228-aeb5-90c3f356b716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f33352-b723-4bba-ae76-58bb6ca9c786",
        "cursor": {
          "ref": "58b4c4c4-7e99-4500-9fa4-30a8c8285fd7",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "77d155d8-d3de-4a86-99ff-7823582c1e58"
        },
        "item": {
          "id": "e4f33352-b723-4bba-ae76-58bb6ca9c786",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "563c78ff-2a16-4a90-a3c2-db48e591981b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88cdee3-8177-4d90-85b5-7e9902ade5ba",
        "cursor": {
          "ref": "87e10d43-85e4-443a-8797-a46c19726ff0",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a458dd96-a06e-432a-a2d4-786719936b18"
        },
        "item": {
          "id": "a88cdee3-8177-4d90-85b5-7e9902ade5ba",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5604e341-26c6-484e-a24b-006364e5f8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d98bb08-aedd-431c-ac04-4f3cace03027",
        "cursor": {
          "ref": "ee3481c8-eb8d-40ae-8739-ae5f0613d707",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "416e3a06-ad33-4f81-97f2-8ff52322ea0b"
        },
        "item": {
          "id": "2d98bb08-aedd-431c-ac04-4f3cace03027",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6bd83367-669a-4da1-8fc1-80bd3f2028a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af37149-1c5d-44ac-b721-130e417eb0e9",
        "cursor": {
          "ref": "aa0830ea-9c2e-4220-a62f-f6a18d6d7e3c",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0cba965c-52b7-49bd-822b-04d554846e0f"
        },
        "item": {
          "id": "0af37149-1c5d-44ac-b721-130e417eb0e9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "100b5534-1af3-46d8-b6b3-711201af05d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56c815d-5bb8-49dd-a496-edb2b855beef",
        "cursor": {
          "ref": "d1ec715a-3e01-43aa-96c5-8bc7846950b0",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "08c69151-3251-4d37-a1d6-04daee77f504"
        },
        "item": {
          "id": "b56c815d-5bb8-49dd-a496-edb2b855beef",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7b739def-19c3-475d-bd86-aea233c565a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58826288-7568-4773-92a8-8f54d3373574",
        "cursor": {
          "ref": "870a1fff-9884-4a28-9893-cb19b02c46e4",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "76bd979e-731e-48ce-9cf1-c26530874775"
        },
        "item": {
          "id": "58826288-7568-4773-92a8-8f54d3373574",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fde2d310-53c0-4bc7-816b-a8469944561a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dde86e2-d2f2-4cf4-a090-55ff2a562c07",
        "cursor": {
          "ref": "45b455dc-2b04-42d2-bad5-3e2e37e92a33",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1e0ebe04-f1a9-4fcc-af21-4c439a8ed78a"
        },
        "item": {
          "id": "3dde86e2-d2f2-4cf4-a090-55ff2a562c07",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8a2f3a9c-8970-4bc9-8399-02b42fe71a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15310f41-4d86-46ae-bee0-005e6d58c4c6",
        "cursor": {
          "ref": "60ce25c0-595e-4c7d-8cb1-22983651d148",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7482b3b6-d0d5-4290-9352-e5845fe1d876"
        },
        "item": {
          "id": "15310f41-4d86-46ae-bee0-005e6d58c4c6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8bfe2f33-f179-4b51-af58-d2ad3dc3a555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed3e368-73c6-4f6c-b1dc-6802deb175e5",
        "cursor": {
          "ref": "13ce9ea8-5e5e-40da-b91a-70a600993515",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9d2d5528-4e0a-46e7-a8f1-3c5932876a33"
        },
        "item": {
          "id": "8ed3e368-73c6-4f6c-b1dc-6802deb175e5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6314ad14-4e00-435d-bc11-6b1ddf07e16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5275ab-e3fe-4015-9786-c4a3bbe37047",
        "cursor": {
          "ref": "05ac1f95-f94a-4865-ae86-aefe87d1e00e",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6742f67d-4298-45a5-8794-057666661e94"
        },
        "item": {
          "id": "8b5275ab-e3fe-4015-9786-c4a3bbe37047",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6137fab1-85cd-413d-a350-13a8e67107d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af5c2d1-8310-472f-a010-434cfa26ef85",
        "cursor": {
          "ref": "e40d2b46-f630-46e4-9816-053dfcd6050b",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f26771d0-883f-49af-ad5d-6e42e68a2ff1"
        },
        "item": {
          "id": "9af5c2d1-8310-472f-a010-434cfa26ef85",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3466ee09-f486-4c86-9f7c-987dd5d7070e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22aa627e-b499-45e7-8b45-389654df1e83",
        "cursor": {
          "ref": "2a44da4e-ef71-4071-b57b-d0c4a7d8e28c",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ed267a11-d608-4264-884d-8195364a9a7a"
        },
        "item": {
          "id": "22aa627e-b499-45e7-8b45-389654df1e83",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "852e4ff0-86a7-45ca-8dc6-621eac95e58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f17d049-0c61-40b1-a381-5fff2de910a9",
        "cursor": {
          "ref": "61622d9c-f6ee-4113-b238-8c196b9d9a02",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "db69970d-3256-4bcb-9979-b2688b42ac25"
        },
        "item": {
          "id": "8f17d049-0c61-40b1-a381-5fff2de910a9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4f8963e4-17e2-40d9-bee9-0dbc6eedc340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677dc0c5-027c-441a-8fe7-eabeb3f8c67a",
        "cursor": {
          "ref": "25614aba-1210-4a59-91da-079d34bc5667",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "269ae575-2571-4198-9603-026965d9d69d"
        },
        "item": {
          "id": "677dc0c5-027c-441a-8fe7-eabeb3f8c67a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f89c6b26-8b39-40ef-9e54-cd0b7a8b132a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d58d729-0bf6-431e-b08f-fb2f14be82ab",
        "cursor": {
          "ref": "2c8d9242-1fb4-484d-a272-be278dd19e87",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e7596a40-c860-424d-a78f-e337caf9f699"
        },
        "item": {
          "id": "2d58d729-0bf6-431e-b08f-fb2f14be82ab",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ed93780c-1c4e-4f53-a2ef-0a65ff056267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31e0f33-c002-4029-80a0-69d6592f2988",
        "cursor": {
          "ref": "024ea549-e004-41a8-a53b-21fb8f8acbc5",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "57132274-8758-42f3-8645-bf395702d417"
        },
        "item": {
          "id": "b31e0f33-c002-4029-80a0-69d6592f2988",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7a63df37-e0d3-4683-a7f6-0e902a75ad3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f41d1b-0473-46aa-a100-b18e5d28bf12",
        "cursor": {
          "ref": "41064076-bd5f-49b4-8212-7760f857a593",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3500fbcb-c4cb-425e-8597-3b2dd9da6dc7"
        },
        "item": {
          "id": "d4f41d1b-0473-46aa-a100-b18e5d28bf12",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "53cc4c56-d0af-475a-a721-c76053deacaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad79ceba-2f5c-4b69-8d0a-faf501c7227c",
        "cursor": {
          "ref": "811cc66b-80b8-4abc-bcd8-24a1ebf022d5",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "60916c9d-0229-474d-93c1-c98757334b3d"
        },
        "item": {
          "id": "ad79ceba-2f5c-4b69-8d0a-faf501c7227c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4807ebba-0759-40b3-a1e4-d25406b3f7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114f68a0-0aef-4adc-b901-ac10fa385779",
        "cursor": {
          "ref": "09e47451-6f53-4201-aaa2-f7516ac8f87e",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5b08b06d-1076-4084-b0b0-c048be58829b"
        },
        "item": {
          "id": "114f68a0-0aef-4adc-b901-ac10fa385779",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "dfaf734a-fea0-49ad-8a03-0f715204b85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c64f9a-a1fa-479e-9c5d-897c1fbae909",
        "cursor": {
          "ref": "9abf2bfe-35fb-43b3-93ea-423915d4ca68",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b40b7a41-bfa8-4d02-b1da-9742a6dc64d3"
        },
        "item": {
          "id": "63c64f9a-a1fa-479e-9c5d-897c1fbae909",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "438697cd-d401-4d9b-81ac-e5e09304f9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e4f7bd-2f2b-45c0-ba37-1f405e66263b",
        "cursor": {
          "ref": "55b8aa27-c524-476b-9cd6-6e2d3964c5b8",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "985921f6-2cdb-4638-80ac-742dfd345d29"
        },
        "item": {
          "id": "f0e4f7bd-2f2b-45c0-ba37-1f405e66263b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b9d6866b-acdb-4571-9164-8d6169e08d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fad01ae-26d8-4d4e-a0a0-143ef08929d9",
        "cursor": {
          "ref": "c426d68f-3721-4cd2-a5dd-df12fda58bb6",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "aeafa78e-0659-429f-a4ee-e48b67e31d78"
        },
        "item": {
          "id": "9fad01ae-26d8-4d4e-a0a0-143ef08929d9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c8ec82bc-b419-4a92-baaf-ebdbdb8e6dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fd522a-c99e-4088-9952-2f0a0c669096",
        "cursor": {
          "ref": "d0c3864e-866c-4247-9c92-155e8ea4699b",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d892bf3f-40a6-4f67-9063-8a695a24fefd"
        },
        "item": {
          "id": "b2fd522a-c99e-4088-9952-2f0a0c669096",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0ac51d0a-dc1d-4bbf-8f63-37de00c466c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afe917b-9749-4505-b8ad-f9fb9e903853",
        "cursor": {
          "ref": "cdf13c41-e17e-4d9c-9b3c-41e481dd7f20",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "18b821bb-7ce9-4047-aba8-6c207666fa3b"
        },
        "item": {
          "id": "5afe917b-9749-4505-b8ad-f9fb9e903853",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b0781274-cf1f-4af9-a49f-07a7efc02b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab15cc2e-062b-49ed-ac0e-93fbbaea4e53",
        "cursor": {
          "ref": "81e0d4d0-8d0f-42d8-be6c-44982e17648a",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "57504c07-7d83-4f0f-9c34-bf15d4bd73ae"
        },
        "item": {
          "id": "ab15cc2e-062b-49ed-ac0e-93fbbaea4e53",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cc323303-2d32-4772-90ce-d7c4567c5073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb798d7-a977-43b2-9fdd-b392d9399676",
        "cursor": {
          "ref": "ac651fed-99f2-4c51-ac82-c0d1cbdd13b9",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "10771b64-8aa5-4c60-8d43-e3d4fdbc30ec"
        },
        "item": {
          "id": "5fb798d7-a977-43b2-9fdd-b392d9399676",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8948c097-9ac7-4674-8d28-6f0c7e51bbb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9aa309-06d9-44a7-8567-e1c825ced990",
        "cursor": {
          "ref": "3ece71be-f1bb-46d4-984f-ee91cb53541b",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "620bff55-ca16-4c41-806e-4bd0677b6098"
        },
        "item": {
          "id": "6f9aa309-06d9-44a7-8567-e1c825ced990",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "41b666be-ce3d-42c0-ba5a-acdfcac97d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabed648-28b3-4e40-af16-05e11c4796a6",
        "cursor": {
          "ref": "208b5261-9d6b-417a-94cd-732d3634646d",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "61f501d0-2c65-4f69-b3ac-07e9f19e234f"
        },
        "item": {
          "id": "dabed648-28b3-4e40-af16-05e11c4796a6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "97b53f9a-5d96-4aef-947f-1016202363b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99404377-23a1-42ca-9e9f-39e77caf4b86",
        "cursor": {
          "ref": "c60024d7-2870-4869-b098-a33d24832ae4",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e9c61dc7-7f82-414b-8b04-c5c302e2bac9"
        },
        "item": {
          "id": "99404377-23a1-42ca-9e9f-39e77caf4b86",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0b561ebf-733c-487f-bd40-faa78ff743d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5243d7c1-e854-4aa0-839f-457026d4d3c6",
        "cursor": {
          "ref": "17e2b0df-c953-4e74-9457-60549e982220",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "09b51b15-6159-4817-9ff9-68b7251de2c3"
        },
        "item": {
          "id": "5243d7c1-e854-4aa0-839f-457026d4d3c6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0183c37b-7413-4a55-85e0-bbf823a9501b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfae6bd9-b20f-4390-b52f-698699e45bb0",
        "cursor": {
          "ref": "5810a121-0635-4c1e-a041-a311b686cf03",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1180e86b-6ba7-4f37-a139-b21e655ef08c"
        },
        "item": {
          "id": "cfae6bd9-b20f-4390-b52f-698699e45bb0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9111280e-7730-47d3-8b2a-ae25034327f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a760db-06db-43b5-a62f-24e16edcf54f",
        "cursor": {
          "ref": "3d450107-92ae-4fe6-b299-fcce8e73ece4",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "bc04f07f-1c6d-4eef-b16e-f326c22da7e8"
        },
        "item": {
          "id": "54a760db-06db-43b5-a62f-24e16edcf54f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3cb3653b-f244-4e2b-b61e-84d3c11d8cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f9d50a-8fc6-4dc3-b768-8ffc1460e5be",
        "cursor": {
          "ref": "133caaf2-fdf1-406d-8abb-a414379a3664",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "9e48a96a-c6b8-4d9c-a27e-a87c0ab53711"
        },
        "item": {
          "id": "13f9d50a-8fc6-4dc3-b768-8ffc1460e5be",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "173efbd6-96ef-4c4f-ac4a-a51b64c169f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20fe7f3-6cd6-4306-8fa2-49f17e506e67",
        "cursor": {
          "ref": "5f8f053c-a540-4509-bec7-cdd54bad6d3e",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "69dfb336-aeb3-41a3-9b4c-c50db8c02939"
        },
        "item": {
          "id": "f20fe7f3-6cd6-4306-8fa2-49f17e506e67",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d42c1676-8582-4707-a606-f54d7ee608e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4838a5f0-6c41-470b-a04f-162e3ee18753",
        "cursor": {
          "ref": "5816f046-b198-4d2d-8f09-aabba3fd3ce3",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c98061c1-a36b-4e48-9c04-8faec8a6106c"
        },
        "item": {
          "id": "4838a5f0-6c41-470b-a04f-162e3ee18753",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8b5b232e-7724-4fed-8358-528dd4cb20d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49dd9c6-153a-4c02-b9a4-07782b461386",
        "cursor": {
          "ref": "dca80f7d-b953-4ede-ae25-f3895f5a8f89",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0ef6145e-c7db-4ae0-81ce-731f3d503934"
        },
        "item": {
          "id": "b49dd9c6-153a-4c02-b9a4-07782b461386",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2c541e0d-fa49-43c1-85e2-ee76a2a608f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba356382-2fa8-4d57-b183-4ca0223bc788",
        "cursor": {
          "ref": "ffab9409-cf0e-4fcd-bafe-86707949ee81",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7f56ad12-9bb3-4eba-b667-aef6bcd76366"
        },
        "item": {
          "id": "ba356382-2fa8-4d57-b183-4ca0223bc788",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d5ca9191-91e6-427d-8d35-e17010b1bb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdbc849-7b9d-4e4e-9ba4-80b8a29aa2f9",
        "cursor": {
          "ref": "e7d4526c-b680-47d1-ad5d-0ae5c2023d2c",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "69fa1a34-8d84-45fc-a658-4ff02736a960"
        },
        "item": {
          "id": "1fdbc849-7b9d-4e4e-9ba4-80b8a29aa2f9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "755ab41e-981a-4a7a-bf04-987380efba08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fa450f-7803-4f86-9037-2e0ee95dc429",
        "cursor": {
          "ref": "1839c0ca-17bd-4f29-b224-c0d97775ef14",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "249b0510-5b99-423f-9c4c-1cbdf7605c9d"
        },
        "item": {
          "id": "98fa450f-7803-4f86-9037-2e0ee95dc429",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "69a22385-7f3a-4266-a6ae-81152abbbc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f030ca-fb0c-4ec8-af18-2ff39214e56d",
        "cursor": {
          "ref": "5bc07056-a5f7-4874-b723-61a1a5832383",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "25a13984-03b5-4431-a798-4e33a1b89156"
        },
        "item": {
          "id": "b6f030ca-fb0c-4ec8-af18-2ff39214e56d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4ff198e0-7f45-48df-91ee-779b9d3e90fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a176b7ef-1d89-4001-86ed-4f43dd45ca74",
        "cursor": {
          "ref": "8270c55c-f550-4e45-832e-9cb5c32117bb",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "45f260aa-b54f-44c6-9fef-769f6c2514b6"
        },
        "item": {
          "id": "a176b7ef-1d89-4001-86ed-4f43dd45ca74",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1ed65926-94b3-4bac-ab42-6ad094238b19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318a4d6e-3bf3-4de7-b589-3222867ebc50",
        "cursor": {
          "ref": "782c07a8-3eed-4fdf-952f-f67f14a20784",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "efd86fa7-17b6-496b-8dbc-b19cfd2e3b21"
        },
        "item": {
          "id": "318a4d6e-3bf3-4de7-b589-3222867ebc50",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d8afff6e-07d4-43db-b041-196d28a9b5a8",
          "status": "OK",
          "code": 200,
          "responseTime": 115,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa36ebf-e503-486b-b0c3-e6b1d9881d83",
        "cursor": {
          "ref": "34f8ebfd-9298-4acb-8467-b5c4517e180b",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5ca179bc-7b23-4175-a43b-8d60ea182bcd"
        },
        "item": {
          "id": "4aa36ebf-e503-486b-b0c3-e6b1d9881d83",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a20653ce-90b5-4a72-89e9-d7847863affe",
          "status": "OK",
          "code": 200,
          "responseTime": 1423,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e314a55-eaca-48ce-b0fd-54b87a58d940",
        "cursor": {
          "ref": "f035b493-1c10-4f9d-91c6-ea74464f9f96",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5ccb8242-71c0-440e-9775-c8505e842363"
        },
        "item": {
          "id": "5e314a55-eaca-48ce-b0fd-54b87a58d940",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0aeedba4-6fce-43ca-ae5d-d37b4fe6125b",
          "status": "OK",
          "code": 200,
          "responseTime": 1753,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ba4355-e2b5-4ef4-82e7-7ed419935256",
        "cursor": {
          "ref": "dfd0b8b8-da03-4160-a29a-8f1f05751b73",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3ca54003-fe7b-4b2b-8b0e-11b1e361d790"
        },
        "item": {
          "id": "65ba4355-e2b5-4ef4-82e7-7ed419935256",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "29a706b8-dccf-47d4-9c9c-02fc7d7ce713",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ba4355-e2b5-4ef4-82e7-7ed419935256",
        "cursor": {
          "ref": "dfd0b8b8-da03-4160-a29a-8f1f05751b73",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3ca54003-fe7b-4b2b-8b0e-11b1e361d790"
        },
        "item": {
          "id": "65ba4355-e2b5-4ef4-82e7-7ed419935256",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "29a706b8-dccf-47d4-9c9c-02fc7d7ce713",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d9142f-838c-43e7-a06b-f5e18e6d1c22",
        "cursor": {
          "ref": "1d1875d0-437f-4eb6-a693-a5ed000986f5",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6dfed894-b0ad-4dae-9a3f-5a0cd7f102c1"
        },
        "item": {
          "id": "e0d9142f-838c-43e7-a06b-f5e18e6d1c22",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0129f24b-5c79-4ff6-9254-9a86747f038f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8958f7-c440-4f97-8490-add08ce7ffce",
        "cursor": {
          "ref": "fb8c5b88-100f-47dc-a2c7-8e053f076edd",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f7cffe5a-1937-454e-8b4c-539a2fb06d73"
        },
        "item": {
          "id": "2b8958f7-c440-4f97-8490-add08ce7ffce",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c2c8f018-04d7-4d0d-a707-0d494310cd73",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}