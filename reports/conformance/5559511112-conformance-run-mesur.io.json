{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "959f6c7e-91dd-4c7f-9752-d197a8bebf06",
        "name": "Clear Cache",
        "item": [
          {
            "id": "14a1d791-8a82-40ee-a8fa-e41c19d48b09",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bebb5d5d-95b6-4d9b-95bc-0b4dcc74b4d2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0fd02102-a109-43df-b35f-7602c612f24a"
                }
              }
            ]
          },
          {
            "id": "6e5c6c7f-d52f-4dbc-b2e7-ad436b76cf6d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f8f3689-057c-4f24-83b5-719120d507e0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6bbc3be3-043c-4c3b-a7eb-bdcf627c418a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ccb61d5e-4522-499d-a38f-3f63d3cc2a36",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "57cf747f-e54b-4f23-a19e-5b2ef44c1482",
            "name": "Positive Testing",
            "item": [
              {
                "id": "582d8c84-5189-40c9-a303-f79ea5e7fec3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b050cc2-e5c5-4766-98e1-a7f836a75ca8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "28cc74d4-d7f1-43bd-af0e-2286f504c564"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b0be85e8-1783-4c7b-bb61-b40bdc868290",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8fe02722-68d5-45a5-8e4c-089a86a87a8d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "674e2007-ef9a-415a-afe0-50bd86014619",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a53dfce5-12c9-491d-b00e-fbce7e4dcbfa"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd3b2fa7-114e-4e35-9970-77a292a46cdd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d2348aed-8f3a-4aa2-8a5a-ffb382fa67f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd9c5274-9629-48c6-8b91-4b85ef742adc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0a866f6-0670-494a-aa06-bff676a2153d"
            }
          }
        ]
      },
      {
        "id": "7edf06b6-8c5c-4a3c-af88-2b0656192724",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3d5b892a-5950-4cc3-9a63-cb0ace2a7143",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24d3da73-09c6-4d41-8b89-5def28721b02",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6ca91335-cb68-4e1e-b4c4-e56609f3c982",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e15bf7a-da42-4a4e-aea5-1f92b84819a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8832f32-0da5-4c6a-a6b4-99d2a85513a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8c4067-e01b-4dfc-9d6b-4254a64e6518",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf628b7-0d5b-48bb-b62d-9737a597cdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4065d0de-5097-4f44-920e-aacc52a16b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68814c29-d77c-4071-8e31-25d817c029c9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f504e318-4b81-47cd-a14b-100a4ac0aff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca4fa879-3ec5-4481-8384-6235ba57268e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "78c5caa1-51c2-4bff-9040-d06b4ffc0742",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94b46c8a-f817-4df2-8a1c-6dfa2a7639a5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3703edca-2eb9-45b2-8dc3-4bb1ed921bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "584e8da5-d63d-43df-8a96-0ed0a65fbe00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cb3476-bb9d-456b-81cc-e9d7a3574332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1688cba6-360f-47a7-8116-2b400708c564"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "54a105e0-a915-451c-b17f-4691fd196e23",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c7c47383-42c5-4100-b3b0-9527247a5749",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "777634cb-6386-454a-8696-eb26371dd493",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8bae9eb3-4cbe-4f65-809a-fdca38635b09"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97eba1dd-ab1a-4920-b104-5ba650c0dec9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0d7c43c4-b741-4c04-ad6d-fa9a10a4c8b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcc581c2-c792-4363-861f-416b961319da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d2501f5f-9ccd-4540-a1ae-e7d05df99145"
            }
          }
        ]
      },
      {
        "id": "c2dd261d-0c3c-4668-b6a6-98dc6830cf26",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8022233e-bcb3-434e-954b-febbbad87c6b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e863d959-2c7f-458f-9d55-39f8a0acdd1f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "eb0b0f08-4e67-4a56-9288-1eaf4b4a86f9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b911bf3f-791b-4f33-aa4f-002145f2fc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf9fb19-290e-40ed-be52-776957ffffdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edff383a-9fe2-4180-8b56-004bfdcbf94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c608bf2-33f0-44e9-ba6f-0cd481d6cd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38bb442-5a7a-41a2-b459-7c76f1033db0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21ed679-6120-424d-a910-e3aec4db0f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57182548-5691-4fc3-a349-c47ab5dedb97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3128871-c48a-4206-aed1-824f0e7ebb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f29d267c-3cb0-4f86-9bdc-92792303f496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef37de3d-7359-4ec1-bcc2-f36d4b7dc24f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c246e1-c410-4bdc-b082-b5997eabfdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dcbfa9b-fac9-400e-b578-0fce03394093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbfb9dc-97d9-4289-9532-94f5d733fbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8654dce-d53d-4cbe-8bf6-bdd043249130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5b5f3d-b71e-4043-88b7-1c17020d31a3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ff6e7c-f4d2-4c05-9805-7f62cb835193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f26c30-f998-4029-8de2-f8a2e92abc22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23363055-f3e0-47a5-89a7-6c3285a9562f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "957121bb-634f-43b4-9f61-11665c5b273c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed94028-a861-4f3b-8630-9a7c7c03ec36",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e7db33-bd9d-4bf8-96a3-ff64489861d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9fa37f-9cbc-4ac4-a8d6-32531af13190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2e485a-6d5b-4e2b-9ff5-1f2ac88037b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7405636-84a8-4032-ba3e-06a758a79d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907fe046-f2c5-4507-9454-a48b7233861a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f12d6c4-9444-4ef7-98be-6991b2d4b595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a0b3588-fb00-4221-af2a-da00f9182793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6465f6d6-7f87-46a9-81cb-a0ae3f239b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37031678-64dd-471f-98b8-ba097698a74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79a6b3f-93eb-4153-8e9c-21da112a8e75",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddb56f4-dec6-4353-8165-401fed546e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db679f9-1585-4ab9-ab1c-61b0d22d4b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae18ae13-c880-4fff-a6f4-0fde14cd5392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cfde176-f80a-408f-a438-5a21e5f53d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02be6222-0cb7-4df4-99df-bc4771a4f6bd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e938e0-180b-459c-a259-fc212fde453c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c55e125-29c1-4eeb-baa2-b2bfec440dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05169d9-057d-44c7-8929-1ad5da06f57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daee599e-43e9-4f9d-839c-f27c23d059af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d066606d-f8ae-4de4-91bc-7b3c3d405cbe",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36acb8ec-baf1-4528-8301-8bf409689c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6741d59b-b559-4d2d-9993-fca4c7746807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5369dd2a-faed-4a2e-8e29-2bcc2f3b80fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8c30fc8-54c9-42ed-8e3f-827113ae8659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8763cc85-6723-44ca-af21-b86cb300eb07",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d53ce0-e064-4c97-81cc-a4d83b2157c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e986d7e-f282-46f5-b45a-3aed23a86984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4d7ca3-965b-4df3-b8d3-50bf13ede58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "932c20fd-ef2d-4c43-8d2f-c741fc865993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8d1442-b451-46b6-b321-204dfc086539",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b11017-5815-499c-b2ce-e919f9f0f3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff40218b-e9ac-4835-bf93-2948930f9aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ab1366-3182-49e4-a2d9-b61d4301a11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f782ee14-6b48-4910-93b3-50a7d26d1686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03e1a49-ea8c-414f-8b99-735d24ea6f9c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99698da7-d7f6-46ea-90f0-622181a49fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09aa769c-f174-4dfe-8d63-d866253e9cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c171ecef-77bf-4d40-9c18-de980c1603ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a89c80a-3fcc-42f7-942b-7223540423b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ce045f-c291-4843-8d38-6ed2951a363e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096cfd4a-3c2e-4173-8fe3-9c9be8010744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b566e0a-90d7-4419-988c-1453f35aa6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b34830c-1298-41b6-9d23-a6ab1107050c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31d4106a-9a41-4c2d-8ae8-1d6f3b463dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b932ab-c430-4e91-900a-1e864dbe797a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8541bf49-71ba-400f-b252-8279714c7e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f56d98-9265-41a6-ace9-1feefada5b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd759c57-dd19-4cf3-9ca3-c3401e47cfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "054c1893-763d-4aff-b124-413279a9e3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967911d4-aa09-472d-8599-1bdcdeeab03d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300d29b3-a091-4d01-80df-37b124a0ae97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f816657-365c-4767-9b43-124e2187032d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36681783-e787-468c-92f9-9262157870f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bb034fa-bfbd-4620-8e8f-16580955e8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c3bce3-08e6-4133-acda-5bc2c08a9e3c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504caade-c517-4bb6-a43a-90049194ba39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844367d7-dbb8-4280-97e6-a9ea20538ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2641455-548a-4e7c-a02e-0c4ac9abf786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "428c3055-3038-47bd-aece-e551e7acb07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f746e319-1fe2-4f1a-985d-0102fb5aeb33",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a2b573-e2de-4b96-b1bd-9bddc742c76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e63e794-2441-489c-bee2-47de43a343c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2176202-fd68-4bac-9170-fa221a69ea16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7411ac8-19a6-497b-83ad-b2826d1b2252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e7f1e6-1263-49b9-b420-d22d9b982053",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59f9561-5983-4cf3-ac57-24ca15547728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d6bf747-ac82-4446-a453-aab58e03e91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bf77a4-5d67-4754-a4c0-b0b474f0e019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "43c02097-27db-4f90-98ee-edcc678da8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0c5038-da49-4d1a-b833-b7e0a8b26952",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b479fe-67f8-4533-8dab-38f9aad93cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d02a19-1d86-402c-9618-3c71cf86a46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4fe22d-65f5-4903-a1b5-e976c8d02fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a14c1f28-8209-4f35-904c-82e362ed1177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c92c7b-9348-44b0-bf92-a7effb3012f7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e908b0-d7d7-418d-985d-c232869f3f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d8c524-a151-4994-acd5-b374cee79a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32386d29-b075-4c74-a3b7-76a07dc69573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d1be8a-1cf4-4c23-a551-acc39dc5bf09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7775ff8f-2b93-46ee-9d63-ff603f0f94f6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bfce7c-5587-45a6-8438-df5b2ac11830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b59eaa-78b8-48cd-9136-a4548db97db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3be7c17-3a67-4ba1-93d2-d7fae1ca1d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca95aca4-ef0c-4fb7-be8d-fe065ca184b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba54c2c-2f7c-41ec-a21d-adde9cd9ca42",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ffc5fd-ce4d-4122-85f6-f48fc3be61df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7179ee31-56de-42e7-bdd9-6098f06980d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe616ef-ca8d-4d98-9f65-0ae0939c4a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31bb0a08-1c2a-453f-b343-2cef64ae0809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a836452d-21c3-4d26-8fe6-0c3778c7795f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f96a683-627e-42eb-8e5e-4bc6cb9a18ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dbfc8ed-ac0e-4af0-8b80-1f3379bdac95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4553170e-9e6e-4b8d-9495-ce81ecbeb6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "caf46e11-bb99-4371-8eef-6f91f89672bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bd136c-2c5d-4d32-9c67-9dc37b9c330e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb1a6c2-478b-4b51-bad3-e546b698b98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439f3d37-b0df-44a1-b67f-01df1677a7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5729bfbf-bead-479f-8150-eb95d40fdc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b6ff546-ba40-4aa5-8278-e0cc9d811d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d0af4e-7601-428c-8aef-1d838c5a613f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61188e6a-6a29-40a1-99b5-ab9577900794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a764398-33c0-4ec4-9528-a00e3aa007ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9ecd45-b5fa-4ac8-afc8-72cf4cba30e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6326b9-646b-4fb9-a245-111f2b53e287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ff0f8b-503b-4df6-b8a8-882a18532c98",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f176ac35-0300-45b2-b9d8-37d36a6bf544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81cb98a3-4525-4b28-be4c-6dee65036298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b3b849-7457-42d2-9072-89c05dfce5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eabf1269-f54e-484f-879c-d38f8bd37473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49a3635-bbb1-4c12-bbb8-a1016f20fe4f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628903f0-3444-41ed-a2e6-19ec18f86171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226b08c5-4316-4997-9902-ba7fa61890c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b19f3a-4371-408f-8380-ed3c1a07a3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "754efad9-8cb0-4f09-a1f1-c5f992f244f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e881c1-91f1-40e2-9184-32ccb89a10c3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0a4182-1124-431c-9128-f61cdbd84a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6267b7-d425-4f5d-b55e-8195c41dccbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a04f107-67f6-4b69-93d9-50e59ae719f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1241eb23-9ceb-4c0c-a915-f6bd1394f9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d44ba25-676f-407d-b50c-3c205db5d901",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b2d290-5459-459c-a9f5-b4e50a0f89c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1424f48d-1a0c-4bd3-88d2-ad6db31dadb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cef131-095e-417a-b6b0-adc3c1dd8a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "85bf94eb-6863-46b5-a8ac-09d4a2621c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8c4aac-e58a-42be-a87b-7abbcd74ad56",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5b34fe-5a3a-43a8-926b-bb2ebce0d7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159d3859-921a-4c9d-a4d9-78a6d2204c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a8bafe-f26e-4e3d-8648-cb94399e0b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a5026f-44e2-4176-9817-490c50920e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e215fabc-1198-4262-847b-48b036e2a9dc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4662ffb8-30c2-4e32-b48f-d9d40eed8282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ddbde3-4e15-4a32-9140-79e6f31af9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ca0c32-9427-432c-9ac7-4d7b7bf17773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec254245-e70a-4292-b401-2fdae76c3959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db75cf5-d3f7-4786-b565-75650e453800",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d388610-28f5-4503-9450-8de24fb4903a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c101bc4e-6862-46cd-a724-01b25ddb63f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d0b110-7bb7-4c03-b0ae-074aea373fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0f3a27-49a6-4569-a3c9-f46b178e8739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934d75c4-5d11-449c-8d4f-6f60bb8ba5b9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b414e85-1283-4f2c-be98-032eb42103d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cac8663-cdcd-49a8-b4e7-e7303d618b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29f0a2c-5274-45c7-94f0-4e4f4483ccf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb89e1b-4130-4276-8601-2daf3f7a590a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1980c74b-b071-4247-9db3-67722a814015",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc65b365-7965-4feb-a442-f8c98ac706ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ad55e7-0d4d-4d56-8dc0-6402352f4c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be75a823-e837-4ce6-b10a-47c97af361db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "22322885-3550-4c92-8be9-cbc768cc5cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e1209c-ca35-4c21-8025-778c85587038",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ad065b-fd09-4438-ae51-5dce0eb7a907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c750b90b-b286-4142-8a67-24095178f25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108f5e2a-ca0c-410e-a597-fed45cc31772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e4836a47-ca65-4221-8b40-913c6165001e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965e0780-5ddf-4336-b3ac-e17102008286",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d6fd44-9179-4a1d-b10d-9dc38f09ac43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cea69ec2-0cb6-4a82-b7cb-a0f52aa5beb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0cc026-4e66-422c-aea5-ccbdbae340b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31e5c99a-d3b2-493c-8e96-c394460b04b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d9b0b5-0d85-426d-ab0c-033a920c9cb6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4a1afd-2781-44db-8753-46cb966777df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d354591e-261f-4021-999a-6a0953bddf1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4d03f2-4b41-49ba-9b54-c132d5512a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5de9c363-348b-4109-8926-ad4578cb30b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cd4525-b682-454b-b122-c3ae4942558d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f4bd06-1227-49e3-bf2d-bc23be40d96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a5ab7d-61b2-4cd6-9966-01d69409f6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae94c4cd-6240-4ff1-9eb4-6f34124ba976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "154e0b7f-6a6b-4abd-ae53-3a3f3329ab5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d136486f-d13f-48b1-88cd-b09dae1d86c4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e26fe86-c10f-4514-bac1-277cab27f785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453a2757-aaf4-47bc-b32b-01705c86d8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1540850c-44f0-4177-a695-6801960945d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7556dc-a72d-4e81-84c7-fb8955d16ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea46708-21e8-485f-8775-0b5f2633eabb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0777f54-8e81-4d52-8d50-6cbc593cfdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098f92ad-3fa1-42b6-baf9-b7e2be5e1095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cda31a-4110-4794-b0fb-59f95ca224d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "255e59ff-5b38-4e9b-b119-139deb876a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed74317-5994-44d8-9fa1-f163859eacbb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66b279e-7d3a-4365-9a95-9c6be853142a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82160b90-5bc7-452f-a44f-592253acda7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e3603c-744f-4603-beee-1d425840765a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca2ce25-a1f8-40ea-9bbf-6693e9718648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0fd718-58e5-49d3-9f50-d65ad0b0f145",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1495c25-cfa7-415d-a0f8-c0bd41377193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6318fbcd-bca6-4e3a-8c6a-ac44a6d11039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664d0fb9-265f-4eec-8e8b-db7caeed8fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0097cf-f5ab-4469-8b60-bd9352b4a587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738e50a9-1e89-4e3f-9504-362071009db0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffc6701-955f-4ca4-91d2-d10a9dc4a1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830a7ca2-5861-45b5-bee1-37d7d4ef859b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a55c713-1a46-40e5-93b6-16689239e579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a427564-1b64-4490-95f8-c130017cc14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227e8005-7594-45e8-b4e0-bbf691cf4356",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b9ccb4-40e3-4856-bf28-80243b856bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57c53cc-f1fd-4695-b4cc-f6812c1bb643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35477f6-e003-4639-b01f-b862c9ff1b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e35904c3-90da-4899-86f0-d323ac35d913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770d4974-4259-4e83-82a2-fed2d881c63f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774fa3ac-097e-4096-b41c-dd710b68e507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21d4f7b-fb81-437f-acaf-d9f079a897c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e401d321-93ab-45be-8518-662b18efe709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2a1f2f-16fd-46ed-ba49-1c17b5b327eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a039bd75-7284-4ce8-a61f-f61ce5bc1eef",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c0216b-d4fe-472d-9415-96a54dd22eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8802ce78-da91-48d9-93ea-e5f20236669a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f44e811-81ba-489d-98c7-462abc029d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "133dcc30-c566-4c66-9df7-9155710c010f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067d837d-c4b6-408c-933f-4ff540ca35fa",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb42a3c-61ea-4997-af2e-66176191668d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817c18e6-bcc0-43cd-ba37-bc6eae9f6fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de41af78-64dd-4146-b02e-d8810fca3a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43c10b6c-9aaf-4571-8fb3-53f935f62900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b24cae-e53e-4442-a8ca-426bcb26aeea",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142a6aae-9e08-48b7-9607-5d137fb2cc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19746ac2-5139-40c4-b12e-fb38011b37c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442ae303-91eb-42ee-ad6b-cf6594cd1f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4102d905-2dcd-4e4c-a391-a040f957c984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c256ef-ace4-4f62-9809-2b5533aa137e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87af6cb1-410c-4f45-87cd-95f88d800fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cdcd40-2802-464b-ae5f-a172cb0cf790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166461f6-425b-4ed4-ae41-96c7d27e4606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca829e75-f48c-4209-8cba-6b61e72cd9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e049aef3-c93e-495f-b097-304232740248",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b86d19-76dc-47a5-aeae-80f1ca0b3b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c3db07-a687-4c8d-af21-cb2fb8310766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b056a1-2f3d-4f71-a08e-90fdfb872666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "020b24cf-97d4-4a6d-bb3e-44d160fa5024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674060f1-4671-4ce0-8bbe-6bc2e5d4da6c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca9cd89-4cbd-4680-a335-59787af4e799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97240843-7d69-42e6-8517-acdca0c7e184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb31d9b-6e4a-4a74-b4d9-c8dcf0940983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6031439-ade6-4227-ad3d-9f95a8475ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4a28ca-f429-461f-8573-89802eded582",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c7dea9-a3a3-4bd5-b18d-ef16a955763d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c68adf-d01d-4e58-bd77-01b2b0bba6d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4619bc39-8e8c-4f52-9bd8-600ee4ede755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9acbe7d4-3373-4b21-b92a-879cdbbfda69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0ec56b-951f-4cd9-ab82-d7ff75b1d39e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a19b1c8-6aa3-4f40-b002-2e648e43231d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb0df41-9024-4f99-bead-a490687bb103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f711e6c4-3682-4e8f-8ed4-a5cbcc964488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "540e65a1-2fd4-4fa4-b439-01465f0add46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f271b0f4-140a-4802-bce9-d83c450bc1a5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9762f570-b7c9-4679-abfe-c51219c18d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03f197d-9820-4743-8028-bc877717ede8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51f0a56-b448-48e8-ae6f-47a0ecf0ba42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04550e56-4519-4662-ae51-646957c7073e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78624026-1918-4274-8981-714c9d7f2d17",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e64849a-b611-413b-9928-9e56ac15a814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b830fe3a-bccf-4201-abd3-bbe832a12a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51941c2-7b4e-477b-bdc5-58708529e4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18867853-eed0-4766-955b-e1e400c9efef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401ce1d1-73d6-4122-beaf-ac9bab57f21a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3e3e33-fb9f-4e1c-a538-df28e4116d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab58ace-92d3-47d1-bd8f-be76e11a6f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192af24e-811c-4aaa-a199-2e2d2fbdabe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c5d42c-39c4-41ad-b10a-eee5322835e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ccad31-66e2-4390-9acd-02d52e21d7f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6f91d4-518e-4e85-9a4a-0353abdb2f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1f6499-8028-4635-8ad4-4df6804471cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff6fd0e-ae74-4c2e-b879-16edd1a8efa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7935e24d-1b08-4166-91d4-1e8187ce7f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af032e7-5458-4815-a03d-66804b091740",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a04fd7-0846-4020-b65b-f453a5cddc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7acc58ff-50ac-4bd9-8286-8aace7dd5703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe905f9-0537-4385-854b-ebb92f87dd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e277956-8369-47a9-84ad-b6488a4b5c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecc46ad-44a7-4b2b-8e97-efb3214cfcdb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f991b5-54ab-4ba3-926b-284cd3ad2ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274507a8-9a4c-4011-8f9a-98cd6ec2e634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61ff0ca-5d40-445f-b55c-f31261a36a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b879b57-600c-43e5-92d7-7b2e88da4009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ca3fe0-6c1b-489e-8d19-abbc8a86f8c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a157bd93-ae68-4394-8035-66b6e7471eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9714c4a6-ec7d-482f-b155-478d54d082a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ac8e05-9e32-4832-b608-389b365acc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc311ee-0511-4acd-8798-b160744368ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f67c393-763f-4896-805a-ee6703e16921",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b067431b-0a97-465d-9bc2-9d811303eefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63210fc-6f88-4972-a611-b7f5221d57cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe3b13e-e6a1-466e-9547-73bfedf1e1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "74989a34-9340-423c-9227-1460aa673727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a8bcee-1e0c-4956-aa6b-067e30eae3c0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729824d5-3d09-4e21-87aa-f0b1945adeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58129ed-8437-4c33-9b67-54fdc591d218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af0b6e2-c75b-4c87-87a9-b8cb909b09ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0703f68-aac1-4caa-a2db-60ac642ec191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa40ec98-8fce-43b4-a3fb-52a3cb798add",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20084b71-f66d-4a57-82c2-c58816990e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25dacdb8-7251-4389-90c2-446b3b1c095c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9756d689-866d-4215-8c6c-fbfe1c9b4b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc141e9-aca2-4308-bd24-f8b5369a2eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b1380b-780b-4b78-b912-de5f507fc012",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffaffc7-4687-42a9-b4a6-b837a38bae47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f698b8c2-1dce-4bed-a7c6-6a628bcffbc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15511121-90d1-4739-8a92-e2abef644889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bbe319e-ef34-4cdb-b4d6-66b81124a56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322b2557-aced-4cc0-b86d-423d27dc4f88",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2f87f5-4be4-42b5-a529-1351688eb00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7070bb98-9e82-4f61-bc9e-1307b4e7aebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12dc859a-cd37-4bff-8e32-8dae0b48a23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ea16c8-ab5a-487e-9232-ae6174089d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ee6dec-097f-43c6-9540-4f261bd82ec0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7d0877-b798-4b87-92ea-ceeb296ebe51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a6086d-a1a1-46c1-abf1-5205c12728e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1210b95-680e-48f1-b928-92d3caacb011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b89c2fc9-ab62-453a-bb44-36296d3a4ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5687138d-8cb6-42de-91de-3048631a6269",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3765b1b3-f22f-422c-9d28-a316ac85da21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21af124f-4053-4920-b8a7-841815d665c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c35407-798f-4293-a95f-581b09a38ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2713134-af70-4b1f-b630-5de504a16fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5411d503-eed3-4cd1-929c-100fd29e845f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365b7787-46bd-4210-828a-2697d628e12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5342d34-5775-4846-b428-9905c97a641e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8e380d-6a00-4b29-b1e4-4f90272f4815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3050923-974f-4316-9bba-bfc58f381b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6190e4-9ace-4510-a340-dc894444b986",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4bccad-eaf7-4810-9a45-7991b4245ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa383b49-c145-494e-8f14-25324ed14347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91414aac-9756-4983-a4ac-0d862a053963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "78e59d10-d59b-48d6-ae4c-51160af984d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8c6bb6-1e95-426d-bd8f-d6c3c2f52e58",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906826f2-a20d-4982-8ec2-9aa10519b84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5a1f23-cc51-4c0e-82d7-dd2fbc891da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa925b5-d210-4d25-b69c-958dd4ce6774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4932a200-5db7-4a4f-8933-8bd4728d3807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ad1254-a809-41b7-8059-e8d86def1f3a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696b42cf-139d-467b-a58e-c211df41a18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe864f1e-fdd5-40b7-b0f1-c3b58190198c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510855d6-1b27-4dc2-8a8a-b65b977d5029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1714d6a9-21b3-4bc2-b2f2-a8343598a743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83401b23-202e-4f98-9c6d-2bbb3475b113",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c549f6-2a0c-4409-b90b-3818aea10b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74998225-fd6a-46a9-b4dc-01ba92566f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e932788-8ccf-4838-9338-a748f5b338e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9710fdc6-ab13-4888-aaa6-e655aaf483ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9739b043-07b4-4d71-8ac6-b8fc2b90ae53",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312d7e40-21ec-4c7b-8ea9-c21168d9d140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9544edd1-b78d-4886-a6b6-5b5af7ee05ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc25ab5-b9a2-4e27-b322-ec0cabe50035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3c921a-546d-4788-8643-d9fefd41d7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d39fd9-ddde-4c61-bc86-ba8d4df7b00f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951322fa-7940-467e-98c5-a04016ab48ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5316a7ef-92f5-42d9-9526-a0cac47ae4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a8c170-02f4-4196-a3b6-fef28388afaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7961fe89-8670-4bfd-882b-b8f17e999660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0b55f8-87ec-47c9-b856-c1a4012e2e0c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c74960-5515-4ad7-afdf-786160ecd3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93403b0-b480-4520-a0b4-2ada802bf3be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3663fb2-9bbe-4e21-b228-2446d69821bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "79f6616a-4d57-4a4f-a0e8-7cacfd47c83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5718e20a-0947-4884-bac6-51c39beb5eef",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb0c913-3af0-4be6-87b6-f0b68836a264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a06125-9dc4-4b71-8147-914bfe79c5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5818e941-e47b-4170-b6f7-9e9a0fc4d2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eacedea-1d52-4bb2-8135-6c93fbb931d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7669798-c0ba-4247-aa5a-4ff91901633d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d259d36-326f-4925-9408-4e575854c7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266aed05-40a5-41e7-9078-64fc246a7bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3d1fff-005b-4f32-a4b4-477bb3a41495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd08cd1-0fb0-4317-b69f-27ea0072e421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2295a9-e0d2-4cfc-b10a-6b9ae234edd6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cb4df2-f78c-4984-bdab-d0dd150902e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890b6c6c-decb-4045-a68d-046714fc8951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589565c4-e395-4f83-959f-2c314b6bb00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4222106-0520-4f0e-a888-92c31d76de97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719e88d5-5e25-47b4-9bc5-1cb1f5224dfe",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00491a87-987d-492d-8ea8-be60bdffd078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e475b9d3-a571-4b4f-89a2-4fefb0856496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6fc02a-236f-45ec-9350-ead298db768f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6fb78a-d8af-47c7-9b86-e8170982584a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1374742-0f7e-449e-89fc-c0b55ed19077",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07581256-f184-4feb-bf23-2832296f11e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91a4c9a-c424-4e99-828e-04d7eb4df55b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11952f4-7627-4df1-8b99-80198a1a01b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3723bbf9-53b0-4200-8517-c4eec223ba58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7b5cdd-d0b9-4357-8759-42e199c1686f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d36273-727c-48a4-9830-58536ab3a4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7ac00e-1365-441c-aafe-6941f557da24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf59527-a559-4988-b41f-040c6d2992cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "de06d3d2-374e-40bf-9757-530fd84aece5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ceb9c7-3e95-4c32-8178-2fdd77601786",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7d428d-3ac7-4393-a1e7-247b36b059a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e57ee2-1288-4295-b380-24594e79ea4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11aa6184-f447-4ee7-ae97-b582a2b69f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7239b9-ee76-469e-9b0e-732620f3cc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a39f5b-af0d-4f50-9068-91ab90736831",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a710f3-66aa-4783-85e7-3156ca09d6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740b5a01-044c-4389-9eef-c153d7f8e200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a891098d-3bb5-4938-86a5-3d60b40ff4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "347521e6-5b46-43f1-b181-78435f6de78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea25afd-9d97-4876-9d73-77ea4892590b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af336ba8-e0ce-428b-ac07-f71e33e97fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a270b75d-7875-4c7c-b1d5-7d01deb1cba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5869653-70a7-48a1-ba8e-c7748db0deaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bed7714-1aef-4168-9ed0-b0cf34f40c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a4f7c1-dfc3-4650-96de-c45de92772eb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c946de80-47dc-49ca-ac65-ccb584d7a511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13793c63-d301-47a3-8478-c2b36f6e0fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45590002-6154-42ba-8085-1d2b3fba5781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7114a1e4-58fa-4371-aae6-ac7625e4dfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fc0c87-df2b-402a-a3a4-701427f9eee3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2237690-1086-434a-b8cf-291b5e3d9d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c35a415-ff4a-45cd-8496-cbe0368ef188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13495ca2-f29b-4ecb-b04d-8389b60fa735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75f811ab-61d3-423b-ad9a-d36142b2b1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e189a445-7f78-4563-af79-b70409effbf8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ae6c24-7ac1-4d40-b530-b9f57a556c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fbac9e2-58df-491f-b31a-0646cea389c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f374805a-6cd4-4384-96b5-2203b017e073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "82af12a8-09b9-449a-81ae-b781b8d95ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d2e557-fdc7-44a0-ad6e-d9d64f224563",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3492034a-562d-4d4f-a83f-e54c76b377be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ef861a-2877-4d81-a431-bc890f5eaaed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5a6ce8-d8da-4ddb-8031-cc0c8f7b466e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1e4333-26f7-4102-a093-feed1d117d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a450cb7f-edaf-472c-9384-56a29968ddd0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263f901d-8cd8-481d-9b53-a379786f0fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca89b72-d2f8-448e-90bf-5e5966d15269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3ab06b-80e1-45fc-bf73-f7a782d81fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b24179-aa16-4095-8f0b-ac4ae2f74ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994cbebe-5c3c-4ce4-89e0-ca4181a65072",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf75cdd-853f-41ee-97bf-7e4a2da071c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bbac493-7da4-4246-8b53-27d4d09ccabf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9020fd-582c-4dfb-a267-fcf6ce003b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f021ba0d-ffba-4fbe-910e-373b6d1467aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fadb59f-7637-422a-878a-2ca80616bec5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d51e95-8947-4e2d-bf95-045c55d99244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff2734c-c38c-47b7-837e-f9538129475d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f1d057-a619-47ab-9a60-c291f01741e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "08c428b0-40e4-4f2b-80ad-603a40bc90ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae9d952-f0c3-428f-8d60-ad60dbd3206a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2715c373-2f6c-4470-bad3-b00f2792c87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9beb5445-df85-4290-a3b2-3015c3931afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129da0fd-9420-4dff-8741-e44f0d6098fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb8c2d0-a110-416c-ab25-d6a6da305f20"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dfcf252a-9560-45bb-9c1f-48a24395b0fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98ec5f0f-0ad4-4b9b-b9b9-43a1b53fc1c2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cde78e-e9a8-4908-a8ae-31cc102ef5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "298cf058-2879-4012-bad3-6670743e65ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1adf80-6e46-48f1-bfa0-135782504b5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a851c2fc-4468-455e-bd43-e9826e51e19d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42924a2b-191f-4e70-b13c-79ca56e033b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b23a8c4-fa02-405a-ac20-9d918d74ec06"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f061f5c-9f63-48f8-bebd-400b15c6986d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef7e9f7b-24fa-4f3a-bf1c-751c4fc50074"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6b6bd83d-bc12-499f-a4c3-d5e7f840ff50",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f831918f-e568-4a70-95f7-99625af67946"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "928c43f4-30b5-4269-9f1b-0e54140c2d43",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b3967f3-5a01-403f-949e-0630c2193a3a"
                }
              }
            ]
          },
          {
            "id": "c360905c-e101-44bf-98bd-f0d6871ffca7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b33a3b88-2d11-4730-8a98-513c6d5d43c7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a93654d9-2276-4c2f-8f0a-5c5edcf1fff8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f59cd4eb-40b4-40d1-bc2e-821d03f1d2d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e05cf0aa-617c-4ca8-8d32-3aaa9cc32c74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5fc1db29-7abc-4b79-be35-ef66bb6df9f1"
                    }
                  }
                ]
              },
              {
                "id": "f072590e-dd38-4e9a-830d-d5a185a00fcd",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5df8882-0ef9-4a8d-94f8-b8eedf96bb1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d41c32f3-02ba-416c-af15-7177bcc02eab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "254742c8-9e07-4386-a5b3-aa3aefa478c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5cc7f8f5-8110-4686-a9a2-4c7fd89ed221"
                    }
                  }
                ]
              },
              {
                "id": "2d83431e-a1ef-4ef4-8bc8-1681b54e0505",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "822fa71c-37d8-4245-9dbf-53f342cc5b73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a3295d5-d35d-4a47-88bd-1fbff918bff5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17a18e39-6d17-4f67-8a10-c6b68294314e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a0205b10-bb99-46f8-ab53-22ad3eb6992d"
                    }
                  }
                ]
              },
              {
                "id": "2d91b28e-fa00-4269-abc3-beeca90057f5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26b64dcf-c503-425f-8000-4890fb6015ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3682e3db-64f0-4e2b-ba32-ce3ebc99d2b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76f431b5-9a20-4a69-9673-8b0028c94b79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0d81fc37-633d-42eb-84cf-5155a7a341ef"
                    }
                  }
                ]
              },
              {
                "id": "dbe5e79b-1ffd-488d-9fa6-684172937397",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a62bd3d6-9e53-4f81-8cf2-57c996569d09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9ac44e8-454d-4aae-a6a2-f592a267688c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52328960-8879-4bcc-86ad-bb78a1b939b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5709b36b-dd74-4947-8064-b7ffbb2ab096"
                    }
                  }
                ]
              },
              {
                "id": "29899ea9-133f-4200-b48a-958a9d17641a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc6f538c-ffd4-4207-a7ae-20155b926862",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "865e566e-ec84-4361-9ff6-e222470fd204"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd23c166-f571-4717-9f72-c598998e89e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4aedc904-0266-41c6-bba9-e8634a105326"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c94f13f8-53c5-4651-b81e-33276c3797ed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87c33972-7a5b-4774-b927-c2b2b625e0e9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7b508c4a-fb6a-4c41-810e-96440a36f779",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f8941a3c-8e9d-4d36-bd8f-af1f8151e9a7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60d49ac9-93fa-4825-9aae-25031c33ea11",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ee1e7386-d5e5-4ea2-95bb-0a2e9d2d10e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d6a32df-1a8d-4f0a-aef2-2fcb5886075c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d597435-50ae-4f67-8c07-293e170998c2"
            }
          }
        ]
      },
      {
        "id": "9bc3625b-4aa3-49f3-9f06-0f3cf64ddfa9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b047b6ca-356f-40dc-8023-5bea9a1a35ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e356443-4042-4a17-a1dc-fb2dd3130cc4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8c7817b3-2fe9-4644-b883-8aa6fd08a202",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d49dc8e-db72-4fc4-afb1-95f738a9cf7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6834bb-a9e9-4161-8852-56e62f846d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d04c21c-3d74-4c5b-b1b6-97532b3db0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3350e5e4-4746-4a1c-88b3-29b592bd6b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f80ef4-e132-4321-9ab4-d1e5abae17a5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4d580f-c901-4920-86a6-324368411785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca0d806-086b-4dee-83ca-bf9f56f49ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad4050b-73b9-4469-8726-7c1a0fcedb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f00beea-e3d8-4c96-b6d5-c3850a2b00c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c91c6f-7648-4ee4-a14f-9a7230093181",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4570d7-9490-402c-8b48-fd928e040eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f15d5eb-5bec-48de-9df5-afe27e5de111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfeabaf-1c50-4456-ac2e-d2767f60928c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb97bbb-6f80-4790-97aa-687763903065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c8143d-def8-47ac-8146-dd84d7caca61",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7d707a-1e77-45d7-8093-4e8b4303d23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f97c9a-22ec-4aa3-9fb8-dd51131e9f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1748814-cbc3-44cc-9fa8-605e47bf3f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f06f9321-cff6-4709-be8f-26d23a594232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5310b8-9762-4253-be04-14daddad7abe",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e217d70-f668-4127-bbaf-c352e63af8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28065a5a-8a14-4713-acf9-db27562aa3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea7fed3-1daa-4b8c-baee-8bb585758feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa53101-2659-4b79-9187-2a9c40334bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a62dee-dacb-4195-9afa-dd18ae67fb96",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23f4257-e6eb-413f-bc8b-c2ab4fc51104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4807f0bf-8de1-4236-b021-e348cdcdcf89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420fd3cf-abaa-46c5-8df0-8b9b20a4e240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7148d5-d6fe-4335-9917-fb4386408390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4a3722-653c-4a92-8529-bf88b514d285",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86344974-f366-4bd5-a291-dc9c157a1ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf1c63c-1912-40ba-af60-4ab2d3bf02cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee04ed72-a41a-4e6c-a5d2-d61f06b5e682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b32074cf-c3c8-4ffd-8f5f-d9f89fb52640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd144acf-465d-4263-b710-d4da86501617",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46c5e69-819e-4c48-8804-025ce23a1f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d19c46-4a07-4a94-a6d4-68f837ea7981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace0b482-0e69-4d6a-95dd-3916698a199c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76019352-290c-433b-af5b-ebe71fb33b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6c9011-daed-4891-9c84-2749ef5e287d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4feafe45-bf61-404d-946f-edc995658c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703ef6ea-80c7-4fe8-a3b3-be8a5328dbbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89501046-15c1-41c2-9ef2-11053b79ef9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "573290c3-4729-41aa-a387-819061d3cbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e89278-cd8d-4451-aa9e-d35e4f37938e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c411f35e-c44f-4928-8c42-87811dfb3a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13fbc056-a244-4ed1-ac03-8d5b5c76b42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7811ed54-6a5f-4b16-8101-6f62673b720e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3eba6b-3f3c-42fc-a6de-b2bad2300472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354926e2-11a6-4b38-b87f-2b41b4609b66",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b265c6-7bfb-42fc-aa39-9de665562554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad8a71d-ce8b-4bf6-a0c2-6575cd080369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc2c8c5-fea1-4a1b-8b2f-a2369b77498d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3e493fb2-51ef-419e-847c-0425c5e21548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca18bf34-0fe3-4421-9359-1269791243b1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ee32db-b046-442a-9ff3-c83c8bd14e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3164c931-5f33-4995-a2b9-06f3ca9ad55e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37963329-e53a-4a67-92e4-9566d14562a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5ae388-5612-423c-8e81-2aa26d31fa9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d6c108-6a03-426d-9fe0-414a5e35cdb6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff8dd37-51ba-488a-833a-8558738d50bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f219af-80fc-4061-9a05-c06141c07950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc9de03-ed3a-445e-b7ce-cd47dbe29b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f8216d-7eb2-46c2-be9f-8438f077db02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa1dc81-1412-4eb0-862b-cf3c5bc32143",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb6878c-f802-4b97-8933-abacb15ad32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c0e12cf-50fa-4c75-adc1-ac491058fe30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2828699a-c4c8-4c97-81eb-317045297608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d954beca-46d6-4877-b9e0-74bc11fe50fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1555d70-ca66-43c6-8ec2-eb045329576d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d5d46e-67db-4c06-8897-50f6f1b2dd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0a5e85-02f9-4d9c-a6d7-bdf302a8082f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b64ee6-fe08-45df-8265-31abec750221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4635e21c-48cd-4b80-91d9-b0e57c9b4680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61be350-21cf-4f79-a7f5-6232d2b85689",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb5fc03-e510-4d11-913a-0885283383c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a420efab-5fc2-412b-ac50-ff7525d578b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9374bd7f-63ee-4b02-965c-1d224cf0260c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c112aed7-354e-4fd6-b3fb-890559c9bab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f583499d-6387-4c69-9071-26617fa83621",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d6d5d3-a72f-4dc4-b4a0-726f0490930f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b8c7b98-1108-46ba-8f55-c2012b672cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2290c33-a3e0-4718-b641-99b775a5997e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6840aea8-caf6-4b4a-b07a-ba4e86640115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea344fe-db89-4a38-88b0-9207028918db",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c75a3e-058a-490e-b2b0-f6866ddd28cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "416f8551-124b-47ee-a00c-127cfe869bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f69f758-2e21-4638-afdd-3ba0ee185184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4376cca-a1ea-4ede-8743-d091e9e3d22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0541a881-a438-4863-9bbf-052b3eeeddec",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897f37f7-858a-4bff-8bef-022d15aba1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880ddbcb-d360-42b5-a808-63da0c3efc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e2c4f8-c53c-499b-8247-15db3c9f7107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86b0f316-6396-4e9b-b510-a2e89b17b617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a95ce6d-c1af-41cd-92b1-f4fe385ecdf9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488dffa7-62d3-4439-9f94-9159feaa1253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c11911-8fd1-432e-bc11-5b5a6aa2df92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5353d57e-5631-41ad-8070-3b6c5f55eb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b75b1e-6249-4e80-b1bf-25c71fc50531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad894452-4376-40fa-8768-548ff5029d13",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a77782e-a689-4159-b43c-59e7eb68e938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2329a1f1-3740-4de3-a5a3-240527013a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38946a7d-d64d-4721-8150-856d561046e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9df87e15-199e-41f3-9e7c-25192b845210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c5b028-fae6-441e-8386-5da21da7985a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81657105-92bc-408b-a764-48236128cdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e277b7ff-067c-4a08-a7df-6a9846724056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e290c5-01ba-472f-aff2-47e2afe8bf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "198936a8-bcd9-49fe-b8c1-c3725a3300cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6874e80d-0849-4b55-9b7b-839a96cc8bfa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c5ae05-9985-4aa7-b4fb-e83c2ada688e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569d905c-0c9c-4dc6-8f7e-c7db6e533ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4ceb85-b03b-4728-a64f-e0f725bdcd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5adde12-7a8c-45fe-b040-09a9574618f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4016ed-731d-42f1-86c3-d4960c2533f4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32c38f6-804d-4446-b65d-3624b2c18f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57a9423-ea71-4ab8-8c2b-c8a3d7fc5a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cf4955-dccf-47fa-8872-27288bc8ba75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74780231-faa5-40c9-a30b-f34fbe61ec6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8436e4e3-9cc0-436c-9c70-5e51da6f3971",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ac94ca-0167-4fae-85a4-aab7a756bd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04bf5155-2886-4fde-9596-746ceb36610c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0441fe-0986-4d8c-9e0c-e257c6bac73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d97e7531-a855-48c8-a87f-ad7723c97727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a27dd9f-d196-4759-a210-d7c52cb798c8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad1ef8a-fa87-4c26-bab2-6cb5d910fd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264ff8a4-d3f1-4091-8987-a32f30f62220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d44fc9-debe-4760-a989-af722bdfd416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "067e12b7-15c3-4063-8dae-a872ce684f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425f94a4-688f-47a7-b627-f3f08bd7e6c2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50125db-9904-4b6b-831a-c5d2ba3dd99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc35ad7d-375c-4e55-a9b3-eeb0b162cb72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff96f56-8f9c-4d25-8dce-97ce45dad522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb3f423-95e7-40e1-a1b4-1dd82f3e4302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25aa018-90ab-4610-a326-ad703c4f31cb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4549284a-9e90-4f3d-8db9-f41d90965d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272d4372-3c55-47cb-9ce6-9ce5bc1cbd89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08af52fe-bcdc-4487-a848-e8a835d4c220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecee0e27-57fe-4945-bf4e-b1786a817eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4109d93e-c541-44dc-afe7-1f1ba31e6d34",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47303d89-71cb-485d-9fde-8c5a5e13b262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7431251-074d-4af8-9db7-8d46bb203f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f353cf-658c-4298-84ff-23559978524d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5639d438-54cf-4072-b5b5-be8fbd579aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3383fbbb-9e6b-4b1d-a7ec-cc429f6cacc1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bc290c-45ab-4fa4-92a2-785266117a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b4356c-7d9c-429a-a3cc-84617c9e44f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c969c559-e814-4393-bd4a-c2348ef01113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f05eb22a-cc4e-4971-920c-e5fb88fda394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e517975-0444-4c5e-be8a-a5fa5238c7a1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4905899e-3d1b-4f96-af8a-455ea775730f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23de5774-ede9-4a2c-ad9f-8f954c100e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc0a14b-4bbf-4727-bef5-1d1848b009a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d80437-a499-46b7-9454-8eeb9241b734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c2216c-dcb2-4154-b131-1215a343e840",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0489f6d-4448-47fd-ba4f-999408f3d238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f945aa8e-fe61-4340-87df-22af4c31d635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a6db6a-d96d-4684-9379-8f73a4bcf20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9cbba89-7d62-40ba-b936-c5d8fee8952e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "66e45f32-0070-413f-a09e-d952fa86d6e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a06bb6c-aa23-4e88-8f3b-5f47bd4df78a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d75bde-8eff-43ff-93dc-6a8174d99b4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d441c424-78d8-427e-866b-588783126aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7142e529-74f0-4c6a-b391-c102a87e9027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce8d686c-2b80-42c5-9918-fa3356f895cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b06a79b-a0af-4c1f-aeef-24402dac2865",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab00a0c2-d398-402e-b96f-0b214c9b17e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "419c52a4-c1b7-4b1a-9b5d-297a3e397ab3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73ba9eea-c73f-40af-abf9-b71439c1f184"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "524bddbf-a8b0-4087-9b7a-9a412bf08872",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e8dbbb2a-a18f-4e91-ac5f-c09cc8b6587a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec3b33bc-f306-4ff2-9c46-c2895798fe4e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "497a431c-5999-4437-b535-18364968a51b"
            }
          }
        ]
      },
      {
        "id": "cf37d696-b633-4c23-8800-226b65837972",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "dcd248c1-6d68-4ee5-9755-aed89c088284",
            "name": "Negative Testing",
            "item": [
              {
                "id": "198102d9-8afd-4142-9ab8-73207f237348",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "df826f41-8b1d-4194-ad36-50e54d1ff80b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5436fa03-b181-477b-b42e-2549a87b97bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8160368-c0d0-4645-851b-f68ff1101648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a91b02e-065b-4c20-b9f7-411b2558b171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7512d980-212b-4b89-a4a1-164417d87ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ed698a-fd0c-4582-9f2b-559bc073e252",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d87832-2f4b-4038-a1b1-b6fa1abe6d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1ee89e-601f-4af5-b8ca-731d0910657d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05bce3b-a5d5-4470-87a5-80eace6c87e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "86058ab3-8d63-4f47-9af8-dcde57a37513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2f048e-d8eb-4cd8-a0da-f3038c63a19b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24098f07-f522-4d00-a8c6-8ee67af909d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2989dc0c-23b5-4f9d-8cb0-2f6fa7c409d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc3bed5-ef15-4edc-954b-014c3f7ea16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3567d096-60e1-413a-9a41-44e81f855691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed719826-cc7f-48a3-8022-4ebcf8272811",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7438fec-2317-4c6f-86b7-fc4db0fc0e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13472b2f-ab5a-42c6-bcde-f9b8d464457e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7ef862-4213-4ab6-86eb-73735be7dddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21d91066-5157-44b6-87c9-6956364cf357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac043ec4-fc8b-4057-bde0-89041195715d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b4677a-d683-446c-91e2-ad91cfdaaa50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cac228-598d-4499-b1d7-5f93d8129b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a304f9-7155-487c-a1bc-1ea3816c2862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e435320-9dce-402f-a911-1a420b312f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f38f40-bdba-421d-9716-d1540838578f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ff5ec1-0dc9-4ab1-8218-a14a4dc56713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e508d5-c101-4d17-8809-76726716d2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f540eac-0ed7-4fd2-8415-420b953c3ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c39c7692-282c-4aa3-a346-fcbdf579a187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6d5743-1f88-42d6-a5ae-dd29cfe0a7f5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "028cdc3a-59fa-4bd9-b313-80b6260ad8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d571f9-e10a-4db4-af60-feb61532d52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e47496-ab81-4629-90da-6d84daaa90c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3972f8-f80a-455b-b766-eaef31160735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6978be-20ee-4b08-9bf8-85a397a5a53d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821b297a-5f0b-43da-94d7-26f5c2ea7b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1561de66-1e97-4dbd-8c7d-976762fd23ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042d01d4-60d0-4964-a349-246de0cf9784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff95464b-5b8d-4052-b348-cd4a8f6b4598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f750fab1-db7e-44e0-8aa3-d35d34c9c1e2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50150ece-2f36-4bf7-afc2-1726199d80a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c2097a-3f94-4559-89f1-f0ea2a911777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c112d1a1-6398-4f78-9786-8cb1fddf0615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8eed1a-666b-4ca6-86b3-541844852035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9647f49f-c474-4991-a722-0af939bf5c01",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529db724-b754-422f-a2ae-42c56d269892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49538738-a44b-44c5-899d-fae2718c0fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bff1140-d4d3-43b5-9c80-e21c0ab1f492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c29083ae-74cf-497a-8d42-cbdf355ef718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2df4d5f-fa96-4e72-990a-b64207e3f89a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7abe83-0602-40a2-a26f-e4991255611d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5b0775-94ce-49c0-bd3f-bcb9460c9a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5902adc-84cf-4214-af8e-2cae6fbdce80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f2712637-97ed-487e-b559-4f2c4b364ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c636fb-4cb7-46a8-8f02-2cb755fb3c79",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f952af7e-4e95-4ac8-9e42-3ad5626d6765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba798903-d685-4101-b772-a272af97f52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5220574-fc65-42d7-a44c-947fc150dc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5df4a90c-ea16-4228-8eb1-3bd32c06ef16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551f252d-7339-4342-b0a2-d7b10c56da1b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11122827-0216-422d-a75e-36dd3789381c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4076c6aa-bbf9-419d-8161-92f4ea9f4329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a030bcc-ca7f-43a9-9550-d5029ce73e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf4bb6a-57c7-4175-ac6d-4cff2536b763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16e9ad3-521d-4fac-8b83-3886a7dae36e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4517d1-fbd3-447f-8c24-066b1f47292d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579ef8c8-9cc1-4667-b84f-95b3fa7646dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3699f589-6e93-41dc-b4e2-212249a3416a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "756b712b-169a-4789-8ccb-8b6c46f90c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6068a9ff-b919-48ec-8bf4-498c2fc7be21",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c687717-8349-414c-9cd3-d497de1ed3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c18c79-6c83-4e8f-b1b5-912a80cad0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60aa0358-3491-4a80-9d95-43c44b4485b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "66f521a8-5128-4f78-92a3-059cb2d2eada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cd125b-7c24-40d3-86eb-548bc0d73d55",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b520eff5-d0b0-479b-99f4-ffe09d8f0613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9500c45c-a999-484a-b75c-5b0dbc18987c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6078c94f-4789-4f03-bdf3-6edb217163b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdaf5b7-b791-4ae5-b07a-6a2853012013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52764096-a86f-4646-a41b-2042fcada377",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b6400a-ba52-40cb-904f-62ad26bf0e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ec4ba8-4dea-4133-a540-3a9ea3147f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e497a08-95e3-4a1c-93ba-28743a839e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ecb8e01-529f-466f-8c97-cd97bf563100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fde0712-ec91-4f9b-aba3-d78d327d3e4c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ce884b-4c79-49fa-bde9-8e8dc5b2ced5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f2856b-43b7-48cd-8427-6b11d08b6fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e24652-a772-4832-baf3-40b807bc3d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "55e677dd-fa54-4e10-9840-0663a9bd4020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c59938-8e03-434a-95b2-3803210f510a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09278d97-210e-401b-b023-f48eabac5ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf7114e-78fe-48ec-ab82-7df4eb0edb68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bccf4a94-dd4d-4322-bc33-97db9fc3dcbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b69111bb-8d46-4c20-a19c-c7d1e550593d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260096da-0145-4db7-9c2b-e815982e3e8c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d84024e-e713-4c0d-9cf0-70d13b605fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d7abef-5b65-4033-869c-8263e8425ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb79094-5891-460b-9f75-167ad920c1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28ec268c-5437-40c3-8b93-1c4da66f035d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3260b22d-74de-431c-a562-ad9a62874624",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c86d1a-a3c7-4357-b00a-023edfe5a171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f694b8b-8bf9-46eb-9935-70a664f00b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aafeb3a-15c5-42b2-aff7-930767b352ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5267bf1c-2d6a-48a8-a72d-b1a795c85153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac4689d-46b3-441b-ba9c-994ef973008b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18935acb-259a-47e9-be0c-a438777d619d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be60cf07-e23c-4b5e-99aa-1e4e63584c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c522391-9d0f-4fa8-bee1-eac6d4e2e9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "671f5d4a-56c2-43b1-979d-8366a5bf2552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa4d80e-7c40-43ae-a518-12272c60e16e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0578e27a-63d8-4893-8baa-503dc0930850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8b8b00-1194-405e-9934-4589e3c03a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb0b7d0-217a-472a-b9b7-b05247d22db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a623b676-343f-44d5-9159-8956e834b141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31145e40-f5be-41c6-a746-5a0c2a91a918",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba528f5f-b747-4d86-b553-ed915ee52c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f951639-1ab1-4679-94e0-84574d84181b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ebeb22-63d6-47dc-9abe-050080af54c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce16aa4b-2d29-42da-98c6-884d7795f3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f19af0-040a-4cb3-9fa3-161e924a1a96",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e275bf-d5b8-4236-9b7d-002da42182a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68170f00-7b89-46d4-bab4-c594ca58ad07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04d2040-fa3a-4969-97b6-daa8e6faa1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d10f793c-da25-4a9f-ae99-b1361ff7bbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7b2dff-fb41-453d-8bad-9e9b54e30799",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbd8545-ab98-4afa-8d8e-09c028f0792e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386203d3-4083-4e0a-97d4-87437f08e8dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273e40b4-cd87-419a-b493-6dd0422f8c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4381b155-1b19-4cb1-813d-b56701522489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7c2eea-2713-4b6e-9fd8-cb8f157dedb8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6558922-ca55-4375-9226-227037bf9b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf974ab-3677-4522-a60d-8e0e801e0bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3932a0e1-c1f4-4e25-9e33-0a221d1b3f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4663f834-73dc-4251-9d5e-b535e0927724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f09cee1-0b42-4882-a479-2f4f366d5199",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2f34c8-0fbf-4dc2-95f4-f89e78b78707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7415c065-5e84-4173-9197-808fdbd427d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8672369d-85fa-49f7-9d24-f6d7df5ea483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c75b71a-003c-46aa-8a6e-6acf68de318f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef74a529-5b28-49f0-a431-a095d7396ee1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d9c176-7b8f-4696-abca-58e272a68e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45168ea-d009-4c9b-b990-5cfbf2dd9b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61d78ba-4400-4179-9630-243b75cf4d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca13dc25-7c53-4e25-9bd8-a1caa9e1484b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fd753d-36ff-4644-95aa-638b400a459d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c03cc74-cd85-4e3d-bfa5-b1f1573b685f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8e6816-6d81-4c77-b880-1a6d781e379c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971851c9-ded8-43db-a721-85fa7d38409d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55d32eab-bbb3-4f17-a25d-e55a84eb069d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c5aa0a-851b-4879-9194-9562012220d7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc5188c-8bb9-4b9a-b8fa-7edb7500bcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb51d2f-18ff-41a7-bcbc-0b0efee92d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3278ef96-581c-40f9-832a-37974c919c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b293393-d181-4b44-807b-63537cfa9586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972ce5c4-6260-425b-9d5c-005cd722388e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05804153-aa56-461a-9a6a-aa518aa72560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edce5a77-6aca-4bac-9d3f-4c11f9b1c3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e523e16b-a4b7-4d79-b97e-33255bdcea87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd1663e-f38b-489a-a013-69cb99930398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdd77fb-5e4c-4317-a828-d91fff3a5156",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a7b537-786d-4a2b-9939-7504817be9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52d9235-3c07-4264-94a3-46a5239fd816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516e7199-86cd-45c0-b4fd-1e286f9747b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7f00a1-1935-49b9-9de5-29cc642f1ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41737d0-76e3-4b06-ae15-86424563dbb4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6669c0f8-206d-47bb-b683-6e27b348f272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043f81a4-5f2c-4183-b82f-d280d6a36f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc410b89-8469-4b59-b101-c90deea313a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19245371-5756-466b-82dc-b94f3f01d894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46863d4b-0f1d-4459-995b-221a5a678372",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38beaad-e881-42e3-a569-3cceb8adf2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1fb7453-6c45-4b7a-bb66-5642bcc68f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06c6151-31af-469b-9527-91afd10ac3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c012f2cd-456d-4e4f-bf1f-bc2a2011ef7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3982b7-0c44-40c4-bdad-6cd13c19940a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41b253b-90a9-41dd-8505-bc857618ca88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f8887e-c94e-4ea0-b2b3-ca6ece1305bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6918130-04e2-4ea4-abaf-1af016ccad8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bed751e9-ba25-4cfc-ab18-904f43fdc08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c13636b-81f9-4866-bec9-0afe7944617b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd17591-02d9-4cd8-b8f6-0d2ee0459f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8d5083-c62f-4e48-a558-2e84f1139087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1d07f4-10d3-43aa-a321-d007208aa4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35626ec8-8d97-430f-a81a-b4050992007e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "42f4fe91-e8f2-4d6d-a655-4beb443cc3cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce0289fb-e6e2-47de-8123-5ba82ec90b17",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe45b1c-da1a-489e-a5fe-fad2e64b8b48",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b4646970-bc4a-4401-835d-5ca78bcbe9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbc2300-f73e-4818-961e-e8e741e73439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e49d031-49ce-4f2e-8b24-e9afe8618963"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fa839a6-b8fe-4b6f-b8eb-ebfd16e3cb37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8e4d969-c604-42a2-ac65-bd302be56128"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73a0e08b-7913-40cd-9125-1492d455473a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b640a2a-83c5-43d8-851e-aebfd6415fc4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d005d0c4-a551-44ad-996b-c68d7f1f07f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1a655403-3755-407a-a822-064a2c6ebbcd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b903c06-6f4f-45fc-acd4-5110c8fa161b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "155cb856-ba68-4888-8874-f9711b6647a1"
            }
          }
        ]
      },
      {
        "id": "cc92c6b4-1823-4589-969a-8eda3c32a577",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6c828d18-b4b2-4976-ba24-be2545753de3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbe34b10-af54-48b9-b1e4-5f368a6a8440",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "41bd4444-5d89-4863-b1a8-fd9ce8482f82",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8bdb62-f3f3-44ef-95ef-5ae447ad81d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0471f443-de18-4aa4-adf4-556d33781212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b66f2e-7e1b-4ac2-bc73-1322e6c8f5bd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476b9a3b-f746-45ef-b001-b8b595d206ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac460eb-d730-402f-8425-3775bf2b03b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee23055-efb5-4335-82e9-4253fa80651f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d1f8b0-3a6d-4fa3-b802-e700ae602220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55215831-13a1-472e-bc6f-e1e49512c490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526313ed-5f1d-4c97-839d-2d1236194210",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535b8581-7b03-49a3-a369-3430520a5b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46431ad7-4f78-42ac-a6e5-368179c24e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234b76fd-f37b-4e94-88af-465187dd7f8c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a67e43-00e1-4beb-b13a-532149f043b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd05c92-d4b7-47fc-ab9f-4747ba3ffa0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e09eed-673a-42cc-b7fb-010b46939ed4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d585b28-1406-4e4c-8f6c-cd3d02a05cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee863fe4-9f51-40bf-9711-990b5355a9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51045f5c-f3d6-4060-b591-0edf1d838d62",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4eb0cf-659e-436d-8749-74681b95b88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab8931a-ac95-4d68-905a-42d7949cc417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "203975d5-91d4-4135-b0fd-ed5136179870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe05a6e-b843-4b8c-9ad5-553f3cfe3654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b575657c-f983-45a0-a199-ff4ace20bfb2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f761739e-7299-4177-913d-3495f9747de7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42443c5a-fd70-4a31-8e06-69cf7a36494e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d3d1a3-8927-40a4-ba2d-951580470f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b53d1f-60d6-4938-8814-6c3eb4ef00b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82d865b-74c8-40c8-90fe-ecaec3bf0454",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffdef42-d149-4e81-b37f-725f92fed97f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f1daf1e-566f-44e7-8de6-e57d33999feb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fed5b22-39db-4996-a3ab-b1b9b73d7800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbfbf18-1736-4476-98ac-08b6caadcf81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751ed0a2-db5f-4638-a6d0-1a494a7294d6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d4c8ab-ba86-47c9-b492-09e650caaa8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "862a2001-5999-44c7-bd7c-c30ed4bca297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06113fd0-36f9-469c-994a-989327a5df48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca1fcdc-ef5d-4419-8657-94c81a953efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efaca87e-95db-414f-934e-f807d326a574",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a9b2b9-80ab-4c43-bb34-9114793ff0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b45fe48-747e-4f8a-ad8a-e1c9fbf67138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c660f41-ae90-433d-8dcc-70c523a2c8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4e54ae-1511-45d9-9b18-d32abc2ff854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa5d8b2-5d1c-4cdf-9647-5cd8d6220372",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec8c2f3-e3a3-4e2f-8076-38d89c3a9642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9e8d67-4827-4b57-8cff-2e6ec6138193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd628de-07fe-4e23-8981-11c4c224fac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cac3763-3050-4cd0-aaf3-a3952a891dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08cd6b2-75e6-4a34-826b-ec0ad88a770e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9454726b-df8e-4c13-9cc2-72ae1c760b9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "013bcf35-1de4-4548-aa99-10a3a7befeb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a921bee2-82bf-45fe-b501-5dda68a25252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c86f7f-913e-42f0-8166-21d9f796d07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57629540-d404-4908-890c-689d679b1a0f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f94bfa-0efc-4779-a510-e30f3cc46bf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec03e545-33e0-424b-9375-2ae985974bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f08ed6-5c59-4383-bf85-681c12d8efd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e6ad59-e236-46dd-85a2-d8079b6d1e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e6437b-256f-4f22-ad3e-f620e490ab30",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72bc88e-ef04-4c45-9318-c62b3ad7a342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88ba1f79-f15e-4c43-9684-117e94da834b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30a19eb-8646-484c-a7dc-779df54347a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e2ba68-9516-4262-af63-c0161bf578fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7980c96-021f-428e-b0d8-e631122f7c17",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7aff942-1588-4d99-91cc-b751b8b4dfdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "228278c5-876c-4d9c-9e35-ff0a9f4e72d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a3137e-ba84-4a30-abf5-bf09023c0e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47322053-3a2e-480d-84df-bb90e87ccac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27a68c6-f4a9-468d-a3e2-b44720f386ed",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2060e4f-681a-481c-9465-d1badea9c2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47845a1c-2cbb-46c0-9d57-8a7fc2185903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34180e13-7ca8-44c4-ba16-6a2cbcad8354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998024e2-bf2c-4655-addc-e0a3e409751a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7318cf2-8ced-4d0b-8eff-f9b4817e63ef",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05df4b7-e831-4f2a-a631-f0ba1d51566a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec1b67a-5255-4241-869a-5af5f31a11b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a0512b-13fd-4c1c-b551-881072d634c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257ccf3c-88b9-4c5f-b60b-179d379513f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ce4aa5-4819-4e21-879f-f6d7a230e4fa",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361eba69-a405-4aa2-904b-a4ae82f2d207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d16bdd5-2251-4df3-be5f-efe10ac5e731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40ced9b-05a5-45a5-a0b2-19e90d4116b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b15df90-a48e-48bd-aefe-d01e5d1246e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff37e6f7-ad1f-4927-8da0-4f0edc30716f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf4967a-eeb7-4b1a-9a77-7fa004d69061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e09df72-5785-4482-b8a8-b3695d5c8b6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e6bcdc-3cc6-4b07-a878-19e43ba76d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8071275-92bd-470e-a4c5-5638fb648564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5673049f-d578-4b3a-b0e0-3355a6fd26a0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b533db15-0a71-43e5-95d3-5765cade2a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52074ec2-6d0c-4efc-80e0-054a186f9272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "292e193a-2bf9-41f3-9e22-25d2de90a3c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86eb4810-7bfb-4fd5-be87-d27657ad622a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fcdc6b-b4e7-481c-ba88-044b5612497b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0e7e50-8dea-44c4-a262-03cf39db42e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b038fd85-82fb-4bdc-bbe2-0365fbdd4594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce2ad00-0b9f-4aec-a3f9-32ab62bc51b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478aff57-16ba-472c-895d-0793d955dfe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343cd48e-3c66-4bbd-b0f1-c081ae946079",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe64701-e276-4fa1-b8ce-8e2664c53f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f1454a-17e0-4f90-a830-16e551bc9629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baec51de-d63c-4afa-91bc-b9b8055b8454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d81d5fa-d9d0-415a-9dec-e8c1c6195215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728f962a-19de-4c79-98ff-88382124ab56",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2d1564-0b6f-4766-b491-66a18cf2224a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f1e00eb-9b8b-4205-aa70-1313841b359a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3482f6c0-36f9-428e-aa49-66779673d636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a094c2e4-7d3c-4aa1-b4c6-eedec3423ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4704b56-21cf-46c8-8a38-92b60604ed99",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294468bf-4a5b-4b1d-9d25-32a7249cfc1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bbbce39-b33a-46c1-823c-8f69af99effe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671b7fc8-eaea-4a97-9b8a-e7a2cc09e7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699bcd9a-f40d-4dc8-b4bd-a429f1528ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24238246-b343-4954-8f16-ac659e097761",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cf7c1e-40d1-4240-96e0-ffd6fe07ed0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da478017-8fe1-4feb-9027-3bb0d4b7231b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f9144d-9138-4b9d-8eb5-6f020f7039ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ab9292-0c4f-49d0-a313-d7999c9172f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5d7778-a88b-4580-a44c-bcaec4655e1e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb91e9b3-134d-4c23-8fc0-e3c501c54457",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fbf8048-e699-41a0-b91c-ffe92d9e59d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754a67f0-d060-4e66-9be2-7c55e15d7ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4553a5f-dc14-4264-803a-7d9ecc1bdaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d493fa-6b1f-47b6-8bb9-e9bfad866f23",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12c548d-71eb-406b-8b62-60fd2af21dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2750d6-4c56-4c01-b9ea-1dd08b56f7ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d1bc15-325d-4d32-91b6-58dbacb8132b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed18aafb-44a5-4f7e-b9e7-039316ef9151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8f515b-93c3-4eca-9e0a-8b6d786b37e0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2100fe03-84f4-4e6e-82c8-d802466d4756",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a8cf5a4-48a1-4d06-af2a-39bf21ad41eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6062985-3cfd-43f4-b28c-6108fb385fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f03461b-35db-4a0b-86d7-2a81191681aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14739699-2ca8-4271-965d-2d02c4f8bcc9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6a5fd1-5349-43dd-97b3-b8c804e48ebe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43a9891b-4d3b-4f85-a697-ce5e4358405e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ca08f4-ab38-4ede-b3c0-fb16b70e3b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23422c30-b8f1-431c-84df-9f9f90a73612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0783dd9c-c86f-491b-9e3e-1c544c013225",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6234274b-879d-46c3-95e2-ff20463680da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "906b559f-489f-47b6-94e1-fae5be66280e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57617b7b-a6c5-4943-8850-8e5b927a20a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f550f7c-2816-4cda-b85b-c217adeafe12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54cfc70-03d3-4b87-9910-fb9853a9b362",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef1879d-9c4b-4a8e-98d6-9a00b8f2f327",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35b00de1-b377-4d93-a0fd-e88c94f1557c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "934075b3-655a-4133-a68b-cc2ee1081630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab6ec3b-7ab2-4954-b72d-7dbbbde44d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf454930-a516-4d33-b185-996e4a1f6916",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cc4f5c-b973-4506-a40b-a7045bbf0e13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec7f872-9d0b-4352-81f9-7cb18a7c2d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d91209-23a2-4725-a750-082339374d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db867797-9151-4fe2-9f1a-5074881b4612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a5c676-3d8b-494c-8914-1f96578d7125",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bb0511-c6d0-4b29-8a9c-0cb72467b333",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58798e98-fb61-4520-971a-ce291ee1a481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449b32e1-7851-4fb1-b278-c657a692564b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361d353b-43ec-4b43-899e-8f9faa09d516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee89d68-c361-433b-9979-8ee0b468920a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e33e53-3df7-4248-812c-596f2755ea2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a682b40f-ce2a-4a43-be65-1820634bb14a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc1c4b0-c35a-41f8-8361-6cf061b1f2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef7c911-9b83-4ca8-bd53-270c9c361b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae29bbb-1f5b-43ca-83c0-90874692be9b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e8d838-ed8c-47c6-9c04-eb5a39e7179b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45660b10-09ce-486f-85e4-87085e64cb92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07033798-909d-4400-91a0-d227623ae432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2291b5-6677-4d75-aec4-a7d5c4bdb8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af0e2fa-017c-4529-805c-63ecbb7e6976",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec74c625-91d6-4c9b-aef5-870ba614f128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ea63ec-63ef-44ef-9545-194ee7e7e6a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4217577-9883-4d2d-acc4-863ff27c4556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff677df-f32e-4974-90d8-fa5b186dfffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ed2b40-9fe3-4ab6-bc72-a3f864abdee3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c821f9a-6a89-41ec-a53f-7f7421a152ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addff713-9f29-466b-b2dd-435a70d51225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e34085b-615a-4075-a308-df82330dbf9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abcfe458-cf0d-4f76-bb4c-997516d1670d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc47faf-3195-409c-86ac-73ae0e6db8e5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574d65a5-c167-4998-9398-a9f737d0c1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58cc6b55-1238-4a46-8a4f-00aeac7a4a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41abaeee-1e86-49d3-a0be-165f15810df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a625146c-c4d6-46c9-81eb-80a881903b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272df17c-adfe-4284-a0e5-295afbb49081",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee709645-660b-40a5-ad8d-ed269c013e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ff1ac2-3489-47c8-9259-f07a3c0273fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d7b5b3-f5de-4b18-b752-32513925ca52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e42760-91b5-461e-bcaa-b9ba7de38469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e3d1ba-2f1b-4c10-bf3f-259f9b05493a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d25912e-83a3-4393-a22d-30a963124376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b64069-dda8-44b4-bcbd-fdffeef09e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadca4a1-3d6d-4297-b355-2bc7cc0b63f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affba6c3-e195-46b1-8027-3fe1f528db3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70ef2b5-1df4-43e1-b8ed-ce35ac7705b5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51b8230-80ca-4bf9-8f74-e46be7a00c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71291c3a-084a-4571-8d45-fbb4ccb66bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6981e0f-55f9-48f9-b601-b1ebee3b09e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f775ed-b10b-4d71-99fb-96533de71b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2a3579-60d3-48a1-9431-cfc23c4433c2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbde1b32-0fd1-4cf1-abcc-195e8640196e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d50682c-5fcf-4931-b326-cdef664ab617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a3c280-f9ac-4347-bda4-714c6d503e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b86fdc-b955-4acf-91fd-fb3533e1f4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7312d372-117e-4417-91f9-8d45c2956bdc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d8dfc9-571b-45d4-bffb-3c3ab50c0a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92482bae-a82d-4d32-b988-9873fb6d9687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c76b92c-61af-42e7-8643-a3d6530ab062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ae5c9f-de04-49da-b9ab-66e9ff52f6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8ff4b2-905b-43d6-95c9-63b0331fc01e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3468d7c-c3d8-41b9-91dd-3f418af849c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f17485-da8b-4f80-a62c-e55cc0d22220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d1b4a2-4688-43e0-a547-64230fba1a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c59226-8d0a-4f43-8972-4946cafcf77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494616a9-de90-4126-a8e3-abdad9be77e7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f16fc44-5f72-4379-9e71-b0c44c1ad38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8fa66c-e914-45c4-b97c-a8e923ec4de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d35c24e-2b84-4842-84e3-faa84e79b037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e19bfe-b7b2-44cb-b70c-022ef28b5e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf90f53-e17f-4da5-9e8a-a842cbc66960",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f103a6d7-e5c4-442a-a969-0be5ece038d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e37814-ce1b-410e-8c59-10873dbee57b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "757ba412-ff28-4493-80b4-07f332c11e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35736ebf-97d0-451a-836d-febadb7fa56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33187a1a-201d-4dc1-b347-d65fc41d8355",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90235173-6f96-4b5b-9e04-a459fd546ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e72edf-8ec6-41ac-a953-632fa10215c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b844cca-25d8-4b02-a09a-7608e9d5f8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b867cb-71e7-4901-9b08-cde77799a2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06535f6c-6ad1-4633-adb2-bffc26a3d713",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2479c10-5db8-4f55-ac4d-5b86735cf6ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b34f086-981b-447a-9f94-4f358044ebb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ca002a-713a-4847-96e4-480ab2498297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8af38b3-cf30-43b5-a51d-0006c61bd8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd73c5b-7a39-4b1a-ae92-16484e71ca3c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71e6b2f-36f4-4e7a-8e73-83cc1e238c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f3a03b-0abc-4759-9dcf-789911f8c20b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ce093c-fb7e-460e-9dc7-a0b4358cca8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531e6dee-cebc-42dc-adf4-a1b427b81c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b81878-a30d-4680-b2f6-174df073808f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca676860-afaa-4a45-a075-fccbbcd0f936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2ed191-2b7f-43f4-bf4a-ba742dedbd5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1a2904-409f-4bde-97c1-2807f6a36600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ef736b-d41e-436a-b8d5-db9fa47f411f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c81c69a-e390-4ba1-ad17-d76bde2878d8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4454f4f2-1dd0-4044-8c74-7988daad3118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b3f414-c1b5-4f6f-a9d4-1e4e16bab410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c244a614-6f38-44c7-9436-9f8ca00614de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18bee29-bf07-4796-8231-587820418314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d0d8cf-5931-448b-a752-3cc546a962dd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97d9aed-92e8-4acc-b3cf-708bb2c6016c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97773ab0-3eff-443c-bbe2-9b546f060734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee77772a-3eea-40c2-98e7-f5d8cee122e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aeebf99-4851-48b9-93be-8db6b259089b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c7a534-3087-4491-af9b-c6d1c456be3c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da20543b-ce11-4196-99f8-8c77dc746766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb2068c-13ac-489c-9284-28bab9d37694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38210a9e-26d2-4e32-9b71-5fda570ba17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9089bd3c-4b9a-42c7-87db-dbd8c9b8f3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fad1ff-06c8-4169-b82d-16092550b156",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a91db2-0b52-486f-9a35-9f7c08b18d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d2f2f8-653c-4a8c-87ca-cee672906c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1a3389-4ca1-4ddd-bf11-25a44c3b99fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4958dffb-b7f5-4c58-80fb-5af56da9b337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bb63dd-57cd-493c-8434-a76b7adb64f7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41750d9d-a0d5-47a9-bd4e-7ce91b44784b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb8f013-43a1-41c9-affe-9cd8064aa628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e13606e-b17f-4542-ad76-9b6ac6615f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf82804-a27a-4a06-8b8b-34b1ea9bf92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c45f7d0-cb63-407e-8248-a3a129204061",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f282af75-b648-484d-a660-5009a69ef851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e72e77-ba5e-4456-93bd-c9eef4b68816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7402184b-6f04-4d41-a694-f76ceaa479da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f497596c-b321-4f79-9332-8817c94ab0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81a7792-7795-4a7d-87f7-1fd25dda87a6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f63aed-ce39-4117-9e3d-3c35267afabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93fe40a1-de79-40dc-b693-f38bb1173de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbcb5e0-a82a-433b-b5c0-5402926a7e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab81a817-1387-449f-a658-72c0b74fa64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1438b2c5-d6ef-4d8f-9d4e-ba59f276b5e4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c5e9d7-b5dc-4f60-9b27-5ecf5b317fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8a6bba-706c-4e36-b877-9a6af6aaeb44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f4fc4e-5643-4503-a562-717d40d3cd93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20aca70c-b780-4946-b990-56eb0ef8395b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edca0ac7-8bd9-4dfb-b3c8-891f66f2f9ad",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb582960-2b3d-4bc7-bb2f-3d632c31919a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4573caaf-5056-467b-a460-4c01547be970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f56691-346c-4ce9-940f-3dd05cd2aa42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b0913c-b16a-4161-8790-159f6bd99520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a454f3-bf95-4913-b4ff-285d1273b368",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e3db4f-e1dd-439f-85c4-003410f47e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1cc1b9-f7e1-4f17-a2b5-a8fac5906f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "971d7970-51c8-4f92-9ffe-da1fc2633913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e25526-fe1a-4f40-b6c4-5bb7a7240874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910d197c-b24c-4785-b447-fafde4e723e8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b334c267-422b-44ca-8411-f1ccc716f2d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60db4ec0-da46-49ab-afde-ff3a3bc1081a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d281de1-6621-4c16-b2c6-f7a588798ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6434d149-bc04-4ecf-bd7c-0a69280e05f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf3d44f-e5f9-4cae-ac9c-ce49f4f02e94",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47ee532-effc-4390-b93e-2444ee75c5e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d00b5c-5349-446d-b173-19c3bb65ade5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "029e3d8f-14b9-4c6a-9b96-9cd4621a1fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf21691c-577f-4cc7-a112-f81a8bd62924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1e3495-887b-41ec-99f8-eba4df967cab",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32440e4a-32b7-4cc5-9a14-b2f343f4cd5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c786816-f73e-4b61-a476-1d1b5fb62e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb58c352-89b6-4d39-8e63-df53c2c92dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0a8135-b5af-4df8-88a4-1aade161e313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06373d6d-808a-41a0-9350-0cec4f3c52b0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09564146-7ea6-4d66-a0d2-c9029b0ceb73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a64f79bc-5147-4ec5-aa4f-3d1907110267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7768c12-da55-42e6-a6a1-90b86099ec4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521019ec-d74a-4307-bbe4-90607d9d17a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e535e5-0caa-4330-afa2-e3fffbe82fe7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b27026-8631-4893-901b-1597a9557a14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0a430dc-be2e-4a78-a133-43ac20e53b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6b01e4-9a85-4b35-8bbd-76e5ee3220e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68991500-b0eb-41db-b293-e61eb4d54144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa74ca5-d018-4328-a653-6f4e0bcfcfd8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6906681-6ef9-44a5-969d-57cc471bb8de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67b5adcd-c335-4d58-8c03-c437a108442c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7328d07e-5f05-4fed-898a-5132dc3aa033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903d87bf-c858-4af0-860a-1cf09179de85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23071c7c-907e-42c3-b4fc-6e83f0802945",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec97f53-4f0b-4c2a-9208-3968e13cd692",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c2d896e-14ce-4750-a8e3-f9bb54977012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef4ba3e-6c4b-414f-8314-b452992937a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf3a71b-5700-45e3-805d-26e3a29d3da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb309d2f-563c-4312-b01d-1cfc0c59342b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e80e16d-ec88-4f41-a882-01d6b2723fde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ced46510-653a-428e-8357-e12fc4cd6205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da047e0-e403-4ac9-a8d5-69d03c9604ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9433f3-9588-483b-9d0f-049323697509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4812dd-6353-4173-b476-e3475c1fef13",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bf9aae-4e81-4af3-9fcb-54c330697cb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4efac0aa-23a2-4e96-91bc-75f335b41f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054cc6f7-9adb-4065-843e-bc4cedc8587a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81310dfe-8916-4ab0-b899-6fcb5f541286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36987d4-6892-4925-a4cf-9b1a39c9571d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0488e5ac-e272-4d72-8f7b-46f45a824e64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2f6289f-76f9-49b1-8526-cd3b57182089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f79c6bc-efb0-4d96-ae41-68de5efc2fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b4bf83-50b6-46bc-b8ad-829535e53ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d317d58-0009-4827-afa1-f657db0785ef",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65ceebb-450a-4904-b04d-3d8d0192502d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cd04cf7-0253-4f61-b752-c3eab11960ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f3d3f2-fa03-40ea-b61b-a15eac438ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7175f13-e5d4-4daf-904d-b29aac76ff7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e754dd3-7cfe-42a1-bb0d-539287fe8234",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e167d208-54ba-47e1-88b5-269a5ac25491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "987647ea-cf91-4c01-b32a-577af4cf73cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eecb465-b5c3-4781-9943-3b9b818d9bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72a821c-6ab4-4517-b8bc-7ac708c95b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dc43dd-e148-4772-8e26-410247d2ffd6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e53d22-c351-4329-9071-e15261adbdc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bf169b1-bde9-4cd2-9f55-7dbd6e91538e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63acf34-3754-4b3b-89fc-21f80db01269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb8a2f4-f3ee-4bb1-803b-a6a24cc4ce30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8c6aab-7495-4af7-b3ae-31c4c1920cd0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb3a187-c673-47b8-8149-0bbb75399d88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54d396ca-d4cf-40b4-9ef0-e6724b3685bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2935580b-a7d6-412b-9ffb-6d9f1579b716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57765897-0b7f-43b2-b787-d63d5a1b148c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633e58d6-6106-4929-9fc8-d216f13b985e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3c582a-3afc-4219-b640-4cb3d177cbb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dff28cf5-39b3-4ba6-9f16-54c5669b6e31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db06edd1-108d-41ef-8d93-e3ddd51904ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d205407c-abf7-4041-aef8-9c3d2817ad96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b7bf17-bd2d-4f04-9727-37a2672b4889",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3473de0-abd7-432c-a3a3-1baab24494d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08c18d32-0999-498d-895b-d6dc26d2cca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e8887f-afad-434a-8bbf-135138b456dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c0f7d4-1990-4580-84c8-87c33aa14a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c5b28b-b9f2-4fee-bcbb-088e6a03045b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b096d0-c36a-40f2-beb3-6683b61bcd4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce1b2fe4-84d0-4953-abca-25f452ef1594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2340b1bf-327d-4104-bdc6-0f4f3d010b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d39c1e9-785d-4fa4-a8a5-82e30c17fd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4f77f1-fdd7-4ce2-9e34-aac2ec81d4d8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67388352-8de4-4a6b-a01f-7546965879c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef9b3019-bb8c-4dfb-8c62-3b228f04555e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4f7ed9-d9b0-42ac-b453-b8e07d07a62d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99a07a2-b824-48c5-ae37-b6643070c7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173bda6b-fdaa-45ae-aab5-c89daea395ef",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6dc86e6-7a86-47c4-bbf0-adf6df4128d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f645e497-e56b-4f7e-a47d-816208b1ff3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b4aa99-3fc7-417a-a480-9a271214c1f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3b5331-46b6-464d-b6ad-3b7145a07a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4f7f72-61ef-4a66-bf0a-d8d00d839a3b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540a2a4c-389e-4073-9b67-e0f7309554a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bbe18ff-d4f1-41ca-b7ca-4f6307dd660a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aedfa65-f43b-4308-9b0e-c80ba43b45e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b69ea7-c303-4a80-a9ad-672e1198d8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68ec0dd-472d-4122-8338-2cdd79c26eac",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba8046d-178f-4a11-86a2-fd2e96e94221",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5465d535-2bdb-4ee8-8193-2636983494dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4fc812-222d-44bd-aaec-0f52a22f5f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e2d10c-a4cc-42d1-99ed-9f1ff727410b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9195c0b-600c-4a09-a2cc-10ee9f14e6e9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948c62cb-4d4c-4469-b3ec-955ad3ac020b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d34ba9f-817e-4855-a477-5147dd5dfb09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363e4b87-12ea-452d-b5cc-423d1d33039e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90bff7ac-62e4-45d9-9fe3-7b792a83fff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2d7019-e5ad-42de-84af-89184e40937d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071d0e2b-bc4d-4dcb-b9ce-b16a67a0825d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64034f73-d0ab-42ce-bd53-891c931bc9fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12d7474-3825-449b-ae62-ee72a9dc7933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d82e662-0144-48dc-87a0-7bb3916659d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd520b1-57fe-4353-88c1-faaa716dced3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4129f2-0ae1-480b-b02b-115e82e1a207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c66d6f95-3f94-48f3-a162-5e4a780cab3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057ba5f2-8507-44da-8006-bae7c12eb961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d6d93f4-f8ac-44fc-86f3-4c49cc4772b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8235eca5-0931-4a64-9e5f-bb1970a477f5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f018cfe-093a-46ed-b381-92abb7de11fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6bdc826-2afd-4986-9aad-2dc1aa6e387c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedbdf71-77ad-4231-98b0-db32606f1dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd5c942-3d96-483c-8c49-8e6c774971fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289295e8-8135-45af-a614-77416b593a3d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efe091c-ccb6-4b38-96ab-a3eda16286e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "483fbab3-9c27-4c9a-9abe-4337efa0a2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e809a1e-9c3c-4818-8ec8-f59c4a907a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "334f7f6a-5603-4ab8-861c-e19fcb053963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92872b20-7163-4187-a427-ef4cacb32331",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7c3c3b-b0f5-4f67-8006-7aeda7935d5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b78e06a-4722-465b-89fe-24bcfba35340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817d5004-48ba-4b00-8928-3409948d422f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "916974bc-cc5b-4159-8a5a-f4b120f874b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f355ed26-2b73-4756-88f3-45394690a0dc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092a80e5-1c44-4676-b7bd-057242b327bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74530276-0b33-45c2-b2fe-1dd93c745e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed8c1a4-c847-4e81-bcdf-25367f51aecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ba640c-fee2-4bba-81ba-3536e036326b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cc95d0-99e5-44e7-955d-271281a490d6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40152df2-9240-46d4-acf7-bebe4a634d5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b2d3240-277a-40b3-8e79-dab2965f17b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363590f1-e35c-4458-a6ee-ed8fbd4127fc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951a71b5-e73b-46f9-867b-d7ceef461e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625a5879-3cdb-40c8-a62e-a09e11dce755",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e072c39-3a12-42b0-8780-c041e08b0b4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bbab4b8-c092-4c18-a772-2b576c31a734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "038def17-5329-42aa-8207-4ad9ffd11703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1efd66-66a6-4f24-978d-dbc287123adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8c4944-f1fb-4331-9915-5596d855b3e1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ff4808-ec87-434b-9b3b-9fef73d39555",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28105388-26ea-420c-beac-4bfc38a8c1f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefc5711-9c29-4878-904e-b58b7c2dff29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec5c95d-5fb0-432b-bedd-e2cd6d599c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0ffb9a-7219-47b5-aa1d-fb8ffc5870a1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de8b310-d16e-4b65-8806-433178ae0538",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe73e323-1e2b-47a6-b479-31c05d059eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01193d9-fa90-43a9-92d7-8cb2e53adede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9e9ea9-aac3-4c8b-9e8b-adc1efe9c1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5e9f59-5baf-4ea9-bec6-1bb539ae988d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e45d8d-59dc-4fd6-80aa-954dcf1d403b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c4b1c7d-e18d-4bbe-b325-22ae4dd60e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a716b042-2cfb-4632-91d4-de24d926e361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a349ba55-28c9-465e-9484-a31ef8fe97c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159e998b-e6ff-4062-a710-9caa4e07adef",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a91fad3-7265-4c93-a1f3-fc7765c7c56c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f43d4e2-b9f7-43b7-912f-834910a2b063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd03ca39-419e-4390-8329-98912b30c097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4cbd88-7888-446c-bca3-6e0b4235451c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d29470-e21b-4352-b0de-d2ab87129b3a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa743ac-3280-46ad-8915-4376fdc6d41a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7d297fb-8541-4b62-b1ed-244d2308f627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8cc5f1-b15c-49f3-9c02-823cec55c329",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532f93b0-6794-4069-b42a-7a653ed1f9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af76e0e-f585-4b7f-bba4-a5363da8fff2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdf6b5d-b2bd-4039-b3c9-0c7f87e7e87b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ffe2b56-195d-41a0-90dc-e7d95eb852b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdea960-eb9f-4c98-a6b7-872dfe2554f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222d8033-fded-4022-90e6-336d91329751"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "044b8bf1-9934-447d-9c58-0b8653eeb806",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "204d9316-d618-46cf-badf-db960ed17746"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6802fa98-7cf5-4abc-a8da-1e1cc91ca5db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "afe9aa78-76de-45f4-aedd-53f7fd1c5956"
                    }
                  }
                ]
              },
              {
                "id": "ed9d1634-ac15-48f8-80fe-63df51db3384",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "488d6b37-a963-4e72-a27f-0c02b4a2f4fb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04754931-1dad-4b50-9272-f42d5e2456ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "76f08251-35c6-4850-b5bb-7a388f972a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6400baa-f7e4-4683-9e1a-8160bd227918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "361018b8-632a-4950-9d43-fed6fd1fa752"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ad2676c-359a-467d-a637-ce1d4a7d1b82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0326add9-45c1-496d-9bee-0545c7bed61a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "370022e5-5dc2-4741-8797-2eedaf17f8f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5fbeb94-d1b6-4a4e-b188-b5515abcb884"
                    }
                  }
                ]
              },
              {
                "id": "8cb8c53a-6a96-40c1-b4e5-7416959b257e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ecde16b0-b1cd-4e21-bd57-edc847d0cfb4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4a1a49-f2f3-4328-8913-4c23c92e780a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "147694b2-ce40-4ad3-a43a-866a0a347218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52e62d5-9d1b-44dd-be49-ac48fd3a5926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18548003-5f61-414e-8c1a-39b99218aada"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "24c85b2d-5f69-4c52-ae17-eaccefe90824",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b6701fa2-d48f-4fe1-8f28-86ff27f8f743",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93e4cd4a-838f-440a-874f-f740e00f8abd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b03eb02f-02ae-4ed6-96b7-53062eb673e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2db28df1-da4e-4e03-b319-ab67343fa9c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76705832-2704-404a-a9bc-014f466ecaf4"
                    }
                  }
                ]
              },
              {
                "id": "49c651e1-a3c1-4734-96e7-82ee49af2b22",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "187b83a8-de7a-4f6d-80d8-df30456ad0c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1909802e-25ce-43a6-b45b-122bd1e44062"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a70abd8-5618-49e0-bef1-fd001c06882a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f5b14cf-e9cc-437f-a65c-51493ce469d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "740f44c6-27d3-4c9d-adb4-6c9db5d3f40c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b5ca41de-0c9a-477c-9444-0c7a9bc2e80b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6cd3b215-53ff-4e71-a39b-912a65e5658d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf032c0f-e42a-40aa-aa80-147896e9fb98"
            }
          }
        ]
      },
      {
        "id": "56e15376-10b1-49f1-90b9-9c0316ac6ce2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cfe0c939-c0f0-4db9-921b-2bf5accc2e68",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab3d01c7-ec56-440a-898f-0238d81ba64e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41096a23-3580-4517-873f-f0d2a27c3ca7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9740ae1-8700-431d-b1b5-77cfc7e35d7e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f0a0c84c-39d3-4a10-87ce-ab12f6d6a395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f0dc07-a896-450b-9a1c-021b951ac5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b5a62f9-2a33-4b22-b969-e2b482d0b02b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1eec66d7-64ce-4fca-8039-7a0e362e7ddd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f3a5f90-9c02-4034-b64c-d1fabc459d16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54808889-fe5b-4fb7-bfb6-c6f3099864eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29c03aff-a166-483f-90c8-5c5cfb186d58"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb6932b8-ab27-4353-9a63-385e04a66cca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9f0e7b43-7f57-423e-bbfb-4183ea45f6f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09a4e8e9-3bbc-4481-bfc8-bda5357c5925",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1b94795-2a6f-4d00-9152-8228e8b46cda"
            }
          }
        ]
      },
      {
        "id": "1f278992-43c7-47e3-a8df-cf556dce7779",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b1093bac-c400-4f4a-8318-2d237d547db2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14252bba-8982-4bac-adc4-840a048be308",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bda22e45-bb09-4150-8956-a585a8222e2d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12d4334-3b44-43e6-b922-cc2d1f29424a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97525dfc-e8f4-400e-9b5f-583b7fec60d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c479f54-adf9-44bf-814c-0b522f17a474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d1e7ff6-931f-402b-960c-dfcd6af97603"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0372cf58-8fa4-474e-b837-894067252d5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4097a0c9-bc27-4230-ab5d-567735b24fdd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "059ff2a3-224a-415c-b2ed-ee310c74b074",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33b2b33b-401c-4f5f-8c10-5b5d8df598e6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "473de62c-060b-4db9-afa0-cb04fa3c1273",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "efe81e8b-fb49-4d18-a206-0d79a728d4ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87be487f-3cbe-42ed-bcd4-e2590debef2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "766825fb-f728-4602-a44e-6a8fa658880a"
            }
          }
        ]
      },
      {
        "id": "2ec543e1-a4e4-48da-81fd-905f0e56cba8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "60315d19-b5bb-4d78-9c83-487b2f2b563b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e78db92-88b3-4b4f-b986-d54ddfbd7d2d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0b30344-a2c5-4e4b-88bf-2791144b2d6c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7879e5f-5468-4e82-8092-d6873c34e008",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1aa9244b-a889-4a4b-b948-25a62f2bb5d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e50019-1182-4d31-ae9d-e9860e24f211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84ed1e1a-0068-4af8-90fb-be766f93a07c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23927173-2e44-41bb-9877-061fc3c75064",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa4b0773-ed74-45bb-bc8d-b30bfd430f59"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "11372b57-4c07-4cac-b1e3-019b9ea7f60e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4400895c-369a-4a8e-8f7c-0eae27abf56b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba15b2b2-97cc-43c4-bbc2-469b1db13a82",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "82e31cdd-87da-4774-ad4f-574b205a5c47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ffaccf6-d980-4b11-83f0-c0fbaaebf8d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78e84a64-ef90-42f7-9853-f0f342143d79"
            }
          }
        ]
      },
      {
        "id": "02a11538-5ce9-4a97-bb32-8bddb9b04657",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "229016f6-72eb-422a-822f-4b865beba8ed",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a88fbf1-9951-46d8-891f-fd07371577e1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b0cb57a1-ac16-44dd-8f24-bb725477dbf8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86c2f26d-94f5-4796-b9f5-b7cd01d2bf5c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23aaeedf-afce-4adb-a4b0-01e767268ee1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 34.27464788732393,
      "responseMin": 16,
      "responseMax": 297,
      "responseSd": 24.93163733830922,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689381940286,
      "completed": 1689381961355
    },
    "executions": [
      {
        "id": "14a1d791-8a82-40ee-a8fa-e41c19d48b09",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fc97eb13-0757-4013-8f45-8404241e8b31",
          "httpRequestId": "04a590b1-5757-4fa8-8070-acc2ab53a551"
        },
        "item": {
          "id": "14a1d791-8a82-40ee-a8fa-e41c19d48b09",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8c6da979-61f0-4a28-b1dd-ded3a7107c4d",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 0
        }
      },
      {
        "id": "6e5c6c7f-d52f-4dbc-b2e7-ad436b76cf6d",
        "cursor": {
          "ref": "9d536c7e-8522-4bc7-bc70-1ed458e3fcd2",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1e9f706a-659c-457c-ba87-ad2f879d802e"
        },
        "item": {
          "id": "6e5c6c7f-d52f-4dbc-b2e7-ad436b76cf6d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e0e63977-43b9-47d1-94be-76df1a147caa",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "582d8c84-5189-40c9-a303-f79ea5e7fec3",
        "cursor": {
          "ref": "7501c35a-a0e1-4453-9f9d-11cdb7788532",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ae5b96e8-b9b6-45aa-be93-12df4f3a827e"
        },
        "item": {
          "id": "582d8c84-5189-40c9-a303-f79ea5e7fec3",
          "name": "did_json"
        },
        "response": {
          "id": "126e83a2-cef5-45b4-9d28-497be643a672",
          "status": "OK",
          "code": 200,
          "responseTime": 159,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca91335-cb68-4e1e-b4c4-e56609f3c982",
        "cursor": {
          "ref": "52823d22-f1ed-48e2-bac1-b04d7317bd4b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8aede77f-976a-4bad-8017-c5ff067d9164"
        },
        "item": {
          "id": "6ca91335-cb68-4e1e-b4c4-e56609f3c982",
          "name": "did:invalid"
        },
        "response": {
          "id": "ee02a629-a92b-49b0-a7a4-40c1c9e59362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca91335-cb68-4e1e-b4c4-e56609f3c982",
        "cursor": {
          "ref": "52823d22-f1ed-48e2-bac1-b04d7317bd4b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8aede77f-976a-4bad-8017-c5ff067d9164"
        },
        "item": {
          "id": "6ca91335-cb68-4e1e-b4c4-e56609f3c982",
          "name": "did:invalid"
        },
        "response": {
          "id": "ee02a629-a92b-49b0-a7a4-40c1c9e59362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8c4067-e01b-4dfc-9d6b-4254a64e6518",
        "cursor": {
          "ref": "137271b7-9ef1-4204-b7da-f5a2c103c626",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5fc2d976-cb99-4e8b-bd64-a1af6c66d629"
        },
        "item": {
          "id": "dc8c4067-e01b-4dfc-9d6b-4254a64e6518",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b78849d8-5e29-4e9c-b189-79cb5f98702f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 87,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68814c29-d77c-4071-8e31-25d817c029c9",
        "cursor": {
          "ref": "4e9466e6-b33a-4e36-9881-38af96c62417",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a3b16dae-e6cd-4e0d-a4d3-e83227e9ac95"
        },
        "item": {
          "id": "68814c29-d77c-4071-8e31-25d817c029c9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9ba678ec-b422-441e-9d95-0289a0f846ef",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b46c8a-f817-4df2-8a1c-6dfa2a7639a5",
        "cursor": {
          "ref": "34fb4f98-b97e-4204-8e7d-526d5388b6ac",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "15a9eda3-cfaf-4d0c-ba90-8405775a0373"
        },
        "item": {
          "id": "94b46c8a-f817-4df2-8a1c-6dfa2a7639a5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "883c2dc0-8c93-42d6-b088-5538340dde67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c47383-42c5-4100-b3b0-9527247a5749",
        "cursor": {
          "ref": "55ca4498-5a50-47fe-8a79-cc875a6069e6",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f6403e99-c093-4503-9d17-53d5ca7b4f8c"
        },
        "item": {
          "id": "c7c47383-42c5-4100-b3b0-9527247a5749",
          "name": "identifiers"
        },
        "response": {
          "id": "0194ad31-cfcb-48e2-806f-38f1a6d6a4c2",
          "status": "OK",
          "code": 200,
          "responseTime": 184,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0b0f08-4e67-4a56-9288-1eaf4b4a86f9",
        "cursor": {
          "ref": "d5a8c87f-f5e2-4793-b95a-1f2c9a745aa6",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9bb2cec6-dfc9-4f99-9041-c3038d20561d"
        },
        "item": {
          "id": "eb0b0f08-4e67-4a56-9288-1eaf4b4a86f9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8ca7dae5-5446-42e0-adc6-97ff0478e1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38bb442-5a7a-41a2-b459-7c76f1033db0",
        "cursor": {
          "ref": "c2a663dd-7bba-4c5e-bac6-a014e9923c4a",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "21cc93fa-ffcb-44c9-af18-fa2c2b543428"
        },
        "item": {
          "id": "c38bb442-5a7a-41a2-b459-7c76f1033db0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "20fb1239-03c0-4497-add8-2881df07625f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef37de3d-7359-4ec1-bcc2-f36d4b7dc24f",
        "cursor": {
          "ref": "0ee3e76a-b148-4746-b04f-357f1407178d",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1f905155-df14-491e-98c3-cea379108d7a"
        },
        "item": {
          "id": "ef37de3d-7359-4ec1-bcc2-f36d4b7dc24f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7a16ee3f-101a-4eec-8780-d8a29ac0ca32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5b5f3d-b71e-4043-88b7-1c17020d31a3",
        "cursor": {
          "ref": "c98e1f00-7e92-457d-9365-e99876a527c5",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e1f984de-5ce5-47da-93ae-b0bde102e048"
        },
        "item": {
          "id": "4e5b5f3d-b71e-4043-88b7-1c17020d31a3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "26c01321-76a2-4856-871f-e62eefda050e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed94028-a861-4f3b-8630-9a7c7c03ec36",
        "cursor": {
          "ref": "5e35d08d-7bac-4d0c-8271-ad2ea118a6c0",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1fed11f7-be80-4782-82b0-874badb69bbf"
        },
        "item": {
          "id": "3ed94028-a861-4f3b-8630-9a7c7c03ec36",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b63098e9-12a1-4d78-a746-ba979a053acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907fe046-f2c5-4507-9454-a48b7233861a",
        "cursor": {
          "ref": "5ed0bdaa-3947-44c9-b5b5-8cb8e33fd49a",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fbcd0eee-1ced-4108-8c12-d05bfa5ec002"
        },
        "item": {
          "id": "907fe046-f2c5-4507-9454-a48b7233861a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2f36a436-d760-47e4-9c08-a54948b2f807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79a6b3f-93eb-4153-8e9c-21da112a8e75",
        "cursor": {
          "ref": "9bad12e7-0f06-4cf9-839f-01cbab2b5e3b",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c2d47632-2a11-440d-b210-ceb4f0944baa"
        },
        "item": {
          "id": "c79a6b3f-93eb-4153-8e9c-21da112a8e75",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6aa83322-5bab-443d-9f5a-d4cb5a0f1e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02be6222-0cb7-4df4-99df-bc4771a4f6bd",
        "cursor": {
          "ref": "bb6b4c90-56bf-4dbc-bcbd-1ac4eb19f878",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c2b481de-784e-428f-8f5f-0794fbccfcd6"
        },
        "item": {
          "id": "02be6222-0cb7-4df4-99df-bc4771a4f6bd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b2b6fbed-dfd8-4e17-ab3e-6c0d51a42ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d066606d-f8ae-4de4-91bc-7b3c3d405cbe",
        "cursor": {
          "ref": "ba0f2339-0699-48f5-bab0-8b1e4b9d9cea",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "613b090f-a7a8-46ad-b987-87c2a7f21506"
        },
        "item": {
          "id": "d066606d-f8ae-4de4-91bc-7b3c3d405cbe",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0d44eacd-18b1-464f-8ea9-9da24936f0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8763cc85-6723-44ca-af21-b86cb300eb07",
        "cursor": {
          "ref": "4237db1b-0c50-4acc-a785-7ca0ddd06096",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "85d1b422-d0d7-44d0-91e0-6623b76fc360"
        },
        "item": {
          "id": "8763cc85-6723-44ca-af21-b86cb300eb07",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "31952eb7-173f-43d7-97b8-c4179b5b9e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8d1442-b451-46b6-b321-204dfc086539",
        "cursor": {
          "ref": "c2832326-df28-467f-93b9-a2c9c67bf4c2",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8a199ff9-01e4-4446-bc31-c0cc8df56335"
        },
        "item": {
          "id": "1d8d1442-b451-46b6-b321-204dfc086539",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1f0da827-158a-4e5d-89b9-7f93b0faed1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03e1a49-ea8c-414f-8b99-735d24ea6f9c",
        "cursor": {
          "ref": "be5633af-8af0-4f0f-81e1-46872b0b4ffd",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9c4d8210-3131-4cf0-8f2f-2b201ef8d112"
        },
        "item": {
          "id": "e03e1a49-ea8c-414f-8b99-735d24ea6f9c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2974fcfd-6cc6-4f42-a8d4-d93d4c535a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ce045f-c291-4843-8d38-6ed2951a363e",
        "cursor": {
          "ref": "cdb6b1fe-2906-4374-bd7b-6da9bace895c",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "76948e97-2213-47db-935f-8c9450f33b4d"
        },
        "item": {
          "id": "d5ce045f-c291-4843-8d38-6ed2951a363e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0b28112d-fe54-4d62-a619-bb2cf4b6cc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b932ab-c430-4e91-900a-1e864dbe797a",
        "cursor": {
          "ref": "4f6f1829-99bb-4df9-b774-946e954cb026",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ea5949a7-0ed9-4a16-ae0f-c0f6a45772a4"
        },
        "item": {
          "id": "12b932ab-c430-4e91-900a-1e864dbe797a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8f51ca3d-2c1c-4b25-bfe0-032abddcace0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967911d4-aa09-472d-8599-1bdcdeeab03d",
        "cursor": {
          "ref": "c5933da4-054d-4f2f-bcde-4e42034daf2e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5abedf4b-048c-4595-98c1-85c948536d0b"
        },
        "item": {
          "id": "967911d4-aa09-472d-8599-1bdcdeeab03d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b6d837c5-4d43-4c12-a329-28ae8d057eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c3bce3-08e6-4133-acda-5bc2c08a9e3c",
        "cursor": {
          "ref": "09b24144-c2ac-4442-897b-3f438c9a3356",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "03c64080-d06a-44e4-9277-75b5b7230a6d"
        },
        "item": {
          "id": "a3c3bce3-08e6-4133-acda-5bc2c08a9e3c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a868936d-c905-4d63-9dd9-bb72d4d6b73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f746e319-1fe2-4f1a-985d-0102fb5aeb33",
        "cursor": {
          "ref": "76d424aa-4d5c-47d7-a3c7-b551366389d5",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a3017c6f-b221-4ef7-b030-a27bba006dfc"
        },
        "item": {
          "id": "f746e319-1fe2-4f1a-985d-0102fb5aeb33",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d2ccbef4-012e-4449-a31d-9c570c1aae46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e7f1e6-1263-49b9-b420-d22d9b982053",
        "cursor": {
          "ref": "f27125e6-0394-4329-8d7f-857a45fcf33f",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1bf46a8c-40b2-45b3-93e0-a1371b6f6f28"
        },
        "item": {
          "id": "69e7f1e6-1263-49b9-b420-d22d9b982053",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d229b9fc-9519-43ad-b7b7-842a75b75644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0c5038-da49-4d1a-b833-b7e0a8b26952",
        "cursor": {
          "ref": "c3cca42b-ecb4-47ee-8123-a64e70758bf6",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b8049bee-96d7-42de-acb6-5fc3b8db81ed"
        },
        "item": {
          "id": "eb0c5038-da49-4d1a-b833-b7e0a8b26952",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c5dc814d-ebab-416d-be22-319346ad0927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c92c7b-9348-44b0-bf92-a7effb3012f7",
        "cursor": {
          "ref": "7da656ee-7e16-43a2-b89b-5556e42e2c95",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3601d214-621d-4256-b310-bb7afd33c135"
        },
        "item": {
          "id": "53c92c7b-9348-44b0-bf92-a7effb3012f7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ae176904-12da-429c-8967-c22cc8d3eafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7775ff8f-2b93-46ee-9d63-ff603f0f94f6",
        "cursor": {
          "ref": "dfa9c34a-a0e3-4d2b-920b-0b7b8eccbaa7",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "70b541d4-f6c3-43d7-bcf1-a5a82c01bce1"
        },
        "item": {
          "id": "7775ff8f-2b93-46ee-9d63-ff603f0f94f6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "decae9b5-0195-4670-821e-bf58146c08b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba54c2c-2f7c-41ec-a21d-adde9cd9ca42",
        "cursor": {
          "ref": "7305576b-057a-46a9-8148-ad51bab073f1",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "86d8379d-39e4-4cda-b21f-1c6d78cb2109"
        },
        "item": {
          "id": "4ba54c2c-2f7c-41ec-a21d-adde9cd9ca42",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "94fa1658-e5be-4970-b3bf-9f28363b28c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a836452d-21c3-4d26-8fe6-0c3778c7795f",
        "cursor": {
          "ref": "366d2078-7582-4cc6-9992-dbcd10f53c8b",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a7fb6b95-1a8b-43e9-ab62-da74d82f363c"
        },
        "item": {
          "id": "a836452d-21c3-4d26-8fe6-0c3778c7795f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "35428ece-d59c-4e43-80f5-435c4303ef6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bd136c-2c5d-4d32-9c67-9dc37b9c330e",
        "cursor": {
          "ref": "1f790eae-16b8-4b77-a3fe-0251ef501b58",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "949a5c51-09eb-4e2c-917e-087cf1c57ec4"
        },
        "item": {
          "id": "63bd136c-2c5d-4d32-9c67-9dc37b9c330e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "36d47eef-5822-4423-8748-de042b820e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d0af4e-7601-428c-8aef-1d838c5a613f",
        "cursor": {
          "ref": "aebdb739-a4e8-4289-ae69-18a347b0e585",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bc811125-b4a7-4bc0-a6f8-9a84ba57d6e8"
        },
        "item": {
          "id": "40d0af4e-7601-428c-8aef-1d838c5a613f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6619cfde-303b-4d02-8662-c1b443190af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ff0f8b-503b-4df6-b8a8-882a18532c98",
        "cursor": {
          "ref": "32fbef53-fa31-4228-94db-4f8d77b50eb7",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "edb9c9fb-8158-4c07-9012-f613ce17a796"
        },
        "item": {
          "id": "35ff0f8b-503b-4df6-b8a8-882a18532c98",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7fe50083-c547-4192-a6f0-8ae24ecc06a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49a3635-bbb1-4c12-bbb8-a1016f20fe4f",
        "cursor": {
          "ref": "837bd3d9-ba3b-4fb1-83be-a132bc7b7877",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "53c9258c-3ea7-425d-986d-c17e4a2984ee"
        },
        "item": {
          "id": "b49a3635-bbb1-4c12-bbb8-a1016f20fe4f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a40e789c-404f-48bc-83dd-d71a66d3a49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e881c1-91f1-40e2-9184-32ccb89a10c3",
        "cursor": {
          "ref": "5cd09e03-f2d9-4014-bdf5-65b825ea3c8a",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "23f2947a-9258-4e54-8f99-edbb7085d8f5"
        },
        "item": {
          "id": "c2e881c1-91f1-40e2-9184-32ccb89a10c3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7023a478-93e0-4063-a28a-97352416f7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d44ba25-676f-407d-b50c-3c205db5d901",
        "cursor": {
          "ref": "301a54d9-8db7-431b-9c22-17f164b4e377",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "73fa2fa7-df52-4be6-a4d0-73c55bd29069"
        },
        "item": {
          "id": "7d44ba25-676f-407d-b50c-3c205db5d901",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7e8e1028-4cbc-46f5-b6f6-8eef339b3bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8c4aac-e58a-42be-a87b-7abbcd74ad56",
        "cursor": {
          "ref": "71fe1f25-dfae-4292-84de-69918be19cc3",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c206a24d-2c96-4f56-ba9b-62cf0c57a339"
        },
        "item": {
          "id": "8c8c4aac-e58a-42be-a87b-7abbcd74ad56",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "06f98cfd-9efd-4535-9f68-56a99312d477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e215fabc-1198-4262-847b-48b036e2a9dc",
        "cursor": {
          "ref": "87e14b09-7168-4932-b93f-01b775f022eb",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "bd14059a-d7a7-4fcc-b497-fcbd9a223d32"
        },
        "item": {
          "id": "e215fabc-1198-4262-847b-48b036e2a9dc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ba9e79d1-04e4-4096-bbe4-31b290b83dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db75cf5-d3f7-4786-b565-75650e453800",
        "cursor": {
          "ref": "da2f014a-cc20-40b9-8396-6fadb039cd74",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f5039c71-e594-44a3-b841-eb82efaac4f9"
        },
        "item": {
          "id": "5db75cf5-d3f7-4786-b565-75650e453800",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7216848a-7d92-41fa-bd52-a9f1b81c0722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934d75c4-5d11-449c-8d4f-6f60bb8ba5b9",
        "cursor": {
          "ref": "d673df37-cd71-4c5d-b98b-fa4fd3cdaa64",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f30134d4-dd27-4516-94ed-d6cc63575128"
        },
        "item": {
          "id": "934d75c4-5d11-449c-8d4f-6f60bb8ba5b9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5752007b-de09-4452-8d06-b8c36938d144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1980c74b-b071-4247-9db3-67722a814015",
        "cursor": {
          "ref": "3e6be289-e174-4881-9fa4-5be7ff836c21",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b36405ef-3caa-4d36-a79d-c60f5bdbf4bb"
        },
        "item": {
          "id": "1980c74b-b071-4247-9db3-67722a814015",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "23262df9-c6c1-4243-bbae-4c9900447cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e1209c-ca35-4c21-8025-778c85587038",
        "cursor": {
          "ref": "a6c9396a-0897-4f87-963f-c975f0a879a0",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d8fcb471-0c51-4e6a-b944-ebb71b1615e4"
        },
        "item": {
          "id": "48e1209c-ca35-4c21-8025-778c85587038",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3ef88e42-35b8-4cb9-97fb-bd0c9bf0c204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965e0780-5ddf-4336-b3ac-e17102008286",
        "cursor": {
          "ref": "9a9d4abd-7816-42ba-898a-1218431f408a",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "92879719-9b9b-4838-9ad7-538265eae971"
        },
        "item": {
          "id": "965e0780-5ddf-4336-b3ac-e17102008286",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "087d111a-81fd-4653-9b0a-158ea0edbee7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d9b0b5-0d85-426d-ab0c-033a920c9cb6",
        "cursor": {
          "ref": "c30ccb96-4565-4d41-b970-956157f11e24",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6bbb03ce-79d6-436c-8d0f-7a069b849653"
        },
        "item": {
          "id": "36d9b0b5-0d85-426d-ab0c-033a920c9cb6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f3c562a3-ede5-4404-b078-7a114b8e0811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cd4525-b682-454b-b122-c3ae4942558d",
        "cursor": {
          "ref": "45cc7711-9e90-4de8-9141-a8193aa29133",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "84ed3f8c-36a5-485f-a800-f6846feb68c3"
        },
        "item": {
          "id": "d9cd4525-b682-454b-b122-c3ae4942558d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d08ff106-5a0b-485f-90ca-3fce09fc3dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d136486f-d13f-48b1-88cd-b09dae1d86c4",
        "cursor": {
          "ref": "08aef9fe-2076-4bc0-966b-53424b5c5dab",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6ad80041-c844-4823-bbf4-1e2878e0a271"
        },
        "item": {
          "id": "d136486f-d13f-48b1-88cd-b09dae1d86c4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "deff3886-2a78-43c6-ab9f-3edc93d704db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea46708-21e8-485f-8775-0b5f2633eabb",
        "cursor": {
          "ref": "9f951650-158e-45d5-9cb2-d663495d4cf6",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "91ac6bc3-23fa-4c77-873a-516c0370e8df"
        },
        "item": {
          "id": "6ea46708-21e8-485f-8775-0b5f2633eabb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4958ef0f-47b0-477c-b8a8-557bab13a7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed74317-5994-44d8-9fa1-f163859eacbb",
        "cursor": {
          "ref": "ff8e74ee-edef-4ac3-901c-d20359bc5436",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6e48ad40-270f-4d52-8436-49ab7efddd80"
        },
        "item": {
          "id": "bed74317-5994-44d8-9fa1-f163859eacbb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6d1d663b-b6a1-4cfc-ab32-17a9caa9dcaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0fd718-58e5-49d3-9f50-d65ad0b0f145",
        "cursor": {
          "ref": "78639d2c-bd9d-4854-8ecd-29971bde3d1c",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ed7dc996-9211-48fa-94e6-564e0ca3dbcf"
        },
        "item": {
          "id": "4d0fd718-58e5-49d3-9f50-d65ad0b0f145",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "efe7af37-406d-40de-85de-6d714aceaa77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738e50a9-1e89-4e3f-9504-362071009db0",
        "cursor": {
          "ref": "f4a16bae-0cf2-4115-b504-e8aa82fe3c2c",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4958afd2-a3a2-40b8-b855-e969c7f44f0f"
        },
        "item": {
          "id": "738e50a9-1e89-4e3f-9504-362071009db0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "09d832ac-2938-4a00-b369-c344a9786d48",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227e8005-7594-45e8-b4e0-bbf691cf4356",
        "cursor": {
          "ref": "0493a875-a00b-4337-8f34-22539fbd844d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fe03c748-a074-4440-84f5-976dc8aa53d3"
        },
        "item": {
          "id": "227e8005-7594-45e8-b4e0-bbf691cf4356",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cda831d3-b4aa-43c9-b480-686fa40c6b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770d4974-4259-4e83-82a2-fed2d881c63f",
        "cursor": {
          "ref": "4ab72d19-633c-4a6f-afae-641a4e2d772a",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "41fc20d2-3b81-43ec-84cc-7bcdc05a436b"
        },
        "item": {
          "id": "770d4974-4259-4e83-82a2-fed2d881c63f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9d85f9d1-9f8f-45f1-b893-70a3d55cb9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a039bd75-7284-4ce8-a61f-f61ce5bc1eef",
        "cursor": {
          "ref": "5978da31-06eb-4676-b612-67023cf64028",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e0df8e56-5e07-458c-91fb-a82d2ee383a6"
        },
        "item": {
          "id": "a039bd75-7284-4ce8-a61f-f61ce5bc1eef",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5ab843dc-f3bc-4d29-8d59-db44e2b12b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067d837d-c4b6-408c-933f-4ff540ca35fa",
        "cursor": {
          "ref": "31147ea5-e418-4fe2-9df1-b93697df3d31",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "34983eb6-4204-469b-8160-d3ea196e69d3"
        },
        "item": {
          "id": "067d837d-c4b6-408c-933f-4ff540ca35fa",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "74916cfc-ca9b-4bd9-a4eb-e6669850b897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b24cae-e53e-4442-a8ca-426bcb26aeea",
        "cursor": {
          "ref": "f04f8f46-1304-42b4-b4a7-9a54981393f5",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "db474b71-d049-40a9-a12b-cc542fcda5f8"
        },
        "item": {
          "id": "94b24cae-e53e-4442-a8ca-426bcb26aeea",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "25675c02-650c-4f67-914e-b235a2048cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c256ef-ace4-4f62-9809-2b5533aa137e",
        "cursor": {
          "ref": "b2ca2889-3dd0-46fa-a96c-a2a050a07b78",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f8a06a91-568b-4dfa-b080-343c1237fde5"
        },
        "item": {
          "id": "e0c256ef-ace4-4f62-9809-2b5533aa137e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "39145ff2-b49f-4dcd-b814-1d727c79f4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e049aef3-c93e-495f-b097-304232740248",
        "cursor": {
          "ref": "7c8258ea-eae1-447e-bf77-1beba12234c9",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5e3fb155-3bcd-4eee-89d2-5aa46c0937e7"
        },
        "item": {
          "id": "e049aef3-c93e-495f-b097-304232740248",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6dffbfd5-a37b-4cba-a214-c002e88e6fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674060f1-4671-4ce0-8bbe-6bc2e5d4da6c",
        "cursor": {
          "ref": "adef74b9-b601-43aa-9ddc-30374cbd1788",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5862c8c3-589a-49a3-9533-3e0356f2a524"
        },
        "item": {
          "id": "674060f1-4671-4ce0-8bbe-6bc2e5d4da6c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5d2a104b-77b4-4889-a119-007d17850d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4a28ca-f429-461f-8573-89802eded582",
        "cursor": {
          "ref": "242baa55-5eb4-4c13-9ebf-bd91ff6c4c2d",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0763b5aa-88c3-4112-a4f9-32ce28ac843f"
        },
        "item": {
          "id": "fd4a28ca-f429-461f-8573-89802eded582",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c4f0b021-c9af-46c0-83c1-68ec915a3622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0ec56b-951f-4cd9-ab82-d7ff75b1d39e",
        "cursor": {
          "ref": "013c6072-8c0d-440f-be02-da6ee502a7ad",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2ac88e3e-f06d-4cfd-8c2d-0f5c262fe5e2"
        },
        "item": {
          "id": "ae0ec56b-951f-4cd9-ab82-d7ff75b1d39e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4cabad63-0c76-45ba-85c2-a1b32714b7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f271b0f4-140a-4802-bce9-d83c450bc1a5",
        "cursor": {
          "ref": "eaf8c385-6361-4465-bff3-aeb85cfe0e9d",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c1fdac30-35e7-45e8-b68f-1aab8fbea957"
        },
        "item": {
          "id": "f271b0f4-140a-4802-bce9-d83c450bc1a5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "19e5de51-c838-42bd-9e65-fbbf5799f58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78624026-1918-4274-8981-714c9d7f2d17",
        "cursor": {
          "ref": "5d86d249-f863-4676-b32e-ddade86a0a12",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ff276d69-e92f-46b2-a6ba-f21ec7ab6e07"
        },
        "item": {
          "id": "78624026-1918-4274-8981-714c9d7f2d17",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a6b3874d-ca56-4679-8c96-d236fec75341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401ce1d1-73d6-4122-beaf-ac9bab57f21a",
        "cursor": {
          "ref": "5db40b4f-1bbc-46fb-b1ac-7a30683cb951",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4adbe950-c77a-4a17-8651-73ed64b804d4"
        },
        "item": {
          "id": "401ce1d1-73d6-4122-beaf-ac9bab57f21a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e960f282-f164-4e07-94c2-84d77d95e68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ccad31-66e2-4390-9acd-02d52e21d7f4",
        "cursor": {
          "ref": "837a0125-606a-475f-bb49-19bf81db50ae",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b43b6a17-d3d9-4bfb-a37a-f1cc3e956164"
        },
        "item": {
          "id": "77ccad31-66e2-4390-9acd-02d52e21d7f4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "656fab11-9c14-4d7d-8047-fa17cafd87c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af032e7-5458-4815-a03d-66804b091740",
        "cursor": {
          "ref": "fb86fed2-0b17-42e8-86df-4186d0d5941f",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "091cb035-6fd2-4f71-8437-8f398e97d6c9"
        },
        "item": {
          "id": "5af032e7-5458-4815-a03d-66804b091740",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "edf7b1ac-a6cc-471f-9e73-bb9f8c6f53f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecc46ad-44a7-4b2b-8e97-efb3214cfcdb",
        "cursor": {
          "ref": "fb23654d-f199-4c80-9fcc-7b07b0b46266",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5bbe1a19-eb44-4354-be31-496e6e085905"
        },
        "item": {
          "id": "cecc46ad-44a7-4b2b-8e97-efb3214cfcdb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "595dc65f-4a6a-45e2-a0bf-88d17ed653e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ca3fe0-6c1b-489e-8d19-abbc8a86f8c8",
        "cursor": {
          "ref": "4b66b3a7-79c9-4b9e-84b1-d9f12928c3b6",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "149a85f9-6028-4b88-a418-6c93760526c5"
        },
        "item": {
          "id": "f4ca3fe0-6c1b-489e-8d19-abbc8a86f8c8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0801fdd3-d074-478a-8644-a7e98b985d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f67c393-763f-4896-805a-ee6703e16921",
        "cursor": {
          "ref": "f12641df-9fd5-47e8-98c4-20a5429fe406",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3e8801aa-4fe3-4156-a47c-a5194e399435"
        },
        "item": {
          "id": "9f67c393-763f-4896-805a-ee6703e16921",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1df43140-0dcd-4d3f-9681-df9d621ea839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a8bcee-1e0c-4956-aa6b-067e30eae3c0",
        "cursor": {
          "ref": "491315e1-2584-4bf8-bf2e-2169d70a8358",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0a857ef7-7255-4fd4-b478-6b097e2367ec"
        },
        "item": {
          "id": "63a8bcee-1e0c-4956-aa6b-067e30eae3c0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e05d8e96-7e8a-4723-8c18-5e46e3dfdd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa40ec98-8fce-43b4-a3fb-52a3cb798add",
        "cursor": {
          "ref": "6a821ccd-615d-4431-bf59-8880f28f504e",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c8daf385-8118-46eb-becb-e6ca1ae7ace4"
        },
        "item": {
          "id": "fa40ec98-8fce-43b4-a3fb-52a3cb798add",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f065e5bd-25ad-4a01-9e9d-d9f11afe40d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b1380b-780b-4b78-b912-de5f507fc012",
        "cursor": {
          "ref": "76fd2e17-fd4d-4e8a-91c2-0a62d0ca6a63",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b1c13631-db96-48fd-ba36-c13d767322c5"
        },
        "item": {
          "id": "92b1380b-780b-4b78-b912-de5f507fc012",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c74da338-c2df-4a0a-8387-6753bd5020f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322b2557-aced-4cc0-b86d-423d27dc4f88",
        "cursor": {
          "ref": "957fce72-f4e5-4346-b8e3-70ea759120a8",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d7302701-591c-4b48-9e9b-2648ab1b9f2b"
        },
        "item": {
          "id": "322b2557-aced-4cc0-b86d-423d27dc4f88",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "053afa3a-44c4-4c25-be9e-719d8a3cfef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ee6dec-097f-43c6-9540-4f261bd82ec0",
        "cursor": {
          "ref": "08eb92b7-ebbc-4358-8834-4bae3b07713d",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0b0b8bfa-b11f-417a-afe7-4e4fb0ec0654"
        },
        "item": {
          "id": "31ee6dec-097f-43c6-9540-4f261bd82ec0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "03133a3d-0f85-4df4-a2cb-3e94be7248a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5687138d-8cb6-42de-91de-3048631a6269",
        "cursor": {
          "ref": "5ee5873d-a997-41f1-91bb-c7b21053a8c1",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "47494f07-335d-4e41-8f1b-de82826e511f"
        },
        "item": {
          "id": "5687138d-8cb6-42de-91de-3048631a6269",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "606fd996-de8e-44e3-a31d-b41794451537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5411d503-eed3-4cd1-929c-100fd29e845f",
        "cursor": {
          "ref": "bbd7372d-47da-440f-94af-ea62eea6dd3c",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "32f94bbc-f906-4dae-8923-c94ed958ab5b"
        },
        "item": {
          "id": "5411d503-eed3-4cd1-929c-100fd29e845f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9ed6b5d5-13f0-4d89-9576-db99a08d730f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6190e4-9ace-4510-a340-dc894444b986",
        "cursor": {
          "ref": "022d6759-edc5-4b79-b891-d30aed64b0c6",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "08462456-3e17-45c8-bd3f-99e260b17b6b"
        },
        "item": {
          "id": "1c6190e4-9ace-4510-a340-dc894444b986",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "63e340e1-fc23-4dcb-bb8f-93b1c99664d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8c6bb6-1e95-426d-bd8f-d6c3c2f52e58",
        "cursor": {
          "ref": "4e1a3b62-b2ee-474d-b1ba-4f01e3446bb0",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3cef9590-8087-43c8-ba06-790bc5089a6b"
        },
        "item": {
          "id": "3b8c6bb6-1e95-426d-bd8f-d6c3c2f52e58",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "825aa11a-5690-4eea-aa09-5327edd4673f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ad1254-a809-41b7-8059-e8d86def1f3a",
        "cursor": {
          "ref": "989f9682-2edc-473e-a479-d53df2fb6d17",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "94fd1ba7-4eb2-488b-9238-257d5894e438"
        },
        "item": {
          "id": "08ad1254-a809-41b7-8059-e8d86def1f3a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6bc4edb1-0f6d-4baa-9d5d-91e7c7c03143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83401b23-202e-4f98-9c6d-2bbb3475b113",
        "cursor": {
          "ref": "3c4e5ec8-718e-489d-86f4-68ccfc2b55cc",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "368a5292-6127-4a2a-92ec-92225ba4e68d"
        },
        "item": {
          "id": "83401b23-202e-4f98-9c6d-2bbb3475b113",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "dc3df69b-64f9-443f-8581-34d411365e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9739b043-07b4-4d71-8ac6-b8fc2b90ae53",
        "cursor": {
          "ref": "2d31d3b7-0369-4cfd-bebe-593b95238730",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8ef35669-35fb-430a-b2e4-7f6b78f59713"
        },
        "item": {
          "id": "9739b043-07b4-4d71-8ac6-b8fc2b90ae53",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b3a29183-ed8c-4605-97b5-8267e1df8867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d39fd9-ddde-4c61-bc86-ba8d4df7b00f",
        "cursor": {
          "ref": "a7563fb5-9a62-4d95-9ae5-cb034593610e",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b6a52b8b-21e0-4300-b673-a4973a377ac5"
        },
        "item": {
          "id": "38d39fd9-ddde-4c61-bc86-ba8d4df7b00f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "abbb9e7a-005d-476a-a32d-003031a42428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0b55f8-87ec-47c9-b856-c1a4012e2e0c",
        "cursor": {
          "ref": "459ffc9a-26aa-4575-a326-7151e3fe1dd4",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "20c5cb73-d38e-4849-bed9-455acc596b0b"
        },
        "item": {
          "id": "0b0b55f8-87ec-47c9-b856-c1a4012e2e0c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "69c24ec7-7ecf-412e-8401-26354ed9fb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5718e20a-0947-4884-bac6-51c39beb5eef",
        "cursor": {
          "ref": "e5a2889f-47fb-436f-a475-2f2b34db2aea",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "da562010-0946-4958-b152-23b1610170e9"
        },
        "item": {
          "id": "5718e20a-0947-4884-bac6-51c39beb5eef",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c3b68dbb-f203-4b9a-85c4-5af4e1bb70b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7669798-c0ba-4247-aa5a-4ff91901633d",
        "cursor": {
          "ref": "a20d560f-39f0-4d4d-81de-da72b9960680",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bc94aec7-77f4-49a9-aa6c-766479602a20"
        },
        "item": {
          "id": "a7669798-c0ba-4247-aa5a-4ff91901633d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a85d5f73-88d7-4393-9450-9acef430ac8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2295a9-e0d2-4cfc-b10a-6b9ae234edd6",
        "cursor": {
          "ref": "0be7e095-afbb-4f2d-9a78-67c8676efff3",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b853d38b-9d36-47f8-b8d2-bbc741564b7e"
        },
        "item": {
          "id": "8b2295a9-e0d2-4cfc-b10a-6b9ae234edd6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c8ffc90e-e8ad-459c-a828-af3e311656f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719e88d5-5e25-47b4-9bc5-1cb1f5224dfe",
        "cursor": {
          "ref": "d3863188-de8f-4f88-8b35-7e1defff6241",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d1859069-175c-4799-b946-ba7219f271c1"
        },
        "item": {
          "id": "719e88d5-5e25-47b4-9bc5-1cb1f5224dfe",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1bdf1c24-304e-4eb2-a2a5-2cfddec0e2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1374742-0f7e-449e-89fc-c0b55ed19077",
        "cursor": {
          "ref": "71b0067e-71e2-4079-a145-f3d5b32b00d4",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "17ff288d-ab61-4309-927f-9f57be671111"
        },
        "item": {
          "id": "c1374742-0f7e-449e-89fc-c0b55ed19077",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9c25844b-6aea-4a30-bd06-e2b177efb5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7b5cdd-d0b9-4357-8759-42e199c1686f",
        "cursor": {
          "ref": "4d404e35-e791-40d8-9d51-40e1c330e064",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8eef2fb7-f2cc-498b-8117-bb060dd4cf9b"
        },
        "item": {
          "id": "3b7b5cdd-d0b9-4357-8759-42e199c1686f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c3550e93-4937-4929-a416-dcaf17f11f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ceb9c7-3e95-4c32-8178-2fdd77601786",
        "cursor": {
          "ref": "8e8eec33-3572-4a1c-af86-91f6485ca08d",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "769c1830-b95d-4043-83f8-f293fe72770e"
        },
        "item": {
          "id": "f4ceb9c7-3e95-4c32-8178-2fdd77601786",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "382ab266-66f2-473f-ae98-9f528261e155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a39f5b-af0d-4f50-9068-91ab90736831",
        "cursor": {
          "ref": "deff0c5c-6e4d-4396-bdbc-f5a8a7184e7c",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "347846a9-6b4f-454c-aa68-86bab2a1834e"
        },
        "item": {
          "id": "90a39f5b-af0d-4f50-9068-91ab90736831",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "edceab56-c46f-484d-a4a3-8ad6166a25e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea25afd-9d97-4876-9d73-77ea4892590b",
        "cursor": {
          "ref": "e7c30743-06b4-45fe-a7d6-12db5f4d4cbd",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "20143bfd-69b1-4c6b-b82a-158c913a579a"
        },
        "item": {
          "id": "7ea25afd-9d97-4876-9d73-77ea4892590b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c81cfa65-603a-421c-a5f0-f2415a63e051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a4f7c1-dfc3-4650-96de-c45de92772eb",
        "cursor": {
          "ref": "a8c8864e-1f84-47cc-984d-a68f8a395064",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "08d4101f-1205-48b9-97f6-fa6e1fa8ad00"
        },
        "item": {
          "id": "e1a4f7c1-dfc3-4650-96de-c45de92772eb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "884dbcd9-7acf-464b-a5ac-82cc9807c7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fc0c87-df2b-402a-a3a4-701427f9eee3",
        "cursor": {
          "ref": "39fae998-cca6-4bcc-8ea5-c8302534634a",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9173ba5e-8930-4768-8dbf-74f4819f13b5"
        },
        "item": {
          "id": "57fc0c87-df2b-402a-a3a4-701427f9eee3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "27322701-7bbf-44fb-8012-1426f3d5d0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e189a445-7f78-4563-af79-b70409effbf8",
        "cursor": {
          "ref": "a8996bfe-4745-4d99-8515-733ae3e6b7d7",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8cf43d84-0783-4e0c-b851-50237a8c321c"
        },
        "item": {
          "id": "e189a445-7f78-4563-af79-b70409effbf8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b6eba593-6374-431b-8b02-3572ba46dcc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d2e557-fdc7-44a0-ad6e-d9d64f224563",
        "cursor": {
          "ref": "28d4816e-7ee4-4bc9-8911-6c7c9ab04f81",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0835188d-c3e6-4e5f-9848-c3995ca12e8e"
        },
        "item": {
          "id": "e6d2e557-fdc7-44a0-ad6e-d9d64f224563",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1b4d000e-34d3-4446-842e-c8c02313e44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a450cb7f-edaf-472c-9384-56a29968ddd0",
        "cursor": {
          "ref": "b4f71aa8-1b07-44ed-82d4-fd2f84456707",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ef99bf11-5d89-499a-bca3-8d0cd30ec134"
        },
        "item": {
          "id": "a450cb7f-edaf-472c-9384-56a29968ddd0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b78a448b-367b-48cc-843e-71e304c7ab83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994cbebe-5c3c-4ce4-89e0-ca4181a65072",
        "cursor": {
          "ref": "2ac552a5-f9da-4259-b8a6-c2eb92ebcabf",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "39407388-000e-4c1b-9774-35d556ac1972"
        },
        "item": {
          "id": "994cbebe-5c3c-4ce4-89e0-ca4181a65072",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "13c361df-dbba-4e82-a837-62d44b93f4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fadb59f-7637-422a-878a-2ca80616bec5",
        "cursor": {
          "ref": "8aa3b7b9-bc85-4f42-ab1f-60b1f434f2eb",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "faa7433f-ea6b-492d-8c03-0ecbb40e9d76"
        },
        "item": {
          "id": "6fadb59f-7637-422a-878a-2ca80616bec5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b82ce2eb-efaf-4583-9e03-329bf0f0c88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae9d952-f0c3-428f-8d60-ad60dbd3206a",
        "cursor": {
          "ref": "4a8222ef-f81d-46d2-a5ce-5cad515be816",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c2f07b8d-1be6-4f47-80bb-77fd0a31dbb3"
        },
        "item": {
          "id": "5ae9d952-f0c3-428f-8d60-ad60dbd3206a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6f1b5d68-9fd9-4f5d-b83d-e3515b19e0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ec5f0f-0ad4-4b9b-b9b9-43a1b53fc1c2",
        "cursor": {
          "ref": "abcae456-090f-4d49-9695-7994f8f2f36f",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "602b96db-81ee-4ea3-bd31-8e05e45e93e4"
        },
        "item": {
          "id": "98ec5f0f-0ad4-4b9b-b9b9-43a1b53fc1c2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "37accfc9-6b85-47d9-8db5-0a0c35968db2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33a3b88-2d11-4730-8a98-513c6d5d43c7",
        "cursor": {
          "ref": "f4e5b192-aea9-4a69-8dfd-3f27b5c899d1",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "162ebc49-248c-4b9f-bbb1-f1cd91deb54a"
        },
        "item": {
          "id": "b33a3b88-2d11-4730-8a98-513c6d5d43c7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5bd52ae3-0eae-4a77-8f30-5c3c7004309c",
          "status": "Created",
          "code": 201,
          "responseTime": 61,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f072590e-dd38-4e9a-830d-d5a185a00fcd",
        "cursor": {
          "ref": "056cab93-fab0-40dd-8151-ec72f1b49ab8",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9b5f1a52-a278-4415-a40e-abbc05ef4db1"
        },
        "item": {
          "id": "f072590e-dd38-4e9a-830d-d5a185a00fcd",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fa1c1fa4-0513-47c6-a669-2c026f4a0fda",
          "status": "Created",
          "code": 201,
          "responseTime": 297,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d83431e-a1ef-4ef4-8bc8-1681b54e0505",
        "cursor": {
          "ref": "a8ca0ba3-c158-4f17-9a31-837c0470cf87",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9d7de4c1-d708-43d7-b04d-2ebc89a356b0"
        },
        "item": {
          "id": "2d83431e-a1ef-4ef4-8bc8-1681b54e0505",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4a91aa5a-0e77-492c-ab85-cd99599dc75c",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d91b28e-fa00-4269-abc3-beeca90057f5",
        "cursor": {
          "ref": "0d435806-d3fb-4d5b-8bce-c4f6284f446d",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "32648c46-3757-4a0c-91a4-9181ed7ddeaa"
        },
        "item": {
          "id": "2d91b28e-fa00-4269-abc3-beeca90057f5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5d121057-0e6a-4c3c-b85e-8cdd7dc72f60",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe5e79b-1ffd-488d-9fa6-684172937397",
        "cursor": {
          "ref": "343ca455-6c40-42c2-a895-0e3810d075fd",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f0b75bb8-d28b-4566-b155-68489498ae0f"
        },
        "item": {
          "id": "dbe5e79b-1ffd-488d-9fa6-684172937397",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2f599abf-4e39-43f4-8513-b290abe4880a",
          "status": "Created",
          "code": 201,
          "responseTime": 47,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "29899ea9-133f-4200-b48a-958a9d17641a",
        "cursor": {
          "ref": "ab81584a-6788-44d4-aa17-7ec0d7728ef0",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6a727d93-b0bc-4798-acfc-4e1727d86488"
        },
        "item": {
          "id": "29899ea9-133f-4200-b48a-958a9d17641a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d808a569-e135-4403-bae7-9e32cebc7bf3",
          "status": "Created",
          "code": 201,
          "responseTime": 47,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7817b3-2fe9-4644-b883-8aa6fd08a202",
        "cursor": {
          "ref": "4d20e5c3-cf78-407b-9970-24ad5124245c",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c66ffe7d-9e76-4331-ad14-ad7c20605faf"
        },
        "item": {
          "id": "8c7817b3-2fe9-4644-b883-8aa6fd08a202",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f433fd8b-bf39-4783-a165-d0dcf79055ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f80ef4-e132-4321-9ab4-d1e5abae17a5",
        "cursor": {
          "ref": "0124c176-6a7e-4040-86c0-e9bf3953e575",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b59b9969-6836-4e91-a668-b1ab53ab5701"
        },
        "item": {
          "id": "46f80ef4-e132-4321-9ab4-d1e5abae17a5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "798029be-ed33-400d-bab3-f50284839a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c91c6f-7648-4ee4-a14f-9a7230093181",
        "cursor": {
          "ref": "4ecbfdea-0f27-40bd-995d-2e3e83d7dcd9",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "29fdb369-b871-40d8-9f25-f6751b4dd406"
        },
        "item": {
          "id": "60c91c6f-7648-4ee4-a14f-9a7230093181",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7ff95c9c-f319-47a2-a880-9a11b26e709f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c8143d-def8-47ac-8146-dd84d7caca61",
        "cursor": {
          "ref": "1f1c012d-8755-41de-969d-bc126d2b1d03",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "37289aca-cac5-4332-8101-9f77da689030"
        },
        "item": {
          "id": "e8c8143d-def8-47ac-8146-dd84d7caca61",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9d49b27f-6380-4a20-b829-f8cfafb5b34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5310b8-9762-4253-be04-14daddad7abe",
        "cursor": {
          "ref": "90380d7f-434a-46fe-8088-336a544ab689",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7184a286-3146-495c-9dab-62820d126121"
        },
        "item": {
          "id": "3c5310b8-9762-4253-be04-14daddad7abe",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4fe2df6f-27fd-43ae-a04a-cd549c2e287f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a62dee-dacb-4195-9afa-dd18ae67fb96",
        "cursor": {
          "ref": "115da51f-dc80-4a42-ab7f-a8a1127b1b6d",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "14a6da96-3d37-4818-89c0-3b035fb74dcb"
        },
        "item": {
          "id": "e5a62dee-dacb-4195-9afa-dd18ae67fb96",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "10139409-b62e-4169-8b94-31378e4e24ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4a3722-653c-4a92-8529-bf88b514d285",
        "cursor": {
          "ref": "0098d8f1-b7af-4cb4-83f8-79605512e5e6",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "17b79e06-a1d7-4612-a00f-539a8fe8dfc8"
        },
        "item": {
          "id": "3c4a3722-653c-4a92-8529-bf88b514d285",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d74ef823-9128-4618-91ea-4c4e3e9cdaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd144acf-465d-4263-b710-d4da86501617",
        "cursor": {
          "ref": "ace62f7c-3c81-4578-aa34-f837d8c599a9",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "51a840ff-d1e4-417d-9a65-4b956ea67bdf"
        },
        "item": {
          "id": "fd144acf-465d-4263-b710-d4da86501617",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "480787ec-b9e8-4d85-b231-44b0b25d1f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6c9011-daed-4891-9c84-2749ef5e287d",
        "cursor": {
          "ref": "a3e3125a-8b45-4b8b-819a-b6baa92e9bcf",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a68494a1-79c5-43cb-bb35-160a738aa1ed"
        },
        "item": {
          "id": "4b6c9011-daed-4891-9c84-2749ef5e287d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c51203d7-5c19-4c7c-ae58-c699a5d52457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e89278-cd8d-4451-aa9e-d35e4f37938e",
        "cursor": {
          "ref": "07c18a71-f479-486b-894a-47f2cb706c99",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "39f3a8f4-54a0-4bf6-b4ed-106da69e30b6"
        },
        "item": {
          "id": "86e89278-cd8d-4451-aa9e-d35e4f37938e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "91aa585f-65d0-41f1-8585-66ffe839ebc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354926e2-11a6-4b38-b87f-2b41b4609b66",
        "cursor": {
          "ref": "28d9f4fe-e0f8-440d-995b-ef32e6f9b1ec",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a5f3b7f4-e85a-4f7f-a0cf-e36236d74603"
        },
        "item": {
          "id": "354926e2-11a6-4b38-b87f-2b41b4609b66",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "22636a89-cad1-4d05-938c-5b2bbf73b227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca18bf34-0fe3-4421-9359-1269791243b1",
        "cursor": {
          "ref": "2ea58002-a998-4a79-aebb-79b8dee9072a",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5c0cd73d-770e-4794-92e8-e770b74683ef"
        },
        "item": {
          "id": "ca18bf34-0fe3-4421-9359-1269791243b1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4685b06b-17dc-4625-a404-486a41af75e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d6c108-6a03-426d-9fe0-414a5e35cdb6",
        "cursor": {
          "ref": "95f7c093-6a0c-4ebd-91e2-e5806c188a7a",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "399b449e-9fd9-421b-89df-09f81c5f7f77"
        },
        "item": {
          "id": "96d6c108-6a03-426d-9fe0-414a5e35cdb6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9af1bf86-3c4f-45f5-8e5f-9c9a15949a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa1dc81-1412-4eb0-862b-cf3c5bc32143",
        "cursor": {
          "ref": "695e22bd-f8b5-41aa-9132-8af285a1fc77",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "16b9e44d-3abc-417d-a82e-8b4487c309c9"
        },
        "item": {
          "id": "7fa1dc81-1412-4eb0-862b-cf3c5bc32143",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "43005610-126e-43b6-bdd7-a76933ded7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1555d70-ca66-43c6-8ec2-eb045329576d",
        "cursor": {
          "ref": "7a648d72-3b56-450f-92a8-32a97dec129a",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "33a2e570-cc8b-4e4a-b648-80e2f9afacdc"
        },
        "item": {
          "id": "d1555d70-ca66-43c6-8ec2-eb045329576d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c6375f44-6b9d-4f63-95f2-f6381f8aa0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61be350-21cf-4f79-a7f5-6232d2b85689",
        "cursor": {
          "ref": "00ac7bb9-f94d-467b-b480-c4c376c11b27",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b2686006-bdac-4b0b-b3cf-5dd8d1f4aa3a"
        },
        "item": {
          "id": "f61be350-21cf-4f79-a7f5-6232d2b85689",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7634d836-dd4b-419c-8631-5b92a030214e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f583499d-6387-4c69-9071-26617fa83621",
        "cursor": {
          "ref": "1fc19f39-8232-4654-b11b-3061c690c38b",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7c94fa1b-0759-4ec6-a13b-2119811b6764"
        },
        "item": {
          "id": "f583499d-6387-4c69-9071-26617fa83621",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c0281e84-b1fc-48cb-afb4-950161ee185e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea344fe-db89-4a38-88b0-9207028918db",
        "cursor": {
          "ref": "6ef3328e-eaad-43a9-bad8-e5e7ca5d1caf",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "338dedf6-0029-41b2-8f28-5a12d71d81e9"
        },
        "item": {
          "id": "2ea344fe-db89-4a38-88b0-9207028918db",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "98f7c566-4504-47ca-a0ed-478f2913599e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0541a881-a438-4863-9bbf-052b3eeeddec",
        "cursor": {
          "ref": "e63366a3-e4d8-4a79-99ff-8248488a305d",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7e46c30b-30dd-4dc8-80f6-d997f351228c"
        },
        "item": {
          "id": "0541a881-a438-4863-9bbf-052b3eeeddec",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "93d8aa98-4fc9-4604-9e76-e2570270d32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a95ce6d-c1af-41cd-92b1-f4fe385ecdf9",
        "cursor": {
          "ref": "7597c693-c6d7-467f-aa7e-52baf2e4a7e1",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cdd929f7-8e7d-4961-98a2-70778a71514b"
        },
        "item": {
          "id": "5a95ce6d-c1af-41cd-92b1-f4fe385ecdf9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0d64cd26-7694-4444-b80d-e94c3b3d312f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad894452-4376-40fa-8768-548ff5029d13",
        "cursor": {
          "ref": "ae578caa-88ee-4d05-a992-6f8b0c44cc45",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b4317d45-6525-4fad-a972-87216e057277"
        },
        "item": {
          "id": "ad894452-4376-40fa-8768-548ff5029d13",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "396e63cd-b719-453a-a7a9-98e6f71468fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c5b028-fae6-441e-8386-5da21da7985a",
        "cursor": {
          "ref": "18d27d13-dd1f-456d-838b-61b99d897f04",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d09b33a5-c0f4-4bf0-b92f-a3a3353287f9"
        },
        "item": {
          "id": "03c5b028-fae6-441e-8386-5da21da7985a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0d46987f-4cbc-4a96-8f73-913e363aaaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6874e80d-0849-4b55-9b7b-839a96cc8bfa",
        "cursor": {
          "ref": "2f974788-589f-46e7-828c-2db948d6885d",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9d8e1391-8f4a-4e35-9f63-97b76f10a8fc"
        },
        "item": {
          "id": "6874e80d-0849-4b55-9b7b-839a96cc8bfa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9a12d920-423f-4258-8ba1-9d16afb01f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4016ed-731d-42f1-86c3-d4960c2533f4",
        "cursor": {
          "ref": "ead8258f-28f8-4ec3-8342-27f22dafe90f",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1b55b783-ec35-495a-bd71-2e4e89453a88"
        },
        "item": {
          "id": "6f4016ed-731d-42f1-86c3-d4960c2533f4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5228dfc2-b50f-4a80-86e2-6dce66f3fd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8436e4e3-9cc0-436c-9c70-5e51da6f3971",
        "cursor": {
          "ref": "8f7d9208-fce0-4270-a5f8-813357314705",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8541f5f8-41c1-4971-a5e2-b6b033881fdc"
        },
        "item": {
          "id": "8436e4e3-9cc0-436c-9c70-5e51da6f3971",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c3f9005a-be30-4bc4-9205-7d1ab7b1d41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a27dd9f-d196-4759-a210-d7c52cb798c8",
        "cursor": {
          "ref": "2a942beb-d940-45fd-b657-4cdc8816581c",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d71fb79e-26a4-42d7-bcb6-21e2f650f5ec"
        },
        "item": {
          "id": "2a27dd9f-d196-4759-a210-d7c52cb798c8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cbb1a5fe-b600-47a8-af50-6dea902fd43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425f94a4-688f-47a7-b627-f3f08bd7e6c2",
        "cursor": {
          "ref": "927979c5-4a4a-48de-abce-04ec94e352d5",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "58737ec2-023b-42b8-adca-b7264af6e181"
        },
        "item": {
          "id": "425f94a4-688f-47a7-b627-f3f08bd7e6c2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c233928c-9d78-4864-a65a-9f3159af0843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25aa018-90ab-4610-a326-ad703c4f31cb",
        "cursor": {
          "ref": "1fc658ee-1686-451d-823e-70441d783665",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f8c3c992-2353-4ee0-90d8-3a9490c65a22"
        },
        "item": {
          "id": "d25aa018-90ab-4610-a326-ad703c4f31cb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c5019870-8fb3-46e8-aa74-269b1d7a3ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4109d93e-c541-44dc-afe7-1f1ba31e6d34",
        "cursor": {
          "ref": "91e93f7c-882c-4134-804b-1d87fb1902a8",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ea269ea2-d21b-4aa6-a245-8d79a99656fb"
        },
        "item": {
          "id": "4109d93e-c541-44dc-afe7-1f1ba31e6d34",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6f3fbe62-84ef-4ffc-a858-3fcda80add6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3383fbbb-9e6b-4b1d-a7ec-cc429f6cacc1",
        "cursor": {
          "ref": "05abbf7a-bf96-4297-96c3-24c5c0f61fff",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7a7afc5a-2e57-4065-a9b0-e988e9603bcb"
        },
        "item": {
          "id": "3383fbbb-9e6b-4b1d-a7ec-cc429f6cacc1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fbf93451-a6b8-453a-bdb4-a72ea94d18aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e517975-0444-4c5e-be8a-a5fa5238c7a1",
        "cursor": {
          "ref": "4f9b7643-57bb-4e8e-841a-cfc281d95d2e",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a25cbda2-2bd4-48d3-b5d9-71dcadd12065"
        },
        "item": {
          "id": "9e517975-0444-4c5e-be8a-a5fa5238c7a1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ec8a8d38-2bd9-4775-b94b-6f97e92970d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c2216c-dcb2-4154-b131-1215a343e840",
        "cursor": {
          "ref": "d66c2795-97d7-41cd-b64b-aede0d1813c9",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dd4d1436-fb02-4a7a-92cd-b77eae179539"
        },
        "item": {
          "id": "95c2216c-dcb2-4154-b131-1215a343e840",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ba302b9e-4b28-4b14-9fb9-afd2294c230c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a06bb6c-aa23-4e88-8f3b-5f47bd4df78a",
        "cursor": {
          "ref": "acec3249-5d63-46e3-8c49-3020dff22a7b",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "31fbcd4a-1d92-4417-b283-a4adb5b4584f"
        },
        "item": {
          "id": "2a06bb6c-aa23-4e88-8f3b-5f47bd4df78a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "29535230-309e-4329-b32e-143290ec8e93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df826f41-8b1d-4194-ad36-50e54d1ff80b",
        "cursor": {
          "ref": "393e472b-cba4-4d82-914c-6b4d2907d0c6",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7a0a7c23-f9d8-4766-93f6-0944dbd1b20d"
        },
        "item": {
          "id": "df826f41-8b1d-4194-ad36-50e54d1ff80b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "750e99c2-dfc0-474f-9e33-8e2849f8efc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ed698a-fd0c-4582-9f2b-559bc073e252",
        "cursor": {
          "ref": "86dd2131-44fe-45bb-a127-b75d4dbe8f95",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fa76fcc3-493a-4d0d-baf8-cf6008138954"
        },
        "item": {
          "id": "06ed698a-fd0c-4582-9f2b-559bc073e252",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4aa11773-5f3f-4e15-aaf5-4e7dfa0df487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2f048e-d8eb-4cd8-a0da-f3038c63a19b",
        "cursor": {
          "ref": "c6d1c67f-fb5e-4002-a74f-0b6f00f95404",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a8766d59-b8f2-4fbe-bb05-bcc025b96589"
        },
        "item": {
          "id": "4a2f048e-d8eb-4cd8-a0da-f3038c63a19b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "abe5e349-faba-4e73-b54a-e3cc62ae3741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed719826-cc7f-48a3-8022-4ebcf8272811",
        "cursor": {
          "ref": "13960085-1b30-4956-820b-ce3e3d21dcfd",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8315364f-585c-4446-8240-7ce4f9267890"
        },
        "item": {
          "id": "ed719826-cc7f-48a3-8022-4ebcf8272811",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c9847414-dea6-405b-868c-6e85269b552e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac043ec4-fc8b-4057-bde0-89041195715d",
        "cursor": {
          "ref": "6427e2c6-3864-49d8-ac03-999983b12a1f",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c18825b1-4f47-47b2-afb0-24d1c13635d3"
        },
        "item": {
          "id": "ac043ec4-fc8b-4057-bde0-89041195715d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fbbb6430-43b9-4591-b422-51c773a09715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f38f40-bdba-421d-9716-d1540838578f",
        "cursor": {
          "ref": "a1bb40b5-180d-40bb-8b15-7c8077ca2cbf",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5191cad4-d75e-4824-b3fc-0ac546b30b6b"
        },
        "item": {
          "id": "74f38f40-bdba-421d-9716-d1540838578f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f9935f5b-5a2b-461a-a7ba-1cf17d958784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6d5743-1f88-42d6-a5ae-dd29cfe0a7f5",
        "cursor": {
          "ref": "e355d853-eff3-4db3-8114-925b38a764b5",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "04d5749f-d763-46e6-aad3-cb60666ee6e3"
        },
        "item": {
          "id": "0c6d5743-1f88-42d6-a5ae-dd29cfe0a7f5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6766ca22-646a-40b0-9c6c-c5e990779b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6978be-20ee-4b08-9bf8-85a397a5a53d",
        "cursor": {
          "ref": "82f73c6b-c299-47b5-8115-e6278ff2318c",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "caf42a3e-34fd-431f-9ed6-4a986b5fb709"
        },
        "item": {
          "id": "0a6978be-20ee-4b08-9bf8-85a397a5a53d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ee962fba-6aa4-438d-b11a-d8ec052d2a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f750fab1-db7e-44e0-8aa3-d35d34c9c1e2",
        "cursor": {
          "ref": "8cb3c873-b408-43db-8ecf-e847538474a4",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3fb44f42-3d79-4f2b-be9b-9290d0304cae"
        },
        "item": {
          "id": "f750fab1-db7e-44e0-8aa3-d35d34c9c1e2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3887936d-6abb-47a0-81a9-8918fe9b51ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9647f49f-c474-4991-a722-0af939bf5c01",
        "cursor": {
          "ref": "f14f3c5a-b8cc-4dec-b6a4-42e1070083ba",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6a364928-2706-4c64-a40d-72935776d772"
        },
        "item": {
          "id": "9647f49f-c474-4991-a722-0af939bf5c01",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "263c124f-ad62-4a9b-962e-14c74f7b5351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2df4d5f-fa96-4e72-990a-b64207e3f89a",
        "cursor": {
          "ref": "0e0f875b-efab-4780-879c-09e01437935d",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4c66592d-eabc-4590-bf4b-cacdd8427d76"
        },
        "item": {
          "id": "f2df4d5f-fa96-4e72-990a-b64207e3f89a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4f7fda25-7045-464b-a294-0f37fae2225e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c636fb-4cb7-46a8-8f02-2cb755fb3c79",
        "cursor": {
          "ref": "e48685c2-cbc8-4c25-bdea-db1880d80a6c",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "aa160830-6a74-4018-b2d5-52570f5e131a"
        },
        "item": {
          "id": "e8c636fb-4cb7-46a8-8f02-2cb755fb3c79",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8387827f-1f2c-422e-a379-e220662c4c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551f252d-7339-4342-b0a2-d7b10c56da1b",
        "cursor": {
          "ref": "068c4294-da67-41fd-b9ca-61e149b6b28d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1bc35f28-fedf-4b93-b1f4-1beb82f71d33"
        },
        "item": {
          "id": "551f252d-7339-4342-b0a2-d7b10c56da1b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "250c9cb9-516d-4693-9a17-33b173652c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16e9ad3-521d-4fac-8b83-3886a7dae36e",
        "cursor": {
          "ref": "318d20e9-08ad-4a4f-9c0c-3265b43dd821",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b35e98d4-4b05-418c-ace6-12b8ea9f5c14"
        },
        "item": {
          "id": "f16e9ad3-521d-4fac-8b83-3886a7dae36e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "95df9634-4d8b-447e-a1ec-9e668cd6bc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6068a9ff-b919-48ec-8bf4-498c2fc7be21",
        "cursor": {
          "ref": "1b612981-0ad4-4741-ab93-42302ed7fcf2",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "505096a3-3a95-446f-9d60-15d28dec91d4"
        },
        "item": {
          "id": "6068a9ff-b919-48ec-8bf4-498c2fc7be21",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a1a58eb8-de4c-4130-83e2-766f3b089500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cd125b-7c24-40d3-86eb-548bc0d73d55",
        "cursor": {
          "ref": "cf6eb9dc-b405-43b8-9cd8-4663c62c3b83",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a98a13ec-e3ec-47bd-9a44-93d2ecb7b2ad"
        },
        "item": {
          "id": "22cd125b-7c24-40d3-86eb-548bc0d73d55",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "34f762c1-81b1-40df-9095-0ebe3322f4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52764096-a86f-4646-a41b-2042fcada377",
        "cursor": {
          "ref": "fb8765f3-ce97-463e-9206-89379c8d6288",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f216fb3d-6e96-4cfd-8340-d1e9341d5912"
        },
        "item": {
          "id": "52764096-a86f-4646-a41b-2042fcada377",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5c02857b-bb11-47d4-a7c2-9ffd02bc2e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fde0712-ec91-4f9b-aba3-d78d327d3e4c",
        "cursor": {
          "ref": "b698686a-4a3d-4ffc-91b4-a859373a79a1",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3948d8e5-397b-49c8-b3f0-642108e2d57c"
        },
        "item": {
          "id": "3fde0712-ec91-4f9b-aba3-d78d327d3e4c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "94cbc572-ea7e-44fa-ad9e-851e403bf836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c59938-8e03-434a-95b2-3803210f510a",
        "cursor": {
          "ref": "d4e34d4f-5157-495a-a2e5-eccc117c852f",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9d2aa652-f13c-4392-9802-873a22d82652"
        },
        "item": {
          "id": "f7c59938-8e03-434a-95b2-3803210f510a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "13d46020-1c83-4a47-ba2b-88e5b17de051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260096da-0145-4db7-9c2b-e815982e3e8c",
        "cursor": {
          "ref": "7e75632d-a7e4-48e5-a6ec-15a448764904",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bf56050a-cdbf-40dd-86da-b1ee9326d345"
        },
        "item": {
          "id": "260096da-0145-4db7-9c2b-e815982e3e8c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d14bd85f-1ffe-4932-b5aa-5d8a01a4e9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3260b22d-74de-431c-a562-ad9a62874624",
        "cursor": {
          "ref": "f4ef1a59-ddc7-4968-90c7-bef0dd9c6acb",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eb7f42a1-520a-4a08-9cbe-c3b6b32a0402"
        },
        "item": {
          "id": "3260b22d-74de-431c-a562-ad9a62874624",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3fd03b6f-4a63-4d4b-b218-c5cf638de707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac4689d-46b3-441b-ba9c-994ef973008b",
        "cursor": {
          "ref": "91dc28fb-07f8-42b7-978f-19688f3c7db1",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "514cba43-790f-4ec4-93ed-633dfad13951"
        },
        "item": {
          "id": "8ac4689d-46b3-441b-ba9c-994ef973008b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "441f75ff-962c-4803-9f42-f995db410670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa4d80e-7c40-43ae-a518-12272c60e16e",
        "cursor": {
          "ref": "2a588581-d6bc-459b-94bb-d20b37c49d3b",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "36ef5bb1-6d4e-43ae-97eb-b85688c89108"
        },
        "item": {
          "id": "6fa4d80e-7c40-43ae-a518-12272c60e16e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7b569ad6-bce6-4693-b2d4-0893067c3226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31145e40-f5be-41c6-a746-5a0c2a91a918",
        "cursor": {
          "ref": "c67b5b72-f069-4084-aca5-f9deabee7e19",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f0a9ab25-461a-4c5f-8d30-91e7a767212c"
        },
        "item": {
          "id": "31145e40-f5be-41c6-a746-5a0c2a91a918",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a945f016-c1a5-4201-9ac2-d9560ec6f830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f19af0-040a-4cb3-9fa3-161e924a1a96",
        "cursor": {
          "ref": "d7368538-b995-4eee-8edb-4926bcc8fd91",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1e7ea60e-b17a-4b47-ae15-e47d4538c8c4"
        },
        "item": {
          "id": "d0f19af0-040a-4cb3-9fa3-161e924a1a96",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "506428e1-bc96-467d-b0c0-f745f5fad240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7b2dff-fb41-453d-8bad-9e9b54e30799",
        "cursor": {
          "ref": "d12e11bd-7b3c-4baf-9857-f7f531182f28",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c3d54134-bde6-4692-88ba-a6909cc2fb4e"
        },
        "item": {
          "id": "3b7b2dff-fb41-453d-8bad-9e9b54e30799",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e67ca885-c236-4af1-9a76-6b05f3dcfc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7c2eea-2713-4b6e-9fd8-cb8f157dedb8",
        "cursor": {
          "ref": "1818b0fb-f5a4-4325-a4f7-c2b7e2f9df0b",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d08c4017-aa36-4886-8e71-ce6940468c79"
        },
        "item": {
          "id": "2b7c2eea-2713-4b6e-9fd8-cb8f157dedb8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f0407279-6f03-4688-9c97-0aeeb767efa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f09cee1-0b42-4882-a479-2f4f366d5199",
        "cursor": {
          "ref": "49a12129-7ca0-4bb4-b1a6-36d84ffff845",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "af1d8155-d76b-4fe2-9525-4e9f9cdd70da"
        },
        "item": {
          "id": "6f09cee1-0b42-4882-a479-2f4f366d5199",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b4308b73-4f79-4568-9496-c9f4535da873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef74a529-5b28-49f0-a431-a095d7396ee1",
        "cursor": {
          "ref": "2c745947-6680-4948-b6fc-f57578ec5184",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9cc264bd-bdff-4e40-a49a-bb6b64c8cb77"
        },
        "item": {
          "id": "ef74a529-5b28-49f0-a431-a095d7396ee1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5c526dc6-6764-47db-a166-c997b7d21eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fd753d-36ff-4644-95aa-638b400a459d",
        "cursor": {
          "ref": "aaef584a-5222-44fa-ba84-da786507b505",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "dfad1a5c-44be-4a8f-a822-506c9fce546e"
        },
        "item": {
          "id": "a7fd753d-36ff-4644-95aa-638b400a459d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7e50c377-70ff-45e3-8af9-35e8c7675a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c5aa0a-851b-4879-9194-9562012220d7",
        "cursor": {
          "ref": "5cc60b86-4970-4c36-bb12-9868cd30115b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "89758efb-d2bc-4d16-b7d9-571f48a504a4"
        },
        "item": {
          "id": "07c5aa0a-851b-4879-9194-9562012220d7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "abac05b7-ea82-4761-8666-ed36496fd0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972ce5c4-6260-425b-9d5c-005cd722388e",
        "cursor": {
          "ref": "89e74cfe-a4ee-4ba0-a384-a14afa14012c",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3691b3a1-09c8-4fbb-80ea-fcfc34b1c372"
        },
        "item": {
          "id": "972ce5c4-6260-425b-9d5c-005cd722388e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4306585c-ced2-41d6-9278-4ddb2cf7afa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdd77fb-5e4c-4317-a828-d91fff3a5156",
        "cursor": {
          "ref": "11c68d18-defe-4323-b19b-1bfec58ed873",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "259cf4d5-805c-43e3-ba12-9215c2297954"
        },
        "item": {
          "id": "4cdd77fb-5e4c-4317-a828-d91fff3a5156",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0a450ed6-e813-4924-abcd-60b1826b8686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41737d0-76e3-4b06-ae15-86424563dbb4",
        "cursor": {
          "ref": "e8a8e16f-5e16-45a7-a8c8-7ff9d0c39c6c",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "266e1f60-28c5-4ac7-87d4-88e817eec50d"
        },
        "item": {
          "id": "e41737d0-76e3-4b06-ae15-86424563dbb4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3f994bb1-69d5-48ba-a827-68d7d4ab61c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46863d4b-0f1d-4459-995b-221a5a678372",
        "cursor": {
          "ref": "e91a5b37-49f3-455f-ac6d-babb6651c115",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7a4d19af-979b-4fec-9879-24a13a76e11b"
        },
        "item": {
          "id": "46863d4b-0f1d-4459-995b-221a5a678372",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8150ba4c-5a29-4de6-b58b-6e114182f388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3982b7-0c44-40c4-bdad-6cd13c19940a",
        "cursor": {
          "ref": "c7f2478a-63dd-47c9-91c1-2b6e5fa5103e",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a7f84f3d-2b21-4e95-8566-61317db85a06"
        },
        "item": {
          "id": "8d3982b7-0c44-40c4-bdad-6cd13c19940a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3385d9f8-5df9-4386-9956-87ccb8e8f46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c13636b-81f9-4866-bec9-0afe7944617b",
        "cursor": {
          "ref": "3c146ba1-8a5b-4bc8-89db-aa5f61cd46a0",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2df58c5e-1df4-48b0-9df5-98eaa76ef814"
        },
        "item": {
          "id": "3c13636b-81f9-4866-bec9-0afe7944617b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d2a4e3cf-3a68-48a8-a71f-d973b18d487e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0289fb-e6e2-47de-8123-5ba82ec90b17",
        "cursor": {
          "ref": "9d1ddc78-5411-4dcc-ba5b-3d8052693d02",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "67d55bf6-97c7-41ce-abfc-15515af12d70"
        },
        "item": {
          "id": "ce0289fb-e6e2-47de-8123-5ba82ec90b17",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "151c7bc1-38ca-4c46-91d1-ca4af91a136c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bd4444-5d89-4863-b1a8-fd9ce8482f82",
        "cursor": {
          "ref": "94dcf133-ccc4-4361-a8c0-225b70814990",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "48487795-f690-4c2a-933b-ac7e779b97e4"
        },
        "item": {
          "id": "41bd4444-5d89-4863-b1a8-fd9ce8482f82",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "176bfc0c-982b-461d-b7f3-9b733b50c9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b66f2e-7e1b-4ac2-bc73-1322e6c8f5bd",
        "cursor": {
          "ref": "57f9c871-9bac-4680-93b7-83bebc09708b",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4e67d221-c60d-4766-8cdd-b3f50f17c5d9"
        },
        "item": {
          "id": "a3b66f2e-7e1b-4ac2-bc73-1322e6c8f5bd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "71781cea-75d0-42ea-8c6d-6f0fa0b2ce05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee23055-efb5-4335-82e9-4253fa80651f",
        "cursor": {
          "ref": "b63bfc61-1838-4ec6-9e9b-e4f83fce9d59",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d640d6c2-3d3d-40fd-98c8-331f0b521be2"
        },
        "item": {
          "id": "cee23055-efb5-4335-82e9-4253fa80651f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "102472f8-f7ba-47e8-a72b-6b7744bc5cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526313ed-5f1d-4c97-839d-2d1236194210",
        "cursor": {
          "ref": "9e84bbaf-a951-45ca-bcd4-cdf621cb4c8f",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cc4f6b51-50c0-41bd-b065-f3bd03a5fefb"
        },
        "item": {
          "id": "526313ed-5f1d-4c97-839d-2d1236194210",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6369f125-9bd5-4c72-80e0-e583b07503c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234b76fd-f37b-4e94-88af-465187dd7f8c",
        "cursor": {
          "ref": "7d1742c7-2faf-424d-8bd5-8009b6d657d0",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9c834143-6c1b-40d6-9e06-0a0daddfaa68"
        },
        "item": {
          "id": "234b76fd-f37b-4e94-88af-465187dd7f8c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "486723b2-4f9e-453b-b015-8a7663962ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e09eed-673a-42cc-b7fb-010b46939ed4",
        "cursor": {
          "ref": "dc315a78-e882-4cfe-82c8-b20121a31846",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3283c2ba-3925-495b-a817-250be9232873"
        },
        "item": {
          "id": "b7e09eed-673a-42cc-b7fb-010b46939ed4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "daa7337b-1c8d-4a54-b1b3-f4b0b0025ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51045f5c-f3d6-4060-b591-0edf1d838d62",
        "cursor": {
          "ref": "24bf96e4-c40c-4ac5-b2ee-df08ba1e8021",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "dd24b27a-a26b-4ca0-a3f2-2c74d6319a34"
        },
        "item": {
          "id": "51045f5c-f3d6-4060-b591-0edf1d838d62",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9b5cbb1e-e10c-4189-a57b-4cbae2ce7845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b575657c-f983-45a0-a199-ff4ace20bfb2",
        "cursor": {
          "ref": "2c72655e-034e-428f-903e-4fc6554ca56f",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "03f6d594-931b-4ce3-bf03-c29d8454ac9b"
        },
        "item": {
          "id": "b575657c-f983-45a0-a199-ff4ace20bfb2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ba0a6a74-35d9-4edd-9bbf-e561b20f9f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82d865b-74c8-40c8-90fe-ecaec3bf0454",
        "cursor": {
          "ref": "2ceda521-d0b9-4630-96ee-71e5d56a619f",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3aa82cdd-7e7f-4d05-b7cb-48bfb7471427"
        },
        "item": {
          "id": "a82d865b-74c8-40c8-90fe-ecaec3bf0454",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "263ea965-00c7-4888-bd80-d484bc2ca773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751ed0a2-db5f-4638-a6d0-1a494a7294d6",
        "cursor": {
          "ref": "f65ef513-4ff9-4201-9dfe-ecc49254c4cc",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "07845c23-1958-41a6-b4ad-c6a6c67ace0a"
        },
        "item": {
          "id": "751ed0a2-db5f-4638-a6d0-1a494a7294d6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c3e71bc6-f2ff-4525-8df1-04d6fb51ad6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efaca87e-95db-414f-934e-f807d326a574",
        "cursor": {
          "ref": "900f61e8-c8d8-472d-b724-6e393664c98f",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8d40cd00-6ee4-4492-ac59-35e6f59bb334"
        },
        "item": {
          "id": "efaca87e-95db-414f-934e-f807d326a574",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "793ea2c1-9c87-44ac-ace1-7e397a10f6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa5d8b2-5d1c-4cdf-9647-5cd8d6220372",
        "cursor": {
          "ref": "d67c10a4-3a23-45fb-8118-35fdef0c4a87",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "20ccc98b-5aa8-44e1-9b2c-2cde53ef7c5b"
        },
        "item": {
          "id": "caa5d8b2-5d1c-4cdf-9647-5cd8d6220372",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "08c6e6e5-bf1e-4e7b-b8a3-1a831c9dcb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08cd6b2-75e6-4a34-826b-ec0ad88a770e",
        "cursor": {
          "ref": "f1874783-a95e-4136-8b1b-ac1f7eef2ab3",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8ee1a438-6427-461e-b481-3120c3009273"
        },
        "item": {
          "id": "c08cd6b2-75e6-4a34-826b-ec0ad88a770e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6fd07920-2993-4638-9955-c08d6a8d3f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57629540-d404-4908-890c-689d679b1a0f",
        "cursor": {
          "ref": "13bc09b0-bf22-4c26-858f-cc15ebd2a0c4",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b83ecd2d-0d04-441d-8bcb-b35a4f7ae57a"
        },
        "item": {
          "id": "57629540-d404-4908-890c-689d679b1a0f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a24d59b1-11aa-40f0-8d0c-df6ce25be50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e6437b-256f-4f22-ad3e-f620e490ab30",
        "cursor": {
          "ref": "69e41159-1d5c-4ed8-8faa-e4cf398a09ce",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d66577f9-d725-486a-8a84-ded8b2af2462"
        },
        "item": {
          "id": "02e6437b-256f-4f22-ad3e-f620e490ab30",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8fb1b86a-a472-4df6-bcee-c321ac41e9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7980c96-021f-428e-b0d8-e631122f7c17",
        "cursor": {
          "ref": "f5780623-3c89-4171-a161-67e63aa5be7e",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e431b0e9-63cd-4af9-944e-9bafbfd8103f"
        },
        "item": {
          "id": "a7980c96-021f-428e-b0d8-e631122f7c17",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6f6f1967-1f8a-4ed7-964f-692a7da330f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27a68c6-f4a9-468d-a3e2-b44720f386ed",
        "cursor": {
          "ref": "5927477f-f345-47a4-871e-e2d659484f4d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b92700f5-98c0-48f4-8750-83941dcbd2e8"
        },
        "item": {
          "id": "a27a68c6-f4a9-468d-a3e2-b44720f386ed",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1263b5f2-618c-4679-8d92-a2748690fdfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7318cf2-8ced-4d0b-8eff-f9b4817e63ef",
        "cursor": {
          "ref": "beaa5b17-1cd3-4b75-bd31-5f2789c604ce",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6288f444-aa5e-46f1-a7ad-a9beb42f7225"
        },
        "item": {
          "id": "f7318cf2-8ced-4d0b-8eff-f9b4817e63ef",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0bedb0a6-15d2-4078-a7a1-6dab9fb8b956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ce4aa5-4819-4e21-879f-f6d7a230e4fa",
        "cursor": {
          "ref": "6d675fb2-4ced-40ff-98a1-bdaba3093807",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "48c74c6d-ced0-4e5e-9f2b-539f59349795"
        },
        "item": {
          "id": "82ce4aa5-4819-4e21-879f-f6d7a230e4fa",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c8cb6f1d-d323-48bb-aa1f-f1ba00ce55fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff37e6f7-ad1f-4927-8da0-4f0edc30716f",
        "cursor": {
          "ref": "c5494b52-44db-44b9-9378-3df4be60ca79",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "113fc7b5-4198-41d0-91db-05231c4a1fc2"
        },
        "item": {
          "id": "ff37e6f7-ad1f-4927-8da0-4f0edc30716f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1ce2dbd5-5de0-4027-a09f-b8ca4370ad9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5673049f-d578-4b3a-b0e0-3355a6fd26a0",
        "cursor": {
          "ref": "8f2b499b-3c1b-4182-9ae8-0c54a7583cbc",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "af45e356-1a0b-4396-ad58-5b1d652a8286"
        },
        "item": {
          "id": "5673049f-d578-4b3a-b0e0-3355a6fd26a0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9827ee00-b8f1-4a8f-8f2a-71073ecf7765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fcdc6b-b4e7-481c-ba88-044b5612497b",
        "cursor": {
          "ref": "065a7215-f90a-437e-a800-d942630eed89",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5c4c168d-323b-4ed0-9a89-73a4c1dd2670"
        },
        "item": {
          "id": "d0fcdc6b-b4e7-481c-ba88-044b5612497b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7e415e8e-d023-4a5f-ad6d-04c01ace3df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343cd48e-3c66-4bbd-b0f1-c081ae946079",
        "cursor": {
          "ref": "aa0d402d-4540-4481-bf2e-cc0c4b0e6ee4",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "616c6e34-ae4c-4496-84fb-b9a1a943dced"
        },
        "item": {
          "id": "343cd48e-3c66-4bbd-b0f1-c081ae946079",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c59772a9-a0b4-4ce8-b1dc-dc09d6dab727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728f962a-19de-4c79-98ff-88382124ab56",
        "cursor": {
          "ref": "0c103e04-567c-4027-b255-ec8d10d49996",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b26abfc6-0ece-4a11-bd03-8c35a3c0023d"
        },
        "item": {
          "id": "728f962a-19de-4c79-98ff-88382124ab56",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "33f94ea8-3fbc-4dbe-8808-19d58bd694f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4704b56-21cf-46c8-8a38-92b60604ed99",
        "cursor": {
          "ref": "3fa7438a-16f9-478d-8c22-c0b48c5f3e2c",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "60c42d6b-8052-4d93-a9ec-6b5a391c900b"
        },
        "item": {
          "id": "b4704b56-21cf-46c8-8a38-92b60604ed99",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "82a7d199-4a61-4e70-9d31-f720f4b459d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24238246-b343-4954-8f16-ac659e097761",
        "cursor": {
          "ref": "3fa773bf-ba4b-4213-ae4e-6760010035a7",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "969ec1dc-a0d3-4172-b320-6a6954cb2114"
        },
        "item": {
          "id": "24238246-b343-4954-8f16-ac659e097761",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0e3bb88b-3070-4010-a001-8f0535b50d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5d7778-a88b-4580-a44c-bcaec4655e1e",
        "cursor": {
          "ref": "f8996258-a250-4c65-8970-de778ad42534",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f69a7174-fc5c-4d01-acbe-39776a658ccb"
        },
        "item": {
          "id": "bb5d7778-a88b-4580-a44c-bcaec4655e1e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b0a766cb-778e-436a-bfae-9cbd4baeb2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d493fa-6b1f-47b6-8bb9-e9bfad866f23",
        "cursor": {
          "ref": "b33dd070-4b75-45c4-bcf0-1ca309f9c1b0",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ae997ba5-8304-409a-bd93-7b30dec65652"
        },
        "item": {
          "id": "f9d493fa-6b1f-47b6-8bb9-e9bfad866f23",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "55d08b76-e323-45a9-94dd-31a17b5d37b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8f515b-93c3-4eca-9e0a-8b6d786b37e0",
        "cursor": {
          "ref": "33ea7421-766a-4cd9-b0c8-9f517bf4a7a0",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "03323213-4e76-4843-8a3f-138c1943705d"
        },
        "item": {
          "id": "2c8f515b-93c3-4eca-9e0a-8b6d786b37e0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a49cb925-a675-4874-9e16-895bd604a1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14739699-2ca8-4271-965d-2d02c4f8bcc9",
        "cursor": {
          "ref": "9a513988-afcd-4611-be6b-9ce30b978e80",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "db7b434d-9526-4ffd-acb6-1f6d7d3b9dfa"
        },
        "item": {
          "id": "14739699-2ca8-4271-965d-2d02c4f8bcc9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "793380f2-a773-4969-a615-69a7f58dce92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0783dd9c-c86f-491b-9e3e-1c544c013225",
        "cursor": {
          "ref": "6341080d-594f-478e-9b24-3290f92d464d",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c60d8b9e-bf56-46be-bcde-960a197a4a11"
        },
        "item": {
          "id": "0783dd9c-c86f-491b-9e3e-1c544c013225",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2c66ca4e-5283-49dd-922c-bc854adbec6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54cfc70-03d3-4b87-9910-fb9853a9b362",
        "cursor": {
          "ref": "9b770490-467f-4616-a32b-d138cf6aa86d",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "18913a98-6816-4522-871f-55efc6f49bd4"
        },
        "item": {
          "id": "f54cfc70-03d3-4b87-9910-fb9853a9b362",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e79bbf2b-a8b3-46d9-8610-043692610e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf454930-a516-4d33-b185-996e4a1f6916",
        "cursor": {
          "ref": "6537367b-1757-4175-aa2e-2490ce032e34",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "01125bfc-380d-428f-901b-fb8b2a143695"
        },
        "item": {
          "id": "cf454930-a516-4d33-b185-996e4a1f6916",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8482c33c-8dce-46f5-8e1f-1ce1e2bc85a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a5c676-3d8b-494c-8914-1f96578d7125",
        "cursor": {
          "ref": "832e5329-e322-485a-b469-2c39f95239b5",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "787ca31a-9cac-4055-bb35-7bcbb6601e6c"
        },
        "item": {
          "id": "16a5c676-3d8b-494c-8914-1f96578d7125",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a896fbea-5f3f-49fd-aa66-a9e9a8965d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee89d68-c361-433b-9979-8ee0b468920a",
        "cursor": {
          "ref": "fc98787d-0384-402e-b3ee-f15020adb3fa",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2dfcdedb-87e4-417c-902b-80dc78c94f26"
        },
        "item": {
          "id": "8ee89d68-c361-433b-9979-8ee0b468920a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e0a12127-466e-4eb1-af6f-e781df546978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae29bbb-1f5b-43ca-83c0-90874692be9b",
        "cursor": {
          "ref": "1b6c17cd-2ba5-4ed9-b3ae-530bec9fbb8b",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "535cc7d9-416e-4f23-b74b-753d3a0855e3"
        },
        "item": {
          "id": "4ae29bbb-1f5b-43ca-83c0-90874692be9b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d63878ab-e4c1-455a-b94a-34d4b88cc7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af0e2fa-017c-4529-805c-63ecbb7e6976",
        "cursor": {
          "ref": "36daac17-d085-4c88-9629-3c9c0a5b5079",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f269787d-136b-41f7-b5f7-21ca4e444bff"
        },
        "item": {
          "id": "7af0e2fa-017c-4529-805c-63ecbb7e6976",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "68a426e1-b64f-4ec2-99db-95fc02e2c0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ed2b40-9fe3-4ab6-bc72-a3f864abdee3",
        "cursor": {
          "ref": "45aef174-8b96-4ccf-a1d8-8f97a1bb195b",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fc1f9083-0653-407b-8dfa-e7b159473363"
        },
        "item": {
          "id": "89ed2b40-9fe3-4ab6-bc72-a3f864abdee3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a9cd3b6d-8dad-4372-b5b3-1c80a4cd8fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc47faf-3195-409c-86ac-73ae0e6db8e5",
        "cursor": {
          "ref": "260933a0-5474-4efc-89e7-1e5ed3a55b95",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a5a10443-11c0-4336-bc88-170fa5296212"
        },
        "item": {
          "id": "8dc47faf-3195-409c-86ac-73ae0e6db8e5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e0b51a73-bc43-474a-aa38-1ab516e6fa19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272df17c-adfe-4284-a0e5-295afbb49081",
        "cursor": {
          "ref": "a327e1af-9e1b-4c1a-a02c-26fa3cf99d25",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6dfcde34-a269-47ef-b247-bd2d6937f54f"
        },
        "item": {
          "id": "272df17c-adfe-4284-a0e5-295afbb49081",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e547514d-6c4d-4ca0-9c85-0472aa7b62af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e3d1ba-2f1b-4c10-bf3f-259f9b05493a",
        "cursor": {
          "ref": "e3676508-3f51-461c-a1bc-34f2d833557f",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6bd461e1-62db-4684-98f2-28953ddef5ce"
        },
        "item": {
          "id": "80e3d1ba-2f1b-4c10-bf3f-259f9b05493a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "033f7b0d-1439-4eef-91f3-16dac95dcfd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70ef2b5-1df4-43e1-b8ed-ce35ac7705b5",
        "cursor": {
          "ref": "de4d876d-3550-409e-9216-f3ddd3b152a1",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6e92affe-278b-4345-a9b3-fec0586ce934"
        },
        "item": {
          "id": "f70ef2b5-1df4-43e1-b8ed-ce35ac7705b5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "41e609f4-70ff-41c1-995a-edd617b718c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2a3579-60d3-48a1-9431-cfc23c4433c2",
        "cursor": {
          "ref": "4af846ae-574f-4ad0-bf03-5764e9507525",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d571387e-b638-4fe6-835e-c375948e5a59"
        },
        "item": {
          "id": "9a2a3579-60d3-48a1-9431-cfc23c4433c2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8b7c1bf4-8893-4ce7-9fd9-64da1dacf74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7312d372-117e-4417-91f9-8d45c2956bdc",
        "cursor": {
          "ref": "7bc23129-3f27-4f94-93b4-d0d862ce7475",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "38845177-3e5a-4d9a-b265-83c905739c35"
        },
        "item": {
          "id": "7312d372-117e-4417-91f9-8d45c2956bdc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3adb79dd-f971-4d7d-aade-2469ade36572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8ff4b2-905b-43d6-95c9-63b0331fc01e",
        "cursor": {
          "ref": "0f3c8e30-c2fb-4dba-8a5c-0b3a300bc99c",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "06122a06-52c5-4ad3-9dfe-86210a44f16f"
        },
        "item": {
          "id": "af8ff4b2-905b-43d6-95c9-63b0331fc01e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e8f03fae-d6f0-41c3-a019-aa9c1291337e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494616a9-de90-4126-a8e3-abdad9be77e7",
        "cursor": {
          "ref": "6f91d4f8-263f-4048-af59-dec83bb942f3",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "41a5ad7a-b2b8-44b6-8b29-19579dc5a0a3"
        },
        "item": {
          "id": "494616a9-de90-4126-a8e3-abdad9be77e7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a5a485ca-77a3-42be-9ff5-5ce6d14bd784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf90f53-e17f-4da5-9e8a-a842cbc66960",
        "cursor": {
          "ref": "deb7a268-5033-4f85-b723-bd1f23a16d0f",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "74029230-f97e-48cc-9449-3cd584d93c60"
        },
        "item": {
          "id": "eaf90f53-e17f-4da5-9e8a-a842cbc66960",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "274405a7-db1d-43ee-b051-c069961faedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33187a1a-201d-4dc1-b347-d65fc41d8355",
        "cursor": {
          "ref": "79090488-237f-4688-9a36-ea43099acf2e",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "34115937-0564-474d-b4ca-a495da001d19"
        },
        "item": {
          "id": "33187a1a-201d-4dc1-b347-d65fc41d8355",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5994b35a-86ad-4cab-b5b8-05803cf652ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06535f6c-6ad1-4633-adb2-bffc26a3d713",
        "cursor": {
          "ref": "9495d5de-1c78-4ec6-953e-e055f4fceb11",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e10ed7bd-102f-4a06-958e-a4b2ae6e964c"
        },
        "item": {
          "id": "06535f6c-6ad1-4633-adb2-bffc26a3d713",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "abf848a3-2ed3-4ba0-9d78-1e4c39c2f400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd73c5b-7a39-4b1a-ae92-16484e71ca3c",
        "cursor": {
          "ref": "fd2391d5-4648-4d56-977c-5a3b25d0a876",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fa8d92b6-1d18-4ef3-a5a3-f2c1e0d6c03d"
        },
        "item": {
          "id": "8cd73c5b-7a39-4b1a-ae92-16484e71ca3c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "beac2500-d419-4e6a-af2d-87b71e3c72c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b81878-a30d-4680-b2f6-174df073808f",
        "cursor": {
          "ref": "0ac1ee61-f6e5-47d9-9081-f7294f9587b5",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3dbade61-315d-484c-bc9a-5abf8d25fd04"
        },
        "item": {
          "id": "30b81878-a30d-4680-b2f6-174df073808f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0f262cef-ff78-429b-b5c3-fa39d2f85e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c81c69a-e390-4ba1-ad17-d76bde2878d8",
        "cursor": {
          "ref": "308ef8a9-799b-433e-b74f-c17a83fe973a",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a811fb78-2e4d-4b01-829b-be409e02f3a6"
        },
        "item": {
          "id": "1c81c69a-e390-4ba1-ad17-d76bde2878d8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "04313ebf-162e-476d-8402-8d5a10db10e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d0d8cf-5931-448b-a752-3cc546a962dd",
        "cursor": {
          "ref": "00d2148a-7807-40a1-a819-b5b09e6b26a7",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a3e0b38e-d648-447a-85fd-a7223632373d"
        },
        "item": {
          "id": "94d0d8cf-5931-448b-a752-3cc546a962dd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c5161b0a-0160-4cf2-b622-60220f29f90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c7a534-3087-4491-af9b-c6d1c456be3c",
        "cursor": {
          "ref": "49c6e6ba-2429-4dd1-b2c5-62c12480a21a",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "769308f8-3fa9-4861-87b1-f0a97032284c"
        },
        "item": {
          "id": "99c7a534-3087-4491-af9b-c6d1c456be3c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a19b5892-dda3-47b0-bd61-b8f9cd48f8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fad1ff-06c8-4169-b82d-16092550b156",
        "cursor": {
          "ref": "a6c832aa-2ea7-4d97-af4c-417f92524965",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e0ca2cdf-bda1-4ab9-8ccc-c8c743e2e74d"
        },
        "item": {
          "id": "55fad1ff-06c8-4169-b82d-16092550b156",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "67e3129e-6cf5-4bd4-94fb-4700ea476583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bb63dd-57cd-493c-8434-a76b7adb64f7",
        "cursor": {
          "ref": "4bacc9ee-f724-4cb3-9da7-c0e66c97639d",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "81eb5e72-5f5e-48ce-9236-bdc1928c5619"
        },
        "item": {
          "id": "22bb63dd-57cd-493c-8434-a76b7adb64f7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9fa40e92-0f7b-4532-98c1-63848cdb3ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c45f7d0-cb63-407e-8248-a3a129204061",
        "cursor": {
          "ref": "95a29339-12b9-4ee2-b1ac-deac2bda39c1",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "96c05f52-9f42-48ba-b329-c0dbc0c402ed"
        },
        "item": {
          "id": "2c45f7d0-cb63-407e-8248-a3a129204061",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ef203995-ef39-4d12-96e2-42ff46548511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81a7792-7795-4a7d-87f7-1fd25dda87a6",
        "cursor": {
          "ref": "2b669069-7d8b-42e4-8688-53fa960de49b",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "145fe8cc-7178-4ea4-a3e8-2ac0fe15607f"
        },
        "item": {
          "id": "f81a7792-7795-4a7d-87f7-1fd25dda87a6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0f6e7495-901b-4efb-872b-204f992fc88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1438b2c5-d6ef-4d8f-9d4e-ba59f276b5e4",
        "cursor": {
          "ref": "dced3fee-9c63-45aa-8a6a-4d8996d4f27a",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ffba31ed-3ca3-4b9b-b7ab-ecf55121ac72"
        },
        "item": {
          "id": "1438b2c5-d6ef-4d8f-9d4e-ba59f276b5e4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c8a99895-ec0c-4740-8c67-f500278cb380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edca0ac7-8bd9-4dfb-b3c8-891f66f2f9ad",
        "cursor": {
          "ref": "9cc8067a-6fc3-4722-9549-7e76fab32b77",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "44ac7c93-fe46-40d8-83f2-b87bb582c2b1"
        },
        "item": {
          "id": "edca0ac7-8bd9-4dfb-b3c8-891f66f2f9ad",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "25307019-cfa4-4a96-873b-2d8839d42491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a454f3-bf95-4913-b4ff-285d1273b368",
        "cursor": {
          "ref": "12ccf838-b6c1-45c6-a1cb-6f0e9cc05e4a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "30468638-cb72-4d27-bc05-73f997420f71"
        },
        "item": {
          "id": "53a454f3-bf95-4913-b4ff-285d1273b368",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "39fe439d-7f6a-4f27-8146-94dcfad41a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910d197c-b24c-4785-b447-fafde4e723e8",
        "cursor": {
          "ref": "8129fef4-4629-4391-98a1-d43ab1555837",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f57d4ca2-1401-4752-9695-59fff7c09fdb"
        },
        "item": {
          "id": "910d197c-b24c-4785-b447-fafde4e723e8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "33df66c1-7ea7-4bb5-b2cd-ebe9f1738683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf3d44f-e5f9-4cae-ac9c-ce49f4f02e94",
        "cursor": {
          "ref": "b3356201-ea8f-44db-9df4-0cf6a6f7f0e1",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "313e51e5-d6f7-4d9d-b10a-e7d21beb74ed"
        },
        "item": {
          "id": "0cf3d44f-e5f9-4cae-ac9c-ce49f4f02e94",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4b344ecf-bbfc-4141-998e-5765427620d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1e3495-887b-41ec-99f8-eba4df967cab",
        "cursor": {
          "ref": "4ef40498-c6c4-4e3b-8890-bbe1a95ec9cd",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "78d505e8-1b43-4ad2-8833-80ddf3acadbb"
        },
        "item": {
          "id": "1a1e3495-887b-41ec-99f8-eba4df967cab",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5cfc3f66-3977-4e2a-89ea-aa323a374171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06373d6d-808a-41a0-9350-0cec4f3c52b0",
        "cursor": {
          "ref": "91706859-d0c1-490b-a5fc-c967091c25f8",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3a57a48a-b369-4a1e-8b8a-679246979e4d"
        },
        "item": {
          "id": "06373d6d-808a-41a0-9350-0cec4f3c52b0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fdaba93e-e642-48df-9ac9-4f80db1df3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e535e5-0caa-4330-afa2-e3fffbe82fe7",
        "cursor": {
          "ref": "e97d43ea-51f7-4cdc-910c-90b4cfe5fbf4",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "af20ada9-daf0-49c2-a489-fb6ca2045fdc"
        },
        "item": {
          "id": "53e535e5-0caa-4330-afa2-e3fffbe82fe7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "08c25054-4587-45b9-ae30-e0e5148902f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa74ca5-d018-4328-a653-6f4e0bcfcfd8",
        "cursor": {
          "ref": "abadd527-dbca-41d8-8839-afd13755deda",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f1bd25fb-3b4e-4ad5-87d5-1c2cc67fdf83"
        },
        "item": {
          "id": "8aa74ca5-d018-4328-a653-6f4e0bcfcfd8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9e41f3fc-7ab0-4560-869e-e5ee470ff6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23071c7c-907e-42c3-b4fc-6e83f0802945",
        "cursor": {
          "ref": "9c9d280e-8be8-462e-b336-7b8f9829c513",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c44af802-e655-4ef2-a1d7-d7f42fa98f59"
        },
        "item": {
          "id": "23071c7c-907e-42c3-b4fc-6e83f0802945",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "72dfd02a-5c2a-422e-8ea5-a575a1e7b2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb309d2f-563c-4312-b01d-1cfc0c59342b",
        "cursor": {
          "ref": "f6c7265c-94dd-43aa-8797-8fcf91cbad5e",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "95eba6d9-847c-482b-860a-6a04ac86b9e4"
        },
        "item": {
          "id": "cb309d2f-563c-4312-b01d-1cfc0c59342b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5dd01221-3f34-424e-a606-3d5a94185e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4812dd-6353-4173-b476-e3475c1fef13",
        "cursor": {
          "ref": "471f1e48-68d5-4d06-9364-51de1a8d077b",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d6dc952b-4e72-484c-b99d-d5c6b034a4df"
        },
        "item": {
          "id": "3b4812dd-6353-4173-b476-e3475c1fef13",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "85b87fd4-5311-465c-9bf1-6c437c294e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36987d4-6892-4925-a4cf-9b1a39c9571d",
        "cursor": {
          "ref": "c4b14929-f6fd-4901-bc53-5ee0d790ecd5",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "87a6a7b5-652b-43fc-ade6-01e478a635bf"
        },
        "item": {
          "id": "a36987d4-6892-4925-a4cf-9b1a39c9571d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c0611a83-a484-40ea-b77e-962fb59ac092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d317d58-0009-4827-afa1-f657db0785ef",
        "cursor": {
          "ref": "0501d898-abf3-4d1d-91af-7e20201ace65",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2518ebb0-5d56-4a2e-adc4-d2163ca68b84"
        },
        "item": {
          "id": "8d317d58-0009-4827-afa1-f657db0785ef",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "93f3f0d4-301a-46e6-8f88-ab37dc79892e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e754dd3-7cfe-42a1-bb0d-539287fe8234",
        "cursor": {
          "ref": "d41e934f-7879-403d-a0d0-f93995f26d5c",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ce21e039-e52f-4c52-9c20-4d16bc35ef9f"
        },
        "item": {
          "id": "3e754dd3-7cfe-42a1-bb0d-539287fe8234",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4e7cce83-0ec4-4d6c-9e3f-d795559b5302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dc43dd-e148-4772-8e26-410247d2ffd6",
        "cursor": {
          "ref": "c17c5cc9-17c2-452c-b205-b62220197d25",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6c343181-4e8d-4136-9cab-e62b2de0b1ce"
        },
        "item": {
          "id": "00dc43dd-e148-4772-8e26-410247d2ffd6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "03a06b93-83ca-45fe-8419-2d84a8b7e56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8c6aab-7495-4af7-b3ae-31c4c1920cd0",
        "cursor": {
          "ref": "29f84aa4-3323-42ff-9493-176d93693e0d",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "121bf23e-2419-4d95-bec0-5c5b11f58726"
        },
        "item": {
          "id": "fd8c6aab-7495-4af7-b3ae-31c4c1920cd0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2bb6bde3-95f7-4d6a-be14-fe32fcb842f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633e58d6-6106-4929-9fc8-d216f13b985e",
        "cursor": {
          "ref": "9dd5ff96-272d-4bba-976f-2ef985288634",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8214a6b9-0fd3-4e66-b4ca-79c2f2155187"
        },
        "item": {
          "id": "633e58d6-6106-4929-9fc8-d216f13b985e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0cbd9650-93db-41bf-9457-ce5b6d309b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b7bf17-bd2d-4f04-9727-37a2672b4889",
        "cursor": {
          "ref": "3597bd90-15c3-488c-aebf-9d2daef7a9de",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bc24092b-45d9-48fa-affc-23ba9fc8849a"
        },
        "item": {
          "id": "e8b7bf17-bd2d-4f04-9727-37a2672b4889",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5b5977a5-d1a4-4141-8e0b-f0c7c84b5e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c5b28b-b9f2-4fee-bcbb-088e6a03045b",
        "cursor": {
          "ref": "c403634a-efa7-43af-a88c-8e168083dd8f",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "98c04f44-66e6-44f0-b1a5-97e408069347"
        },
        "item": {
          "id": "69c5b28b-b9f2-4fee-bcbb-088e6a03045b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "86beb9a1-6afc-4e5c-955d-5b9d97e773a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4f77f1-fdd7-4ce2-9e34-aac2ec81d4d8",
        "cursor": {
          "ref": "de19e66c-006d-4f74-9175-69f6ad0c2388",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c810a09a-84f1-4d7f-85dd-dd74649a108a"
        },
        "item": {
          "id": "0a4f77f1-fdd7-4ce2-9e34-aac2ec81d4d8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "04d4e15b-65a5-49dd-806c-df7378299e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173bda6b-fdaa-45ae-aab5-c89daea395ef",
        "cursor": {
          "ref": "fbcd9f6f-7a8c-439a-b4ce-e752f2951b9d",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ef5abfbc-a522-4b68-bb0c-259418da34af"
        },
        "item": {
          "id": "173bda6b-fdaa-45ae-aab5-c89daea395ef",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2bad0c09-a9ec-45b6-9970-14fea218b4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4f7f72-61ef-4a66-bf0a-d8d00d839a3b",
        "cursor": {
          "ref": "f8d2fcc8-30ed-4f17-afe6-bc1458a25c7f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e0929127-434d-49d4-a2fb-7dd924362ce2"
        },
        "item": {
          "id": "dc4f7f72-61ef-4a66-bf0a-d8d00d839a3b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e1226898-ab83-4cd9-b9ba-385438ef2c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68ec0dd-472d-4122-8338-2cdd79c26eac",
        "cursor": {
          "ref": "68596d64-6fcf-4dd4-99cd-a20f1f19737d",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d5e8bf78-4087-4055-874c-1b27d870200c"
        },
        "item": {
          "id": "f68ec0dd-472d-4122-8338-2cdd79c26eac",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e7205096-14fb-4bdf-bcb5-b46a5b8f2a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9195c0b-600c-4a09-a2cc-10ee9f14e6e9",
        "cursor": {
          "ref": "ec490575-4d28-45fc-b5a5-3f2e9896b447",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "645cb982-8271-46ab-9bb1-5c0faa492a22"
        },
        "item": {
          "id": "d9195c0b-600c-4a09-a2cc-10ee9f14e6e9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "eda0284d-2424-44e8-b858-f1c1649d583b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2d7019-e5ad-42de-84af-89184e40937d",
        "cursor": {
          "ref": "fd7e1147-5d94-4e36-9154-764d887afea1",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "97e143af-0f42-4bb8-81f8-6c061a05ffb2"
        },
        "item": {
          "id": "cf2d7019-e5ad-42de-84af-89184e40937d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0097a6c9-d081-487b-9dd0-46d356687b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd520b1-57fe-4353-88c1-faaa716dced3",
        "cursor": {
          "ref": "59880a41-058d-402e-8d6d-d6ba48b19352",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5322617f-92c9-4684-8fa7-358b22391593"
        },
        "item": {
          "id": "fbd520b1-57fe-4353-88c1-faaa716dced3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "98b1d5bf-dda8-485e-a2a6-300b7b681941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8235eca5-0931-4a64-9e5f-bb1970a477f5",
        "cursor": {
          "ref": "70ce9ce6-286d-4f6e-a58d-7db231edc8c9",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "cfca7029-5cec-4c83-85fb-2c46811121bd"
        },
        "item": {
          "id": "8235eca5-0931-4a64-9e5f-bb1970a477f5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "53eb30d4-fb85-4e6a-b5e7-dcdad814d877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289295e8-8135-45af-a614-77416b593a3d",
        "cursor": {
          "ref": "54e963fd-79ae-4006-92a1-521188c07b9f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c56e36b3-b06f-4f60-a9d7-38823da2b10c"
        },
        "item": {
          "id": "289295e8-8135-45af-a614-77416b593a3d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ffe4aad8-e0db-4469-98ef-39d40ea7c93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92872b20-7163-4187-a427-ef4cacb32331",
        "cursor": {
          "ref": "b12d964d-9d6c-4004-b679-679f2d3be19c",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "917190ea-2a79-4b0c-9300-344af5f7842c"
        },
        "item": {
          "id": "92872b20-7163-4187-a427-ef4cacb32331",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7c0ea8a5-6fcb-4a89-bd0d-73dcd356e64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f355ed26-2b73-4756-88f3-45394690a0dc",
        "cursor": {
          "ref": "4c055078-dc8f-4585-9b62-73ddce2e68d9",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b746b88e-9f16-46cb-a0b0-edf454905702"
        },
        "item": {
          "id": "f355ed26-2b73-4756-88f3-45394690a0dc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a0c5424f-1b25-4fdc-8ee0-58dd04567c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cc95d0-99e5-44e7-955d-271281a490d6",
        "cursor": {
          "ref": "44f32a17-3829-4822-98b1-8fe53d5bfa5e",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b6073d6e-74e5-457b-a483-8b8b9f574a48"
        },
        "item": {
          "id": "32cc95d0-99e5-44e7-955d-271281a490d6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3f909ebb-e6ca-42ac-be48-c431853ae52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625a5879-3cdb-40c8-a62e-a09e11dce755",
        "cursor": {
          "ref": "9cd1448c-4268-4c71-85cb-bb1608fa740a",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "c1d520a8-15b0-492a-af42-bae070ee6865"
        },
        "item": {
          "id": "625a5879-3cdb-40c8-a62e-a09e11dce755",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "67a2e18c-e45f-4de2-b180-83067e1a599e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8c4944-f1fb-4331-9915-5596d855b3e1",
        "cursor": {
          "ref": "1fc993f4-fd3c-4281-894b-bb6f14d17b02",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "72c148e5-6745-4790-8cbf-04cdd7f238fc"
        },
        "item": {
          "id": "0f8c4944-f1fb-4331-9915-5596d855b3e1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "293b7153-9983-43a5-a829-6d052b35f532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0ffb9a-7219-47b5-aa1d-fb8ffc5870a1",
        "cursor": {
          "ref": "d2ad6770-119d-47f2-94f5-957bb73fc556",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ca6a31b2-bb6f-4203-b686-9092d4c1337e"
        },
        "item": {
          "id": "3f0ffb9a-7219-47b5-aa1d-fb8ffc5870a1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f05008e1-0ce9-4c27-8553-d24fcf5377c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5e9f59-5baf-4ea9-bec6-1bb539ae988d",
        "cursor": {
          "ref": "28a633ce-7c39-4429-b0da-ab11a2220f87",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "00c513aa-b922-466e-b380-08b116738e84"
        },
        "item": {
          "id": "de5e9f59-5baf-4ea9-bec6-1bb539ae988d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3485e3fd-0d57-466e-9e02-4aaac1cac5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159e998b-e6ff-4062-a710-9caa4e07adef",
        "cursor": {
          "ref": "6c47ffff-9717-459a-8569-26e044b71bbf",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "87285c18-737f-414a-9daa-3c688e6dd326"
        },
        "item": {
          "id": "159e998b-e6ff-4062-a710-9caa4e07adef",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "65bc2f3b-ba3d-4554-b46e-232a04103127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d29470-e21b-4352-b0de-d2ab87129b3a",
        "cursor": {
          "ref": "05e4d171-47bd-418a-ad87-479b887ae21e",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b8f6b624-62fe-45dd-ada8-448e2c828f0e"
        },
        "item": {
          "id": "e7d29470-e21b-4352-b0de-d2ab87129b3a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "824ea3cc-2357-4d93-86f7-112e0a58ff2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af76e0e-f585-4b7f-bba4-a5363da8fff2",
        "cursor": {
          "ref": "3a7822db-ed6d-4444-8cd0-84074e86e091",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5167a570-ef07-4ead-93e4-5d8bbe12dd6c"
        },
        "item": {
          "id": "9af76e0e-f585-4b7f-bba4-a5363da8fff2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "810d55e4-2c02-4497-ac9d-3e3297dbf6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488d6b37-a963-4e72-a27f-0c02b4a2f4fb",
        "cursor": {
          "ref": "6e725c9c-804e-46f9-afbc-607e32bccdb9",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "adc38157-b096-48d0-a141-8370248ea599"
        },
        "item": {
          "id": "488d6b37-a963-4e72-a27f-0c02b4a2f4fb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d2ce9ed0-d595-4871-96c5-a4adcf6fd4cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecde16b0-b1cd-4e21-bd57-edc847d0cfb4",
        "cursor": {
          "ref": "6563ef95-aa4d-4a22-bdbe-9cbb1ebec8d3",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ecd9019f-a334-4e1c-9def-91617b495d22"
        },
        "item": {
          "id": "ecde16b0-b1cd-4e21-bd57-edc847d0cfb4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ae79f09b-c31f-4812-a224-97cccb798bd6",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6701fa2-d48f-4fe1-8f28-86ff27f8f743",
        "cursor": {
          "ref": "055bc1e8-966c-4ab8-9ca7-ac25a98bdcc0",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "501924b3-d6d4-4d53-88d0-100cab12b180"
        },
        "item": {
          "id": "b6701fa2-d48f-4fe1-8f28-86ff27f8f743",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5856dace-dd2e-4d44-af37-2974610985ca",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c651e1-a3c1-4734-96e7-82ee49af2b22",
        "cursor": {
          "ref": "ed8c4d76-d088-4ba1-bde6-d970299f196c",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "adb3e3b3-a844-49f9-a752-6f47ea34c8ef"
        },
        "item": {
          "id": "49c651e1-a3c1-4734-96e7-82ee49af2b22",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "856ca19e-d9f0-476f-93c5-780116d3dc86",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "41096a23-3580-4517-873f-f0d2a27c3ca7",
        "cursor": {
          "ref": "d8cecd3a-0219-48e6-b746-f02da7cd435e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "bff1e82c-f993-4b00-abd4-da35f408ca5a"
        },
        "item": {
          "id": "41096a23-3580-4517-873f-f0d2a27c3ca7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8997f123-d3df-43a7-ac13-92c988e5dd10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41096a23-3580-4517-873f-f0d2a27c3ca7",
        "cursor": {
          "ref": "d8cecd3a-0219-48e6-b746-f02da7cd435e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "bff1e82c-f993-4b00-abd4-da35f408ca5a"
        },
        "item": {
          "id": "41096a23-3580-4517-873f-f0d2a27c3ca7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8997f123-d3df-43a7-ac13-92c988e5dd10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda22e45-bb09-4150-8956-a585a8222e2d",
        "cursor": {
          "ref": "a8ae98d9-41ce-4091-94ec-9bd940766ee2",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6bfb271e-1d23-4e59-a370-96f86eda6699"
        },
        "item": {
          "id": "bda22e45-bb09-4150-8956-a585a8222e2d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "14c216d4-b32f-4141-8710-03a6f3a4aecf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b30344-a2c5-4e4b-88bf-2791144b2d6c",
        "cursor": {
          "ref": "97d170e1-fb33-4afc-a9a8-655536986e0a",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d356ebb6-4f8a-4829-9082-a67f18434dd8"
        },
        "item": {
          "id": "d0b30344-a2c5-4e4b-88bf-2791144b2d6c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "46581769-0966-4704-b416-350d2b1f0dc9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}