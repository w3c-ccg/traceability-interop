{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "aa795a1f-1759-4ce1-818a-86635652a6be",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ca8d1069-a589-4b1b-9ea8-8ebf92fe2b49",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "25b7aa91-9d3c-4ee0-bdbc-1984e7a6ee5a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fca05fe6-8b4e-46e1-aa72-3713258e21d5"
                }
              }
            ]
          },
          {
            "id": "f940e955-11ee-47c0-b3ee-ef744efa18b6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27076f0a-e8bc-44c8-a3f3-dfa7c9de7701",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f4bfa7a9-0620-4fe1-bb75-21fd3f69c173"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ab5e953d-9fbd-4ff7-9a78-3e09fe6c9cd9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7a74d800-0b0f-495c-9e24-225bc62a95ae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "62a04092-4ec2-428d-a2f4-27f79728c088",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a239a04-f491-4c90-aedb-d1c4ab36e4a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25f5a8a6-462b-464a-9036-035c7985a235"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "67c67fd7-dcaf-44ed-97ec-90b556c5fdc7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "06d6a26b-5a46-46eb-b1f9-e1555b8f6ea6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b85677e-ec27-40a5-8337-a85506e083a2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "52b24f7f-f5d0-4207-ad6f-63e049e2e04b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e1e1aed-3f12-4d84-8d1b-231364d85ef8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5f715b72-8605-45b9-9453-0d3be57ad08c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16e5793b-15c5-474a-ba1d-90ada1839a4a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce9e067e-1697-4d7b-82ed-0724b87de812"
            }
          }
        ]
      },
      {
        "id": "3ebbae50-0dfc-4f62-acb9-4226202333da",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a84a4e65-2ad8-4d3e-8c3b-a7a02f42d645",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34dc0691-6ef0-4496-95d4-b1783a3e7453",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e72a3c5f-3ab0-4d41-ae66-dcf60b393b86",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6742e1d8-5642-4189-9722-bf68765ea8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00438fad-ad3e-4f50-8d42-9c59a11fdb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7f8ffc-e309-4200-b273-74e89f8626f6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c2b0c9-75da-4fa3-b0d9-bf948edd7cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7523e335-f827-4165-910c-f337bbfc66b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467e6511-8f8e-4990-a0c0-af37e7c2ed1f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35407d46-dc4d-4455-b4a3-468766f8a3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e4cf2cb-be8b-43e6-8a1e-03b08f175834"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5e0ee095-2429-41c5-acb3-1f5e6edd91b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46a27c1e-eedc-4509-a270-6ed28e144732",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb9e8ae-69fc-4314-b339-d7e9d89a3a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f7603aa-cd8a-4c3c-9248-9f6bae5412cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6566e47-71ed-40df-8039-4d5104b78035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b5da2f-c67d-47c4-8c3a-1afbfc79f019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5075e67e-bc6e-4898-aa48-408a46208387",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e72210-9749-4722-a95c-00aa5b44e7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e243ef7-f7b6-4149-8d95-a31ea9a28785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f284e3-9526-416e-a722-258857573e23",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "aa626a45-61e2-4688-b42f-9af14ad72eac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ce1a9239-3e59-499e-8749-6830aacbc993",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d1586dc5-7145-43fa-86c5-3c5e677efae2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2e397ea-4d7b-4bf3-a426-7baf855df640",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1548c367-4dc8-4d6a-b3c5-14d0bdcaae04"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f73e748a-727c-46f4-8b43-b567e4279e44",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "dbbbe81b-5715-4fbf-84b7-58ca8a6061ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c712070-baf9-4044-853d-22f2cbdddc75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5fe31e8-53a1-446c-b38a-1037d64e58d3"
            }
          }
        ]
      },
      {
        "id": "94e37e8a-ad1f-4623-9ad4-f1640f6906f9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c42ae467-b3ad-4191-a3b3-baf88f7509d0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "60d781ca-855f-4ce9-84ae-704a401df938",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b4b0ddc2-241c-450d-94d1-946abb1f65a4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffe19d9-85a4-41fd-b3f9-1ec43e82525d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d986dc38-2bb5-4b71-9fce-1b8a8d4b2189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd742e1e-e165-4d85-9a26-0c8cc77f1bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "880c489e-b4c6-459b-a335-75b14d0693ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf458eb1-059e-4975-86cc-962f112d128c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7509b78e-bc7a-41a1-9fa4-547a626b6990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e5223c-a1c2-429e-904f-4d862c2f7571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d0d865-ec6a-4950-8c0b-9bcc39783256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2eca528a-1ee1-4729-adde-6aadc76a66ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6b2a5e-f64b-4424-bc7d-e57d1a8587b7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734c8f88-1d52-4a6f-88f7-6cb42a7467ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979cd447-56af-438a-b995-947f64613a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec16b22b-24d8-49ba-8779-db26d2bc96cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "250f985c-6d32-408a-b4e3-3dbd50e86ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8437e5-415a-4711-a52c-79e047f7f40c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22c4f40-ea0c-4275-b7a0-f77008c73001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa70ef7-a2a5-4a0d-bdde-13ecf15bafa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9a8424-4afb-41cb-bc69-ff79ce9b8a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20f520ef-083d-4b20-b9f8-0d71f4abfbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7358ad54-d9aa-4b51-a039-84c690b59026",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6260cb29-c233-4e9d-afda-9e868a299c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874e1a7c-18fa-49fc-b790-60718156b36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e7e9ce-e36f-433f-8fff-70765b003529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af83970f-e817-4a84-87d7-361810176ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8121985d-4b69-4199-a52e-ec5255c62123",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9b1b28-f3aa-4fb9-bb93-0d0f1a5f02a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e431d3-59e2-4a0f-a08f-23502a515129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5f9f0a-8350-418a-923d-9629c5c6752d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8cb4843-637c-4217-8dbe-6a123a65a956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd1288c-24e8-400d-8be4-7d44658aba0a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004eb5fc-bdd5-48f9-9523-d55fdddefc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a66e9d7-10ef-4ffc-ab2c-9918575cd497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755a2146-3edf-43d4-86ff-9b7afe1d316e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c91a53ac-ce81-4ebc-be01-7f44f556b537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820fc33c-2ee4-461b-8a5e-1643da4591c1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ede7dd-2c8e-460d-bb78-ef9ac9fa48f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85675f5f-767a-448c-ac0a-52f6d80cfb7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0824e5fc-470d-4670-ae49-a26d9bf29dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6cf9965-7c2f-46a3-bf0e-95b1fb4d85c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f3713a-e416-4eb3-b275-43f74088b56f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27689850-8d65-4970-8de8-82f13214cc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5312cfaf-10eb-4435-8151-6aaeea39346f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445eea1a-3f16-43ad-8d00-f96837fe2063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1acfd6b-6352-45f0-b359-9f5d20b5d9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb924cac-cf07-4eca-b84c-b7585f41e874",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a3af1f-064b-4383-a746-1a5201b2d936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea2fd61-aa3b-4cab-9e11-48090374d069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e68b433-e967-4e83-961b-cd01485b1308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97f3ba7a-550c-47c6-989f-f77e12820573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086a5b8c-35b1-46d7-a5b3-26fddb964292",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b9a167-7391-41ad-96f2-897dd1f15371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5012668-5e3d-4797-bd36-f30b21acc808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6fd088-3891-47e0-a0c4-b9bc1b7d50a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60e2669b-ceaa-467c-8f8c-4cee1acceaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfda8596-6f97-400c-bcad-d48d1f2aac3d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3370a7c5-a54f-4e2a-8a75-4e167a9ecbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70148f5d-6ca8-4acb-8a7b-6f32d4f1df00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93697f61-9408-4536-8d77-89bbbaa96fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf63b4c4-ba7f-488a-b0fb-799418e01247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c7dfbd-f305-46c6-973a-17c158e59836",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8aec9fb-8275-4523-9b7d-95345d0d3e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c936855e-69ec-4709-bbf2-c3b6c11da2c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d246b769-0088-432a-875c-2bd2a772bf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0327249-53ae-41d8-8578-84e25ff4b3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd37dc04-f397-4b5c-a33f-0b0b665cfd7d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b467cfc-d51b-4acb-909c-36a5269d95f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94ffd2e-92a6-42c4-835c-e195016bb920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cfcae4-91c6-4b02-93e7-b20a8bd73760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0754cde-ee40-44ef-9587-640e9a141ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9a0915-41b0-4c90-87dc-e2a405782583",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9cdcab-aebc-4f88-999b-13005623526c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c27e6e-3ad2-4191-a8d1-2c40d7b9c649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e137eb-8367-4a28-bf74-2893a6921232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97e15e85-9d83-4888-afea-e9983a88dea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62f05e4-1013-4ac5-887e-12d344f4fce6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b77215-e924-4c43-a190-c6ccc52e515d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45eb5982-9ac1-4340-93f9-c0e1e5894aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8545cc-777f-4c33-b80a-8b6b8fc42e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "015af351-acb9-4e6f-b3bc-624debf6ab65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec166c6-925e-4a1b-af97-c17af6e2d80f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef7d323-6751-4579-a7c9-5d83a2cade64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91ee164-9316-4dab-ba1a-bf0a8ef45772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29007bc-4ff8-4542-93eb-d87fa553c4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "845dfff5-00df-4621-b164-2c68cf05a3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d547399-ae7d-4517-9327-05f1535db3b9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fd773c-c36a-472b-8b96-b0c4dc02eb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc99a49d-9c9c-4174-a491-9009340ccd0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6527e12d-2051-465e-a5d3-852cfb4394db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "08e13540-b7f4-41d0-967e-f76a6a357e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8fd74e-d9be-4fdd-9daa-1071bd8d826b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e447a95f-aa5b-4038-9c0a-69a3755a8d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3455b6a4-5409-4051-8dbe-df25355f698c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec6edcf-a062-4046-8573-b4a8369f1825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a18a0a3b-6b29-4771-9d1c-78ed0a994cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5306042-5ce9-42d4-ae30-64fd87b0e2d8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1d0ba4-0cff-4c01-9b1f-e23255ac6b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6851e5-3ad7-48f0-bfee-0f4e39896b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a07ed29-5696-4bc1-99de-1559ad199792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1cc9f4-a0cf-4e3e-a232-6d56e81cb4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e794834e-fa93-43ad-b7f1-9489fea9c6b3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7194caf7-a2c4-401a-b00e-a7f080379387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cea6c4-bd72-4db6-94ce-22e16236f5d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfde2b3-68cc-4eb9-8ebd-4433afb393ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d912066-b366-4618-8ec6-d873cf2941ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b3e41e-c06a-4739-a66e-e017a90b63d7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c01bd9-1fae-40fe-b307-c4865288bc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5024df-b4ff-4536-a625-122c614a48d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608ccb0d-b13a-4d1d-bf34-221ba7755a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a08a652c-87fb-4baf-98fb-5c1525e5797d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db9d792-c761-432b-a96b-0b97aa6d2712",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eaecc6e-3d15-4e19-b87a-fd89988dd6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4111e92-54d5-47a8-b97a-04111ef47b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aad2ad2-55ea-43f9-8e21-b1e5e1c45409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ad0c01-c887-462e-a913-96874e552729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9861d283-be32-4f92-871b-b19a49fe723a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2a21cf-89d6-4fb0-829f-f077ebd049db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a659fc8-7639-44bc-a2f8-91c3fc4d023e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671bc635-bf83-4291-ae9e-417b334ab825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "621eeb84-48ad-4506-8845-6b041ba1fb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f485a4f-271d-4332-a74e-10d97f6455ce",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1be670a-50fe-4ddf-b5bf-3e083599fa2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcdc2636-c48e-4500-bbcd-4a35044c5776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc50668-e759-4345-9f38-ec75c5222361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9696dacb-97df-4427-9150-02919efd65ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d6a4f4-cfc5-499a-8bed-842be003738f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c40b1bb-483a-4f56-9d96-559c1a043a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c80aa81a-e4da-46ed-a3ef-79ea261090ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51e6467-f817-40ff-b143-10f77a3b4f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8ba3b4-4813-4b9c-b861-836860e9bfa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88977df-4a8e-4c7e-a76f-5f4ac49cc405",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353d2d4e-424b-4e2a-a92f-728e13e7b465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75593bbc-b7c4-4382-9126-33fcf79534d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed077007-d4c6-4ae1-8162-d799f0edd1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "92f4dd4e-f7cb-485a-8204-45b358f0bf1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f11ef5-aeff-4727-8616-22753d8fb942",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb10491-5f27-4adc-8e0d-8708faabbae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d678e77-ab0f-49fa-b8b4-74d509147e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17460234-1139-42d0-99cf-bc468d00ae1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c2b44d-58c8-4566-b886-473873f29f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe4087b-c96a-4d2d-9d48-5b79d0a1226d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82909ad-da53-4023-abd0-d634f60cfd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9a1d9a-1f0e-463b-baea-6d4e08deebd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893b105e-d248-4fed-9423-b754c578cfad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6bd5c65-232b-4d51-a330-915a70bb8d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6226cde-b680-4fb1-92d4-2b2ab12b4c4b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "119c13ae-3faa-4c0d-b0ff-f989c9fb227c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfc0586-598c-4b67-a866-b1f329140f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ada9215-148c-4f4e-b867-60b4b890fc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c78214b0-160b-4362-8b93-210518b8d6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39a2a53-e12e-4c30-9ce6-56949d38441f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70dce583-4010-4012-915d-73833cfa6ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e55676f-2b2f-4eef-b18a-18f93f6a8e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd7d4e4-6797-4844-b446-9b6b011d7763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1015fdda-094d-4c89-9e7f-a847d160e584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9dbc222-18d4-40b2-b128-06308689701c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac540cb3-5661-4840-a3ff-01aa7074cd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc09e02-035b-42b6-9885-167b78b7f43a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39911666-4f52-4ec3-8449-2d548f585dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "edb9e34e-1bf8-450f-a03f-526963c3deb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902f0dcb-b3b6-41bf-83f3-1ab610959998",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe15be4a-2886-4505-a8af-4a0753cd544c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420215d7-3a2a-43ff-b199-a8d64725ac98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f76f8d7-c249-4754-a2ac-90e0d0f14c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b73c3db3-697f-4a87-a0eb-30f1ff500a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3a6123-ca43-470d-b8cd-63a42b05af67",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac687667-5e39-4844-8e45-cfae352256e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb90abf-6fb4-4074-9864-87525dd3eb8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67e02f3-47d7-4c86-8342-7c6ad4681b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13cf7785-396b-4a07-abaa-2388da46165d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038bed06-eef7-43fb-9c31-05048b1976b0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccf3127-281f-47b9-8695-f462b0cecf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0895cb-c55e-4429-b7c0-17e083eb04e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a6a046-8ef0-4616-b88d-464dec505cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b9cb8d-103e-4f53-bf6f-4ea6fc80ea48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da67566a-744e-4005-879f-8ffb0b5884d1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d826a0-8a03-422e-a4a3-2cddcfa55c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80937a3e-f0c1-4c73-9c58-6301cbbc4bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9632b20f-6599-4a01-be7e-4041572161ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5869dd0-44b6-4adb-90b7-c7419e4d54d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d97c635-2523-4a79-9a5b-b1c1a9201a50",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1a86a6-0dcd-4c29-b6c9-7ac87f6b12bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574c1b95-4410-4b82-99af-8b4d22af645a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acacecca-f807-4cbd-82d8-370d4a279b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9db0a84a-5538-44c0-be32-4cc5ce6d84c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bed4b31-fca3-45f2-909b-e866a114b148",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498722d3-fb80-4636-bd72-76630b362497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8255928-8b87-4a9b-827d-919a9dc532d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a18c8b-5581-4f57-8043-e8c42b4ff7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7800983-619e-49fa-9f12-41242ce0ed69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0196798-a387-4fc8-84a7-7f8c407446da",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea038d4-0905-416f-bd60-43d546a70ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e329034-bb60-4583-9160-5d35abba657d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2c6b8c-5e58-41f1-a55f-ffd5273220e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3ae3e2-0ca9-4fef-9d9c-007eb824420a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd72350f-7c74-4ffe-8d14-d116ca18f71c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f9842f-58b1-4651-8a12-ef78f667c973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e49981-7e70-4526-864a-587b19fd3a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466da8dc-3891-47f0-9618-82ed46e1897c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1389f2d5-354f-4a1e-b55f-4c147d3bf534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53043de8-4e24-4bec-ac55-19e2055ccbcc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afcea70-baac-42b5-9436-beeae0fb7056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d764a0d-42f7-4a41-8142-2dfd82f8f9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa49e85-ecfa-4a1e-b772-157fb2667742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "277a1461-a37d-4525-bdb7-6408e18403a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1689dd51-40e6-4781-903b-723c8cbd503d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6d6ac2-1e43-4bef-b92f-157aa422bedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a247b8-beed-4663-91c0-3557bb85a58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d47cb86-0d3d-4b3e-8aaf-18fde11e96b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "303cf84e-38ca-44a9-89fa-6fc246a21008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcfc303c-0c23-4d62-9e20-c1d04b928785",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a123f6-aa84-4ee0-99e0-9c13b9086c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c250a12-540d-4e47-91bc-0a05a512ff27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710f0579-efc9-43c5-b22f-41878b6beedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "30432f6c-a668-4411-afc9-fc9cef1e11c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abe4608-d440-4cf1-927d-3acbf8644f7d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d38de0-d2c6-4752-9f6b-e39f8e713404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100f3771-0098-4ccb-a7cc-c2101365cbd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0cec1c-1fc1-4554-9062-e4dc3eda95f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "55f4e7f0-694b-4404-b516-5cab1d98e375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd81e0b9-5e06-4b96-95fc-e7f7669bee70",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6a876a-5be6-4826-9751-c31029a8a6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef095e5-37fb-4e58-be4f-9bdeddc51b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b57b08a-72a4-49a5-8000-2d8152858c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2346d2d5-308b-4d36-9cfd-d6d23735df35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1e8f4a-d586-4ff7-a76d-cced9a034497",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087abc3c-2aaa-4a86-b448-22b4bc54c007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958e0aa7-d428-4573-9351-d06e1b8795a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7439b5e1-efc4-4112-8486-ce612e976998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0372df18-8cb2-4e8a-a207-afe715cff034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0bdefb-e5ab-4fae-81eb-c42fb454c3da",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d070a0-c0ab-475f-8521-9544853e5a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c281bc7a-8dd2-43fa-8d3c-14fa4e6e8d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e9601a-9187-459a-96eb-03b165845fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "395b23d9-8a01-4dd7-9891-d0383ea5d388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a2d07c-402f-4ca1-9bfd-a290eb93a84d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128b6ce4-353b-41f6-9757-750432677000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2f28b1-81aa-4419-b4a3-4a7e2e1842b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef05c1a1-dd12-407b-a7d9-810fc0a832e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91650aa9-7210-4f35-855e-c4a2288c4756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ca8795-6dea-4ca6-884c-fb65cd2058ee",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1414a46c-c1f3-41f6-9047-9c564ae5dbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17acd6ab-320d-4ff5-b358-de565daa0c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f55e68-4934-4891-99d8-20e799526eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1e57e5-6cb4-416e-a1fb-b500915a927a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5b9870-e959-4888-8c4c-634f3820704f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79661bdd-083c-4267-abb4-4a04e597afe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3282abb8-fe60-42cb-b702-31ded603e08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7440aa-7691-4ff5-ab26-097cb5742442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a37aa6ac-f95c-4390-8462-20fb3e958869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbfe9ed-e066-4157-b302-fee6bad10227",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd3f025-8f1e-42c4-94a2-6a5a23f6a33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391dd5b0-a746-4dd9-80ac-5928df2623fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0269284e-8dcb-40a5-9e68-dd9b652ffb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7907691f-0804-4d24-add5-716d8c1d4bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442521f2-1bf7-440c-bf14-beaf523c209d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3130eed7-86ae-4fc3-9309-f8332a4d4195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ceee4d-00c0-4dc4-8dd1-4187366cd939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e30594-49b2-47cd-b603-c40e4d286cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c574421-856a-48e9-abec-e0260fa0307f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5b837e-2c45-45d1-a159-8792912963e1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfe9d10-b1d9-484a-a773-9fa40d258554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d560de-31f9-427d-a8f5-b9a24a43f6fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347133db-4b70-4287-992e-5a65d69c35bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a68ae898-96e8-4a01-8fa5-77d5d1fd8d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7adcedcc-bd32-43b4-b898-ea5b24b9710b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0664706-9516-49a0-bb0e-c4d874d7373f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3b06f8-f3da-426c-89e0-77c460b93f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f57ae7-2d9b-4592-a1d6-cfdfc8753d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70e08b9c-8a81-4107-a6f8-eea5caf5c5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ca01c6-3bbb-4ce3-9ca5-abea38fb270e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482100ce-ab82-4f54-b04d-6e11ac8db430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b76c966-44ae-4a60-8190-d567465c71bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c020f8-92e6-47f8-8132-7cbf684f0850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a31cd20-9d98-4962-9963-7287be1db47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4745b6-8965-4f9d-9880-aa7256006fbb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3626dd40-5f7d-4450-a605-7680cff98f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0645d8-328d-44c2-90f4-ed830b7e39b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878ceefb-4aed-4b0b-9f6d-e13b3ba5948c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "302d9894-69ca-4cc7-8657-19b0d57f1a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bfa648-706b-4547-b145-57d63b41ca4a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567a145a-9352-483b-b97a-dbd7be624d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7a0248-ee8a-43ad-b131-dd2820d4538f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb70ede8-7e71-4b07-93ad-d1b69827df54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a00e80a-17da-447f-b41a-3f6504c6aa96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c503514a-0589-4eb8-abe0-c22fb7949615",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cce4b8-f3a9-4ce1-9cc4-dca695acc0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3145f6f5-9efe-40b8-9960-6453a9a7531e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a4bc9d-098c-44eb-bee9-666b6b131bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a879816-877e-473a-bf2a-8fefef532618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b725b928-ae7d-4925-aeb7-5de84f9c8560",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cc9fcb-d796-443b-b6f6-ddbd83610c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4db0801-99d5-4c27-b20b-095df5548571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934823f7-aa2e-4c70-8bd4-6b36574c0186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4183ac7a-2def-4bbb-853c-cd6a6629c2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095cdda3-75c6-437a-8fb5-7a324c6ded0b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad63476b-eb2a-482d-9a79-8e531d00259b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71dafd20-de11-4f0b-b606-1c40fc293835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864d812c-d25f-48d0-bf69-67f2abffca73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9091b3e3-3878-4a8a-b14e-e3d62b2c8708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05de1aab-dec9-4cc8-acc7-94cb2c5f60ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d6e4bc-d2ed-4814-b0dd-03c531c07c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1daa79a-653a-4d3d-a50a-0b8577db7de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026ec1d2-40e0-4ad7-ba30-dd360b8cf1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e6a4ffa-c01e-49fb-baec-84c345104f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486a9eba-3fe5-4547-9d19-530fec4e3c5c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52dfeba0-3052-4602-a210-ff0b8656335b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0536ec64-77e4-44f0-bde5-a6b51d3e64bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ed7a5a-21af-4db0-a529-a48eebc0c2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5617ae11-2521-43a2-9785-e2cef6931e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b427163c-b3a2-49b8-9f64-17f2ad20fbed",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc53c2e0-82c6-4377-a2c4-812a401d6ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19ec424-49bf-41f9-94c8-4c979e059ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190d3156-cbb1-45e9-a503-54c64f03674e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "36623ea9-a368-4195-9b90-591c64e0f73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05de656-cb57-4a05-906f-2e29b0e1cb4d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56677734-acd4-4cb1-919f-dfa12b48051d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85676118-bd2c-4d22-95cb-d2337b0d28ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda7c5df-ab2f-4cb4-a129-971a44f823a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f19158e9-4127-4739-80c4-1a5a5a48bfaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7933eb-2c06-4e5b-aef0-33713e8641dd",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cda83f6-0f82-4cbe-90b6-a7b80aad67cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3312c3-4f02-4c4a-8a98-135a15954c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fbdd83-8be1-41e6-a09a-fe4671a532b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80acea0c-e625-496b-b240-6d3644f356cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7b7b24-504c-48cc-824f-a8dd32e61168",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41962a15-12d6-4ed9-8965-751f902deb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3569df-97cb-431e-8988-d4b51de485c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b105db76-7087-4bc0-bcba-913a826793a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df889de8-ec76-4a70-9e73-34b88d8b65a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9b5173-cab6-4161-95df-61a75609e9b6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f718fc61-ee6a-4fe5-ad7c-74590efe6b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9d7f56-4c3a-4934-84ca-ab8207eb0851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937e3bd7-6617-47ee-a53b-1693f70b683e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff7416e7-7438-4465-8d2a-b6b96dd4bf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca78906-40ee-4f2d-bed5-298030b8cc5e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a32579-35ad-4b3d-b6b6-45c6371c5f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6bd5d2-c8ad-4393-a58f-7fa0c240f62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523aa22a-3da0-43a7-84ef-7b36282570f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a69198a-154c-4841-8d24-f8eb2d167c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00316d5-eaab-4114-a976-ecca41aac2c6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "face1d26-8be1-4d5f-ad48-55956f4766ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76083af1-ef53-49a2-a3f5-d18adbf0789f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8daa42-0213-42ea-813e-91fbc5514fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc3984b-e4f4-48b7-8fca-d9878eb10bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346665d7-dc68-4225-9c5a-0445648efb54",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e537d478-7ee2-4bc6-9305-292fb023aabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58ab6ad-d282-4c49-b364-ad28cfe17fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e989e9-aaee-47d9-a04b-943182191999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce649929-7cad-441f-b411-45038e9b5f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a4a17b-df19-4620-9384-ce7805e5c2d6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53131d59-21b1-4b9e-a3af-d1b2e1aef484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118115ed-ebe5-416a-bac2-30f77e2e0af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da2e93e-0948-4c19-a7d8-470bb37ebc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a07ba69-beb4-47fb-a892-e2a6801e3e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0580a4-7ecf-412c-bab5-24d8336a7278",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745cd16b-caf4-472f-a70c-d770453f8e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ffb8f0-1419-45b6-9ae0-e08437419741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f6aab7-6fea-4a5a-b545-b2b5b18a9004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88b77772-2af3-4ca8-aecb-602ebb17f4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b45626-1c02-45e0-9f65-1080b97a985c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9514fd-99dd-49e1-ab2d-940dfd31154c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e38c11-bbf0-452b-b69a-a0f8b3eaf783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a5e588-a967-4992-a09e-ccad8654f92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6280e8-b6a5-42c9-accf-9f6370924ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0711486a-1b5b-470b-b520-86a05d096dd3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7c7793-9396-41d5-bd05-a8b08be2b758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c3d4c3-1a99-46db-84db-a28eb5946178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdddc27f-85f6-44cc-bbef-301407c2b11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d12c168c-f438-41f9-a5da-f3543b7205ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119c326d-524a-4f51-9ac4-36224f6988e1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209c0aa8-191e-4000-a452-cdb92d01a390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30da5b80-011a-40ad-a042-1c021e8d95d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845c54e3-70a0-4f0c-ba55-5d69d8abe468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "78f33a9c-d594-441a-80f2-a8046fe52535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9263ee5a-d558-4281-aee9-f52945877783",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f409891-0314-4c98-8e57-26ba427d14ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ca7c2e-13c3-4102-8771-a4b95fd3462e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d0d011-f576-419c-bf5d-19351b200824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51db2961-eb3c-4e7a-bb3f-b7f2686b0e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33f4687-2a7f-4900-b8fe-879cafb13136",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf6005e-c79e-4b16-9f9d-ed344e6f2f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f4902f-c7b5-4019-ab84-80c72df62083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63d8724-5070-49cf-8a05-06a4be30a104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0050b24b-1f4a-4c46-9046-6f488c815012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11ee966-639e-4f1e-b027-142fcb271b9c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d96b870-9a48-491c-95cf-eda45eb8130d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d3f2b8f-c2eb-41af-a248-a6ce8e062952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a3e71f-cf35-4952-9802-f70af9604d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bcbc88e-6073-4e45-b3e1-13fb61cd9141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f52d87d-f198-4668-abd0-a01b19fb6dcf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443ee9d6-0f17-46ea-8b45-fefb9c0110f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d16836-b8ef-4c10-b5fb-968fc2889cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe0339d-da88-4c43-a2b4-578d26b67777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e87e30e3-faee-4d65-a908-229a13cfbc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f7610d-b55b-4612-8042-e6b19ca2843b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b4b056-554e-4111-a17b-6fd1215d0e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750c2594-706e-435d-a8be-f987acf60fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9053a2-99db-4df2-8c3d-e48302f843a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "037aedea-de9e-4b1b-99df-2838bd0e5153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcf3a99-92a9-4ce0-bd5f-9e217dc9a22b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c640b6-c328-4d35-9e95-52191bd9e44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1bc196c-e4c4-4b7d-a027-8dc1e1e8746e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386ba23f-12b0-4e65-bf37-c077a46338f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2192ac48-82cb-4609-92b7-c39c1f201188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed50ce01-cef7-4e6d-8f7b-27baea9b2740",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa50d62-10e8-40f7-8c84-1aff9a55226f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ac9783-1d95-42c4-8d3b-8656d8ece6df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc669d6d-acaf-430e-b6fc-d1f309c11c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad777b45-a694-4d9c-b381-e06be7bcb194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e1ae43-9f99-4cca-8dd1-5714a229000a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249c664c-71c3-458f-bd2e-12fd902316f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83580082-bc0b-460f-b4f8-0fbb87d420af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7e3ded-f473-4e10-9ffc-fa0140b8a24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28f15158-b9ed-415a-ac63-0376149f008a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6890519d-4f96-4f63-b835-eca9f3b69eee",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d5df38-5e2d-4f50-87a4-44c72fe65c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2627df26-ccec-44d1-8db6-35d92ec7a193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53de610c-60db-4615-ba99-5371cc914110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "625bf635-1928-408e-985f-23e95745b4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbe746a-2833-43db-bd80-24f4b64f64da",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ed92bb-688b-4061-a641-0d88bb0b3e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48559dc7-c2d0-4c46-af13-2c17429388d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023d675c-919c-4930-b03b-f25bdd15d588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "113d74cc-6baf-4bf6-9aa4-8b12adb4c20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244caf04-eda6-442a-8e5d-a499e10c6bad",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcd189a-9816-40f3-b4ac-2c7e5b6e1f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb57ac61-9815-4629-897a-bfa241f4cda9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa38ef3-7b1d-49cb-b85e-c141400dc936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "07f7150e-c045-47d2-a7c5-860e36970b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebc5c09-ef64-48b7-b269-46feea3c696e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5772ff8a-b44c-4f5b-af3b-a6de53f40ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481e9ea3-d423-46e6-90d0-20ce41d018db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6bce4d-33f1-466a-b397-68b37b587b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "10ed6508-747e-41e1-bd6b-26b5879b609b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76f10fe-15fc-4d68-8cae-86819cd0ad55",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8883480-f136-4712-800d-554c209ea8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ac210a-4fde-48d0-ad36-300a5821c0d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ec6583-5b21-4733-a8a6-7bd02321593a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3fbec0b-2f59-40a8-9a98-891ea53ac6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be906fb8-e790-4e5a-b390-6d2f1d064cd4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5852d082-028a-43e2-b538-a44202b0a536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa31a0f-b13e-40a1-97b2-a16e2fb64416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bfc149-477c-4c13-a858-872475f24dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9167c32a-0d2d-4e7c-bae6-5604e65f20b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4a6a0b-febd-42eb-bfe1-a2b1c0c8cadc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747477ce-bfe0-45fb-b5d0-2b39b298a108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ec542f-d171-4484-994b-2ebe9177b33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49d1635-5cd1-4c17-b49f-b9fb8dd2ccbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "68782bb4-cedb-45f9-b0db-027bd06e5280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24e63e1-d94f-4f1e-b794-b45cac3faa25",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5925cc87-b6dc-4579-a8e6-b05bed18b66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040ec384-df09-435a-aa90-c136a464c569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23472373-0df8-4ffc-8395-db268ea9ed70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e53e63f-989f-4c1c-9677-90622d5ac8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634ac196-d851-4f77-9008-13d41eef606f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9966af-8ef1-4e15-a975-487f8336c344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4a6a59e0-802d-4d69-8616-a1e66e913c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51884ed3-106d-4770-b4ee-b2609d6b0d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c015ee6-7dbc-40c2-bf9b-ee0cdf07306a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "90e3e1a9-8ac5-43c9-96ad-25a11eec7949",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d61f156a-23f3-4ef9-872b-37aa5d5c95e4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95f38b6-c875-4df8-aad7-6f06ac97cb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e14b9ad-3cab-4ef9-929a-d4f13a0fa9ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6a4aac-8ef9-4122-99f4-06daff023b6c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c8463a7-22fd-4891-b2a3-b5d84d9ca249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d89f4bd-7979-4c84-8783-bfa7d972753d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec958667-4abe-4d3a-8043-12dbbc284ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "438caf86-e17e-44a5-9917-7dd24ab348ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c3242b-b781-4477-9561-d28f9636d08f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db996ee0-d61c-405c-8704-34cd70f70d51"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "866999e6-1dfc-4152-99a0-cb23182e6b9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0eabf1e0-43be-4792-a9ae-a257ded97914"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "374a11a0-6817-4960-8a21-073654d102e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9ab2f08-2fc0-427a-a22c-ec1a41656b7c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d896af2-969d-4f1e-b724-ceeee3257771",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a1a8ff7e-077b-4ffa-a882-b6cc995ec9b4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "94bae484-9218-4d20-bb85-3f7b0425a079",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "75a60ff2-ac28-4cb6-963c-66967ba0f1e5"
                }
              }
            ]
          },
          {
            "id": "25a20c6b-4db1-4ffe-ad93-ee1efb908b5a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "58ea2232-079f-46bd-8539-79a0d258a8f3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05387a40-b981-4e02-a715-63910fde6fd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12aa4fb6-fdab-491e-a9fa-12159728fc94"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "473bb904-3d0f-4759-a596-85b75902f552",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c859cd92-4c8d-40c5-bee0-0000798ee61a"
                    }
                  }
                ]
              },
              {
                "id": "01e18b96-fa45-4b31-a50e-ba97ac1da2d5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7092f33c-b0df-46d9-b9a8-88c02ee4bb85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c6eb077-c155-4a60-b6d4-162cd9d35562"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcbadaca-bc7a-470d-9f51-86e95c5ae87c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bbdb6d8f-d2bc-4017-bfc8-89dcff6ddfd0"
                    }
                  }
                ]
              },
              {
                "id": "aedc6a23-fab0-4ca1-82c5-78252f24c76f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc044a2b-2c56-4b74-9e32-3e56918f981f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6e6a7e3-c014-477e-a589-4081d4f2129c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efbfbc27-d17c-45da-809d-b7bebea34280",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "82040489-8914-4d0d-8406-a24220cc305a"
                    }
                  }
                ]
              },
              {
                "id": "87edec83-5e43-465a-b7c8-9516fd3395fb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d308b160-fd93-493a-bf62-372f734f7fb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9bee1a3b-2aa2-41b2-a3d7-e5651b64efee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "530ea2b6-6c18-4ddb-9aef-8ed8b94c31d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1bf57b9d-7675-4893-8bbf-2cbc11cbc2e8"
                    }
                  }
                ]
              },
              {
                "id": "2750c6cd-e63c-452e-82a0-5a996465afe9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92b714b0-0015-4573-8d92-6cbdfd62452d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "caffc1ba-e3f5-4156-bb8e-a613e29b8ca3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bd8cb1e-6190-4e75-bfef-44b8abeeffcf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0dfd1606-1266-4e6f-afca-fc329a1c309d"
                    }
                  }
                ]
              },
              {
                "id": "48fb9f9b-243d-4b8b-85cc-7eb76be09add",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68930dc8-d861-400b-8cb7-61c1cbbd9667",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4f100f6-f210-4163-80a1-d9a155741f28"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa15eb75-310c-474c-a0a8-f979e8babe40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b50ad698-3ce7-4fe9-8f59-28c71a793a9a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b63a3913-6718-4510-a5f3-ffc87a37fe48",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d07cf9dd-842d-4a49-9d3a-16fe6f4078f2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fe7d163a-34dd-4622-8ff7-8119f100ffe6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "088998c7-2c54-4e63-a0de-7aa8544a27bd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7e6714e-a554-424b-a42b-dbebb3a89f03",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b99a222d-477f-493a-986f-0d42d70b33ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0627816b-f251-46b2-9f4a-dc4eab6eefb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc367af3-7c02-4a5c-9726-76ea7908d4c7"
            }
          }
        ]
      },
      {
        "id": "39ff66d7-0cc2-40f8-bfee-35f8a5cdff82",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1566d860-79a0-4b28-8a1a-b6346081b020",
            "name": "Negative Testing",
            "item": [
              {
                "id": "613ec94e-4802-40d2-9c99-4d7d50b69cd7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0cd743a8-e61e-4343-a280-2acc8e79e655",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a563685d-2a31-467d-abe7-0908c381f9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0065661a-fe14-420a-acc0-1b2a0b973dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9f5b24-97f7-4b9a-9ca8-1a9edb31c4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "57c10fcb-05d7-4c4f-a248-8d89ff84c1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6126c543-0988-41a2-992f-9a394826f039",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c58344-6478-44f3-8f2f-281d25f37164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e234a5fb-b61c-426a-bd5a-d1fbda09e244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7de9274-97d3-488b-81af-01194515dca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df6fb842-40d1-4812-95cf-5e9086b0a109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b594c5f2-aad5-4b7c-8c16-c13529106391",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809b48c3-fe76-4b27-b773-27a9ce49dcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179f682e-c641-4d7a-a145-e5b52a5e6065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fe2755-3bfe-4b01-8fde-ad56449dfd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2bf4d2d-00c0-4626-90b7-8d57d04e850d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b4c1a8-9864-4061-a2fb-3f0d9ae93a7f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffa78fa-b6d9-418b-aee1-6b14531fd0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c30b5e-bf78-48f9-b9d4-d788d8a5ea1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085693c8-a0ee-482c-ab63-40fea6c9898c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f0faa2-4944-48ca-8166-8281d9693bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b13e4b3-ad33-4205-9bf0-29f6bc8642d1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00658597-e540-497d-a140-a1d119efcdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df76442-10da-4812-9c92-44e28e3cf51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee412594-e170-489f-96e6-7adc049dc74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "852c978f-8fe1-45f0-ba88-0563829c93a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1f113a-3490-4480-9b02-4dd5e9a79288",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612d98b7-e859-4ff5-81c7-e4d9735735dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65cb4a1-540b-40e2-abbc-4b2fe69c4b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb40927-d82a-4ab0-b673-cd64f36f56cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b07c1ef-e0f8-4a26-8581-887dc6e666c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b510fa1-486e-4e58-b294-c83c954bd076",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c941809-2f97-44ff-8e58-14bdae7cdbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81603f73-6510-443d-a4d0-638951c2d447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5bcf8e-ba3d-4288-a2e6-f172e0512b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "05a405b1-76b0-4410-9c61-a5956a2e70c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7949c4-201a-46e3-95b9-4b2b1ce6ebef",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b83120-e491-4485-a946-c1cff84bb134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ac7e83-303a-417e-bfa4-8c20378954bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81fbc66-bb9d-4ea6-8f22-521945224804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "383c259a-931c-413c-bfb2-0b72afde4c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b678ca3-0724-40df-8923-f15f1bf2fed9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ecfbc7-91f2-41ac-aad9-0eafa2ffb40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6637a45-beb2-4e4e-a922-490d3796d4cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc3b427-10b7-464f-b338-3cedc1058e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f60baa2-8b75-4a2c-ad83-d48a6465dbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a5d9e2-412b-43b2-b876-4a563993a81c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20e3e1c-a3cc-4a51-8f25-432cfb6b7e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250bb444-db2d-4b1a-bb19-866d4c16656e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcaf0873-eb8e-4264-9857-7cdcab3c78e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ffdd65-213e-46e5-88ba-03058ee8c7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb014f6-76eb-401c-a226-43234a7cded8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0cded4-d093-4c9f-b024-7a791924cbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc7f93d-7f16-4ca8-bc7c-e82e35fa0a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b1efac-6f79-44b2-b63d-99652b08a912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "515c969d-6398-45ad-9a0e-8c753bf86d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd03488d-c357-4fde-ae0d-46ac930f6a81",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1789846d-2e9e-4cc3-9e2b-669292011ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b45beae-1766-445f-82b7-9da79b5e5c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38d44aa-74e6-4cf2-b390-64ca906c3c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64e76953-042a-414d-9284-fc9667dc5220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb688b5-b472-4707-853c-1ac8d2873288",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2580758-643b-4c9f-be2f-4064ce24c1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea32949-9ef0-475c-9555-47fdc07b1b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd5b05e-0302-4f77-86ed-7aac0e7fec5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f3cc42-2713-47dc-b2ef-088217d0991b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557651e2-6970-45ca-abe0-6d6dd18a3217",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0507c1-1cd1-40e1-8e04-241eeeac190c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c50ce5-7ca6-4346-9d58-db569de54886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75f17f9-f116-42c4-a571-e693a9d96f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "afb5aad5-9370-43bb-8d28-07ed258a2f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9252fb21-0f17-4093-bb6b-254bccaa5ea7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28c61c3-01a2-43cd-a0af-040298d12a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd209d0a-2a6c-4646-8625-cb205043f7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6122ff-7af3-4f51-81c8-366821092bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d35a00-171f-492d-81a7-0bb2e0b7de2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2292b61-8405-482f-b3c7-5e15ec741998",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337ca109-272e-4954-8287-c8b7aeb6138d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea774c50-c606-4443-9c4e-bb75494f373e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d473da-5bea-4a9d-9fb4-ce504180e607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb73457-d6cc-4c6f-80c2-53f9e15ae6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a636c0ee-cb8f-467c-a3d3-04a54c5a05cb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89bf111-f094-4aa6-a2e8-5401ec0a5b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f806671e-6e51-4f8d-96f2-7f9bd1de1e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cb1a54-40a3-4fa2-866f-1a6dc0d9ce9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "905869fd-a027-4f13-944e-42bb92728b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdf5fd8-4018-46ab-85ac-9949761abcdd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ee314c-dd7e-43ce-9a60-9a9c64e45bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e74686a-c2f1-4901-b693-28af9ff4afac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0096f56b-0984-47e7-869a-b6f4218919bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "79bd3f54-3741-4456-b485-8e3ef2dfaccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d031bd54-7ce1-48fa-ac27-ded68e43dac1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af80ba80-8228-4bc5-8b47-29a8ad11dbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbe254a-3f78-41ef-b17d-57b393ae076e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc5a047-93e3-4870-934a-1562ff607791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5193cc-a8dc-46c3-b4fd-4b4df3a3812c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12560ad-8af4-45e8-b847-65864e0200cc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8d7348-aec5-4f54-922c-6ee35f343fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422f0873-6ccd-429e-8127-e96a8a8e1815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea9fb71-64c3-41c1-982d-10ac3f74681a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91775e03-e23d-461d-ba6b-97b2501b634b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8129a872-c4a9-4b75-838a-e48ed132247b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bb0869-2b1e-4c13-a88f-f61621d1a98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6de3a4-8c35-4df0-a98a-c096ff1694d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88f9f30-c578-4bb9-bd3f-efcff3c18543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9a64d4-5c23-4eb9-afb1-e8f6db985dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa7e622-fa66-4e74-9855-a76cb79cdba0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb86084-3899-444e-816f-b5a82c20ccd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6868c0-250d-4c8a-8e91-ffab30fb47c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82401229-442c-43a5-8ae9-d8a0f27a8092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e92d7ee-83d5-4c08-bfbc-80bddb020893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8e5a6f-7f71-4b56-8d65-7fe755ce3444",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d0f646-dc04-420a-a404-9f8ffd5a6166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6902e1-8546-4d38-9d4f-980aa287d2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16d69e8-7f62-4181-b57e-71ec5cf7c2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1db02ed-08ef-407f-924c-707101aa85a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a9fdac-c2ce-4234-a0d2-080b1fd2c804",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2af8de-037d-468e-b5fa-4ef9b27a0b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98458f2-d7f2-4931-9761-6d9885e66dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b05a9a2-41b3-483e-8de6-3f5cdf4b4060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "381a052a-7271-4562-b724-040799656610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a586a5e9-f6a5-44a6-b502-735133328db5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1cf559-1470-4b7b-9ca5-2560d566add5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80387ef5-ea34-4705-a60a-942039762d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3af3aaf-f417-4c84-8b03-c1fc152cfea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26049602-43a7-4da5-b382-cf66f736778b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3767790-3e78-4162-9107-230f8c061410",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d8da93-4d8b-4e92-bc1c-ef6e5626c7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20349cd-4533-48fb-9545-d0f6c3d3c893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1aa7d30-09f8-43b0-a3e6-16e21cfea9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51ab9b30-cbb3-4ca1-b29c-307534dda766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30d2a24-7778-49a1-bec0-f7d941c79d1f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c909781d-85c0-42f0-9b64-a380b2292ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6f1ac4-202e-4a0d-859c-534e0fb65855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70bb8ce-8d0b-4804-a0ff-200f4c67a005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7db3512-a753-4037-b3b8-3c19b006be2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2442a818-ee1e-4272-8257-b763042f7ccc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a834d1a4-3270-4f88-a5ff-a3e2ffb2a820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21df18ba-66e9-4b21-876f-3ae2909c1d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce73e301-35b4-4663-91dc-b5d6dfc7aaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "411b3562-8c07-4d78-9171-ac252cc30876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba6b674-a763-4ef9-a2fe-226559f38142",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea13150-3055-4daa-9c61-42957002740c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd007be-f2aa-4fd8-88f1-1c278ff2ac07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bf845f-4bd7-4afb-b652-cf298bde2600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eaee65a-d913-40a2-86b3-04d4dad7ab36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f75e5c-cedc-4ccc-bb76-c03cf1561034",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab050c4-1120-420a-ae73-989fe0f58cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f66f1cf-5d2e-4670-a4c5-04aedcb657f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f3048f-65d2-4468-b6af-4052a02e52f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fcfb58e-fb1a-4f13-9714-0cdd9f5d4586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1260b78b-0467-45c8-a14a-bf6279a3995a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27c205d-10e0-4798-99a2-0dc2eb5d2241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40b7002-6327-43d9-8f69-a62d659ae155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bbfd6b-21fe-4f4d-a26b-bd90a97ade73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "762e1ee4-aab3-4c5f-8c63-5702a47873e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bf569a-3522-4adf-8970-113a34ffb18a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d5ebd2-762e-4a6c-a174-262a35f0d9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3dc141-1fa0-4a7d-ac9e-77d89bb460f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a1b1a6-c42a-4e48-9c90-be13cefe3a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "303c5515-ce8c-4596-801e-66f75bde675f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "37a61235-5a09-4989-a5be-9fd7e5fa9e25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8766b421-86bf-4922-ad8f-bea697bb4836",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757a2ee8-b04f-44cd-8cdc-b939079492fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c3da2966-744b-48a2-b2db-79a9cc62743d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa178e3f-5a06-4bf9-a5ed-3b1b9037320a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bad73d23-edda-443b-a63a-afe0704a6d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb3d20b-d2c1-427d-b8be-45220232090c",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50437d63-db6e-48d2-947a-1a3be75ce88e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c827a1ea-e18b-44bd-8a64-ca30fa25a09d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51504463-5152-4144-98ea-dad47596b207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fbc0ab0-2155-459f-9552-93fd2e5e3999"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cde67bdc-9791-4449-b35d-79cf0bde9d18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c32dbfc-e66d-4e75-a84c-7f74c0034b90"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f969e95c-b02a-45ab-b1a9-cba5b3278c64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "008d235c-338a-420c-ab36-8a3451bfb5db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "423741b3-cfdd-4684-913d-966226e68de3",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e7d137fa-9f1a-4993-ae22-af3493d20f02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2e373c6-e989-4746-bbcb-c343a6940c8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd18d8c0-82b9-437a-80fd-5a482fb78a5d"
            }
          }
        ]
      },
      {
        "id": "a92938fd-feaa-49f5-a08d-9205c42c35eb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c204f008-68e4-4c94-8e68-4aef32b100e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb780819-bc36-4743-9016-b015604dd426",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2c8c8b33-ef1f-445c-a7ce-1d5d78640895",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5bd5b6-d55b-460a-ab99-d1610aac2cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37b668a-a19b-42b5-af43-dc28a180acbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0142b1e3-600d-4332-869b-dd68a487705b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9301e47f-b5d6-4a52-8119-1ea5ef2e67ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df91864f-63f9-484a-b244-3ff926d335a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3587ed03-3748-417b-be7e-f57c5bd60378",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a86222f-16a7-46da-b973-85f285663459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc343746-8507-4570-8494-9cea72d267e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020a57dc-5a7b-4ee9-b8a7-6a7a549fa3e8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d5f75b-40e7-4bc7-a5c9-d7c02c9f2dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a591de-6e6e-4d46-ba77-0cfb5cacb0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ecec64-8625-49da-a733-d9ab61faf48a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7ca842-6857-45e8-815c-c8e2042d7d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b6cafc-3c53-44ba-b6b5-42cde2abfa14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa70e892-3b05-4c5e-b856-007dac2d8576",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6066198d-9093-4daf-9aff-5b3171688319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec795036-ce88-45ae-8652-870a10823875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c708d34c-7cd7-4341-9c89-4be1b61d4f8c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5927ce67-27dd-469d-93d5-d37a332936e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0845d52-10ad-4e30-af75-06c949fb02bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4db68a3-9771-4ebc-a7b7-0bc1315b645b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1203f99b-7391-4f9d-afcd-7fe7b8be829c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58251401-afc6-4bc6-b416-d1d2d9b3ef8a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a3fdef-5ddc-421d-a358-3af9d998d30d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d42d5443-d248-4974-bebc-416a54151c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acb7352-05b4-45a3-b468-274213c9b0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000d9911-3542-4dcd-9066-c68048afbd72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4001067f-1625-4baf-9f60-63017c531046",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80bfec7-d1fc-41ef-9e82-fbce0e742f65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50fa6a5f-a4d7-4a58-b831-4ec5e6bdbc96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817dee4d-6478-4f54-853f-cffbeccf6a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14e66a0-a9fa-496f-b0b7-1a3d7556e9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955ab004-7285-426b-98fd-77a4a3029cc7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d75381f-5ebf-4c9a-9421-26fc971e4bed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f78b24cd-97b2-409f-943c-ad19e2a20d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ab144b-32ce-4865-b505-43ff291f9090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d3ec54-2f52-4b1f-9892-2634ccd642ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9383c94c-856c-4305-977b-72d8b97a51ef",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f97e39-a948-4b9b-89a4-58901d23a67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a1af0d3-197a-4e42-9d3a-e06a6dc993f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612b48d6-2d4b-4a39-b1d3-5200aa6c47bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a019271-927a-4549-af17-5ba02f79605a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54070281-b394-4c37-8874-f9bc9153ae08",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b2d2f3-6d78-4b37-826a-194b79222304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c9f97c-638c-4ab0-bebf-8dc96eb0f6e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbadeeda-4afc-4cae-980c-09581cfa8958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87887a8-32a2-4bf5-a01b-6a326f41931c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940c1935-0a80-4d31-a85d-6dd20521abba",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f359e2be-0afc-4af9-84aa-500da3ea959d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57323dc5-77aa-4904-bc47-7fbbfa1fb23d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a83dfcf-36cd-42cc-8fa0-eddcbfe7e129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514d99fb-e454-4637-912f-3e93669c9f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4eb695-c9ea-4c88-b1aa-54117d8f2428",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f306fb-b84a-4d76-868b-1a2b4b04165b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b598d6a8-6cea-4224-ae03-513e90b4129a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1c87fe-dacb-4622-b363-9d93b12c2ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81bc3d08-3ef1-41fd-8718-440538708d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cc6527-0765-411f-8eb7-a7516cc7c8a3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d28515-db67-4840-9f82-aa7b158170bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa4adc71-1d80-4797-be50-c57ca29f2209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfcda11-810b-429c-9162-c007654a9be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c691f36b-f009-49a2-b246-5c814054ac49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61a43c7-a67d-481a-bdac-346d288ddade",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d363bbe-c022-4be8-8759-30285edaf8bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0a7679e-0345-481b-a446-f2d86b714982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d78273a-28e1-47ff-8bcd-b54059425b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb689eb-d136-489a-8937-a77fae9fa41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3435ec7c-2ff8-4d7c-b277-574a446448ca",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b4b7f5-3ea8-40f7-8bbe-5fbdd5217722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4426d978-a26a-4352-9009-970c76a4bf08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b8440d-be8b-4cca-8773-16c7c1b7d122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a1643f-ed3c-4df7-ad21-46502969a714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe55ed6-5b18-4960-a038-b2ae2b30a79c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d4e4c6-d866-4ccc-97f5-43076bac58c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83b7ad2-d0e8-4a6d-a523-1820eebc46fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5a47b0-f2a2-497a-b250-a201edeb33fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424a1a2a-a0d2-48b8-a628-73a94c3f3501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcd03f9-6cdc-4089-a54b-3b006e2dd613",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8ee291-7cfe-41a9-a765-f1c8f21ca0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c496c3-c61a-445f-a08e-c7950237873d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "078cc586-4d94-40ec-aa9f-3074212b9a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9971e32a-edae-4d95-a601-7f2b91be3636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e26ef3-7b0c-4bff-a66a-1017ce25a9b5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda9ce74-fbbd-48e1-8aa4-4b29c9f4e4ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85fda6a-9b86-47de-a58d-9d0abdf6c136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03124566-3d6b-44cd-8f4a-ae0a13e5299e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e235da-aca7-404c-b028-c5f391734e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed79cbc-ebd6-40d7-b7fc-60ae32ddd4ce",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174138b5-b188-439d-a235-494a5176b320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c07645-30b6-480e-8586-cedacaefecc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c899053b-8761-416a-b3e9-b87b47e1a8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c75810-fb4d-43d9-92f3-81bf52422116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8e5ca9-11d2-446b-b907-d3051e388827",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d11cdbb-766e-487d-af75-8099cd3ca7db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3e5f4f-43bf-4a44-978f-9e6a3bbb5473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a83cf88-511c-4c3b-8147-83613acb47ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67459b12-110f-4810-b301-a5106e376ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdcb94b-4e93-43e2-9eee-b02396c3859a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fba6a0-d1b7-440a-b2ca-cd4807a09e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c47b41f-8bfb-4dbc-828c-efe13d5196b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4739db9-12da-4d57-9177-063226297e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba3935b-dae0-465a-96d1-297bc58f0c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d4eec9-4f65-44d1-b413-49b9d2150907",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d249ffe9-c406-4a74-945a-d2707fef9fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ab3bfdc-ced1-4681-a9e6-da72ecafaa92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de635b2-c001-4eb9-bbb5-6609d8b34045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aecca96b-a06e-4945-a257-3df51dc3f27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2a0e7c-c0f6-4798-96b5-4a42a3ebcec3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670c1033-80dc-4b3a-88a8-012f3d6d6794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "094775e8-fa36-4573-a500-c49d640f693d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b668bc-c22b-429d-a17d-dccfc68fc58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa885592-4e4a-4685-9d24-e67cb220a965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b21a540-9d5a-4626-b0dd-25a4adb19187",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b61e55c-7975-44db-a626-e46394f7f5a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e5d0bfa-6e5e-455b-ae7c-603dfd18700a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fd69c0-0c54-46ce-a323-87a3ad87c629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4901e6b-61b6-4962-95d2-8bc1707a4786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8325882-d423-4620-8ee8-9c07b7726a00",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abff451-e2b4-49d7-93a9-fac5d8f6cf71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5abab066-a5b4-4cbd-95dc-af89b4a31d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a64eb6-f97b-437f-abae-423a0b967545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3d2fb9-dfcf-41ca-8a7e-8d40e876eb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88255675-d866-426c-bc0e-579db722fdaf",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a90584-e084-42f3-a98a-a431933fe345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb6075b-38e4-4c3a-9817-0f94bb20e816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acf9541-514f-465a-98b1-8bd91475dd16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2011b1-fecf-4bb8-9ec1-302f7ba9cac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae60889-3f74-41dd-a418-a995f3e28a08",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675144c7-4fed-4de6-841e-fc062bbea309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "969c6ab3-6453-40dd-9b69-217985a18d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b2299b-88d3-463f-9db4-1435f584f529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64722716-f15f-40be-b9a8-6881c209614d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbde47cd-3045-4571-a312-f6f859a2379f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b2a1f2-0733-4af6-87c0-0b033a0035c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a79f7488-5565-40c2-bde0-8ff0380d4ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182fff44-67ea-47ac-8d3b-94e80bae9af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5c08d2-4cdd-4743-bef1-051fc17e95e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293fc7ea-3770-4a25-9de0-8c00fae0d587",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34a6554-8ace-4401-abd7-4ff5d3c07d38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09356989-df51-41ec-9723-d21baddb48d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1d80ab-8dae-4d7c-ae86-9a902a81fbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df51630d-9d90-4ab3-ab1e-7fadcf0fb2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1a5610-a9ef-4e48-8981-62d32b342455",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513a4f64-5124-45e0-9182-9e33f0afd94c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1026abf-6f63-4334-824e-7441e9890914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51208f68-1c7d-43d0-a5e9-616fb67fce89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eef0a1d-1b57-4eb1-b848-672d12b3b4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f25a296-04b3-40a3-b132-df1b8bcb22c8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a515376-90f3-4ba6-ba63-64e1446b9fe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07384b25-0784-4e54-88a9-dafa4bc99d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3237da1a-2c50-4014-a31a-e68510bb28b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8659a66-49de-42d7-9b49-3eb705a19723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b549c25-83d7-4302-b053-3a6f04712998",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa6cf17-231b-48d5-b6b3-b2eec56d8573",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0034560-7403-495a-840b-5cce3cbec810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4061b69a-ae58-4eb9-b9ad-bf064d27dd40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d05c02b-1c75-4b27-a5a4-cd30bfa7f278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5ba91e-d12a-4490-8d36-f18dfbb5c5da",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c7887b-1be9-4218-8dbe-00a3f47ad6f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf84d9c-1e54-4f84-8ba3-ac7fc491988e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13ccddb-3ad3-4576-baab-6fa574f5a34d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900c56a8-b20a-4ce5-adb0-d56f7e102686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b058e03f-7780-458f-b43b-3db557bdb461",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71576bcb-e1cb-4b11-a93c-80dff2449a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf248c30-39dd-4a16-a021-c7fbc8712b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3dd2c86-cad0-42ad-80ff-0d9c86c9c646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc117df-d782-40c5-9065-df2119a8a117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3284a82e-7599-40bd-840e-f732a767e41d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f532acd5-4755-4dc8-bf2f-6a16b21441ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e887928-a5d9-4687-bc79-56b1b103ba7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5644a2ea-c1b4-421a-b235-7eed8d3b6332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f642526e-bd09-4701-9240-e27aee93dc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0d01df-de57-4ad7-926d-e937ad3e14c6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ca7077-a180-4e64-a5fd-3e44273c828b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0aef6e3-2aab-4db7-804f-4cdfbc208a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbacdf78-c628-4a4a-bbc9-a965022fdb44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cbca8c8-129f-400f-8cd4-2181d1d46aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eed2bd7-1fba-4bd2-8e4a-7030e739c750",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3979046c-9571-4f64-a9e2-e4092df40a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b6613e0-7f0d-45a8-aa38-ca6b67dd3158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d941b1-988b-4414-b0c3-45ed59285fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5899956d-c242-406e-b666-6815835a8a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831044b8-62b0-451c-8012-6d3deb706d51",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f148c17f-ad00-4359-94e9-afa76d455b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765890a8-f156-4a34-86b9-4c0b32608838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4ee568-30d8-4e14-be13-cc01139bb96d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0067eb67-81aa-4e84-a274-f9d18dcdd19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefd49ce-6a2d-4a9c-9e6a-01656a6aad22",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d227f3-0eb8-48e6-8a91-f108530c8389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed928cb-1744-4013-97eb-1e23f245cf00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "421ac6f8-858a-44d6-9795-99b6cfdf8c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f9b2e4-07d1-444a-80d6-f9fd9d64965b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c77dfdb-0bf6-4d16-9db8-43e1458c9d37",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d77f06-5a50-4c25-a5b2-ecdd460e45df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f109bfba-2906-433f-a92c-de171a6647c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "641345d3-c820-4ecd-b922-685ac428b3a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1b49d4-0577-490b-bc2d-70a2e57ab1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dd2d51-cbea-4507-87bf-1fe4a7573264",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ce92fa-ecf0-4bb4-bb11-6459fc233641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86a1bd5-d616-4eeb-abbd-1c004f74e594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb77166c-4693-4477-809b-02d8d0fffbf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd7dfc9-a3f1-45eb-8d42-8dc0d9876bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9fe43f-c7c7-4a6e-9ca6-c54e90cf0e5d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9dbd5e-73ba-4a34-b961-1fa19fbd1257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1197ecf-8326-4843-bebe-1cd7c9c21bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eaa9438-0b8b-4571-ac33-45d152b4b019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082413fe-7194-4798-8725-e310d6b7d4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede826de-2152-4e49-8413-7177af86611f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7bceaa-db5a-4241-b306-66c52c013eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6c41a6-e4e1-44be-ae14-1d08ce0f4ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7f4355-3d78-453d-a150-0bacd0200c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f39094d-0696-4ff8-93bf-bfd775e448e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0721df9e-4bf3-47dd-bb62-b6e9780156b6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a4292c-9d64-40de-bc23-62b1472949df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29930be8-d643-4756-9826-d7a3ce39cb9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590968cc-c450-4636-bef9-ab1ff5fd2141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6397cea9-7c9b-471b-a377-223cd8cacfdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d24bfde-c13e-46ea-bbb2-870da33f5905",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8620a5-35b2-4f47-bdd5-c9cd92ec8916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906db102-bb8d-40be-b344-6ece07db4a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea7de3b-31f3-41d4-9882-1261d3349636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e137147-e227-47ad-99f6-b5e7377b7ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b2646b-137e-4384-959e-8625200c054e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c389f605-e247-43d2-a2cc-4082467a23da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ba8828-1bf8-4569-9e80-c469f52909ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e330d7a-b022-4cd0-a8fe-506dabf214d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dcc3a72-cec6-4240-86f0-410fca6a4958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78705800-8165-4cfa-81af-1569c413e233",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4f959d-7506-4174-8017-472e06de7cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2165ca6-cefb-482a-b64a-4c5f8c2cc6da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3026ab6f-520c-4fcc-af73-e53381f7ed2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dedeeae-d172-4813-9749-4ac515e5b2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558d4173-283c-4b91-86ba-ebacd2da9e18",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2702bbaf-0f13-4223-836e-f0f72894eea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94aca11-5ce1-4653-ac2b-3b0ab3d99ae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f4a047-677b-4646-9de2-43d0c7f6e72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f81e23-0c2b-41ec-a997-550455236f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b143a44-866e-40a5-b577-9e881180c277",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3458f7c4-6f73-4937-a985-b6486529c72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7954eef5-6588-4e37-84a8-fa6dd764502c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3201a0b8-97ae-4b3d-885b-979239250e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5c4fb5-d550-433d-bb60-99e6b39c0ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3c1c68-7617-4fc9-be77-2ba5ac978d8f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274532cd-0c68-4504-8268-d9a1b00d33a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9afc2f-2088-4d63-9ef3-472bc7e094d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b29b276-eae2-43ad-8404-86bfb45a69a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5027f3c8-fda3-4a3b-9d1a-8d6c2b2c170e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b084cd-fe93-4cf6-9a11-bb6ecb6a76dd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68da1186-9f3a-425f-bc50-9d685d899110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffae7c14-e80f-4d47-8c3f-b7bd4b2cde62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6106267-3c7c-4bd6-8de6-ef21e286cd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583d0a47-66ca-44fa-8343-2a224a96a924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e3422c-ff91-460b-8e92-043e85f4609c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc9ff35-8721-4b5c-9113-88df773de47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192fc850-d9bb-4f24-bc3a-f7ef2fc65db4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2387a206-1817-4fad-a04a-f329670a834b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aac152d-afdb-4e3d-8a5f-8753712703ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa696cfa-c5d4-4d71-8554-9c91d2ce4b66",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bdbbf2-d61c-43f1-872b-79a6c338d17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef28a0d9-839c-4e56-817a-621a1a7bca6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ef9b7f-610b-4dea-ab99-8b3ffd707d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a91ddb8b-5d66-4b21-a1e2-7e9dfa024c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc7844f-3921-4f1a-a01e-6b9f0c14dab4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff03895-021a-4e13-ba41-361e340395fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ee2d23-1f1a-4a19-bf37-018621865512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "679cbcfc-c5ed-436b-a9ab-bde6a932fef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6734a12f-1408-4db9-82d3-c721a0069e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b225a1cf-e9d9-428b-8fdd-9f93648fbe2f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b4a676-51f7-4558-94b0-c80e2d53764e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b269b68-92e3-47cb-abb9-d4f1602639e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1e7f6d-7706-4dd4-9780-5d6ba8b337af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d41a734-0d0b-4dbc-b2d6-188d01bb212c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268fcf63-bc51-4a8a-8bf1-33731af5f30e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5c1aca-e0f5-4944-b276-c642c5707d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec7dcb7-c5da-4b59-b53a-51842592a1bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955f9e44-0755-4643-946b-7f7166ac6b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14391adb-7022-430c-b77b-a77f08d8e4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8d3443-9227-4a8b-a868-a7f955674ca2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a656c10a-4930-4965-834a-3415950a97e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a196b520-0269-4866-b812-216b908a4588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea35b183-10c1-4541-9295-d24189d74927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aedb1b4-0b9d-438b-ad64-d173799be60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec78975-8363-454d-9af3-ba9447db044c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d42b2de-6501-4e56-8c9a-35ba860f44e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b365ba-78b8-43b4-83c6-b405c8ba1bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba60c0a2-2593-4e44-9860-c2b4aa6e5659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a10414-37f2-4d9a-94f9-82848b65276b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eca9d58-4aac-434e-a102-39d788396009",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eaa33a0-3ab9-4417-875a-5a2c7d19ba72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b4ee8a-cb38-435a-870d-332ca2feeabc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fd4ba0-68e0-437f-835d-88263d68a67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7aa0149-81c0-4bbb-8b2e-2b48f0f4508c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e649f7ed-a96d-4d48-9dfe-76052d56fb38",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed42ef6f-2f5f-4f60-a5cd-ec74572f700e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af85cd4-1a1c-4f73-a2c1-daa06ba1388a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95867ca5-e829-4de7-995d-2f64bafad9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db843502-09a7-4dfb-a410-c1516faf35c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3af09ea-c7b4-44d3-9a2d-9cde8f72f871",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c565f471-45ed-4d46-b028-647edd72fb79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0ca737-11a5-498d-93f3-01580e2744d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c7c5e3-cf45-43e9-84be-61011b736252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2831bc4b-a061-416c-a5bd-f99b3f08228a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac90e11-9eef-41cb-afea-a31e4ff4490e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7401b5b3-8e01-4f13-85b1-4708ae683dd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e763b6e-230e-4812-b1b8-2c15b426b875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5931968e-87a2-4e43-847a-9a0d6bd92a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aafb900-f7b7-4e1b-b8bf-6a5c6337e7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c275d7-c16d-47fe-9c5d-eea0200fcf4b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9b4039-faa4-4bab-a4a6-4c03536b6fc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51dd43f9-9010-44b1-83bf-03ec2e1db89b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f8731a-2784-4687-b9f4-ccb63069e34d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22176756-63d0-40cb-9deb-3ef01508d853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfe0b37-d640-4425-adc3-2d22fdb231d4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bcab61-4f08-49d2-92f5-da63931ad1cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "753ae9c1-46f6-4bdb-ae83-51b6270f9031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3696e0ae-2c92-41cd-995a-48a33cd5e081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0940d5-d92f-43db-bcb7-baf6794fd838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f06584a-8682-4958-8ee0-ec45718235ad",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4512bf-1327-4019-bef4-9ca20b7681b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "522229dc-621e-4260-94eb-6eb55dac56b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3664b7-18f9-4de1-8086-542b13bb9774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6e66d2-60d5-421a-80b2-ee542488b55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe67dc6-0ce4-45fe-8dac-77faaafd8e89",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ae1d31-088a-4cad-97bc-ff894da50dcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faa5b326-d2f1-40ca-927e-44c84f00f83e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0624c082-24a7-4b0a-9e64-fcca646a9778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01182fe1-e777-4c75-a785-48566f5cee22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a3aa5a-f0f7-40f9-8749-351e4eefae83",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c49dde-f802-4785-9d98-a7c9719b15e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a9597b2-2e77-4ced-8349-1e1567d035ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c9ead4-6506-4d71-a3c5-9840a2596e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a1f958-b30c-4d00-998c-d99fd8785e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0d173d-c54d-4e8a-9fb1-128fed5e7c8f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea335fd-e24f-429c-896a-3822b9410d43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5a6fa5f-c527-4742-8037-7af3c6ccef8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9684d5c3-1a26-4697-96b2-de68a6658771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c4ea05-08a7-4cb4-9a1d-f8cf30b7ecf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ce9a44-6285-451c-9de7-a2725eb6f15e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676e661d-e1b9-45ea-a8e5-180d21fa75ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae4e85d-2fa8-4ae1-b196-4fd649e08555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9429c6-6a8f-44cd-be72-b6a88322854d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1284a401-8a11-45ee-8fa5-0f1db2787f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf99e04b-9048-4544-923b-6bdfa1b96bf8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8915f8d3-79d0-41ae-b76a-938d3805ce3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f6e1ee6-ab44-4c14-be39-856e92e63afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "221900c9-8bd0-457c-a7ea-8c744080d796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd09a0e-8531-4c92-b71e-63a26da7cc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aedc763-6d48-431c-a736-dbf5e77147f8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b72f068-b7c5-4f80-a055-8ce1c658819b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62d5d8b1-fe17-4aca-8c72-bbdc62c595ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef965abe-13af-493d-ab3a-d911ae1b381f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949dc522-2ebc-4880-a945-e20c999da74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdc2bb4-d24a-4a73-a3ee-0542ab32fd3e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1455bcf7-5b19-490f-bcb3-18d8a0062770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f21c2f8-f8d3-4e49-97a8-92bbb5956639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1b788f-67b3-463f-8ca9-a071ef3fdcb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca5420c-88e7-4fdb-9cbf-98149466ec18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cee367d-084c-439d-b751-f6e69386dc84",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7b60cb-83d7-48d8-990e-3d54486a10eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54d826b3-8835-46d6-8abe-69df247618a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf3bf81-6b73-402b-81d7-e0ef18782bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75084df6-6fc6-41b3-9acd-38590adb6fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a51bd76-120a-4178-8f44-f5c3343c94b8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35a5a56-2682-424f-995e-f027f2ae98bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a74c428-547d-4457-973f-c13c43e7ae29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd26e61-acad-4d9f-847d-fcf62e2a45de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ccce7a-e3cd-499c-8b1b-4141ccb68825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff0905d-7dbd-4e5a-a042-009b13512840",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00faa9f1-1f75-4849-acc4-bc63527d363f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae17b2f6-e05e-474f-8ac3-eb966b75cfc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb5b04f-2b33-45cb-b789-f3f7551c1692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4475f28a-7b34-4191-b509-4d8438cab77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041f97a5-5a68-49e4-9d25-de091bf85288",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c780c356-e320-4bc9-bbd5-b456d53c53d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a74c1532-64bc-41f1-9069-28c0984d19d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "454882a9-79b9-4149-a967-af45ab91c66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43645784-85d2-481d-82d3-ef97e85807de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2128268d-9dcb-44a8-857b-c4a428cee395",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5795764-f5b1-42e8-9a77-81e1d9af43cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eea7c71-0f8d-41f5-8904-36765802fbb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca545b00-a233-478e-8004-f39c31c81b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ee26e6c-2145-46fb-8230-5c910da6bcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8c4d94-6633-47a7-8c3a-4e41de3b36ac",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8405a44-7356-43a6-a5e3-4f1a5a0155d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a401caeb-9300-4f9e-8a83-3349f5c41803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a347f43b-ecf0-4125-b7b9-e28bc1a8402e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e47644-e39d-4ec8-8302-f209236919c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1489e718-d81a-4a5b-bf1e-5bd032a4f6f6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f6166f-fdfa-4b67-be99-ea55fcd0b329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "403ad78a-a59d-4233-97c2-387e5e360c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e6b610-64d5-4516-965b-89f4caa47b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6377db67-e681-4f8b-86b3-dd31e5b06471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e190a6ad-f664-4292-bf6c-b443bc5b82d4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6774fd84-416a-464e-945a-64c423f9fa0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "927092fb-af64-427e-b36d-71144ea4896b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb4db20-5a99-4c5d-b137-7f3d46ad8f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14782a6d-00e9-47f0-b45f-571f3e42b188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e4b4ea-9aa4-44b3-b1cd-6551e3a95b47",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53668910-4e0f-4f57-a54a-df889f2e44e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d68e89af-cbfe-433c-9141-a3244912b38b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090d0682-961d-4da3-81fa-cf2933d78079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2629cb6-0bea-49aa-8f9d-b1f7d521028f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a44c9a2-13ef-4f7e-8ac1-c301be492629",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e722b0-6cff-4b98-b7b7-c87f2d2e02fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55736240-6713-4c31-ad1e-f3592ee79cea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abe7cc4-db63-4b9d-b58e-b68497a26b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcdea2d2-5644-4068-97bf-88c3f67c3179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7464e79-8af3-47ef-aae2-1f2428b15b31",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22eaaf69-4bff-47f4-995f-e8cd9aee50fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8bf243d-1537-4456-9517-3b34843188a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c4bf18-7fa2-42e8-9a86-91a597e7d7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f823e53-d01f-4954-bbdb-5f57ad4a14b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d157a59-8f79-4c3c-a5a9-38fedaec7916",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b31ce40-a410-436e-bffb-4626c024851c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f54faf8-562d-4ef4-9790-b448feb55520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd195fd8-80f3-4c1c-8f40-2bf1d5da2718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d5d2e1-087e-4c06-86e2-210fded248e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1839ede1-4e90-4b59-81cc-8599d213d103",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e23f47a-a065-44ef-a65b-ed3920b2fa92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "432f132e-4e32-4df5-b816-15da4a836db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d485540-4587-44ec-b774-5e319376cd70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8890006-e05f-4ad1-b1c3-f7af6967b3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691c302f-7e32-4eed-840d-a8d886e8ad42",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69aee4c8-ece0-480c-8c25-420e51381c09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e6f1203-a8d1-4f44-96a9-523406906161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb8ed58-899d-41fb-bb55-092306ca743a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e86455e-5f8f-4ef7-a62f-0371f8960b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521080e9-6f2e-4b2a-9669-d312648b7bff",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7137c514-7b95-4c0b-a979-773e1f9a4aeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1cd980a-44d2-40b6-a4d9-5cd789992fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d75f96-e221-4064-9377-c56d78001c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4d5631-17e8-46e0-a660-1156dd05de51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b86c41-bbc9-407d-a0db-f77af3858f52",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df70c1c6-8077-47ee-a8ae-4e5d8566574e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1a162aa-05f2-4d4a-8f3e-97b4c9bf8b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d5be70-99ac-4dd9-9ee5-de5e3d801770",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9d5234-544b-426f-b2f8-870f3d0ba125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8653a2f5-d966-45dc-a2b8-204330fc9aaa",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a495b7df-f007-4857-baf7-1e24bfb47d53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f93d2e74-ec31-4257-9311-d273352e62d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47c2cce-592b-45e0-83d0-2c2df794f5d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f8733e-b81b-427e-8211-949e67cb2289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f8b054-6556-43fd-beae-fd246c0b2e23",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793c5b74-1190-4f65-8952-fff08b67bf20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e80035a-66de-4c5a-9a3d-978d40621e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9ff248-6ac3-4ce4-b28e-fa001cb7b772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd15994-239c-4f08-a6df-ca4e15e7b5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6032f7f-da09-4189-bd26-48b176d45943",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9946a6-bbe4-4ed3-9273-0b22d98e5ed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d343e870-016c-4182-af2d-59313a4d5b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af54fea2-18dd-41e3-a478-7fa2a47849db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fdf4a9-3491-4932-bf05-e290fcb378a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d02d72-033c-41ba-9d72-c21ab332ca63",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17a982c-cabf-4814-ad9e-aa49f6946dde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8cc9f5e-125d-4ca5-b97e-1b945e95e031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b820c5be-4359-4630-88c6-163141097a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb50b3d-ed36-4121-9bb5-53767705e99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d034388-eda3-46f1-81c3-e474af98be12",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c02adec-1734-47c7-87e8-88bacfa4982a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8869e3dd-e317-490f-b4ef-7e1cdaadc16e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4a54ff-d492-4ce3-9291-1025291d692b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4c2d57-8fa9-4b56-9eec-9f183f9c2f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b872f0ba-9908-41d2-9c1a-2fec21dddbd5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5162df27-1733-457c-a917-eb7660be4dcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e68fba9-8b41-4462-a41d-15f50ce36c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0c1cc5-1d37-44f8-87e1-db75427a023a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c227697e-c570-4aa0-80c8-42bf8468e04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae6eacb-ebb3-4326-840d-3d4b7983305d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb54043d-6166-4ec6-91e3-292f2f99ef10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b17972a4-5300-4598-aaa7-5443ee56879f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d979a2cc-ecef-4adc-addc-20140176fe8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869a3ec7-82cf-4e31-b19f-9c7f93cf8863"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19129c12-6b1b-4f50-b7fe-bdb29fff897e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8d13e9f-5b97-479e-a155-79a5cb0a2616"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ad76778-8f55-4c8c-b368-20b6ee1fcb63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8d809ef-0bbf-4238-adb6-2c6aa68a264c"
                    }
                  }
                ]
              },
              {
                "id": "cd829773-4639-4a5c-a1cc-a9a6737bdb59",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b167a6ca-e39d-4ad6-9cae-1ca054abf931",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b131b463-fb10-4559-a2c1-f7a21a75028e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e3190b69-7c73-4cf5-a34c-32ff53f65eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b99048b-a99c-42c7-b695-a19703c5bdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c3eb75f-d9d2-4bf4-a15d-28f4273a9846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8089c187-75f3-4ff6-aab8-f87702057291",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528e4520-7642-48e2-a251-ed63aaa1cc03",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "63888a69-116a-417a-b6c3-e97ccb4aaa50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "672aeab2-d998-4bf6-9879-c65e35b779d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "652572cc-e97b-4001-b177-ea22151cb69e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "642ab620-a9ca-48a5-b576-dd302e5be045",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b00ba62b-5827-4005-8799-b2deb1c012db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "103a3d6a-5360-4fca-bec4-1676f7d38e1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a22a047-2318-49bf-8376-567f7695a888"
                    }
                  }
                ]
              },
              {
                "id": "87981528-caf3-4906-8b84-3273a81e014d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a9d46cff-fbd4-48ec-9405-0633680b8444",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ea3746-86d2-452d-9076-da65094aa767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "40de8a25-db83-4347-94f0-12949eaa9553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed702481-f077-458b-a2fd-c117ef673b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8913b54c-e6ef-4b5e-a98e-65cde096032f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2fa04739-f3c8-474c-a585-d8825412686f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ccfbf5a-6d30-4950-8706-016a55bb423b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "362f683d-4969-42b5-ace9-5f59944295e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "373219ae-049c-44fe-bdd0-fbc3ff7635a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ee51483-a4c5-4fdf-8fb9-0190e62ff4c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ab08947-615c-45f6-84ad-e666e736f683"
                    }
                  }
                ]
              },
              {
                "id": "be2b5b34-b9ab-4418-a491-0409d161dc3f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5e1134a-be69-4726-a363-bb15e1e6ee31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dae75c1d-29f5-4f07-93e8-388de03c1a58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4dee16be-9ccd-43cc-980b-9ca3122c4bb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5942c75-5795-4c8a-878d-37229330c3dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2897839-a02f-434e-9123-8cb5b8d48bb7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5679857f-1fa3-45b1-b1fa-675bb8d006fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43fb5148-6531-41e9-820d-6493a6e69c1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b49ef7f9-507a-41e8-a60e-846d9cf91ccf"
            }
          }
        ]
      },
      {
        "id": "76d1497f-827b-4624-b748-bf0dc971f104",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e20e8ec1-4615-44d5-8181-d36d0572c33d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f6b9be7-315d-42c6-a84d-4bf8544efc53",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99a24304-8eb2-4bda-82dd-1bc7ec31513a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece7e14c-8a90-4446-bae2-ee5d71d2cfd6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0a4398eb-8f30-4d7e-b220-82a46210f691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea3177a-3fa0-483b-a6c5-f6b48d0a2247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e54bb21-f2e6-4931-a3d7-f27936b26ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78c5853-1a62-4b19-a19b-5da8d727285f",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8752da1-4166-4d7d-972b-414d1a79292e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2e8378f8-dca6-4250-b98e-944112441290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6ce9e5-e9d2-4178-9a4b-a5a64667e92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cd84626-c5e6-47af-ad8e-4434c3da9aab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5db2a090-6ee9-4048-a840-f0a99fc98bf6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cb05c4a-5102-47be-8cfe-75bbe489a175"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfb11f8e-76a3-4a51-8536-666b826a3c46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07490ad7-2459-4b83-b799-d76b148ca72d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff743590-b4a6-4f64-9920-fd337612e356",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7d8e26cd-b07b-47ce-a81d-ac924bedfa71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d5f2fb7-48b0-4be8-b2c5-2e9c64b38ffc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16ebe710-5690-4ac5-a36e-f9e8bac4c017"
            }
          }
        ]
      },
      {
        "id": "7002472a-896b-41eb-a04b-fb9b661cea1f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5dab6d37-6856-488f-a0b9-6bdec62206ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b488ef4-18c2-411e-96be-2f60ee51d5d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8106f408-0d98-404a-8bdf-e2af948bd88f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd6877b-7eb6-4b18-822a-cddaa93cc0cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbc1427a-c148-4b2e-8f4a-8af5efa17d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228b1216-9dd3-4630-bc28-d53967a22fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0edd34e0-3827-499e-ab6c-3ef8cf38853d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5798a68a-0d43-4748-9499-8a5323dcd5b4",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3024e99-ea4e-43b1-a534-e1a3a8ab5317",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "29597c52-4762-42ba-b817-88d3cc205b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7baef9bf-002e-4eca-b235-17e111bc8013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3df53b8d-1aa0-4fd3-9f40-bb2ded991ea6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fb80928-4d60-4051-b222-5fce678ec81d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89b26992-06c6-4711-ab1d-b0ff16b25350"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73bafef7-eea8-442b-ac6e-58678fc4cda7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "869c648f-9697-40db-b54f-a71efcb3affc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9039c038-4dfd-49c1-9348-719d56e4c69f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "19375c4b-1b57-4a94-bb87-53d5eef116dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "259139e1-6c48-4d50-910b-10cab771d52b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e365bbe2-a588-4c36-8a23-c908939199f5"
            }
          }
        ]
      },
      {
        "id": "28315c93-c3dd-4b86-ba20-78d25fb778ce",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b3223466-a1ce-4970-86d1-8e4b8464e3f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67ffdb1f-6870-4701-8ca4-6591af832e10",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3775a96f-eb91-4293-926c-ee81f764864b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e97a5a0-bd08-42ac-a639-64b4292b696c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d630f24d-78df-47fc-a1c1-7a150c0bdef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75a348d-0dec-4351-9207-6cd9fb0303a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d88e752-805d-4fde-91e3-5553bb825666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454a417b-ab40-45e3-97ce-67fd38bc088d",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7098cc6-11d1-49de-9b79-b4f71e557d0a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff7c115-8ff8-44be-8461-c4b0ea6f917e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e108735-4bf2-4db3-aabb-9836c0a50935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5af09213-8f36-47f9-bedb-0c0385a796ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "457f5175-87ae-42e7-87ac-826eccaadf65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82ce1786-dce6-4c4f-a8cd-4491fd28fa5a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d919aa4f-6cde-41ff-89c0-344c4a93e1f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a934fea3-dacf-4d15-8a1d-c12af01494ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd977f4a-b827-4dfd-bc07-c4e522a371e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9a68f55a-23ad-437d-ba50-9c8893571b76"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5777a3ba-4f59-4552-b7f1-4413f156eeba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "324df6ab-0249-41cc-88dc-84d71937b9d3"
            }
          }
        ]
      },
      {
        "id": "53dda1b1-6d43-42b7-8238-97c587d7ecba",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13f43e4d-229a-4f6e-954e-9aa81e61e78c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5381f3db-c644-4208-8c72-0e14e7006d6e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f2577406-be97-40a3-99e2-7180e964afcb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfb8abb2-7200-4c93-aa98-3d11bfd16e09",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aeaa7d32-a29e-45d8-a6fd-6342bf857c17",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 41.111538461538444,
      "responseMin": 18,
      "responseMax": 477,
      "responseSd": 46.529468139292575,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679791250070,
      "completed": 1679791271101
    },
    "executions": [
      {
        "id": "ca8d1069-a589-4b1b-9ea8-8ebf92fe2b49",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6f525f95-0867-4a85-8be7-bac46af14b34",
          "httpRequestId": "96fa3d97-5ad3-4a63-ac27-5ec978f3256e"
        },
        "item": {
          "id": "ca8d1069-a589-4b1b-9ea8-8ebf92fe2b49",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fc323207-41ef-494f-b294-31818c941491",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 0
        }
      },
      {
        "id": "f940e955-11ee-47c0-b3ee-ef744efa18b6",
        "cursor": {
          "ref": "f07a48d2-c52f-4f68-aa7a-5d0b94a75fa5",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0bfa6016-b2da-4c19-89bf-09d4ad813d8e"
        },
        "item": {
          "id": "f940e955-11ee-47c0-b3ee-ef744efa18b6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7135c563-69bd-463b-80c1-e522a543afa6",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "62a04092-4ec2-428d-a2f4-27f79728c088",
        "cursor": {
          "ref": "0ca2f8cd-82f0-44a4-a1eb-ff3cf6efd8ab",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e3c05002-2728-46d3-a792-2127a5ddf1b1"
        },
        "item": {
          "id": "62a04092-4ec2-428d-a2f4-27f79728c088",
          "name": "did_json"
        },
        "response": {
          "id": "bd704617-39d9-44ae-9ca5-eba01f66cb06",
          "status": "OK",
          "code": 200,
          "responseTime": 149,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72a3c5f-3ab0-4d41-ae66-dcf60b393b86",
        "cursor": {
          "ref": "86c6c266-20db-45bf-8469-df662411e179",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4d865924-ab42-40f4-9a57-0961656af6c1"
        },
        "item": {
          "id": "e72a3c5f-3ab0-4d41-ae66-dcf60b393b86",
          "name": "did:invalid"
        },
        "response": {
          "id": "cf54e6e5-861f-46c5-9ab6-af807dc4e47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72a3c5f-3ab0-4d41-ae66-dcf60b393b86",
        "cursor": {
          "ref": "86c6c266-20db-45bf-8469-df662411e179",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4d865924-ab42-40f4-9a57-0961656af6c1"
        },
        "item": {
          "id": "e72a3c5f-3ab0-4d41-ae66-dcf60b393b86",
          "name": "did:invalid"
        },
        "response": {
          "id": "cf54e6e5-861f-46c5-9ab6-af807dc4e47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7f8ffc-e309-4200-b273-74e89f8626f6",
        "cursor": {
          "ref": "5949e3fe-f0de-482a-8764-171746f50ef4",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1d41bee4-5006-4860-9d73-e3b688b84a1c"
        },
        "item": {
          "id": "9c7f8ffc-e309-4200-b273-74e89f8626f6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "640fde7f-801e-41a3-9538-3edf4bade4d8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 139,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467e6511-8f8e-4990-a0c0-af37e7c2ed1f",
        "cursor": {
          "ref": "8bd36fb7-db72-48b3-a29c-5a5cd6f7810a",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "97013bbe-7b0d-4aeb-8d56-05c0b4072572"
        },
        "item": {
          "id": "467e6511-8f8e-4990-a0c0-af37e7c2ed1f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "44a3e845-0d9e-4a6f-b158-b714ff6452d3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a27c1e-eedc-4509-a270-6ed28e144732",
        "cursor": {
          "ref": "147d76ef-b8df-4fae-989f-7cca59425947",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9d0796ab-9bf8-4541-b797-b6796cc19a03"
        },
        "item": {
          "id": "46a27c1e-eedc-4509-a270-6ed28e144732",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "61a26005-1c32-41f9-b149-a2166622c7fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5075e67e-bc6e-4898-aa48-408a46208387",
        "cursor": {
          "ref": "4326ebdf-5ed1-401b-b3da-a36091882dd1",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "df7222cc-abc2-4888-a9bf-2799f65d725e"
        },
        "item": {
          "id": "5075e67e-bc6e-4898-aa48-408a46208387",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "79333313-4fe5-4b5d-8244-043d529be576",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5075e67e-bc6e-4898-aa48-408a46208387",
        "cursor": {
          "ref": "4326ebdf-5ed1-401b-b3da-a36091882dd1",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "df7222cc-abc2-4888-a9bf-2799f65d725e"
        },
        "item": {
          "id": "5075e67e-bc6e-4898-aa48-408a46208387",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "79333313-4fe5-4b5d-8244-043d529be576",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1586dc5-7145-43fa-86c5-3c5e677efae2",
        "cursor": {
          "ref": "65e4163c-d216-4956-be1c-0d503d2207e6",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "88a661b2-1e92-4ccb-bd73-d20ea519ab5d"
        },
        "item": {
          "id": "d1586dc5-7145-43fa-86c5-3c5e677efae2",
          "name": "identifiers"
        },
        "response": {
          "id": "1d6ba683-f475-472d-a3b1-9f2fdda2e8da",
          "status": "OK",
          "code": 200,
          "responseTime": 213,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b0ddc2-241c-450d-94d1-946abb1f65a4",
        "cursor": {
          "ref": "ef844c91-791d-4501-917f-ea137b7e93d2",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e8afa1b7-d0ea-4758-bd77-e18100dfd309"
        },
        "item": {
          "id": "b4b0ddc2-241c-450d-94d1-946abb1f65a4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "85ef5774-ae26-4b52-8ab2-edabc4c15d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b0ddc2-241c-450d-94d1-946abb1f65a4",
        "cursor": {
          "ref": "ef844c91-791d-4501-917f-ea137b7e93d2",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e8afa1b7-d0ea-4758-bd77-e18100dfd309"
        },
        "item": {
          "id": "b4b0ddc2-241c-450d-94d1-946abb1f65a4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "85ef5774-ae26-4b52-8ab2-edabc4c15d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf458eb1-059e-4975-86cc-962f112d128c",
        "cursor": {
          "ref": "78070ff2-ad0a-4c2c-b109-94ad36b136ac",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "88ec4fa1-2d52-4d30-b299-97e4e7949aed"
        },
        "item": {
          "id": "cf458eb1-059e-4975-86cc-962f112d128c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "921244e3-85b2-464d-9904-4819813cffb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6b2a5e-f64b-4424-bc7d-e57d1a8587b7",
        "cursor": {
          "ref": "ba0b0a75-6826-49c7-97cb-5e16799ebaab",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "663b52bb-4c5d-4f25-8d3c-d21a3ecad946"
        },
        "item": {
          "id": "1b6b2a5e-f64b-4424-bc7d-e57d1a8587b7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6268239c-2118-4a06-8bb7-bac6aa891620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8437e5-415a-4711-a52c-79e047f7f40c",
        "cursor": {
          "ref": "3c58465f-81b6-4eea-a224-a290e7646c2d",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cc53fbfe-b5bb-4876-ae14-cb3d10d56899"
        },
        "item": {
          "id": "ff8437e5-415a-4711-a52c-79e047f7f40c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d52a1d8f-915a-43b3-a311-f388880464b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7358ad54-d9aa-4b51-a039-84c690b59026",
        "cursor": {
          "ref": "5e955eec-99a1-48f2-98d9-969a06d66389",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "205ebb69-5503-44ac-9581-522d331773e8"
        },
        "item": {
          "id": "7358ad54-d9aa-4b51-a039-84c690b59026",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b94368fb-a650-4ad1-8b6c-fb4a25adb0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8121985d-4b69-4199-a52e-ec5255c62123",
        "cursor": {
          "ref": "cceee076-240e-4a65-8315-19dcd3052a4f",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "72e51bfe-532d-417a-ad1e-8bc98a80491a"
        },
        "item": {
          "id": "8121985d-4b69-4199-a52e-ec5255c62123",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6845e45c-e89f-4ef2-b7a6-73331b0b120b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd1288c-24e8-400d-8be4-7d44658aba0a",
        "cursor": {
          "ref": "a11f32f5-077e-4d81-9820-f5fb57d1aa9a",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0538a9aa-0334-4eb7-b9d6-1cab396e008a"
        },
        "item": {
          "id": "9cd1288c-24e8-400d-8be4-7d44658aba0a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fc2008d4-6de6-4248-95dd-70bba690da56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820fc33c-2ee4-461b-8a5e-1643da4591c1",
        "cursor": {
          "ref": "6bd29b98-4fa6-427d-a990-83b32d29dd95",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9a75927b-9777-4579-a815-bad28574ecf4"
        },
        "item": {
          "id": "820fc33c-2ee4-461b-8a5e-1643da4591c1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bb2ed2df-e5bd-4bf4-9a05-ffb000a8dde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f3713a-e416-4eb3-b275-43f74088b56f",
        "cursor": {
          "ref": "97d99289-6e3e-4c47-9777-7694c821cea0",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bf1c9021-5783-45c0-9737-3b6109fc0548"
        },
        "item": {
          "id": "28f3713a-e416-4eb3-b275-43f74088b56f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b9b57507-9104-465b-a3ad-d1da3400ec6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb924cac-cf07-4eca-b84c-b7585f41e874",
        "cursor": {
          "ref": "27efad22-d9eb-4b5d-ad07-4f47921d9305",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4e06c671-066f-4ab5-bfc8-111c936678bd"
        },
        "item": {
          "id": "bb924cac-cf07-4eca-b84c-b7585f41e874",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "72646c08-5195-477c-92ad-bec06e90292c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086a5b8c-35b1-46d7-a5b3-26fddb964292",
        "cursor": {
          "ref": "da433cb6-302c-4cbd-9426-a70c74c7702e",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5b515232-ec28-46a3-912b-93c13181dc4d"
        },
        "item": {
          "id": "086a5b8c-35b1-46d7-a5b3-26fddb964292",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "975d2887-d761-4d26-986c-5004e0f059d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfda8596-6f97-400c-bcad-d48d1f2aac3d",
        "cursor": {
          "ref": "75c4b2ca-2b35-46b3-a0c5-ad8d689b5f61",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5245cede-8957-4367-a913-5cf95c2505d1"
        },
        "item": {
          "id": "bfda8596-6f97-400c-bcad-d48d1f2aac3d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "080ac127-a9d1-4669-967f-7b57836dd719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c7dfbd-f305-46c6-973a-17c158e59836",
        "cursor": {
          "ref": "e74699fc-61c9-43a4-99c3-d4dd5e43270c",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "815fbc85-9de4-4ee7-b034-127207b13049"
        },
        "item": {
          "id": "61c7dfbd-f305-46c6-973a-17c158e59836",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "14d0f76c-d543-4883-bc9c-aea94449e9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd37dc04-f397-4b5c-a33f-0b0b665cfd7d",
        "cursor": {
          "ref": "1a985edc-e0e1-4b63-a58b-9fb7db95d193",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "cc09ffe8-d981-46fa-b2f8-9665b1574fcf"
        },
        "item": {
          "id": "dd37dc04-f397-4b5c-a33f-0b0b665cfd7d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "90ea7139-2af0-4c37-9df1-45929d22e9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9a0915-41b0-4c90-87dc-e2a405782583",
        "cursor": {
          "ref": "60aa4b98-0c72-4e84-a4a4-bfdfc75785d0",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d0c10eb7-cce9-4fe9-ac02-21b4b4723998"
        },
        "item": {
          "id": "ac9a0915-41b0-4c90-87dc-e2a405782583",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "18524c7c-3444-435c-a3de-5ca2cd032a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62f05e4-1013-4ac5-887e-12d344f4fce6",
        "cursor": {
          "ref": "3f887132-a24e-4c86-be70-d3bed74186b9",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6f40d142-320e-47ac-a2f8-ce21712d6ce4"
        },
        "item": {
          "id": "f62f05e4-1013-4ac5-887e-12d344f4fce6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "42dc43a3-c758-4a1b-be97-0082a0a6d898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec166c6-925e-4a1b-af97-c17af6e2d80f",
        "cursor": {
          "ref": "1e48a595-001d-459c-ae8a-d2e6f8eb20b4",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "89223db8-a3e0-4978-9a34-e1d0e8f6141e"
        },
        "item": {
          "id": "1ec166c6-925e-4a1b-af97-c17af6e2d80f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "446b3104-9af4-4056-b629-72526363f3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d547399-ae7d-4517-9327-05f1535db3b9",
        "cursor": {
          "ref": "b0228483-9efa-4186-9ad8-2524eb1eadfb",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6c91ec7b-a956-4a1d-a25e-d2aab558133b"
        },
        "item": {
          "id": "1d547399-ae7d-4517-9327-05f1535db3b9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "096981e3-ccdf-4aec-a9cf-810fe4168c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8fd74e-d9be-4fdd-9daa-1071bd8d826b",
        "cursor": {
          "ref": "21ca2db6-e783-4ba4-88bb-47bcc6c581bb",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d1c06bc4-7005-44d7-9b0b-904a6fdd949e"
        },
        "item": {
          "id": "fe8fd74e-d9be-4fdd-9daa-1071bd8d826b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "958a990f-eeea-40bc-90c6-303f8ae5c457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5306042-5ce9-42d4-ae30-64fd87b0e2d8",
        "cursor": {
          "ref": "52e97fd3-2222-4e56-8900-09a5f8d3b05a",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4ba22b77-ea81-4e2e-ac92-587dcbbcd1dc"
        },
        "item": {
          "id": "e5306042-5ce9-42d4-ae30-64fd87b0e2d8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "99cca7aa-4da5-4915-a767-a1a0710ea3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e794834e-fa93-43ad-b7f1-9489fea9c6b3",
        "cursor": {
          "ref": "b2c7018e-8cc6-47d0-925c-1fabf5a0c773",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "66007999-4942-4728-8bcc-fba4c4e72b4b"
        },
        "item": {
          "id": "e794834e-fa93-43ad-b7f1-9489fea9c6b3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7c7c314d-cf12-4921-b288-6dd259d6e380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b3e41e-c06a-4739-a66e-e017a90b63d7",
        "cursor": {
          "ref": "06a6c7e0-a898-455d-b973-7f1f66ab001e",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6804e6b8-faa7-4103-831d-159b71dd002a"
        },
        "item": {
          "id": "25b3e41e-c06a-4739-a66e-e017a90b63d7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fdeffd1a-2aa1-4955-9a29-96ec298ea177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db9d792-c761-432b-a96b-0b97aa6d2712",
        "cursor": {
          "ref": "445d1c1c-ccda-4354-8316-a7442893e6eb",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1db2c483-8edd-403c-9b27-8f23844738f8"
        },
        "item": {
          "id": "6db9d792-c761-432b-a96b-0b97aa6d2712",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0685d7dc-116a-40d0-ab7b-d3d08a7f66c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9861d283-be32-4f92-871b-b19a49fe723a",
        "cursor": {
          "ref": "b18dfa29-38b7-463f-8aa1-2e71fc9131d8",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d2ce2e13-3fe7-49b9-a7d9-f73d9eaeed65"
        },
        "item": {
          "id": "9861d283-be32-4f92-871b-b19a49fe723a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "036cfd18-8eff-47a4-acca-a9667166b3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f485a4f-271d-4332-a74e-10d97f6455ce",
        "cursor": {
          "ref": "4e12059c-7bfd-41c0-b403-0ac8fb6dbd47",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3f1b5ec1-d4e7-477f-846a-592cb3bdf6ae"
        },
        "item": {
          "id": "6f485a4f-271d-4332-a74e-10d97f6455ce",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c7f7b9e1-8ba3-4071-8cc9-4611144d9d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d6a4f4-cfc5-499a-8bed-842be003738f",
        "cursor": {
          "ref": "0200e911-2600-4233-8bce-cfcde9c8c531",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "13393350-8307-49e5-b8f5-0f1631330524"
        },
        "item": {
          "id": "30d6a4f4-cfc5-499a-8bed-842be003738f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d075e5a0-da67-46e4-bbfd-19dea16ac8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88977df-4a8e-4c7e-a76f-5f4ac49cc405",
        "cursor": {
          "ref": "ae079aba-c102-48e3-a150-18ca8004f0ba",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a2258cf6-7637-4c1f-83d8-bc87c2e7245b"
        },
        "item": {
          "id": "e88977df-4a8e-4c7e-a76f-5f4ac49cc405",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5e6fdc2b-4323-4da9-9d8f-3100a983adb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f11ef5-aeff-4727-8616-22753d8fb942",
        "cursor": {
          "ref": "fb653943-1a19-4c46-8e88-44cd17b2759b",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3f02dbd0-d946-4cb1-862f-32d33f3ea51b"
        },
        "item": {
          "id": "e0f11ef5-aeff-4727-8616-22753d8fb942",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d8719df9-aa8c-47c7-af2a-292cdc27fd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe4087b-c96a-4d2d-9d48-5b79d0a1226d",
        "cursor": {
          "ref": "87be812b-8e90-4a47-ac00-60fa7fda7579",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "974e934e-ec05-4053-a074-3328b662a484"
        },
        "item": {
          "id": "9fe4087b-c96a-4d2d-9d48-5b79d0a1226d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "15b784dc-f799-47dc-ab0f-aa34980cbb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6226cde-b680-4fb1-92d4-2b2ab12b4c4b",
        "cursor": {
          "ref": "eb440a86-b587-462e-b29a-c3f35981efe8",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ac1b31d2-2b62-4b5d-9a0c-2e5adb9ece1d"
        },
        "item": {
          "id": "f6226cde-b680-4fb1-92d4-2b2ab12b4c4b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "397b3bcc-428a-4d44-abe9-22fab30ea703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39a2a53-e12e-4c30-9ce6-56949d38441f",
        "cursor": {
          "ref": "3f1339f2-4587-49ab-a2a1-564100a3de1a",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "046f37c2-6e57-4598-9243-dca6e595830a"
        },
        "item": {
          "id": "d39a2a53-e12e-4c30-9ce6-56949d38441f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e0445f55-0e82-481b-a696-4075d53f0647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9dbc222-18d4-40b2-b128-06308689701c",
        "cursor": {
          "ref": "288506e9-7a3c-4af8-a738-c79a3dcf0bf1",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7a650484-2638-4b0f-adda-d29359165b8c"
        },
        "item": {
          "id": "d9dbc222-18d4-40b2-b128-06308689701c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3accf72b-b6e5-499a-9250-e9805f33bd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902f0dcb-b3b6-41bf-83f3-1ab610959998",
        "cursor": {
          "ref": "5646028b-3565-428d-979d-bb173c970b7c",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6801c705-a790-439c-9959-ba53c2cd21a3"
        },
        "item": {
          "id": "902f0dcb-b3b6-41bf-83f3-1ab610959998",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0def0b44-60a6-4a30-b077-c75b87b9191e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3a6123-ca43-470d-b8cd-63a42b05af67",
        "cursor": {
          "ref": "2af6257f-28a1-4bc0-b82c-269e422f9c79",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "df265262-44dc-4a9c-8390-af747136c0b5"
        },
        "item": {
          "id": "2e3a6123-ca43-470d-b8cd-63a42b05af67",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "322b77a3-d7a8-4715-9139-35c8bf77b25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038bed06-eef7-43fb-9c31-05048b1976b0",
        "cursor": {
          "ref": "4429bc9c-590b-4241-9ea8-d8f94ae85e98",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c22e38df-c327-455f-86fc-62657d4cac7d"
        },
        "item": {
          "id": "038bed06-eef7-43fb-9c31-05048b1976b0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "edb3a237-0eeb-4326-95d2-9a7a937da1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da67566a-744e-4005-879f-8ffb0b5884d1",
        "cursor": {
          "ref": "25859e38-2e2b-4c9d-b342-bbbd4301cad5",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "73f280f0-a74b-4cea-ad2d-7a5b67134bf4"
        },
        "item": {
          "id": "da67566a-744e-4005-879f-8ffb0b5884d1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7570d326-6824-4ee0-ad15-29bf1e25884a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d97c635-2523-4a79-9a5b-b1c1a9201a50",
        "cursor": {
          "ref": "8b564983-90a5-4048-b09f-350535571aa2",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6e5714bc-57a0-4c2f-802c-6891491a63ba"
        },
        "item": {
          "id": "5d97c635-2523-4a79-9a5b-b1c1a9201a50",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7d629f7e-e01d-47a9-8c73-11db692edbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bed4b31-fca3-45f2-909b-e866a114b148",
        "cursor": {
          "ref": "71ed3d50-e9c7-4fcd-bc8b-d0d6b5144bb5",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b7defe0e-881f-449b-840f-ec616696e294"
        },
        "item": {
          "id": "7bed4b31-fca3-45f2-909b-e866a114b148",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "717403c3-3c95-408b-9938-677ca30964aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0196798-a387-4fc8-84a7-7f8c407446da",
        "cursor": {
          "ref": "c299a62c-049a-40c3-99a6-f5ad94405cd8",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "88b9b6d7-d2c8-42ec-8ace-bf96c36e57e3"
        },
        "item": {
          "id": "e0196798-a387-4fc8-84a7-7f8c407446da",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "afdeb7fc-292a-4d83-bde1-58c72ce21c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd72350f-7c74-4ffe-8d14-d116ca18f71c",
        "cursor": {
          "ref": "5717f7ea-c10c-4b4a-aaf8-7a0af237507a",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c8a30a74-0cf1-4330-8958-248050e6af0e"
        },
        "item": {
          "id": "bd72350f-7c74-4ffe-8d14-d116ca18f71c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2e1a2d83-c1fd-4b06-a0f8-aa75a701034a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53043de8-4e24-4bec-ac55-19e2055ccbcc",
        "cursor": {
          "ref": "84463f3d-49b4-40db-b63a-96f3166a1143",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "83a79935-40cc-4459-aed9-e71f7a556b49"
        },
        "item": {
          "id": "53043de8-4e24-4bec-ac55-19e2055ccbcc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6e6df834-a968-4eb9-bb61-196cb82b7b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1689dd51-40e6-4781-903b-723c8cbd503d",
        "cursor": {
          "ref": "b5adffc5-ea99-4757-9d79-49479be12cc8",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b7339095-97c0-4c89-ab39-d6897ec36037"
        },
        "item": {
          "id": "1689dd51-40e6-4781-903b-723c8cbd503d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6fc5d522-552e-4f06-94fd-3581919371f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfc303c-0c23-4d62-9e20-c1d04b928785",
        "cursor": {
          "ref": "7653ed9a-fa4c-4bed-9456-cc657e94685f",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "602565a6-b0ed-4d1f-bed4-fea556751968"
        },
        "item": {
          "id": "fcfc303c-0c23-4d62-9e20-c1d04b928785",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c20fd227-368b-48ac-955b-32e597834642",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abe4608-d440-4cf1-927d-3acbf8644f7d",
        "cursor": {
          "ref": "bd70cb28-d80d-4e02-8817-715f91c3cf0b",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4c0cbdbb-9f5d-432a-b35c-fb4104053eff"
        },
        "item": {
          "id": "7abe4608-d440-4cf1-927d-3acbf8644f7d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f72ead5e-582a-4ef3-af1a-0a32ca95d874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd81e0b9-5e06-4b96-95fc-e7f7669bee70",
        "cursor": {
          "ref": "d3f07502-7f84-4ba2-b15f-e7e79bb5c852",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d956035b-8b67-4093-b6c9-d8fc807d8305"
        },
        "item": {
          "id": "cd81e0b9-5e06-4b96-95fc-e7f7669bee70",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3ed651b3-f233-49ac-bbe6-ef9e147a96eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1e8f4a-d586-4ff7-a76d-cced9a034497",
        "cursor": {
          "ref": "b3f8faea-1d63-4a45-883b-88790b4179d6",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "53ec0d97-5cd4-4062-ab29-106f801b1751"
        },
        "item": {
          "id": "8a1e8f4a-d586-4ff7-a76d-cced9a034497",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1a0457a9-0f6e-4127-93ce-11f7d3a8f22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0bdefb-e5ab-4fae-81eb-c42fb454c3da",
        "cursor": {
          "ref": "675415fd-e5ff-4b26-97a9-d5e43fee392a",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "462bcf32-5e7c-4078-94df-9e945aeba850"
        },
        "item": {
          "id": "1c0bdefb-e5ab-4fae-81eb-c42fb454c3da",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f4f7e40b-6e6a-4d3c-99f5-5662fce8189b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a2d07c-402f-4ca1-9bfd-a290eb93a84d",
        "cursor": {
          "ref": "e302ca21-04b9-41cf-8f81-6685453d33e7",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8efcad19-6ba1-4b0d-b51b-b013ea0dd623"
        },
        "item": {
          "id": "82a2d07c-402f-4ca1-9bfd-a290eb93a84d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2b2aaedf-96b6-44ac-9a03-3dc252f7eaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ca8795-6dea-4ca6-884c-fb65cd2058ee",
        "cursor": {
          "ref": "18b818d6-9a9b-4947-a8bb-5fcf4c51e504",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c2741a8f-f8a9-487c-a9d9-d149bc6b1fdf"
        },
        "item": {
          "id": "f9ca8795-6dea-4ca6-884c-fb65cd2058ee",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2438c2bc-4eb3-42f8-af0d-821d8ad2d5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5b9870-e959-4888-8c4c-634f3820704f",
        "cursor": {
          "ref": "fef4cf65-474a-4c45-848b-c6cf29a2c2eb",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a23ba557-7b81-4d1f-a1cd-7c179677501e"
        },
        "item": {
          "id": "9d5b9870-e959-4888-8c4c-634f3820704f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "63608877-5d38-46a7-b388-471454b40f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbfe9ed-e066-4157-b302-fee6bad10227",
        "cursor": {
          "ref": "de3b4618-9cdb-4459-873e-78f5134c7bc7",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f19ac2e3-49bd-4ce5-8b50-001a3c039e17"
        },
        "item": {
          "id": "4cbfe9ed-e066-4157-b302-fee6bad10227",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c385967e-5d73-48c5-8d26-68cb243c724a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442521f2-1bf7-440c-bf14-beaf523c209d",
        "cursor": {
          "ref": "f8a475a4-20f4-4813-a6fd-9353a9c863b0",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ef2e7310-58a9-49be-a7df-5d6e3322c535"
        },
        "item": {
          "id": "442521f2-1bf7-440c-bf14-beaf523c209d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "46967c0e-d6e0-4f9a-bfac-1f1edbe5cbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5b837e-2c45-45d1-a159-8792912963e1",
        "cursor": {
          "ref": "a3c57205-1828-4595-b4b8-a8c257534c2f",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "454c6bee-25ff-461e-a7c0-100a0192359b"
        },
        "item": {
          "id": "2f5b837e-2c45-45d1-a159-8792912963e1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a4971909-97f7-474b-a8c0-a85a3b889136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adcedcc-bd32-43b4-b898-ea5b24b9710b",
        "cursor": {
          "ref": "33f2b11c-cc16-43c8-bcf4-0f602a1c0bfa",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b6ecf95b-b6f8-4635-8fd2-b998b915bb17"
        },
        "item": {
          "id": "7adcedcc-bd32-43b4-b898-ea5b24b9710b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c0efd959-8582-4535-a9c8-78870c9b857f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ca01c6-3bbb-4ce3-9ca5-abea38fb270e",
        "cursor": {
          "ref": "6c10206c-b7d2-4cc8-b421-c8dfeb2bd390",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "481a8127-7476-45a2-a9cc-bfd3c46ca940"
        },
        "item": {
          "id": "e1ca01c6-3bbb-4ce3-9ca5-abea38fb270e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1e170a12-9146-4e18-858f-c116439960de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4745b6-8965-4f9d-9880-aa7256006fbb",
        "cursor": {
          "ref": "401d961c-5c2b-4e41-b3f7-f9aa19662583",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fdcefea2-e2d8-41bf-9bbf-db456d64bac2"
        },
        "item": {
          "id": "dd4745b6-8965-4f9d-9880-aa7256006fbb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b2471e83-f56d-4c65-989f-5093a008956c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bfa648-706b-4547-b145-57d63b41ca4a",
        "cursor": {
          "ref": "c13c6d97-23ea-418d-8d92-7d159ca88013",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "17fd5e04-da04-4466-a38c-4c74d29244c0"
        },
        "item": {
          "id": "95bfa648-706b-4547-b145-57d63b41ca4a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bc4a37a1-79ee-4f6c-8133-5817ab6499c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c503514a-0589-4eb8-abe0-c22fb7949615",
        "cursor": {
          "ref": "6ba7a5e7-bca2-4bc3-a799-7001d1ae4785",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5bfa5b59-3142-4bcc-800c-b2989cdbbaad"
        },
        "item": {
          "id": "c503514a-0589-4eb8-abe0-c22fb7949615",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3d9059a8-40d2-4541-a618-7f86915ea82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b725b928-ae7d-4925-aeb7-5de84f9c8560",
        "cursor": {
          "ref": "1e5262cc-e000-4fef-92f4-b03cc248ef6b",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "634a50c4-4002-42ae-9408-5fb61ed2f347"
        },
        "item": {
          "id": "b725b928-ae7d-4925-aeb7-5de84f9c8560",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fc8c3b96-21bb-4544-a082-ca5d7e64e109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095cdda3-75c6-437a-8fb5-7a324c6ded0b",
        "cursor": {
          "ref": "046bd12a-0077-49a2-ab0d-319796185cc2",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8ae139ff-ce20-48a2-9918-35dc9b9be825"
        },
        "item": {
          "id": "095cdda3-75c6-437a-8fb5-7a324c6ded0b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "98bc38cc-c033-4a71-8dec-2edcb89410a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05de1aab-dec9-4cc8-acc7-94cb2c5f60ed",
        "cursor": {
          "ref": "375b60f4-a29e-4576-94ca-60366bffe08c",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1c5a4aaf-deb2-493f-aa0a-45807ce0ffbf"
        },
        "item": {
          "id": "05de1aab-dec9-4cc8-acc7-94cb2c5f60ed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9bf38161-5f7c-4180-afd5-487f43d12dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486a9eba-3fe5-4547-9d19-530fec4e3c5c",
        "cursor": {
          "ref": "890c772e-9d5f-417c-823d-470c9b60881c",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7d16cd1d-0c40-4e48-abe1-7a39701f2253"
        },
        "item": {
          "id": "486a9eba-3fe5-4547-9d19-530fec4e3c5c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "dc085363-4e79-4034-96d5-2285d3c2cf27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b427163c-b3a2-49b8-9f64-17f2ad20fbed",
        "cursor": {
          "ref": "f300acbe-8b46-47db-a98c-15c48c339d95",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "410b6569-d8c0-4a54-8df1-912b685e1e12"
        },
        "item": {
          "id": "b427163c-b3a2-49b8-9f64-17f2ad20fbed",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ba04080d-e19a-4c8e-a5e6-1c875a70819a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05de656-cb57-4a05-906f-2e29b0e1cb4d",
        "cursor": {
          "ref": "90b34fad-7775-4f95-8ee4-8fc6f5a6e3ff",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1f7a99ce-1d8b-45f0-8ac1-26deb09d8fe2"
        },
        "item": {
          "id": "d05de656-cb57-4a05-906f-2e29b0e1cb4d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0e9c2214-1bae-4329-8179-75bd4182fa64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7933eb-2c06-4e5b-aef0-33713e8641dd",
        "cursor": {
          "ref": "8ebf74b9-ea91-4e3b-ad83-66ee63624ade",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "aa2fb08b-9fd1-4ec5-9adc-639076e6eb35"
        },
        "item": {
          "id": "df7933eb-2c06-4e5b-aef0-33713e8641dd",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f2f98ad0-7129-4187-9f0d-988e40638373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7b7b24-504c-48cc-824f-a8dd32e61168",
        "cursor": {
          "ref": "a265d992-8954-4460-b69b-4686d2d1d999",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0835a0ce-8ce6-47a4-9bbf-fa4b682e42d5"
        },
        "item": {
          "id": "6b7b7b24-504c-48cc-824f-a8dd32e61168",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bb0fcf49-25c7-4b64-9bdb-ea819f59fe36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9b5173-cab6-4161-95df-61a75609e9b6",
        "cursor": {
          "ref": "f1e1c124-7e0c-4b1d-89ac-7602a9362d70",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d5cdbfef-d4f6-4c23-afe2-ec38d9110be2"
        },
        "item": {
          "id": "5a9b5173-cab6-4161-95df-61a75609e9b6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5f2e5cae-dcc5-4375-9bf8-7b3365e297da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca78906-40ee-4f2d-bed5-298030b8cc5e",
        "cursor": {
          "ref": "d1fe264c-7ebc-4071-b455-03f30dfb10a5",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7824b163-31c4-4ca1-b694-0c172b6cdd20"
        },
        "item": {
          "id": "4ca78906-40ee-4f2d-bed5-298030b8cc5e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "440fed8f-0535-4604-bc1a-8c3f3d3538ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00316d5-eaab-4114-a976-ecca41aac2c6",
        "cursor": {
          "ref": "11d31b7f-b73e-44e2-9b44-6d68859fcc55",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e7f97df3-04cb-4f65-86ee-109984160715"
        },
        "item": {
          "id": "a00316d5-eaab-4114-a976-ecca41aac2c6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "41c098a6-0127-4338-95aa-2ebcfc4d0d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346665d7-dc68-4225-9c5a-0445648efb54",
        "cursor": {
          "ref": "088124e1-69d2-4d4b-9b54-d3e559825be3",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1e0d8013-37fd-49e4-b7e8-e78cfc682bef"
        },
        "item": {
          "id": "346665d7-dc68-4225-9c5a-0445648efb54",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "48e08325-7210-4797-a2cb-4fa922934c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a4a17b-df19-4620-9384-ce7805e5c2d6",
        "cursor": {
          "ref": "9ecf7284-e2ea-46b6-bb34-bc4cd4159179",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1314a632-9561-45f2-9c75-e2931c163876"
        },
        "item": {
          "id": "46a4a17b-df19-4620-9384-ce7805e5c2d6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3176e0a6-5c69-4eba-ada3-b4f967e14fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0580a4-7ecf-412c-bab5-24d8336a7278",
        "cursor": {
          "ref": "323b0343-5d99-4713-be16-0a851e1269b5",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f670ddc0-860b-46af-8dcc-a419fef8355a"
        },
        "item": {
          "id": "ff0580a4-7ecf-412c-bab5-24d8336a7278",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8e1fb2aa-cbc1-4e73-8ffc-6b9154e919cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b45626-1c02-45e0-9f65-1080b97a985c",
        "cursor": {
          "ref": "f6d4abe8-d231-4b21-8667-d3eecc85eaee",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "63237ac0-326a-4c54-a359-4888b4b3f98a"
        },
        "item": {
          "id": "21b45626-1c02-45e0-9f65-1080b97a985c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2bf726a8-f47d-49e5-b0b9-461946f0f02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0711486a-1b5b-470b-b520-86a05d096dd3",
        "cursor": {
          "ref": "5f6b1846-ed3d-4d99-ac86-4d5a7360b51b",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fca32ab0-f2af-4ace-b7e0-ce57a0c6774c"
        },
        "item": {
          "id": "0711486a-1b5b-470b-b520-86a05d096dd3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2c8e4b82-5963-4c57-a723-de88a3737384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119c326d-524a-4f51-9ac4-36224f6988e1",
        "cursor": {
          "ref": "f6511b65-aef2-4fd3-a70a-b9905d8cf8b5",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e8d411de-c47c-49ff-b902-4f43baad8555"
        },
        "item": {
          "id": "119c326d-524a-4f51-9ac4-36224f6988e1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "38608c01-b1fa-4555-8191-a00d305f676e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9263ee5a-d558-4281-aee9-f52945877783",
        "cursor": {
          "ref": "126c5257-0b97-4e07-88bc-9392ce8636f2",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d25efc48-7202-4c9b-8f0a-8c7d298138ad"
        },
        "item": {
          "id": "9263ee5a-d558-4281-aee9-f52945877783",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ac951041-0b17-41a4-8df3-a6230b325d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33f4687-2a7f-4900-b8fe-879cafb13136",
        "cursor": {
          "ref": "5b8f3af8-e332-423b-9fb1-12ef8f82ccb9",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "00427dbe-3785-44b2-b9dc-a966c6f02b6a"
        },
        "item": {
          "id": "f33f4687-2a7f-4900-b8fe-879cafb13136",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d4932d9d-f60e-4646-8dab-80d146d0b670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11ee966-639e-4f1e-b027-142fcb271b9c",
        "cursor": {
          "ref": "192b8740-6063-4ac6-b1f4-1b9f1cdf1d88",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d3eaccf2-9bec-4f58-8f56-b3ddac6ed861"
        },
        "item": {
          "id": "d11ee966-639e-4f1e-b027-142fcb271b9c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "224cbf7e-c029-461f-9b6b-2c82676285e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f52d87d-f198-4668-abd0-a01b19fb6dcf",
        "cursor": {
          "ref": "3e7be295-b5dd-4f6f-819c-263201edba95",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f6c1ffef-7d02-4c99-ac64-1d45aed130a6"
        },
        "item": {
          "id": "4f52d87d-f198-4668-abd0-a01b19fb6dcf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d3a39ed0-f657-4100-9d6d-b34c959a6c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f7610d-b55b-4612-8042-e6b19ca2843b",
        "cursor": {
          "ref": "f343d13d-d064-4384-a2e6-3eaa9733eee5",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "22769a2c-eb4c-4bf5-99d6-e000ee6e7a13"
        },
        "item": {
          "id": "44f7610d-b55b-4612-8042-e6b19ca2843b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8e3282d1-c7d2-4f77-bdb6-4ef8a6d8913f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcf3a99-92a9-4ce0-bd5f-9e217dc9a22b",
        "cursor": {
          "ref": "e8cdbe49-9738-4c7d-86a5-a97818ac3167",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "24333d50-8498-433a-b245-1b00c0a06f3b"
        },
        "item": {
          "id": "2bcf3a99-92a9-4ce0-bd5f-9e217dc9a22b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "66efb5d9-c52c-49e8-8ac2-8eee93d4aeed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed50ce01-cef7-4e6d-8f7b-27baea9b2740",
        "cursor": {
          "ref": "cda0407f-9f88-46d7-98ba-5b769e0e9b50",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1a515c64-02c9-49a4-ba1c-28b2b9363bd1"
        },
        "item": {
          "id": "ed50ce01-cef7-4e6d-8f7b-27baea9b2740",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e91f8124-0bf2-41b9-ac64-b1e85904f8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e1ae43-9f99-4cca-8dd1-5714a229000a",
        "cursor": {
          "ref": "9abfc2de-dedd-4369-9aed-6f5769baf92e",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d980b899-76c2-4788-a2eb-6ac0dbd6e195"
        },
        "item": {
          "id": "38e1ae43-9f99-4cca-8dd1-5714a229000a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2f129f11-4132-443d-89d8-a12ee33c0420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6890519d-4f96-4f63-b835-eca9f3b69eee",
        "cursor": {
          "ref": "6fc4739e-f8b3-40aa-b6c9-daa39d888cf7",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a0be67b0-3f1e-47fa-a8f2-a7778378c304"
        },
        "item": {
          "id": "6890519d-4f96-4f63-b835-eca9f3b69eee",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "28b20f22-ee41-4967-a30f-67b3305fc2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbe746a-2833-43db-bd80-24f4b64f64da",
        "cursor": {
          "ref": "0619bc39-45b4-4108-90db-7a7ee89d71c4",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9ae5c9b5-1f7b-4d18-8756-fedcbc30d306"
        },
        "item": {
          "id": "adbe746a-2833-43db-bd80-24f4b64f64da",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1a6d3812-fed1-488d-8225-c8a0ccc3d34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244caf04-eda6-442a-8e5d-a499e10c6bad",
        "cursor": {
          "ref": "fc20f51d-c9d9-4d12-bbf0-4450398778da",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3a2c9ad7-5802-476b-be12-9f12a05bb94e"
        },
        "item": {
          "id": "244caf04-eda6-442a-8e5d-a499e10c6bad",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "77084c1c-3b29-470d-b009-6d4375dcdb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebc5c09-ef64-48b7-b269-46feea3c696e",
        "cursor": {
          "ref": "6df04b34-76e9-4b5c-b99e-0fb7e54b251c",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0f18d9f2-f1a9-4a1a-af24-04018851b004"
        },
        "item": {
          "id": "2ebc5c09-ef64-48b7-b269-46feea3c696e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "40ae08fd-9148-4787-bf63-323a1c0aec90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76f10fe-15fc-4d68-8cae-86819cd0ad55",
        "cursor": {
          "ref": "432af587-5e75-4846-97a5-eea14d133b23",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0c30a1d1-af95-4683-81e5-6c7e2a04c3fe"
        },
        "item": {
          "id": "f76f10fe-15fc-4d68-8cae-86819cd0ad55",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d33b3566-f235-4362-96dc-4b8165638566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be906fb8-e790-4e5a-b390-6d2f1d064cd4",
        "cursor": {
          "ref": "dffaf88b-c54f-487b-903a-e4746c1ce9f0",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7919dd7d-1dd0-42c6-ac3f-897aafff0f23"
        },
        "item": {
          "id": "be906fb8-e790-4e5a-b390-6d2f1d064cd4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "66440b0e-e72c-43ab-aa33-d0c227cf77ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4a6a0b-febd-42eb-bfe1-a2b1c0c8cadc",
        "cursor": {
          "ref": "d7b02ed0-7fe6-42cf-a159-a8ca1b5ef92e",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "70375e0e-a3e2-475d-a644-0d8e4244cf1a"
        },
        "item": {
          "id": "4d4a6a0b-febd-42eb-bfe1-a2b1c0c8cadc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1f8990c2-8531-456e-ad07-f98f2eb72d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24e63e1-d94f-4f1e-b794-b45cac3faa25",
        "cursor": {
          "ref": "1b57dee7-b583-41d3-9f9e-bbf4241d32fa",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "884bc7f0-c865-4bd0-be5d-d8097eca7e5e"
        },
        "item": {
          "id": "c24e63e1-d94f-4f1e-b794-b45cac3faa25",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f352bb1e-3001-4df3-a101-6f402185c7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634ac196-d851-4f77-9008-13d41eef606f",
        "cursor": {
          "ref": "73a11ddb-1439-4180-b0d0-cef09ba93901",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d2845ec8-d1f9-45d3-bde1-5233958cb26e"
        },
        "item": {
          "id": "634ac196-d851-4f77-9008-13d41eef606f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9f4d9533-9231-4201-a92b-3f205b287557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61f156a-23f3-4ef9-872b-37aa5d5c95e4",
        "cursor": {
          "ref": "a1b3334d-4abc-4953-8cb8-beb8a8454a48",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f7f695f9-49ef-4093-a1f4-d6ac647e610e"
        },
        "item": {
          "id": "d61f156a-23f3-4ef9-872b-37aa5d5c95e4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8666074d-e10e-4610-96c3-1dc6aaf346e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d89f4bd-7979-4c84-8783-bfa7d972753d",
        "cursor": {
          "ref": "6e0e45ee-7630-48eb-94e2-420cb9197778",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "900e5422-2117-4acf-8426-d426b6725b00"
        },
        "item": {
          "id": "1d89f4bd-7979-4c84-8783-bfa7d972753d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "0b467ea3-8a68-4791-9318-ae8ae2479ad4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 126,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ea2232-079f-46bd-8539-79a0d258a8f3",
        "cursor": {
          "ref": "b2095598-e106-457a-b636-51df2cca37e3",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6963b2db-136e-41aa-abe9-851d54ecdac9"
        },
        "item": {
          "id": "58ea2232-079f-46bd-8539-79a0d258a8f3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fa0b5f3b-4e2c-41c7-9531-b51638b81fad",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e18b96-fa45-4b31-a50e-ba97ac1da2d5",
        "cursor": {
          "ref": "a981990f-004e-4122-8e15-d9b326c08c2e",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6bf59b03-ddac-4be8-8e5f-6439999b5990"
        },
        "item": {
          "id": "01e18b96-fa45-4b31-a50e-ba97ac1da2d5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "82d392e0-53e7-4f7b-b796-2198f8052547",
          "status": "Created",
          "code": 201,
          "responseTime": 59,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedc6a23-fab0-4ca1-82c5-78252f24c76f",
        "cursor": {
          "ref": "c1d522fe-bb45-4076-838b-b512b87f9d54",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bbcb96d8-a29a-4a18-b9a1-fe26cf0244de"
        },
        "item": {
          "id": "aedc6a23-fab0-4ca1-82c5-78252f24c76f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8396751a-f93c-4832-a6e6-9d94e393eb19",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "87edec83-5e43-465a-b7c8-9516fd3395fb",
        "cursor": {
          "ref": "e4367593-ce29-46c3-9bfe-58fcbc60e554",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d8c5755f-4934-46c7-bdeb-79f52fa360ea"
        },
        "item": {
          "id": "87edec83-5e43-465a-b7c8-9516fd3395fb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "40a42e86-df28-42c7-a8a0-19ce153474ed",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2750c6cd-e63c-452e-82a0-5a996465afe9",
        "cursor": {
          "ref": "8be628db-a355-4920-94f6-792c2fac0978",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "98682e70-19aa-457c-a0fb-d974c15445a3"
        },
        "item": {
          "id": "2750c6cd-e63c-452e-82a0-5a996465afe9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b0bcb5fc-2c1c-4b69-ae66-ec8a2576a508",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fb9f9b-243d-4b8b-85cc-7eb76be09add",
        "cursor": {
          "ref": "dadac88e-a72d-49b1-ae26-388a75ec39c3",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "eacf175b-61a7-477d-802e-ac9630f82783"
        },
        "item": {
          "id": "48fb9f9b-243d-4b8b-85cc-7eb76be09add",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "29ed94bf-c9ae-4b9b-a126-e45630d813ec",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd743a8-e61e-4343-a280-2acc8e79e655",
        "cursor": {
          "ref": "1839c7d0-5639-422e-8196-ad50252b8703",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3e1e7dfd-0729-4c9c-b671-9bafcffed337"
        },
        "item": {
          "id": "0cd743a8-e61e-4343-a280-2acc8e79e655",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c843ca5c-b0a9-4bed-8f53-e6e262602170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd743a8-e61e-4343-a280-2acc8e79e655",
        "cursor": {
          "ref": "1839c7d0-5639-422e-8196-ad50252b8703",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3e1e7dfd-0729-4c9c-b671-9bafcffed337"
        },
        "item": {
          "id": "0cd743a8-e61e-4343-a280-2acc8e79e655",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c843ca5c-b0a9-4bed-8f53-e6e262602170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6126c543-0988-41a2-992f-9a394826f039",
        "cursor": {
          "ref": "9064cbc5-c06a-49c1-a6d3-22ecdd36774f",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "82082956-1fea-47f2-a8bf-1ba388efa2c1"
        },
        "item": {
          "id": "6126c543-0988-41a2-992f-9a394826f039",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b7add398-fe4e-4807-91aa-e9cc82dfb6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b594c5f2-aad5-4b7c-8c16-c13529106391",
        "cursor": {
          "ref": "a6b0b782-3166-4cc2-97de-e84526b2925a",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "44dd6961-3450-40c7-9815-d19cd342efaa"
        },
        "item": {
          "id": "b594c5f2-aad5-4b7c-8c16-c13529106391",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2db94995-c3b8-41ab-b0f2-a47aa609906a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b4c1a8-9864-4061-a2fb-3f0d9ae93a7f",
        "cursor": {
          "ref": "576de22c-89ce-455c-b635-e5532ee6bca8",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a666bb36-7222-48a7-8167-df6e8a478169"
        },
        "item": {
          "id": "32b4c1a8-9864-4061-a2fb-3f0d9ae93a7f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0373c66f-0efc-4411-9150-23f16952ca1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b13e4b3-ad33-4205-9bf0-29f6bc8642d1",
        "cursor": {
          "ref": "262ff917-d5d0-4fbb-a81f-5f0e19241456",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7c3ea6dc-9a74-4c49-8634-7f58c565594b"
        },
        "item": {
          "id": "6b13e4b3-ad33-4205-9bf0-29f6bc8642d1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d66b3f8c-6b10-4262-8ade-2bd689c8330e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1f113a-3490-4480-9b02-4dd5e9a79288",
        "cursor": {
          "ref": "ca9326b7-6a22-459f-8b76-7ea4ada52376",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2a6d08fa-cc13-4efe-a3e3-4c1d836102f6"
        },
        "item": {
          "id": "9c1f113a-3490-4480-9b02-4dd5e9a79288",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8c45b20c-f196-4cfe-8582-7c04ce4f2d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b510fa1-486e-4e58-b294-c83c954bd076",
        "cursor": {
          "ref": "54ab61aa-689d-497c-ac10-95905d50aee6",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a44373b6-e165-4abd-9975-85c92c9a20e3"
        },
        "item": {
          "id": "1b510fa1-486e-4e58-b294-c83c954bd076",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a38c81d0-f044-4e80-a271-2de2ad2b8c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7949c4-201a-46e3-95b9-4b2b1ce6ebef",
        "cursor": {
          "ref": "d7506d0c-b48a-4576-a3f1-10c58a0ccd07",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b25cf471-daff-4ed9-87d8-def71397235a"
        },
        "item": {
          "id": "3f7949c4-201a-46e3-95b9-4b2b1ce6ebef",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ca8cd66d-7cdf-496d-aaaf-407388c08b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b678ca3-0724-40df-8923-f15f1bf2fed9",
        "cursor": {
          "ref": "445114dd-0c19-4843-ba96-b24c4dd28ebb",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e6885421-d169-4988-a075-4c6bbad3f79a"
        },
        "item": {
          "id": "0b678ca3-0724-40df-8923-f15f1bf2fed9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e09c8424-8c52-48e7-a736-c6f9e2af18d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a5d9e2-412b-43b2-b876-4a563993a81c",
        "cursor": {
          "ref": "e1571426-44c4-4a77-b5b9-cdeac7033c62",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "199bd02f-569f-466f-bec5-cebb85f86035"
        },
        "item": {
          "id": "b1a5d9e2-412b-43b2-b876-4a563993a81c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6f0dd275-0e7d-41fc-9dba-5854410fc34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb014f6-76eb-401c-a226-43234a7cded8",
        "cursor": {
          "ref": "870168c8-0a27-4a72-bc7d-d5554b960799",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "93c8e6b0-7636-45b9-9f86-00e476e3d769"
        },
        "item": {
          "id": "afb014f6-76eb-401c-a226-43234a7cded8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fddda736-3c3d-4ba8-9700-f5a16fae92d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd03488d-c357-4fde-ae0d-46ac930f6a81",
        "cursor": {
          "ref": "1a54a699-1002-4172-b29e-5982fb593943",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "797f4e9c-a3f9-4324-8d78-55460f8403d1"
        },
        "item": {
          "id": "bd03488d-c357-4fde-ae0d-46ac930f6a81",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "97eae38b-fb86-4f06-9117-c831a1111f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb688b5-b472-4707-853c-1ac8d2873288",
        "cursor": {
          "ref": "f22b1ac5-8e0c-4aa3-a8c9-1b3b8e9cc9ba",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c907cffd-cf92-473f-8b9f-e5198a2e8892"
        },
        "item": {
          "id": "0bb688b5-b472-4707-853c-1ac8d2873288",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1ac5e218-894f-4390-9812-28aaac679603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557651e2-6970-45ca-abe0-6d6dd18a3217",
        "cursor": {
          "ref": "e45c442f-d996-4bcd-aeb2-2e5e5848f328",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fb2ed83f-8ec6-421e-94d9-e5bdb7ac0f05"
        },
        "item": {
          "id": "557651e2-6970-45ca-abe0-6d6dd18a3217",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "745cc4a6-f479-4797-8249-76fe8fe509b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9252fb21-0f17-4093-bb6b-254bccaa5ea7",
        "cursor": {
          "ref": "45e05f54-d29b-401a-8296-5a17a8024fd8",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2c778c35-ae3f-4e16-bc0f-9cedb23e92d6"
        },
        "item": {
          "id": "9252fb21-0f17-4093-bb6b-254bccaa5ea7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "959b66b3-1db8-4c83-b3f8-b340e3ea5a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2292b61-8405-482f-b3c7-5e15ec741998",
        "cursor": {
          "ref": "1b942899-074c-446a-9b40-a1044e952f78",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7f40195e-e3f5-40f1-b361-ce8670b0b2a7"
        },
        "item": {
          "id": "c2292b61-8405-482f-b3c7-5e15ec741998",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "31ef594f-08c3-46b1-b7ba-b6e4d08cf84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a636c0ee-cb8f-467c-a3d3-04a54c5a05cb",
        "cursor": {
          "ref": "8f14d6aa-bcb5-4faa-8feb-fb558c50df0a",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2994e1c7-db70-4023-94ea-53d3d1cf425d"
        },
        "item": {
          "id": "a636c0ee-cb8f-467c-a3d3-04a54c5a05cb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "941019f3-1f98-4229-abbc-db77b8003f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdf5fd8-4018-46ab-85ac-9949761abcdd",
        "cursor": {
          "ref": "f079a7fc-34d0-427d-81d0-dd928fe04ea5",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "274bbbd9-2059-47db-ad60-5ae501b6c153"
        },
        "item": {
          "id": "2cdf5fd8-4018-46ab-85ac-9949761abcdd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bbfbd366-02f8-4fcc-ad7f-12ecd63333b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d031bd54-7ce1-48fa-ac27-ded68e43dac1",
        "cursor": {
          "ref": "1133c064-1b7c-4197-b6db-7250444ac44f",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "383a5d01-43b6-4f70-8e7a-95918b9b8855"
        },
        "item": {
          "id": "d031bd54-7ce1-48fa-ac27-ded68e43dac1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b8e76605-90fa-4e53-82bc-987989c842d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12560ad-8af4-45e8-b847-65864e0200cc",
        "cursor": {
          "ref": "15d416c1-7f1c-48e5-b1c7-e873b72cd400",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6e468e4c-9339-4800-ad5a-bb2b4716c4d3"
        },
        "item": {
          "id": "b12560ad-8af4-45e8-b847-65864e0200cc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "64259f0a-3fa5-4220-aa3a-d667a71ab122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8129a872-c4a9-4b75-838a-e48ed132247b",
        "cursor": {
          "ref": "a3db3c90-9a8e-46f7-b872-cad8f3c7a322",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "aaf03248-554e-438a-a5dd-9b06971d003d"
        },
        "item": {
          "id": "8129a872-c4a9-4b75-838a-e48ed132247b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "18c71ae7-2968-4c40-aa0d-fc0b9f083eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa7e622-fa66-4e74-9855-a76cb79cdba0",
        "cursor": {
          "ref": "a57d597d-d942-4200-a643-6e2d472fcf7f",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fa42616a-7ed7-4026-9872-fca969f37330"
        },
        "item": {
          "id": "efa7e622-fa66-4e74-9855-a76cb79cdba0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2e86c51e-c53e-4732-bdfa-e97808276a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8e5a6f-7f71-4b56-8d65-7fe755ce3444",
        "cursor": {
          "ref": "a1eeab8e-caa2-4489-899a-656a4140d037",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e8b27cc2-8dc6-4627-a3b9-8f0ce2a341ca"
        },
        "item": {
          "id": "af8e5a6f-7f71-4b56-8d65-7fe755ce3444",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "30587edc-5bec-4814-8765-43765847f202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a9fdac-c2ce-4234-a0d2-080b1fd2c804",
        "cursor": {
          "ref": "64f83702-0d6b-49fe-9d37-2c0f2001ddb2",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6272053e-3e09-4011-932e-bf451cb15e42"
        },
        "item": {
          "id": "07a9fdac-c2ce-4234-a0d2-080b1fd2c804",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8548139e-a214-47a7-801d-32bf3c1aa67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a586a5e9-f6a5-44a6-b502-735133328db5",
        "cursor": {
          "ref": "0e87f065-dcc9-4d24-8b5b-794466c4cb44",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "341ab281-b553-4714-9048-2b5cfe736cd1"
        },
        "item": {
          "id": "a586a5e9-f6a5-44a6-b502-735133328db5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "803daff0-947e-4c00-862a-d4ad667fa4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3767790-3e78-4162-9107-230f8c061410",
        "cursor": {
          "ref": "63a5700d-4407-4a35-9e8d-0c21fd4cc33b",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b1ead8c8-0424-4195-9d36-82660d79fc2a"
        },
        "item": {
          "id": "a3767790-3e78-4162-9107-230f8c061410",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9d1f60a8-7fc6-47cd-91dc-5f2254fbd0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30d2a24-7778-49a1-bec0-f7d941c79d1f",
        "cursor": {
          "ref": "1d0cd76c-ec11-4ec6-b234-f3e8a15da180",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "534f5aa4-8659-497a-9f45-eafa78f7982f"
        },
        "item": {
          "id": "e30d2a24-7778-49a1-bec0-f7d941c79d1f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "eb1dab85-bd52-42e6-8692-a27aefda2a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2442a818-ee1e-4272-8257-b763042f7ccc",
        "cursor": {
          "ref": "ab150d8e-17a7-46b8-996f-bd3867dec2be",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7744160f-7970-4508-b085-8f3d4c9df27a"
        },
        "item": {
          "id": "2442a818-ee1e-4272-8257-b763042f7ccc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "199d672b-71f7-4796-af74-9a67832fc001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba6b674-a763-4ef9-a2fe-226559f38142",
        "cursor": {
          "ref": "c0e6d076-c303-4f25-958b-dd0204a261d1",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5e9eb9b9-c869-4a6d-9abb-8175a26b19c6"
        },
        "item": {
          "id": "fba6b674-a763-4ef9-a2fe-226559f38142",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6510e70d-f3db-402c-9a7d-507ead85bcd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f75e5c-cedc-4ccc-bb76-c03cf1561034",
        "cursor": {
          "ref": "74d99c6c-f37d-480e-b973-33141af0b5d8",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "28dfbff1-632f-4785-85ee-ee64591b5198"
        },
        "item": {
          "id": "07f75e5c-cedc-4ccc-bb76-c03cf1561034",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8d97dae2-e4bb-4638-a734-13c8f1e75fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1260b78b-0467-45c8-a14a-bf6279a3995a",
        "cursor": {
          "ref": "669a0e62-caee-4483-89fe-d279617848d9",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b30835bf-1206-4d7e-8cdf-3720301797f4"
        },
        "item": {
          "id": "1260b78b-0467-45c8-a14a-bf6279a3995a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e9483899-bd22-4c4c-b272-8f99a3963c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bf569a-3522-4adf-8970-113a34ffb18a",
        "cursor": {
          "ref": "17de92f0-4e90-4d51-99e3-a34c3db83801",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "77cadeb8-ca23-46b6-838e-217640a20697"
        },
        "item": {
          "id": "a6bf569a-3522-4adf-8970-113a34ffb18a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "90d7ecc8-8950-47da-ade4-a5f1b8633abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8766b421-86bf-4922-ad8f-bea697bb4836",
        "cursor": {
          "ref": "8e98570c-bc45-4168-8fd8-ae3db6ac7c8b",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4923d082-af52-42cd-93c7-69732d0e514f"
        },
        "item": {
          "id": "8766b421-86bf-4922-ad8f-bea697bb4836",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8a82fd1b-b082-4949-a35e-03ae2a0e4a1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb3d20b-d2c1-427d-b8be-45220232090c",
        "cursor": {
          "ref": "fdf01c78-270d-442a-8093-d63bcde33a64",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3484e751-6c65-40f5-a549-c657a5bd3d49"
        },
        "item": {
          "id": "1bb3d20b-d2c1-427d-b8be-45220232090c",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "6668f34a-9752-445a-a845-6d00f65cbdec",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8c8b33-ef1f-445c-a7ce-1d5d78640895",
        "cursor": {
          "ref": "07b5301d-b859-46ef-b31f-22763cdefa9f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7395a3b6-846f-45ef-b594-cebb4eade29e"
        },
        "item": {
          "id": "2c8c8b33-ef1f-445c-a7ce-1d5d78640895",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8bc7efcd-19c9-4144-b96e-d3efdfc56c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8c8b33-ef1f-445c-a7ce-1d5d78640895",
        "cursor": {
          "ref": "07b5301d-b859-46ef-b31f-22763cdefa9f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7395a3b6-846f-45ef-b594-cebb4eade29e"
        },
        "item": {
          "id": "2c8c8b33-ef1f-445c-a7ce-1d5d78640895",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8bc7efcd-19c9-4144-b96e-d3efdfc56c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0142b1e3-600d-4332-869b-dd68a487705b",
        "cursor": {
          "ref": "d56c9845-dcf8-4c4d-b533-4824f86aac20",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "13a8cf1c-0ffd-44d2-8af8-36a80b3adfb0"
        },
        "item": {
          "id": "0142b1e3-600d-4332-869b-dd68a487705b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1d00239c-1f64-4c2e-bebd-2cb66d637218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3587ed03-3748-417b-be7e-f57c5bd60378",
        "cursor": {
          "ref": "471e3874-9f1e-4cc1-857f-76ff68f30a54",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b090358a-13c9-4f9e-a8ae-9a91de1a6b03"
        },
        "item": {
          "id": "3587ed03-3748-417b-be7e-f57c5bd60378",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "88664422-c4fa-433c-863f-f9a902b07a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020a57dc-5a7b-4ee9-b8a7-6a7a549fa3e8",
        "cursor": {
          "ref": "1e56b1bf-4d9a-46b9-b579-f88b71a41db8",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9e3fcfe1-2c74-46e0-acae-96d2e3ca62b1"
        },
        "item": {
          "id": "020a57dc-5a7b-4ee9-b8a7-6a7a549fa3e8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "03f6b2f2-e95b-420b-af32-1155513bb8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ecec64-8625-49da-a733-d9ab61faf48a",
        "cursor": {
          "ref": "4f73e73b-e505-4c17-8596-52b67912e7d1",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b04933d4-9f29-473d-b100-4c9d5f1c26a3"
        },
        "item": {
          "id": "21ecec64-8625-49da-a733-d9ab61faf48a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4aa9daac-0c30-4e30-821c-2ff9948ba49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa70e892-3b05-4c5e-b856-007dac2d8576",
        "cursor": {
          "ref": "f27e1bdf-3780-4950-aee6-5514f63b2a55",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2c28e39f-beb9-42a6-a78b-e2907e780ca8"
        },
        "item": {
          "id": "aa70e892-3b05-4c5e-b856-007dac2d8576",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2bc64e82-fec1-4805-b906-5e7047ad93b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c708d34c-7cd7-4341-9c89-4be1b61d4f8c",
        "cursor": {
          "ref": "7d64e225-2939-4db3-b159-62db817ff43e",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1ff8a8f1-9511-439e-a064-fd7e80fc79dd"
        },
        "item": {
          "id": "c708d34c-7cd7-4341-9c89-4be1b61d4f8c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8466439e-2867-4a63-8179-1709c5668809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58251401-afc6-4bc6-b416-d1d2d9b3ef8a",
        "cursor": {
          "ref": "1cb59b39-374c-44a8-a5f3-c69017e76e76",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "05c3b460-8e6d-4dad-a5be-2139b869c29a"
        },
        "item": {
          "id": "58251401-afc6-4bc6-b416-d1d2d9b3ef8a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2e555ef1-6d77-4acb-8264-e5bd99a673f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4001067f-1625-4baf-9f60-63017c531046",
        "cursor": {
          "ref": "10ffb6a4-2ebd-4abe-807e-e5bb89e445f6",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c7ae905c-9c60-417c-aba7-d6d9784994cf"
        },
        "item": {
          "id": "4001067f-1625-4baf-9f60-63017c531046",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6a967ff9-f838-48fc-b8ff-2e4e617ad417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955ab004-7285-426b-98fd-77a4a3029cc7",
        "cursor": {
          "ref": "d843bfa4-001f-4eaf-8104-66dca69af54e",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "aad62ffa-9c43-4e7c-bc0c-edb952b17af3"
        },
        "item": {
          "id": "955ab004-7285-426b-98fd-77a4a3029cc7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b9629141-e9c6-41b8-9836-05fe74386e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9383c94c-856c-4305-977b-72d8b97a51ef",
        "cursor": {
          "ref": "43cf4750-68a6-4502-92b7-1ea2a8a889cc",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "be2177a9-0894-445f-aa62-32a5c32add8f"
        },
        "item": {
          "id": "9383c94c-856c-4305-977b-72d8b97a51ef",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "de2582ad-8a9e-450d-86d1-b89d6865f1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54070281-b394-4c37-8874-f9bc9153ae08",
        "cursor": {
          "ref": "25b7b3c7-31c1-4b78-8708-2c76314cb5a9",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "aea679d9-5004-4de9-b986-521b510ed9dd"
        },
        "item": {
          "id": "54070281-b394-4c37-8874-f9bc9153ae08",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c9e76fad-e7ce-422b-ace7-edcd5b97fb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940c1935-0a80-4d31-a85d-6dd20521abba",
        "cursor": {
          "ref": "0e3480d2-5ca5-43c1-ab30-b58d6d59c9ec",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "dbfa9638-f8aa-4718-93bc-3cd55453d679"
        },
        "item": {
          "id": "940c1935-0a80-4d31-a85d-6dd20521abba",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "615616f2-c56c-4917-9344-efba476b1aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4eb695-c9ea-4c88-b1aa-54117d8f2428",
        "cursor": {
          "ref": "9d2f75f2-6274-4afa-8fd3-b6a70411fc20",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2e3be0f9-5db9-4a52-b312-2146fb1b1dc5"
        },
        "item": {
          "id": "8b4eb695-c9ea-4c88-b1aa-54117d8f2428",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3e4082fe-506f-4667-b3b6-2167f55b8d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cc6527-0765-411f-8eb7-a7516cc7c8a3",
        "cursor": {
          "ref": "12beb2cf-f843-4718-992b-7a9998ba0e32",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "df4d3e86-3eec-4c84-9a6c-124d98e8f1e2"
        },
        "item": {
          "id": "d0cc6527-0765-411f-8eb7-a7516cc7c8a3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f75956b8-ab40-40ed-a0f6-b0c437dcdf77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61a43c7-a67d-481a-bdac-346d288ddade",
        "cursor": {
          "ref": "c8228b42-599c-46e3-b3f1-20bbbcd35416",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7aa67597-099f-4104-a28f-c48a78119f89"
        },
        "item": {
          "id": "f61a43c7-a67d-481a-bdac-346d288ddade",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5107127a-416b-4a14-8d1d-4e3bce76e04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3435ec7c-2ff8-4d7c-b277-574a446448ca",
        "cursor": {
          "ref": "319fc473-a757-4963-a77c-9020936a2097",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0d81d1f8-5acd-4c34-bfb2-0d38bf4a9945"
        },
        "item": {
          "id": "3435ec7c-2ff8-4d7c-b277-574a446448ca",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "48470911-36f1-4783-b9d9-85a6b7f7b33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe55ed6-5b18-4960-a038-b2ae2b30a79c",
        "cursor": {
          "ref": "9232553d-e85d-4d7a-9988-870ddb295073",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "958da3cf-224f-4749-af79-9bb2b04eac42"
        },
        "item": {
          "id": "cbe55ed6-5b18-4960-a038-b2ae2b30a79c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ad15c96c-f536-4cd2-b040-4bceca6b0979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcd03f9-6cdc-4089-a54b-3b006e2dd613",
        "cursor": {
          "ref": "612e3b76-e387-42d6-b4c5-54d4c59a25d9",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9baac139-ae8f-4353-9a1b-b526193054c4"
        },
        "item": {
          "id": "ddcd03f9-6cdc-4089-a54b-3b006e2dd613",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e5b98cfc-bde0-49ab-b51c-5247d2625ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e26ef3-7b0c-4bff-a66a-1017ce25a9b5",
        "cursor": {
          "ref": "1be26993-7a79-4cc4-a14c-7deebdb1e755",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e497d843-ff26-4095-b906-c8977a37f116"
        },
        "item": {
          "id": "60e26ef3-7b0c-4bff-a66a-1017ce25a9b5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4740494e-a7c3-4c9e-943b-6838687e717c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed79cbc-ebd6-40d7-b7fc-60ae32ddd4ce",
        "cursor": {
          "ref": "c3cdaa22-ef35-46d2-b0e6-f5e45a118e2a",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ecaa45d0-365e-471c-94de-0337f90e0cb9"
        },
        "item": {
          "id": "8ed79cbc-ebd6-40d7-b7fc-60ae32ddd4ce",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "dd5d8659-f933-4e32-b287-208bc6a58227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8e5ca9-11d2-446b-b907-d3051e388827",
        "cursor": {
          "ref": "fb1f7546-bcce-46dd-bd13-09532fa29fd0",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5e952470-207c-4a6d-b671-40d54fb30f73"
        },
        "item": {
          "id": "ee8e5ca9-11d2-446b-b907-d3051e388827",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e2a23c31-4030-482a-81fd-a6e149fdba18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdcb94b-4e93-43e2-9eee-b02396c3859a",
        "cursor": {
          "ref": "1633c372-43ae-43c5-a09a-969d96f2799f",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ded6e736-ad14-40d3-a37f-af959fb0e453"
        },
        "item": {
          "id": "dbdcb94b-4e93-43e2-9eee-b02396c3859a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ff7399dc-ad46-40ee-a3b8-0c475abfd66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d4eec9-4f65-44d1-b413-49b9d2150907",
        "cursor": {
          "ref": "19c0a229-e4d3-46f2-9f9c-d37f62ecc0bf",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7f695853-c7d2-40bd-8127-6d4474c206af"
        },
        "item": {
          "id": "c0d4eec9-4f65-44d1-b413-49b9d2150907",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f8b16808-2783-4ed8-8cad-5e25ea1ad11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2a0e7c-c0f6-4798-96b5-4a42a3ebcec3",
        "cursor": {
          "ref": "a3089150-dfca-420b-a222-6b19dfb6c8b3",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b1511089-cfdb-4341-9c69-6402056cf3f0"
        },
        "item": {
          "id": "6d2a0e7c-c0f6-4798-96b5-4a42a3ebcec3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dd4205ed-c954-4a93-a99e-1a89d28e8d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b21a540-9d5a-4626-b0dd-25a4adb19187",
        "cursor": {
          "ref": "cad33a9c-3ee3-484e-91f9-c1e2f564f759",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6ae483ec-6c90-46a2-934d-6b284616bac4"
        },
        "item": {
          "id": "7b21a540-9d5a-4626-b0dd-25a4adb19187",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "74e25f4a-a02b-4d9b-ae9a-4c4a1e95f814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8325882-d423-4620-8ee8-9c07b7726a00",
        "cursor": {
          "ref": "3d0f6a24-4fe0-4576-8de3-66f59fdcbd9a",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fe70175e-36a5-4d7c-b13e-07a41a808a7e"
        },
        "item": {
          "id": "f8325882-d423-4620-8ee8-9c07b7726a00",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "78539380-ae9c-4dff-89ce-bc282670d279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88255675-d866-426c-bc0e-579db722fdaf",
        "cursor": {
          "ref": "a5869da7-cdd3-4f8f-8410-eab6775ba586",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f884cdf2-5206-4d50-b076-e5fac7cd76a2"
        },
        "item": {
          "id": "88255675-d866-426c-bc0e-579db722fdaf",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2daaba02-f26b-42b8-8fcd-5739015385d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae60889-3f74-41dd-a418-a995f3e28a08",
        "cursor": {
          "ref": "78fe40ec-5d7e-4d0d-90b3-b7125d3a9c79",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e85e2c11-30c3-49f3-890a-c9821ca5e6fb"
        },
        "item": {
          "id": "0ae60889-3f74-41dd-a418-a995f3e28a08",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "68d4ddef-713e-4ed2-af24-3fd5713ddc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbde47cd-3045-4571-a312-f6f859a2379f",
        "cursor": {
          "ref": "d335b84f-38c0-4d9a-9f65-29657b6b8873",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c5b8965c-1846-45fe-86fd-05e6e0a8ae42"
        },
        "item": {
          "id": "dbde47cd-3045-4571-a312-f6f859a2379f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6ceaf7f9-ceaa-4d0c-95fc-6faf7cf88355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293fc7ea-3770-4a25-9de0-8c00fae0d587",
        "cursor": {
          "ref": "f38913b4-929a-4b6f-a7cf-3fbfb18282dc",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bb4d1a28-5f8d-4370-a247-3f9efd335a1c"
        },
        "item": {
          "id": "293fc7ea-3770-4a25-9de0-8c00fae0d587",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a9b60163-0b3d-46d9-9534-3389192669e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1a5610-a9ef-4e48-8981-62d32b342455",
        "cursor": {
          "ref": "165a2f1a-0780-4c37-94c9-581d35b7a187",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f482b54a-35f1-488c-9e17-785abb4e817a"
        },
        "item": {
          "id": "fc1a5610-a9ef-4e48-8981-62d32b342455",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5a6a7ca6-3f45-4252-b2d4-6bb57d696f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f25a296-04b3-40a3-b132-df1b8bcb22c8",
        "cursor": {
          "ref": "6ca77328-eae4-4692-bf3f-07ef8f553720",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8c29f28d-c83e-4f0f-96b7-ecec1e3bc890"
        },
        "item": {
          "id": "1f25a296-04b3-40a3-b132-df1b8bcb22c8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "10cb8130-d404-4002-94e1-01bf9500187f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b549c25-83d7-4302-b053-3a6f04712998",
        "cursor": {
          "ref": "4fd5c2f7-89c2-4d91-960a-95dec2131d5d",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f7850232-8578-4dea-86a4-4c8b42ad1cf9"
        },
        "item": {
          "id": "7b549c25-83d7-4302-b053-3a6f04712998",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "55b870c9-b9ab-47e0-8b18-77b6c59f3440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5ba91e-d12a-4490-8d36-f18dfbb5c5da",
        "cursor": {
          "ref": "96e02b83-737c-4132-94aa-52cbb3455ba2",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1207dcf1-27a0-4f69-9e2d-c5b1a961831e"
        },
        "item": {
          "id": "1b5ba91e-d12a-4490-8d36-f18dfbb5c5da",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c9e20103-c3c0-4765-9493-dbcd2666562b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b058e03f-7780-458f-b43b-3db557bdb461",
        "cursor": {
          "ref": "ca7d93e7-2e47-42bc-823f-6f4f22caa2d8",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "00963932-ecd6-4bc4-8dfc-2b0da7f6bfae"
        },
        "item": {
          "id": "b058e03f-7780-458f-b43b-3db557bdb461",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "76fb7c57-d444-4d4f-b05a-42764d1753aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3284a82e-7599-40bd-840e-f732a767e41d",
        "cursor": {
          "ref": "78e7ee22-da1a-45b5-bd07-61f408c8b55d",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8efe8ebe-9cae-491d-b931-04ab8835c6aa"
        },
        "item": {
          "id": "3284a82e-7599-40bd-840e-f732a767e41d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f71d21e6-0ab9-4a8e-a506-1f488871a476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0d01df-de57-4ad7-926d-e937ad3e14c6",
        "cursor": {
          "ref": "3820f115-ad9d-418b-9fab-e6f55310622d",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1ba8e2ef-cf1d-48b3-9964-fd2c9ad93b9d"
        },
        "item": {
          "id": "3c0d01df-de57-4ad7-926d-e937ad3e14c6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5bf13e79-998e-4895-b53e-f01c8f981fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eed2bd7-1fba-4bd2-8e4a-7030e739c750",
        "cursor": {
          "ref": "fcca5402-223e-43c8-9f0a-6ca54ec60e46",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "43802393-5a28-428d-8e46-b7e2d7fed241"
        },
        "item": {
          "id": "6eed2bd7-1fba-4bd2-8e4a-7030e739c750",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ad846a93-44a4-46be-881e-3399df076693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831044b8-62b0-451c-8012-6d3deb706d51",
        "cursor": {
          "ref": "4a4c3a7c-d0d5-4a78-bafc-90cf40d77722",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a1cf02d9-5523-4ec3-93b5-5a87e34cd921"
        },
        "item": {
          "id": "831044b8-62b0-451c-8012-6d3deb706d51",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "70119030-4606-47f8-b239-da03d4d83fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefd49ce-6a2d-4a9c-9e6a-01656a6aad22",
        "cursor": {
          "ref": "022644e8-6ddb-4f33-af12-963324f846a9",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "98a896c3-5ad0-4057-9ad8-166ce79a6dd0"
        },
        "item": {
          "id": "fefd49ce-6a2d-4a9c-9e6a-01656a6aad22",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "34b8be44-7984-49b8-8452-ad600ab4675a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c77dfdb-0bf6-4d16-9db8-43e1458c9d37",
        "cursor": {
          "ref": "63f12097-b3f5-4111-9fb6-a4317e5d79c3",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2d35a5c9-2353-4527-aae9-dd62bec96bbe"
        },
        "item": {
          "id": "8c77dfdb-0bf6-4d16-9db8-43e1458c9d37",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e6ad86de-cddb-456e-89b1-58bc30fceb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dd2d51-cbea-4507-87bf-1fe4a7573264",
        "cursor": {
          "ref": "99aae937-c270-4e2d-93fb-dd32cbccd799",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d23ce7f2-76a8-4d8a-91a4-ccee0a489210"
        },
        "item": {
          "id": "61dd2d51-cbea-4507-87bf-1fe4a7573264",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "465cd51e-f01c-4443-8ba4-11fab5b28153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9fe43f-c7c7-4a6e-9ca6-c54e90cf0e5d",
        "cursor": {
          "ref": "5a66cf30-d569-4ceb-ae6f-942606e42346",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b399ccfa-2279-41e3-a5a6-86ac1fc2f749"
        },
        "item": {
          "id": "ec9fe43f-c7c7-4a6e-9ca6-c54e90cf0e5d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bf5cdaea-2eaa-4178-9f94-40714f44a257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede826de-2152-4e49-8413-7177af86611f",
        "cursor": {
          "ref": "556642a7-4567-4dad-8130-d1e181c17d4e",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "25488aab-8700-42c5-8177-36ad55f1759b"
        },
        "item": {
          "id": "ede826de-2152-4e49-8413-7177af86611f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "58623641-2bbb-440b-ae4a-34e02654d5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0721df9e-4bf3-47dd-bb62-b6e9780156b6",
        "cursor": {
          "ref": "ec56422a-5235-400c-9e1f-b8a52cbcedaa",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9a378535-400c-4663-bcec-ec879668c301"
        },
        "item": {
          "id": "0721df9e-4bf3-47dd-bb62-b6e9780156b6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "64b33359-7d19-41fd-af1d-15d32ebe0237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d24bfde-c13e-46ea-bbb2-870da33f5905",
        "cursor": {
          "ref": "dc5c6715-139e-4699-ba63-46d63a85e88e",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9998ce4b-db37-46ea-a67e-1ddd257fd844"
        },
        "item": {
          "id": "8d24bfde-c13e-46ea-bbb2-870da33f5905",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5d40bc13-f5db-41f9-b96b-645cf1a15e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b2646b-137e-4384-959e-8625200c054e",
        "cursor": {
          "ref": "e8b7be28-23b9-4992-a011-7123224dcadd",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "615c5c8d-ae22-4296-ad1a-83a834c75dfc"
        },
        "item": {
          "id": "a9b2646b-137e-4384-959e-8625200c054e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "115f6336-c4a2-4531-94db-03d34adbbab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78705800-8165-4cfa-81af-1569c413e233",
        "cursor": {
          "ref": "37591e24-7ad0-4c86-be71-df7fb7223a1a",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "90b3b700-4eec-44db-b966-e5110ffdf19e"
        },
        "item": {
          "id": "78705800-8165-4cfa-81af-1569c413e233",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d7b54de0-10bc-4f97-9583-49d878417cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558d4173-283c-4b91-86ba-ebacd2da9e18",
        "cursor": {
          "ref": "42254a99-47b6-4fb0-b9e1-4391b8ec7e20",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f6abb4f2-18ee-4fd7-939a-4bdfeec569f2"
        },
        "item": {
          "id": "558d4173-283c-4b91-86ba-ebacd2da9e18",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6e92e0d4-3abd-4926-a0eb-0481047c7731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b143a44-866e-40a5-b577-9e881180c277",
        "cursor": {
          "ref": "0b012d46-2d8b-4954-a094-8453ba91c7c4",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fbd3ac48-8719-4e7b-91f8-97546d7677be"
        },
        "item": {
          "id": "1b143a44-866e-40a5-b577-9e881180c277",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1e28401c-7e10-4bb8-97d5-ff86895518bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3c1c68-7617-4fc9-be77-2ba5ac978d8f",
        "cursor": {
          "ref": "29cf7287-1a5a-431d-a85e-6260a536b717",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "091e3e0e-bc95-45e5-9c19-3bc41a3216f6"
        },
        "item": {
          "id": "2c3c1c68-7617-4fc9-be77-2ba5ac978d8f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "992cdaf9-7820-4955-8446-5657aac07b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b084cd-fe93-4cf6-9a11-bb6ecb6a76dd",
        "cursor": {
          "ref": "7a658f39-ae3b-4d2b-bac9-dcebaea6b9b1",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "129ed02e-4f9d-4a4e-938c-dd271d56b515"
        },
        "item": {
          "id": "61b084cd-fe93-4cf6-9a11-bb6ecb6a76dd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "637c0368-7e1d-43af-92a5-7e03faa47202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e3422c-ff91-460b-8e92-043e85f4609c",
        "cursor": {
          "ref": "ad8eba91-138e-42df-835e-90080396e283",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cde738c3-eb7b-4e7a-a3be-5c2f2564a4db"
        },
        "item": {
          "id": "d2e3422c-ff91-460b-8e92-043e85f4609c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5cfdf1ac-b1da-47ad-b724-1b5bd61bfbeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa696cfa-c5d4-4d71-8554-9c91d2ce4b66",
        "cursor": {
          "ref": "9fa17498-1b57-42d1-96a6-64ef8ca91a7e",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "17936753-36fe-4d49-9dd0-9c5bbd15b527"
        },
        "item": {
          "id": "fa696cfa-c5d4-4d71-8554-9c91d2ce4b66",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3612c738-ba57-41ad-819f-1bdf3c3706ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc7844f-3921-4f1a-a01e-6b9f0c14dab4",
        "cursor": {
          "ref": "8fb7114b-2e54-4c3a-bf4e-d7a95de4d536",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "77fde9af-0934-4054-9507-fb551dc32b11"
        },
        "item": {
          "id": "2cc7844f-3921-4f1a-a01e-6b9f0c14dab4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "269bbf7d-9806-4e5e-bf6a-63398e4ace34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b225a1cf-e9d9-428b-8fdd-9f93648fbe2f",
        "cursor": {
          "ref": "807173e9-6c2a-4377-ab69-5a09bced2a03",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "848395e9-8f40-4a30-ba97-3c792ed86f18"
        },
        "item": {
          "id": "b225a1cf-e9d9-428b-8fdd-9f93648fbe2f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "153823cd-a01f-433f-b07e-583302f8a53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268fcf63-bc51-4a8a-8bf1-33731af5f30e",
        "cursor": {
          "ref": "83f75b13-f210-42eb-bc0b-65fe253fe95d",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "080bc80d-484f-4f33-b6fd-6b70405ac1a7"
        },
        "item": {
          "id": "268fcf63-bc51-4a8a-8bf1-33731af5f30e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fa3b02d3-e91d-4704-838e-7319f0c0e3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8d3443-9227-4a8b-a868-a7f955674ca2",
        "cursor": {
          "ref": "156c5927-d21a-4f26-988e-0549c3660963",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3d328142-d006-4c12-98c7-73e6cb0e105a"
        },
        "item": {
          "id": "bd8d3443-9227-4a8b-a868-a7f955674ca2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6744d1f0-d2c0-446d-83ea-8103acd9335f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec78975-8363-454d-9af3-ba9447db044c",
        "cursor": {
          "ref": "ab6c3bc1-787b-4242-8bbd-06283338182a",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f99bf72e-b8f2-40d3-82a3-acdefd4c99b3"
        },
        "item": {
          "id": "2ec78975-8363-454d-9af3-ba9447db044c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ae7f5f07-d2e6-4f6e-abb2-0730a6594667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eca9d58-4aac-434e-a102-39d788396009",
        "cursor": {
          "ref": "01a8ed50-87a2-42dd-a53d-b35bc1009904",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a544cb16-5d32-46f1-a28d-0e44263a282c"
        },
        "item": {
          "id": "2eca9d58-4aac-434e-a102-39d788396009",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "27aabefe-f5ae-4ca6-a479-82e656902115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e649f7ed-a96d-4d48-9dfe-76052d56fb38",
        "cursor": {
          "ref": "f04f691c-bd86-47d9-a7a9-6fe827e7282c",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "43c00230-e153-4742-a545-02a530bd6a99"
        },
        "item": {
          "id": "e649f7ed-a96d-4d48-9dfe-76052d56fb38",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "45b272e1-c01d-477b-b3c5-970935f82ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3af09ea-c7b4-44d3-9a2d-9cde8f72f871",
        "cursor": {
          "ref": "85f40db0-ef3b-4362-a855-85b07c098522",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b8ea0dea-3609-497e-9d2f-f72bf0ac38e9"
        },
        "item": {
          "id": "b3af09ea-c7b4-44d3-9a2d-9cde8f72f871",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "205738ee-23c4-41dc-beb7-bb3f1a457c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac90e11-9eef-41cb-afea-a31e4ff4490e",
        "cursor": {
          "ref": "5abd25eb-7134-45a8-af18-cf0e431b65e2",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9bf32742-b467-4e71-a83e-62f57f975b9b"
        },
        "item": {
          "id": "0ac90e11-9eef-41cb-afea-a31e4ff4490e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ecbf0810-b99a-4d3f-b4aa-0d30b4426228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c275d7-c16d-47fe-9c5d-eea0200fcf4b",
        "cursor": {
          "ref": "9e012de9-1e3f-497a-ad6f-d1c8d849d21d",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "32dfd45b-7e7c-4f87-b0bb-398155ee174f"
        },
        "item": {
          "id": "89c275d7-c16d-47fe-9c5d-eea0200fcf4b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ba262642-f3fe-4027-89c7-a152461e7427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfe0b37-d640-4425-adc3-2d22fdb231d4",
        "cursor": {
          "ref": "4e4bb043-069f-4566-8cf7-2f35308230b4",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6198da5a-84a2-41e5-85f5-9e19a332774d"
        },
        "item": {
          "id": "ccfe0b37-d640-4425-adc3-2d22fdb231d4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6a1b20eb-5ac1-468a-b642-22eb91768f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f06584a-8682-4958-8ee0-ec45718235ad",
        "cursor": {
          "ref": "0ddc80f7-38da-45b3-80bd-44944d84a9c6",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ee403306-70ac-42b1-993e-34fa8c802ba3"
        },
        "item": {
          "id": "3f06584a-8682-4958-8ee0-ec45718235ad",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "49b23a8e-aade-471b-9fc7-53a24f8800d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe67dc6-0ce4-45fe-8dac-77faaafd8e89",
        "cursor": {
          "ref": "3246c52f-af38-435f-882a-3f813250a40c",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0c0c34ba-84e7-4d77-81aa-151d2ba2a8f2"
        },
        "item": {
          "id": "ebe67dc6-0ce4-45fe-8dac-77faaafd8e89",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4fe5e754-4a19-45a5-9eac-00314583bed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a3aa5a-f0f7-40f9-8749-351e4eefae83",
        "cursor": {
          "ref": "79902bd2-7885-4fbd-988e-b117bb5bc8ce",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "768e5d2c-2536-4eb1-b51b-b5b202503430"
        },
        "item": {
          "id": "d6a3aa5a-f0f7-40f9-8749-351e4eefae83",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "57023980-20d2-47d1-8b51-eaccf318ac63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0d173d-c54d-4e8a-9fb1-128fed5e7c8f",
        "cursor": {
          "ref": "cbed255e-53a4-435c-b370-b974490fd978",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "20511715-abd7-4b66-ad34-fb3f21fd1a19"
        },
        "item": {
          "id": "0b0d173d-c54d-4e8a-9fb1-128fed5e7c8f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ae040988-8f14-4eac-a2b3-1c96bd0e0073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ce9a44-6285-451c-9de7-a2725eb6f15e",
        "cursor": {
          "ref": "978be85a-0ae2-42a6-82ac-d41911f5c859",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f5e162da-3672-41bd-a8df-47c5a6c90327"
        },
        "item": {
          "id": "d9ce9a44-6285-451c-9de7-a2725eb6f15e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e0d743e4-9f71-4c30-b39f-f39aff8a59b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf99e04b-9048-4544-923b-6bdfa1b96bf8",
        "cursor": {
          "ref": "e7a24f28-c806-411b-b71b-5c5f85407073",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e28b3509-1870-4e82-be96-cc93d8819860"
        },
        "item": {
          "id": "cf99e04b-9048-4544-923b-6bdfa1b96bf8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cd73cfb9-fded-4af1-a003-03fd511500c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aedc763-6d48-431c-a736-dbf5e77147f8",
        "cursor": {
          "ref": "24a01dbc-3f55-4831-a369-746ad38cf602",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c06a4032-93d8-48a1-bd0e-613debf488b5"
        },
        "item": {
          "id": "2aedc763-6d48-431c-a736-dbf5e77147f8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "77bece2d-f51b-4ec8-9982-86fbaf70c7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdc2bb4-d24a-4a73-a3ee-0542ab32fd3e",
        "cursor": {
          "ref": "120dce74-d624-4368-afec-70d5892328d8",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "167dce18-3a90-4728-b508-ab9d7e08ed9c"
        },
        "item": {
          "id": "afdc2bb4-d24a-4a73-a3ee-0542ab32fd3e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "02c495d5-06ac-415b-bcb2-3eb842832711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cee367d-084c-439d-b751-f6e69386dc84",
        "cursor": {
          "ref": "017da018-d661-42c1-b005-44a61b8b5909",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "acf0466f-fba6-42e0-8e98-4c580ca9b253"
        },
        "item": {
          "id": "5cee367d-084c-439d-b751-f6e69386dc84",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d60788db-4318-42fe-8f70-b9efc2b01f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a51bd76-120a-4178-8f44-f5c3343c94b8",
        "cursor": {
          "ref": "b1f10223-b3ae-43bf-968c-642d96918db2",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d4f3fafc-64f3-4ace-98cc-3f2d00681eed"
        },
        "item": {
          "id": "7a51bd76-120a-4178-8f44-f5c3343c94b8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0c51977a-c305-4c23-b705-1aa1f6cf3aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff0905d-7dbd-4e5a-a042-009b13512840",
        "cursor": {
          "ref": "237c34cd-c029-429c-9ba4-a4d118bf2184",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5f553db4-87fd-4032-a463-7c53755715de"
        },
        "item": {
          "id": "fff0905d-7dbd-4e5a-a042-009b13512840",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d3904582-4674-4a96-9dce-523e9843db4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041f97a5-5a68-49e4-9d25-de091bf85288",
        "cursor": {
          "ref": "b5c369d7-effb-4f54-aa68-2d4237a87355",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9eb64bbb-1811-4619-9007-8173bae79ab9"
        },
        "item": {
          "id": "041f97a5-5a68-49e4-9d25-de091bf85288",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "14cc42aa-4cf1-474d-8632-0081dcd3352e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2128268d-9dcb-44a8-857b-c4a428cee395",
        "cursor": {
          "ref": "b1b75c4e-fafa-4b81-946e-885ed19f3f85",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cf968cdf-978f-4d3c-9f76-a3a3d33389c3"
        },
        "item": {
          "id": "2128268d-9dcb-44a8-857b-c4a428cee395",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cab26012-db20-46f5-834a-1b658be279d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8c4d94-6633-47a7-8c3a-4e41de3b36ac",
        "cursor": {
          "ref": "18d9d7f0-4f35-4c7d-9ab2-719fee2ae6af",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "992dbea9-e544-4c36-b005-8ba938e93e2a"
        },
        "item": {
          "id": "da8c4d94-6633-47a7-8c3a-4e41de3b36ac",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "897c5ad7-3a4a-41ac-8adc-ad7c15bed5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1489e718-d81a-4a5b-bf1e-5bd032a4f6f6",
        "cursor": {
          "ref": "e9a90d3a-2666-4e7d-876f-c0cf6493d50e",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c3d6ce3b-c29c-4f2c-8f8c-b9ee29fdd4a0"
        },
        "item": {
          "id": "1489e718-d81a-4a5b-bf1e-5bd032a4f6f6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9cd57ddc-cf7b-47f3-be83-13a5991ff2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e190a6ad-f664-4292-bf6c-b443bc5b82d4",
        "cursor": {
          "ref": "9368c737-3a2b-4d6c-97b3-786528484535",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "bbf0c114-269f-4dc4-8e84-152faa5b26c2"
        },
        "item": {
          "id": "e190a6ad-f664-4292-bf6c-b443bc5b82d4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f2e3cc92-a1e1-4ec7-b01e-a434b566aac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e4b4ea-9aa4-44b3-b1cd-6551e3a95b47",
        "cursor": {
          "ref": "cb5c93fc-758e-4e3e-843f-f4c379c70a93",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bc4b6177-a083-4b62-9ae3-03630cd67f3d"
        },
        "item": {
          "id": "19e4b4ea-9aa4-44b3-b1cd-6551e3a95b47",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e5dcc217-4b54-4e2c-8a04-99b9246f8383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a44c9a2-13ef-4f7e-8ac1-c301be492629",
        "cursor": {
          "ref": "5b8101cb-174c-46da-91dc-b14cf0f023ff",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5ed478f7-c6f6-4ddb-9d75-edf159874a73"
        },
        "item": {
          "id": "1a44c9a2-13ef-4f7e-8ac1-c301be492629",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8dfcefc3-219c-46b5-bcd6-90db8cd3a3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7464e79-8af3-47ef-aae2-1f2428b15b31",
        "cursor": {
          "ref": "4194cece-2d9e-4e53-a440-914a96344860",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "370ec926-3980-4369-851a-d0eaf8a931e1"
        },
        "item": {
          "id": "e7464e79-8af3-47ef-aae2-1f2428b15b31",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "aa3f57bd-6bbb-4862-b018-2bf31e33f73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d157a59-8f79-4c3c-a5a9-38fedaec7916",
        "cursor": {
          "ref": "c077f2bf-8b3a-4092-a926-a9fe19b2b7c3",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "70cae714-b665-4894-a624-6380f34feaef"
        },
        "item": {
          "id": "7d157a59-8f79-4c3c-a5a9-38fedaec7916",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a92c3ae1-813b-41e3-b59f-18eabdedd054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1839ede1-4e90-4b59-81cc-8599d213d103",
        "cursor": {
          "ref": "581d6041-92d6-4109-a27b-cc909da6c0ce",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3e0a0b6d-c315-4eaf-894f-9089e73503f7"
        },
        "item": {
          "id": "1839ede1-4e90-4b59-81cc-8599d213d103",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "428efc2d-ef9f-4ab9-a5f2-f21778cff290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691c302f-7e32-4eed-840d-a8d886e8ad42",
        "cursor": {
          "ref": "e115157e-a542-49a0-8c45-e13cf5cb4f74",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "babc6698-6d6c-494b-a68e-f4c0e20a50e0"
        },
        "item": {
          "id": "691c302f-7e32-4eed-840d-a8d886e8ad42",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "57e742bc-1054-485e-ab2b-492969471643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521080e9-6f2e-4b2a-9669-d312648b7bff",
        "cursor": {
          "ref": "1ae43d1f-c365-40fb-943d-db69b01dc054",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "03c42801-ca76-4bfa-8ee2-3805ee07efd5"
        },
        "item": {
          "id": "521080e9-6f2e-4b2a-9669-d312648b7bff",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ca49024e-3476-417d-aac7-28811ae0e4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b86c41-bbc9-407d-a0db-f77af3858f52",
        "cursor": {
          "ref": "efacd882-eca1-4ddb-b528-8207d03edf84",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7033a234-bd48-4702-b465-23038e5b0f5a"
        },
        "item": {
          "id": "20b86c41-bbc9-407d-a0db-f77af3858f52",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bb71154f-9633-4663-974f-52ec911358d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8653a2f5-d966-45dc-a2b8-204330fc9aaa",
        "cursor": {
          "ref": "12d51225-f0e5-4913-9caf-4e7e1fa7022e",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a60fd7c1-1dee-485e-8c96-f62b158dae9e"
        },
        "item": {
          "id": "8653a2f5-d966-45dc-a2b8-204330fc9aaa",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fc901700-4539-416e-af2c-718e1f6ea4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f8b054-6556-43fd-beae-fd246c0b2e23",
        "cursor": {
          "ref": "9f5e232a-30ef-43c0-a82f-d62924c942de",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3006bd02-5a25-450b-a63e-8a5d14a34473"
        },
        "item": {
          "id": "16f8b054-6556-43fd-beae-fd246c0b2e23",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "97e7c31e-f42c-485d-a4d4-c77c0a262bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6032f7f-da09-4189-bd26-48b176d45943",
        "cursor": {
          "ref": "0444b5b4-1ae1-4bed-a1b5-6d77b41575c0",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6a801291-991e-4d4a-b46b-6ec615ffa172"
        },
        "item": {
          "id": "f6032f7f-da09-4189-bd26-48b176d45943",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b80e89b3-9797-45e7-8da1-52dffd0b02f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d02d72-033c-41ba-9d72-c21ab332ca63",
        "cursor": {
          "ref": "a1e79f9a-8981-4a99-a1ae-95b23e8e4af0",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e58d9927-2dd4-4f7c-960d-0078dc2d5d1f"
        },
        "item": {
          "id": "34d02d72-033c-41ba-9d72-c21ab332ca63",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d63e5fb4-e757-4513-a856-81b3e2e4dba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d034388-eda3-46f1-81c3-e474af98be12",
        "cursor": {
          "ref": "c1ff7213-c00c-4762-84e9-3cd9c8adc3ac",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "61def064-b8ed-43df-a2ad-038ec94d7c43"
        },
        "item": {
          "id": "8d034388-eda3-46f1-81c3-e474af98be12",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0a4d8e2b-a440-43f3-981f-af39efe7907b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b872f0ba-9908-41d2-9c1a-2fec21dddbd5",
        "cursor": {
          "ref": "34cec133-2436-411a-93de-7ca27465920c",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "91322461-8a11-4a45-b23c-1623de72dc84"
        },
        "item": {
          "id": "b872f0ba-9908-41d2-9c1a-2fec21dddbd5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "966a2798-27bf-4163-b4b4-9f6871788dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae6eacb-ebb3-4326-840d-3d4b7983305d",
        "cursor": {
          "ref": "7a08d69e-9b9b-4520-a6b5-05165d0e3509",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f46d7d08-96b9-4796-985f-a23dd4f6d822"
        },
        "item": {
          "id": "3ae6eacb-ebb3-4326-840d-3d4b7983305d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "10e0c81b-af97-4878-8978-ca6c8c8439b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b167a6ca-e39d-4ad6-9cae-1ca054abf931",
        "cursor": {
          "ref": "e50825c4-8301-4bb7-86fe-e58ccc302280",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c37da270-b809-40cb-bbd0-db09588588d6"
        },
        "item": {
          "id": "b167a6ca-e39d-4ad6-9cae-1ca054abf931",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "01047421-fd89-4053-a4d6-60d0ccfc8e9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8089c187-75f3-4ff6-aab8-f87702057291",
        "cursor": {
          "ref": "ff126b61-b127-4108-89cf-5af3e29b5c1f",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "642ee99f-bba2-4b67-9ac5-f7b1150a3500"
        },
        "item": {
          "id": "8089c187-75f3-4ff6-aab8-f87702057291",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "ee6c3690-5dc9-46ea-a64c-3cd1d89b268e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 29,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d46cff-fbd4-48ec-9405-0633680b8444",
        "cursor": {
          "ref": "d63668e5-58a1-46a0-a78b-787893043be0",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c2dedd49-0eef-485f-8774-974136b7959f"
        },
        "item": {
          "id": "a9d46cff-fbd4-48ec-9405-0633680b8444",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "41463c93-c0cb-4cfb-8a8d-72da91d919fa",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccfbf5a-6d30-4950-8706-016a55bb423b",
        "cursor": {
          "ref": "e69cecff-35b4-400b-94f3-a7e315b861c8",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "69b5004a-5b13-4a86-8234-22021ec5d177"
        },
        "item": {
          "id": "8ccfbf5a-6d30-4950-8706-016a55bb423b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cd63c8e2-2236-4daa-b393-f1b2296bcfcb",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2b5b34-b9ab-4418-a491-0409d161dc3f",
        "cursor": {
          "ref": "2f24cb24-f9a8-49d4-a7e1-27a8ca74e71f",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0517c200-d797-49c8-9091-0c2a6598b936"
        },
        "item": {
          "id": "be2b5b34-b9ab-4418-a491-0409d161dc3f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "50ecf887-76ef-410c-b8d7-be7336b9bf2a",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a24304-8eb2-4bda-82dd-1bc7ec31513a",
        "cursor": {
          "ref": "dc599f46-9737-40a2-bf7c-11c3632bc82c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "713857d3-7362-4dd1-af44-f2836ef2b25c"
        },
        "item": {
          "id": "99a24304-8eb2-4bda-82dd-1bc7ec31513a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b6ed6cdb-9af5-4758-a6cb-39179de59b56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a24304-8eb2-4bda-82dd-1bc7ec31513a",
        "cursor": {
          "ref": "dc599f46-9737-40a2-bf7c-11c3632bc82c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "713857d3-7362-4dd1-af44-f2836ef2b25c"
        },
        "item": {
          "id": "99a24304-8eb2-4bda-82dd-1bc7ec31513a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b6ed6cdb-9af5-4758-a6cb-39179de59b56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a24304-8eb2-4bda-82dd-1bc7ec31513a",
        "cursor": {
          "ref": "dc599f46-9737-40a2-bf7c-11c3632bc82c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "713857d3-7362-4dd1-af44-f2836ef2b25c"
        },
        "item": {
          "id": "99a24304-8eb2-4bda-82dd-1bc7ec31513a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b6ed6cdb-9af5-4758-a6cb-39179de59b56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78c5853-1a62-4b19-a19b-5da8d727285f",
        "cursor": {
          "ref": "85030bc4-3a2b-4d3b-8edf-0bf4e5b1e3b5",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7947f92b-6a8b-418e-8252-0d98a6a05865"
        },
        "item": {
          "id": "d78c5853-1a62-4b19-a19b-5da8d727285f",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "e4fd879e-6c58-40a9-9370-5f44c6ffa006",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 28,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8106f408-0d98-404a-8bdf-e2af948bd88f",
        "cursor": {
          "ref": "46c370d4-15f6-4787-9dd6-ca62f5c86cd8",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "804c11a0-16d3-46fb-912c-7791a360eed5"
        },
        "item": {
          "id": "8106f408-0d98-404a-8bdf-e2af948bd88f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "584c49a8-6c0e-451b-bd20-55c298a4a3f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8106f408-0d98-404a-8bdf-e2af948bd88f",
        "cursor": {
          "ref": "46c370d4-15f6-4787-9dd6-ca62f5c86cd8",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "804c11a0-16d3-46fb-912c-7791a360eed5"
        },
        "item": {
          "id": "8106f408-0d98-404a-8bdf-e2af948bd88f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "584c49a8-6c0e-451b-bd20-55c298a4a3f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5798a68a-0d43-4748-9499-8a5323dcd5b4",
        "cursor": {
          "ref": "879b0986-3724-43fd-b733-3d2b29190ced",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b1a42851-0b03-4bed-880f-18ad9bf06ee2"
        },
        "item": {
          "id": "5798a68a-0d43-4748-9499-8a5323dcd5b4",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "b9a541a0-657f-41c3-9fc9-858d27d387a5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 29,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3775a96f-eb91-4293-926c-ee81f764864b",
        "cursor": {
          "ref": "36e5239c-c759-4dc5-9fa9-e7fdc6d28006",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1533a3ea-60c3-4d76-bb2e-536d28833aed"
        },
        "item": {
          "id": "3775a96f-eb91-4293-926c-ee81f764864b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "96f9a3ca-5fce-4e75-ba36-b175ab68a6a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3775a96f-eb91-4293-926c-ee81f764864b",
        "cursor": {
          "ref": "36e5239c-c759-4dc5-9fa9-e7fdc6d28006",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1533a3ea-60c3-4d76-bb2e-536d28833aed"
        },
        "item": {
          "id": "3775a96f-eb91-4293-926c-ee81f764864b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "96f9a3ca-5fce-4e75-ba36-b175ab68a6a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454a417b-ab40-45e3-97ce-67fd38bc088d",
        "cursor": {
          "ref": "661d0bea-2474-414c-aa08-1f77bb371270",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "bc86c5b0-5503-4e2f-b406-221f2348b4e4"
        },
        "item": {
          "id": "454a417b-ab40-45e3-97ce-67fd38bc088d",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "051d1b82-7b8e-4dea-a9ed-0f7aa76eb903",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 29,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}