{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f6a413da-ec2b-43f3-bee1-3d1cafb698a2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6873cd67-d83c-4f0d-90f9-9108bdf4b44b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18fd347d-ea07-4a09-b60b-0702ba9e1e71",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "680c7e37-bf0f-4aa4-9cd4-8cf1b74f5b24"
                }
              }
            ]
          },
          {
            "id": "016c7ae3-fb41-4c22-945b-73f5bb2b05f9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "35ac64eb-bc12-47eb-91ec-9cb8e34b0fcc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a0eb1f35-6819-4ac7-ae27-b37996ca8970"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7f562397-f982-478e-8f28-5e61f8d5c1f1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d2c249a5-de37-4221-8acd-968e46947c99",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5dbfe4d5-f765-4929-8a40-b8635eba21c4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df31eb86-e8cc-4a22-90a3-889f24179bae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d23a28c1-0cc0-480c-a982-ca83a053be27"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1e9ae4ea-b49c-4f37-a913-2d9f32cb12f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ea8bbebf-d0a0-4fd7-9235-72f30c6d212a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3986dbac-f4c2-4a8f-a6da-dd51a304133e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e0d7d85f-c095-412b-925b-24a7dcdff884"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4797f616-3462-4b05-8494-d00f7005b7cf",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ae67ae6a-3d01-431a-b638-38c3d899a637"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47ff5ed6-f807-403e-9c71-45af1411db32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "653a5c7d-7160-46ac-bede-69e3b364e189"
            }
          }
        ]
      },
      {
        "id": "ee35d8f7-6671-4b3a-8a0b-c4e7996a88e4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "128fe234-6f39-4b27-9018-d8839054546f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aaca722d-fc88-40a4-a695-55a987a2c539",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a7f15131-578f-44e7-9eb4-8fbcb950be55",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2619413c-a8ce-4598-9e14-1bc5ecf236a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d691212b-6d36-45c9-83dc-6fc87b29ecbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4698aba-2f68-4954-ae99-d8bc571c61d4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d248c64-0772-413c-85d6-6a144a2a4ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d061ac1-8c28-4bb0-b6d4-3ef498201faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6beb3f-deae-4fa7-aa01-7ba83665a29d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d96adf-c0f9-4c2b-9042-a541b7df3e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3b54655-291c-4210-a55d-2871ce9d3c9b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "04a4a38d-2433-4697-a8cf-7cefc7217eef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "35cd89c6-e45b-453b-80fd-897c3b9da118",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e62bc7-3d70-48fc-9314-6516fa346982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8889d1a-0ae2-4052-977d-76ea0ec57cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2338a317-2c13-4808-a508-0e3760c411d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76db595-bd8c-48e7-be81-558007d66d25"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6f965b3e-da43-4cb6-b53e-0b7c3034c96f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9fc88fa2-5efb-42e8-a17d-b86f640ef22d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df854d3e-dd05-41ba-9461-07aa160be32f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6df8cb7d-83c2-4451-b952-4391b98f046c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "226b1f87-b840-4e88-8702-45c59725f53b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "af4d8975-a194-4f67-8de5-c9c172c5dfa1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbdffc3d-ac68-4c82-9fd4-6a932676ead4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "efcf38d3-5940-45bc-b27f-959beffc94f1"
            }
          }
        ]
      },
      {
        "id": "6c693b5f-43b7-4c29-a4ea-8549a1e011f7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f80be40a-eece-494c-94ad-0ce8ca0002e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d23b1f05-ab16-4884-9aaa-72dc001032fd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "42b1abb3-c572-4b66-a37e-5d8f6d21cdd0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9093d9-9104-4274-927d-c2c63fe8ba8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d34921-c125-4460-ba08-4aad481a3f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd68c88-f8c4-48f3-9b37-be25c2fc1233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "932e8225-8cd8-44d0-91cf-59826f7f6039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99b1066-7ab0-4d38-9e48-0978334f2b85",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92eb226-7085-44e3-8a1d-d308a27d5c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28df9fd-6a77-4fc6-8de7-ba444ad9a6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d98e037-4609-49e6-a369-6539a31c05f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c424aa7-05de-4e1c-8d03-d96e9f647899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0314f58e-8e19-442d-8694-6de770aa7130",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545d5481-d2cf-419d-98d9-1703bee34e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8feea7-2a17-4a07-8976-e480e24a17a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5dbb84-4be1-4da1-9617-005845b62c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dfbe980-9c6a-4d7c-b3a2-731ab9ad9b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9c4151-da4b-4e81-8403-06a51edd561d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a53c11-e30f-42c0-afcd-b651a8cc35b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c8624d-5e1c-45e5-8cec-92fa8a51a646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94fa69c-94cd-47cc-90c2-a161672b1669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a1e441b-d83e-4da6-8743-031dd1abfddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3f51e8-74f5-44b8-ba31-1d28e0ce4d21",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d263806-985b-4382-85c3-bb69776f6faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d9bcf6-14e9-44ec-85d8-56b3ecacaa4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a567736-068e-4330-a2c2-b17838b18c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "359fbf5f-6c0f-483a-8055-78b246444c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca3e05e-c952-42b1-8e4d-2148967a4a3d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ebe50d-d556-40bc-a492-7faaf017952c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d57819-6bbb-43d7-8b17-b38dbbe8a401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28e3564-a726-48a0-88ce-a8fc70926efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ade15dc-1a65-4ee6-b55c-ee5df3f37eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042a881d-f5b0-4258-8ff4-5fc177db4873",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "373dac43-fef4-4a5e-b5f1-1468fc95b69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b1c094-3262-4438-ac02-330e1534d8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2e21a3-a442-4dba-8a9e-212bc9081403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cc931d4-345d-4389-8d13-2cb33c268fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8faacc02-0d82-423d-97d7-dc7939dc12a2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7be1a66-802a-494f-a39b-4d36ab3857da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd276d2-2689-46c0-8f14-66613205ce09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c537b1b3-9c6f-430d-98be-5b56ffb03770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0601243-f212-4566-9a69-37d746ab69f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b19ada-4942-49d2-8382-6e9d5bdd95a2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc65030-8597-4fe6-8808-4afd2170a8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573fd5f2-b4e1-4a97-b464-0f3a94878b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec09436b-9fd2-4d47-87ac-c3fb82f0d765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "736a624a-afe7-4217-b0b7-f4bc4d326b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cf4996-ec3f-4c3d-852a-57d3a42e8ab1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7bf404-a7fc-4f14-991e-6db7bf2ba662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359dd019-ed44-4036-a740-6d1aa6f725be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3231702f-ce7e-4a20-bd9b-7c1599823f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d4c29a0-16a3-42d0-8d87-9846474610d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a323023d-11f0-49d5-8fe0-7f914dc9d95c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99f7205-f1fe-4ee7-9995-87640a98d8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556194c8-2eb5-484e-a2f8-0c009c802745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc1280e-f5fe-4f20-8112-58ba73f57bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da8ccf66-72d2-4340-8978-e183ca25db37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317618ca-0fe1-4fe5-8f5e-06302a2755c3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f2fae0-08f3-46c5-a34c-7cb017f4bd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c766990-3e86-4239-941f-d227131ef47a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da070b01-5334-4ba0-9b03-ec8c22214e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d2b1418-0a32-4fce-a9e3-0f6b3e52d5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84da821b-fc77-47f2-9a58-c4a41492fba5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25f22c9-00a0-4195-aeaf-d013b42dc2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d95dd7f-34fb-4078-9e6c-9c9f432b114d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de046002-2eaa-412b-b819-2b93f30b0ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba444842-fa30-400f-a22b-7a97ad706e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06695994-7a97-4eb4-b952-0cf7f2f0cee6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6774e801-aaa6-4184-b168-78269e1ce189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c82e30-93f9-4abf-a053-af15476f2732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c7ed2e-5893-4c63-9f36-e7085d57dbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9388c18b-842d-4ea1-a6fd-3af24570ead5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7c71db-8a56-4430-93d5-53be0fbd23b2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2c3153-1c9e-4932-b164-9f53d58f689b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10eeb09-d636-40a0-b975-b65265bd66a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58baf53e-cbdd-4c42-beb9-a1d93aea7f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50a808ed-6114-4b00-b88c-eab1686a02be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24969e56-48da-4b9f-a852-14a659300bbb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c63a48-64ae-4acc-a1cb-1a05ee46b34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403c63ca-5203-461c-9e1b-4a7ca25218a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c776f92-0768-45a6-8eb1-ea170568fdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e890f76-a386-469b-9afc-a424c3616cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40d07c3-c18e-4281-b6a2-f3ab0f22b9ea",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5b6c61-6432-4fa8-821b-5e16f8e9d854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ecef137-2c20-4ee9-ab9c-ba18eecfec9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc2805e-0b78-4efc-8231-7f3c55f22e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6834fbfa-d860-46b2-b92a-545e8765471c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e88fe06-3484-4f5b-ac52-a3d30ed15d59",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb518079-f20c-4066-b646-5300f786dff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523ff5f1-7078-4b8a-a05e-ceb5c1b0402f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c036de10-1268-43b1-bbc2-a2ff74ee1ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a3b145-c0c8-4789-92ab-34b93022b10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc22579-73e0-4990-ab22-a97e47d37d9d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688892d1-0bbe-43df-944e-1e810433abad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa83d53a-dd21-4474-900d-6ee504f8fb63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57aee70-e2a6-405a-b946-944438af725f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03b63793-901b-4f1d-8c23-dfe2394631a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2701f6-c07e-4030-bb46-c3fa4fed203e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d4abfe-9b27-491f-9224-6323d7956312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b324b1c-d1a9-4866-9a74-23baa0ca575d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d3dd77-b007-4089-a016-d3fa24d0e30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aff55498-e55c-4615-8acd-a1851484c076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a277c69-37c8-477b-b994-b505b91170e4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c9d833-49ee-49bd-8829-b4687ebf5090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e4030f-c71a-4d48-bfdf-4529ecd3b81c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f5c11e-c471-45bc-9b05-2dd6703f686a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72b48a41-cd14-404e-aaef-e148719d1d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62cb1f1-7336-40a3-ad35-95fb96cf7bf9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdae5197-5540-4b85-a298-2caad959a25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d30845b8-d1f8-49c5-a6f4-2a34704d1936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b8d9cf-c713-424c-a68d-2751d292e89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d16fa09-395e-4818-aa19-4235c0ffca42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44dc66ea-84db-4d1c-bf5f-958fbf59828c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84171b89-9396-481a-a310-6377b1a74cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c4344f4-eaff-4fc0-b88b-d17bb922b72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd06a6b-875f-4f94-8b24-d363b5d0aca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e69f7e86-eb83-4556-8665-6bcdef8414b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28d9d36-e105-47dd-8c7e-489a26a5b6a1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420e46e1-87a4-4397-972b-e9b3e7de73be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b78b922-b255-44fd-a997-7e6baf9285c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc356e6b-2780-407d-ab41-ede14ab1ab42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "be0a5567-64bb-48cb-94d4-fd85a22a526d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4276c1-f1e9-4c19-bf9c-4b3fabea9d71",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918f9a02-fe8f-47f7-b4d1-bca5f02f3fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f680fd0-47d9-4e96-97bd-0f574d57c345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf803f1-3fd1-4b9f-991f-421d84984deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "30dc3984-49ff-48e7-8746-7a9053d80b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17e5c68-f300-4121-adcf-bf2ecd946a63",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebd8a4f-7f15-4445-ae5f-509745a35637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8789ab08-a3c5-4c83-bd32-16ad537675e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96df9d0b-9127-4248-9621-9d53fb1b8c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc290cf-cab6-4a47-af28-08976a6ba164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8999f90a-499d-419a-b220-abe0d1d25f78",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f46f3ef-849a-4805-83f5-22fe0d3d4742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d136ebbe-1064-48a0-85f6-17703a061b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b908e2-13c2-49b4-b60a-7abfceda2f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ddf2b9c-9d6e-4099-a317-dca9741e6f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6410b7-c3f7-41df-a1b3-2ac91c9f4143",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5b5069-ada2-43b6-b461-a42f55d7a208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e256651c-4c02-44ba-b5ad-f2748ba05b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6ce11c-8c87-4d09-ab55-89fe9b60163c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48da9a5f-f980-4c7a-8647-f5dec605dfd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa0def1-2d11-45e0-93fa-eeafb20a18bf",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3e6c73-fa85-45a7-9398-542523809f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380c6ea6-8ad3-484e-ac9e-258c42543eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a47e31d-dcaa-4f16-ae44-2df823a34904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc43cee-30fb-411a-a3c8-bd9dbea727f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5aaf1a-9a86-4a3d-bf4c-dec3c35c3ee8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e093699-1423-4362-bc7f-0f413db5cd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5917b679-4fa4-4416-a44d-629941eab72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4959c074-be69-430f-af07-bb945daab8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bfbc42f-1caf-4e80-bc65-fc286adbf95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d09f247-c548-4b72-b196-ccb75b71cfb1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77016850-6114-40da-af57-7c86d413925a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d48ec6-74ab-4465-98b4-f49879b52538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b7ad2f-e67b-49f0-bf62-880950b3c2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2317839-13d1-46a4-b764-67dfa47c6186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9095dc-d5cb-4bf5-83d0-1fabcb327cc4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c732e32d-fc74-497d-b3cd-22294b1d73aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268ef0d6-e4de-48ef-83a1-a6432feb40f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01de175-103f-4b62-9451-f98415ded9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2eaa961-8909-426e-ba00-726b90570010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afd7482-7dc6-4cf1-9ddd-5f1855fd94b0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8417b9a6-9c33-43a4-aefe-47cc612c19c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63229bb4-d58f-434c-9648-39533404a810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5a44e0-838a-44c3-bf49-5b9ee992889e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "334c11b6-6bee-4dbf-b99b-4665f89b8077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad68168d-b3ca-4a60-bc6e-f0c9b3b46bb7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d72cba3-18cb-45a5-9500-8bb99f7a5856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c554b033-0215-4dd5-80ad-8779c94f053c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ea1be8-5582-4a5d-8463-b0c2e08ad6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b5c85d-a0e6-47e9-ad66-9f86a7634c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabaa54a-f84f-4c77-9bb0-fabe23ad333b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe91ffb-2cdd-4a10-99a3-90adf191774a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3671cb04-1599-4ea4-9a86-c7284cb9b796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a6922b-8fb1-4076-909b-79d77ad1e970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7c221f4d-2fc7-4194-b578-37455a82ca1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03f6d08-9ba8-42eb-a9a6-055c69d0a640",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504e3a3a-432a-4df8-aa48-784e321d7724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b9e7729-aa43-43d9-a766-0754969e35af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56711d3b-037d-4cdf-b4e6-154b87d50099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2a176b-8d93-4fdf-8961-f197a934fc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc88f27c-d5df-44bb-985d-18655764b429",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41671876-b2e3-4aee-af8f-cc9636012a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617772a7-7df2-4d57-b8eb-c886743efe16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71ad8ec-e2dc-45a6-8adc-1eaba9e0ba0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53b01d74-82e5-4afc-9516-1108d928176b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0f7d4e-3057-411e-b715-fab2e97fa8e6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b689ee8d-5328-4ffc-b0a4-576e6e45b43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72548b04-7013-4c68-8353-a94b1e1ffc1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16eec45b-aadb-4be1-ae74-2fcae0467353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e28b8d8a-1485-4b78-8dc7-108b24004627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93a377a-de30-4df3-815a-68b0bb736c59",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5f0f90-29fc-46d5-b3fc-fe40a6f5c817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c574f4ed-649d-4b4c-8d51-c93577252ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b75ad7d-64eb-4eca-883b-c72001b269b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "20f8fd4b-f7c1-4df6-8d6e-0af774a7e55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3560b46-9b9f-4e02-9719-142775234539",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3856231-4bd9-4971-ba7b-4bcd3268b6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedd8769-b690-4a0e-b6be-e0f159403e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e712b4ce-09ce-4a9b-a2b0-35b248492ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4758ac44-efdf-4c59-b47c-af7116471bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a96bcf1-25a4-4330-ad36-bf8bf66c19e9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a0811a-b2cd-442a-be5b-bf6db6b56ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c24b29-396c-4e29-a095-b51e145ba647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f498b9-1248-4f15-9cec-ea5ed1784db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "71da3aaf-d51e-42b4-9391-912f09f3d6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b832bdd6-8f43-4827-8ff4-c931eae78ff6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f3198c-667e-4627-aad3-156a9f469e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "292c12e2-cb5f-40fa-89c1-a773876781bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13eacff3-a5db-41f0-a94d-329093fddce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f801db26-f34d-4691-9942-2bb094c5d641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774fc9ea-5443-47bb-9246-c01f0816edd8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feed7632-5e5a-430c-b6fc-5be42fd89967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65511283-e64b-478d-af2f-c5b0ae1ab506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ea6d0a-008b-47a4-9193-741e6164dd63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5375f72-d3ae-4c16-b75a-cad06e527d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98c9734-734a-4753-b63f-d0415f7d95d7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b1a33e-7d3e-4f1d-bac7-fb54de69ca0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2285ee0-536b-4a46-9165-430fc9f5495e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cd1e57-e22d-4be0-8b22-91ee120fb404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b32a014-a19a-4813-9900-35d6d0e3219e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac91fed-baaf-4198-9119-d0ea3db31645",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155549f5-db97-4045-9148-f7a3d1bf1413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd926b22-7ae3-41cc-aa1b-6f8dfc0883a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a56ba8-f990-41d4-bfa2-5defc55823fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e4f0a8-6310-4c0c-beab-f43c0505fac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5190927c-1954-4c93-98b2-c905beda52de",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ab9f9b-2599-4329-941e-29c19089e1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "710c341e-61ac-4bee-bd40-2814d3d0291e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4f750e-00d5-4b96-adf7-87038af83af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15dff2a2-3e9d-4b20-8a3f-224df0e6836c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a1b91b-b8e7-4273-bbff-ee3256f96f8c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487b171d-88f3-46ab-9faf-7caff31a9526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12429f9b-28c0-4ef7-b673-b12045b544f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ab5645-942c-44e3-b5b4-1e04d770d792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10dfba00-e49d-41e7-b1b8-d397ce57d130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c28efd-be85-4f8e-b01e-aa0667f83c52",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78039a8a-de15-496b-842b-9c3c9d0ea8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b83e53e2-8813-4e31-9caf-7bc6b69b11d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6539cc-6269-4c19-82b2-19712d75e202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c98be9a1-f271-42d6-a01f-9ddfa0b25e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915dad34-a40a-4261-a01d-5aa08b9da1b5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be9e730-0979-4c25-8cdd-cc98c5c38787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ac3df5-943f-4425-a41b-f4a6011cfcb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f2e3af-20ea-4af4-b2a5-d536f4a0b755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "903d94f5-431a-4187-9f49-329ed50f1660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5b1ec8-84a4-45ec-8d38-9337f6a99828",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f59e3b-a8ef-492f-ab2e-9c0d7c1ca2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0808c0b6-a57c-41ad-907e-28097f152925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c883a7-057a-4e89-b15c-2efee6bd9c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a36679f1-9a8d-46ed-ba53-7c60b51c00c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe90e6e-ef16-4e9c-a936-59f118df6eb1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79a2390-08f8-4687-b5bb-37cf9ca32278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06953c6-4fb2-4b82-a79e-e1a918730d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194bf11e-cabd-4f6a-9b24-e00b96d35eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "88a5eb9c-5c15-4ce3-88f7-ff30a7aa2203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a076e8-222f-4f6d-abbb-9778d95e2573",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2581a4fe-4cd8-42ed-a804-a18ce2dc5eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b865d3-4bf0-460e-8028-3917683db331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bddfa47-6f5c-4753-acdf-db672ecdec86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2585a6cf-ab6b-4a08-b413-1e03e59e6074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a577a1-010b-4e36-84c8-aca51c2bfece",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73059c73-efc0-4155-a7f9-5a85e9094db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4a4117-c832-45f4-b97b-bb372d1524d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8602e50-8df1-4660-9c6c-ec71c452a218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc78eeb-b77c-4ac8-b17d-3b6b5e74e422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f60172b-f18d-4b15-b594-3ed4c65baf6f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa92361f-b28b-48a5-8b9f-8d33bfb8decd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f62648-2550-4b90-be77-514d0401d06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aeba58f-4597-446c-8ce7-79dc589be88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b92386-647d-4303-9632-cee75af56017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0fa9f2-a14a-46a8-974c-4957a370885b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052414f5-4819-4529-9184-89b5d6b2e870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb64362b-eb0e-4e22-8028-3b175b6fdcf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f63305-aed3-4f00-bf82-e91eab3c6f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fdffa08-c308-4fab-a134-dbe8fc61ff44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8314560f-7b55-4076-976b-c4527c565971",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1376db-6621-4665-b86b-b3d11e6d6c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90466fe9-0945-45aa-a916-f6387d85c376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d1040a-513d-44b5-bf37-d512106cdac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f02d41e1-b51f-4897-9d36-bdc1a60f8f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3957919-a2f3-48b5-87fa-869121d9c7d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f6eccc-5efc-49fc-899f-aa529ddd4d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5af527-291e-4142-9d70-b81fed1db4db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eab84ac-f831-4a61-82c0-7c9777dff46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1900f33-67a9-4331-8160-27d7d8a1f490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e7788a-9ba2-4208-9036-5e1255af499c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf67052-5d4c-4f18-9b40-bbb3ed0de3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d907de-c5fe-4891-aabf-5353605cb1cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45ea126-3794-488c-b945-7c655994b800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b5f328-0f52-4d48-a0e1-c8fd6e9f4199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f923532-f056-4f25-b595-f7e2ba7450de",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733703d0-846a-496e-9a89-73d494e80d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d661ab-e74a-4e9a-bf27-a362adca0bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776acc10-834c-4111-bb8e-9cc8d7d983a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e462f56-b9aa-471c-b3c8-9f4343196f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd49efec-6039-4a69-a213-f731080d7442",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee31bbc-bb15-4b01-89d5-a5fea736e52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b76885-1cb0-45dc-92cb-cec8450dbd77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2c7d63-634e-4c0e-9f04-e92096e3e1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c4ba340-e5aa-466f-af17-006825708929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef213ff8-d000-4f0e-a366-a266b152ce4a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de2973f-9ea6-433d-b1f4-74f47e7a4776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96afa463-c6d8-411d-834c-fcd6600de16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c581add5-068d-465f-807f-0bb906863882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c07f6075-d4c2-4170-b894-86394057454b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d74cdb-ffac-4023-b049-ef3517df7245",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97667a48-17d1-469e-a434-c0b918cf343b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3e49e0-f9b1-455e-936b-8983f59b06b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587d5d5b-24b6-4000-a322-6be4c963825f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c52ee94e-bbe7-4bad-884e-8d60dd59f23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f88136-e90c-4571-b1cc-fee6ebaaae58",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6011d36a-80e3-4b07-95e8-802e9f7d08ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec6ee92-d5dc-4e8d-b50a-89514552ea57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546f0aa9-17f1-425f-9f74-d471645ed688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6daada9b-2809-4df0-a244-526147fc5ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0521bea-0c1d-4490-8489-e537e46425d1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b67abd-0492-430a-a8bf-b54e8dffd2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198f8f59-e7ad-47ef-b901-0e4c114da3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334e68e9-7332-45d7-8840-1e93aff3e7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "462e14ae-70f8-45d7-b4f6-6ad9ce485887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49996924-fecb-4d0c-9732-74b44185bcf3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddb5935-0e22-4424-b592-cca2a65c53c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958e13ae-2ab0-4ca6-8157-0c56afed3eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d06b1e-8d05-462a-8edd-074910f9c883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b22458-71e3-4e43-9ec9-1cac64e1ac05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e2b90c-fa37-4559-b3b4-0e3476060e1d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158bcf27-7b4a-46d8-8276-99a24c40a089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83593077-3115-4030-aff4-7833898f7c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c72b92-c52e-49a0-add7-047d76e463cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b077804-de9f-4fa2-aa50-00e07b13c4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bc7451-c752-4f46-8eff-c6affb6c96c5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af05e45-3b80-4455-8bc0-33da01a03601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40bbd2a3-16a6-4682-a9ad-58b9a5b59a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a05989-7bd2-40ad-847d-8a9c778555db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "094472f6-6e20-4628-b60a-2092d0906f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be4afcc-9147-45ea-965c-ee7d29f016c2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d96388-362e-44d5-8180-a47ae943fab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ea9b6f-8272-4c2d-9a86-e79a5fe7b66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252d41b6-de4d-4ae5-8f16-1515a5d1bb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d2dbd72-d0e5-4e32-a70e-f17b406303c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f714f38-88a0-4c8c-8f7f-13b048974d10",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4998b8-a449-4079-ac5f-6231d2664335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d68a6e9-cab2-4e21-a545-87d71426c330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c549cc3-3b9b-47dd-82b6-ac5587d9b990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7feb760a-33be-4cb3-b9ac-45556b778d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945c60ad-077b-4d0f-96d5-cd4f31ff8035",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16259aae-99a0-4715-ab0e-0877aa5d1bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bedcb1e6-22d8-4f29-892e-fe01ca0eb9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0653d2cb-857e-4347-a6b6-f4a27fb8a9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4c40da-5285-4d36-a759-e16e6e839d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2bcc6b-679f-4af7-abc9-1f73620281d4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb09742-bf4d-4fdf-af92-5defe287c6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a80efc-22c2-4a8a-8ffc-98a9e80a0c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5c3303-1968-40dc-9a80-35c8ae65d530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "110bbee8-d21a-4917-ba52-73b698af7cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d83cb3-313e-498f-ae7c-1fa6366b5d6b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ef23e5-d633-4a45-aff8-1180c2b81cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f107c14-bd36-4bb0-88fb-b51404745ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ca954c-92aa-4780-8a37-facc125bf372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf477e21-ab7f-498e-9e74-3243a971ac97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8786762f-ed7b-46fa-8cf6-92d0ae4e3e35",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac2e714-96af-411c-bfa1-ea6faf3a9c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfac5fbe-b507-4e12-9f3f-440e05b53c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5412a140-fcb4-4e1c-b738-b3e5d7d17d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04be199e-3413-45d7-9d2b-466c0322c282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f067dfe-e4fb-45b4-9d6e-fe3b5efaac8b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81725235-84db-49b7-9e1e-9a62980425d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d97d659-90fa-41bb-9a9d-a2c289921335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddaca5f-ea7e-494a-becc-117caa784a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8dec6b56-6107-43f9-8d2b-94bc557bf54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd59e54c-9cb0-4d33-a029-e43c67966865",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e944a640-786d-4ba7-8501-bbeda333663f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ef6d78-8f6f-4dde-832c-ce72c723512d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68337a80-dd9a-473c-ad94-3bb4e86f6d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b05c4f6e-1947-4ccb-acbb-2d0478b3acf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79ba0b1-2479-445c-8c9a-c6e4f5e59a29",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d69f2aa-8661-4d52-91e0-dfece89cb8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b7f14c9-45c0-4d7f-afd5-5f7e5025552c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c06c0d-27ef-45de-9f30-d107d3bc622a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a499585-af47-4ce6-9441-be7403bb6e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b444dee-d6e3-415c-9a50-af2d71d2551e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444ad582-3a83-4bd0-abf2-56a6024d8316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "416e4597-023d-4d79-b1f6-4406c7345116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354ac4fb-6462-4330-b264-539ee91d293e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a38e4693-1ba6-40d9-9b3b-3129671d65bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84809bb-7bb4-4a11-a03e-5d608ee0ac97",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e855fd46-adc8-4a00-8eb3-15eb7fe16b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6efff915-ac69-4bb9-8503-3b31e7b4e18b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b51984-c960-4d0e-9264-e7ca3a606001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b59569-bf55-42da-bd87-34d54a9fbf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46df3eda-242d-4e70-bfa5-4110226d4d19",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1611bfb0-d2ac-48d0-a736-03dd974a2128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28da9b88-38fb-4f26-a592-227d90becdb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e3f951-4e07-407f-9ecb-ddaac5a3521b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c47876fb-0423-4699-950e-910938982808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046a89b5-50e7-4aee-8987-2187d7122236",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a471650-e9d3-4c25-8db1-fe7de15bb594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e3cc3f-bcae-437b-89a2-ae487fb10594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299cd307-3000-43b4-96d1-88d5de0e45d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c6446c2-420c-431e-bc0c-6fe0f3cb1ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc832b9a-ed15-45c8-96f0-674b55e67eb3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb2811a-8a36-4cff-a578-71d79851e4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270e4d3b-64f5-432d-8640-a11c728fa2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e748f87a-2f87-4361-ac56-15447e49d910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "482e09c1-4418-41d2-9a0f-b1b7dba3446e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d4d884-9b9f-4323-9c1f-06eb06e49be0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51fd809-f87b-44bf-ae0e-c487240df4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5b4b54-ec4a-4e4c-9d25-7decbd189701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e4d1ab-4615-4deb-8e86-fd2f6c024bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7456626-1a92-4d72-b3f2-7b9739f0e763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e98182-f955-46d1-a46e-46140713b426",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a587735-cd19-432b-aaa2-37e2f5aa5836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b044c053-6812-455a-9eaa-a665e639b66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e921a39-e2b1-4b6f-a6db-96fc50e6eced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef7c196-c420-4991-aae1-b94d7acaa458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a1157c-ee32-4d96-bf03-444178fb7b02",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a032979-fe53-411e-ba1b-dbc6d6299d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153a3f29-048e-4d5a-b55e-ea1f6d235eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b93058-cf21-4006-b1a0-fec7e72c41df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9db897-7400-4fbf-939d-c50dbe25cec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3603e330-25e6-4f4d-bdde-86cb5ee27e2b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e144d74-feb8-4fce-abcd-f329b1f02dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093b77ae-083e-4c36-824c-2b10e196ad70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adb5847-bdc4-414f-b749-ba6d3279e231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a19ea7ff-f53b-4499-ab98-f80e36e5a4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9536c460-d6e7-4972-a7b4-44f72245fdcc",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbb9227-a37f-40d4-bff7-138ca5f1ab5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c55e6b2-5a5b-49d5-91ad-5b1400e7ed3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fc9b19-ae96-4b50-96f2-89968e4d8e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc1a24a6-9c06-4ef6-80a3-bd2d04403e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f24cb3-4b8a-4448-9d49-61077dc52656",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b5c876-e53a-4eec-b85c-d85844477013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00b4632-b048-4fda-9a7c-54bddedcc527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6377e1b7-50a0-4e2b-a31d-1bb94ed22b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2ecd49-bd7c-4be3-b587-30b19b28a12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d5aa35-bd4e-404e-801e-4d13272e596b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b5dfdb-3b74-4b52-9e1f-72c01833dae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557cc498-3e60-4f09-a267-17d67e9e611d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4474aa5d-37e1-45be-9a19-20f8607ad4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6814c9-0597-45b3-a307-48e1110f8437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798c25be-fde3-4b34-98a8-9e1ace0856b7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fede6f-7dd1-4622-9608-c7e80a5c3946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91546167-9b68-4368-884d-6b170665f37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11018681-f67d-4174-bfe5-483f6322129a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cff9c7af-94ba-4546-b9b8-55390aa5325b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb929016-5b25-407a-a43a-5fc49ff4da88",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954d7788-d877-4964-8f54-f68cb4c57fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a3d1bc-70ab-45e9-bfa8-21f914104794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13add0b8-f58f-4051-9821-d019b3ea317b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8b7241-d8bd-4797-b2b8-2745ad3bb0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78abbae-9da3-4d0d-b185-1607a8cd5083",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee672eba-ad63-4bc5-b3d0-9645f7893d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f2f9b7-5c53-4639-ac79-9e0df0ee99e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdf03e6-2037-4b01-b4b1-ca6e238d9446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2658467-b523-4ed7-ae85-ec53a77d0337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d2dd13-31fb-4c80-be17-0bfb892a2b2f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdaa2320-b8cf-4891-8cc3-449541cb312d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7eeeecc9-7b75-4d70-9880-b1eb64f4584c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed68e00c-38f7-44da-a36d-b97c8c98506f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d66e8b41-9ffc-4299-8090-f54f06f883fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "52739c9f-2c8b-424d-bccd-7e55f926a676",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5604595d-0bb8-49e7-9990-f07c90489fd7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c528ab0-e3c9-4b00-ba7a-3ba8b0ddf7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2da8cbe-1cf7-40c9-b28f-d39bd74e66a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ba5b1c-ecf1-452b-a43a-f059a28456d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b53ace4b-5ae9-4ff4-a5fa-117b1503476b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "650119a9-1244-41d7-afa0-38a5ddb2aa82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa739f1c-7832-4c67-98fa-e2e71a9a3698"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17c2a7a2-a2b3-42e4-a250-c52b0f87eeb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "494aa3f6-e735-4b68-8632-88f6aae00926"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "edc744c1-4778-4333-9a0a-56f5e47ef7df",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "07adc1af-e121-4f22-b27a-16bea6e0e878"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "31d0d5ae-7d26-46f6-8275-9f4731532397",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d7dc934-9dad-4979-99ea-ac2936aa3938"
                }
              }
            ]
          },
          {
            "id": "3eabbcde-b0ef-4820-9742-0da31a33100f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1a41ac2e-8ad9-42c7-aac1-819fa13e59d0",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1ab33c2b-14bd-4456-94c8-04f7dddec572",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a47653-e516-4cef-8b36-1c8d8afcbbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "669bc04f-0c88-4ae7-b209-443723dee999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff59bd33-5765-4075-bd7e-bcb30559596b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f789b9-556e-402b-a1d8-f2c82d71fd94"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee5c702b-d774-48b4-a294-298e6ecef2f8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f7bd373-7c88-4543-a4ab-303894df2ce4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf2818ff-ed52-4885-a1d3-f69569b000ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9448101d-3631-4627-a0b6-8cd0b524866e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8517789a-fbdc-4811-b63c-97eda90c283d"
                    }
                  }
                ]
              },
              {
                "id": "a90d4411-5d9f-4c94-9b2c-b4a3f216c908",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fb1a60f-8a57-4bfc-a790-4be2a3a3af9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "688ecea0-8458-4e69-966b-f1472157ea24"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a43b968a-e1a3-4767-83aa-f5f98b729098",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f91e2041-e10f-4c7f-b4de-94cbc4c52a8c"
                    }
                  }
                ]
              },
              {
                "id": "84cf6d76-0faa-483f-8ec7-080b143c0081",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca5dea7c-55dc-4536-83e2-7a18375fe8cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "206c231d-d0d0-45b4-88ec-01331f1670cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5eee5e5c-243e-434e-b2d2-6def4486809f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0540819f-a3a7-478b-9f07-9fda41b6401c"
                    }
                  }
                ]
              },
              {
                "id": "00608476-0240-4467-8a46-f0eca5fc2c45",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce15962b-b091-4554-912b-ab564dc46b4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4d401e6-6437-473d-9b28-df5116caab7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa467550-ba6c-4a46-92ba-1416322c8f7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7c1eb4f6-18d8-4640-82c8-eea6199e441f"
                    }
                  }
                ]
              },
              {
                "id": "74789da9-d0d0-4d11-86be-40a1f1c65933",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5ef2e68-2e1d-4f04-b109-ad30c833c528",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65fcc3e3-a5fe-4984-a1ad-b68ecfff4ed4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d46be2a-1a19-46f4-83c9-7faf102f93d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bbfe0285-1355-4206-a6dd-945e8201909a"
                    }
                  }
                ]
              },
              {
                "id": "bfbe1eec-248e-42be-a8ef-6ce8b22157aa",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "114c8043-6541-4b45-8563-f2010d09ebfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "842c5edc-c5e0-491f-8cf3-95e40751ec53"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8259d70-73c1-415f-a279-b9f9cbe81ca5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b7656cf2-ca53-450b-8cc8-5601383e6a6b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c34c262b-7176-47ab-bf7f-c469cd4c8bf2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "57b2a959-3710-48de-b381-9b86c9efa181"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6eba382a-9a0e-491c-ac5e-ffabb1be8f5c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc5b67b1-a383-483e-9907-c77314aca024"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a57d4e6a-5f2e-4f69-9acd-1c9a58aa4341",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1e0713d6-aad7-43c1-b8fd-09e491f2bbba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5da7e9b7-d513-40cf-ae58-d8d92a470c65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51407440-4541-45ef-a632-42cd06ba773c"
            }
          }
        ]
      },
      {
        "id": "fdb201c7-9705-4402-a4e9-142887e96367",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "63ceddf9-b7bb-49fc-9737-25d293a3840d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f568bfe8-9141-43cf-b29d-2cf86221178c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "95f92b16-063d-4f80-bad5-c49dce7d7cc2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa3b605-cd38-4da9-adfb-c05aa38171a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b865fdd4-5b65-4f82-af10-aa3bc358ea20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96727d8a-6218-48ec-a86c-d67a4cffddf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "772a9ad0-14b1-4e83-aefb-160adce14fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522d957a-eb24-47fd-aeff-23d47121aa3f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1c83a7-0c39-42e3-9878-47fef79c535b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bcac477-612c-42f7-bc08-53fddaef5f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509e03aa-ae03-4ef3-b2fd-b5090017f923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "52891297-e6f5-4287-bc0c-4f1975dcc044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b8ca5a-c847-40c6-b293-22161ad4e415",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98a77d7-14ec-47fe-9ce4-ad7b1b596d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6efd42d-d654-4841-b967-745e4de3264d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c24609-1217-4883-9efd-323ebb1fb51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "237da13e-875d-4917-a999-40480ce06aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e5d9b6-c3bd-44fd-a1ff-b6bc1bbaac17",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697cc68b-dee8-4fa9-bb91-d02ce2b59066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c103d0-0309-4ea0-b25c-9a14167e504c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189f072f-8dd2-4235-b177-d67845cc6ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9df071f7-ddef-46ea-b942-2a8171c8356d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4936d7fc-0a92-45d6-ab0c-4d4928fffd77",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd27945-2a7e-4f28-8a30-a54aa4a24c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b226fcd3-1286-49e5-8b81-ade558236f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7b1db1-d500-49e9-8cdd-99ce08713455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0302a6b2-fca8-45bb-8845-b014f052b00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4339317-58bd-421e-966a-c8133788af49",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15be4105-71f4-42db-9c57-7cec4b849118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85842c73-81e8-4a23-9ecc-bd73d8a1e613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b04457-ce89-4e5c-bc0c-bcf51014615f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d3b386-d007-49c8-9584-94e99a8b0bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21004ee9-e9a1-4672-beab-0fbdd0c3576c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad12a35-51ea-47f9-954f-11ca0ab4de2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5794d39-f014-447d-a093-974c0c710ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41580bac-1583-49d3-85f8-a99db21d440a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "15f4980d-d202-4f19-923d-8da05983fe59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8a4ef2-38fb-4d13-8282-84702e87e381",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee19e57-5b42-4697-b0e5-6862904a6f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126cdfe7-7033-46fc-8d61-5a94968e47cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdfa627-e395-49e4-b471-a98c24c39ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5357f76-5655-41e6-b69e-b6a12a730207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84efe0a8-d382-45e0-aedb-e735957d188b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9dec8f-4fee-426c-916a-c73b11347635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28fed891-8e31-4122-ad52-3ef745d6ac1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757c83ba-adae-4108-bea3-00ef7ba81d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82cd5fe0-3386-42ce-9ded-241f919f6504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744c82e8-5b5a-46f9-a7bb-18b141251ff7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97dfda06-5ace-42d4-a3b5-20e1e405fd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e12d9b6-88c5-402b-843d-555ff4d38c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daec2253-8917-4ce2-b178-8e2cc685febe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b357abe3-dfb0-4731-b0e6-964632926fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbe187e-60ef-479d-97cf-1eedf443b339",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1c876f-385f-457d-ac91-fd44256b4a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc54111-8b6d-4af7-b7f7-8ca70403fd5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d613e860-a89e-415d-ace7-829959468a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2d26cd13-b385-4f91-855d-266dc9fca248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa509f6-7914-4410-bff4-7ae9f4adb7b8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21195165-0de8-4600-9b39-0507ddb74805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d167f49b-4e11-4566-8d38-585b974aa215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ba3845-3de1-4c31-9080-37e07defb395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d72e9480-b401-41a7-9951-0e9ad1feeb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6dae33-9e80-4ed1-8268-666b09f06637",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9b7ec7-abd3-475d-84ff-0f5f0a53249c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b8b67a-746f-4752-af01-69a892dbb387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b95c69-3ecb-4efb-acfa-8ad5e7e9a5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b78b4e-39ba-48fb-97b6-564f38185ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d3b8d5-a31a-4de3-bd43-dd43d30a30e6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da108068-6b68-44b5-92f2-430ce1762835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6b924b-6abf-47b4-b3b8-cbf95bfc1602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2047d2f9-cdc8-43c9-87e7-1925a4b007f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "03acffea-c8b2-4845-853d-0daa8468092f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad0415b-c935-4ed8-8293-927c21a3585e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa95fe9-f65f-4c92-a220-3643d26da8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663d67be-3ee9-454f-a233-16ca4834da5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a137c1c-3b3b-45e3-9452-9391c85e3244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e749175f-f8b8-4a71-8b89-124ca6424912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7375bda-2df2-4a18-b462-3c211dd1f86b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab909099-bce4-48a6-a03b-19c887082a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7edd23-a742-482c-9119-8b39c5733fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289e2105-e1c6-4743-a020-f2cc609ef4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c517f0b7-4351-45d0-bc1a-f771c86bd519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef1e030-164b-4f15-bfdc-48777d75fb53",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a633034e-3e2d-41ad-b493-d897bdf55beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4075190-92b5-4cd4-89dc-5cc17d3aa80b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf2ff58-b4af-4078-8690-f763fd4e1bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "32cc2b38-0deb-4408-ad9f-13c2e0607af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06f0e4f-ee29-47e0-a75b-e7d149f2f971",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804890ee-e178-4ca0-98e1-9f361c32a2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f647bb-a6ca-4fa2-a053-ec1fba17eb63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93882be3-8f68-4968-9796-0ace963ec26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b809f6d-3de9-48c7-9e2b-3ea4d5a30c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa791de4-7dcc-4237-8793-1b8eaf6fa045",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8307001-8cb9-49e7-8dc8-f736861da9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a6eb285-ae42-4047-973d-b051b26e5307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54feae9-95e6-4e5c-8beb-619fa8ed78b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f7f900-63e9-457c-96d4-52f2f6859afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea21247e-ae7d-4884-8424-dfb0d61ebed2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4320009d-006c-454c-8f9c-750f57f4fa9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7551a4-e3f6-4ba5-8886-b8aedcece735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964bf3f7-12e4-45bf-80da-f0c741c4b753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6649f8a-6b77-491d-8820-d687af2f3782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5375e51-e0a4-4196-90ad-400fe46a30b8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471110f5-80f3-4f1c-b461-3281ad6d4932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f8ccae-fc82-4c9b-b3ca-2f6f0d3db0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a4cb84-2381-4caf-856b-016359563579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb346c48-773e-4a9a-a654-e726befe22c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2f8be9-6ba5-4f8e-8ec4-d3e6bc107d2a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0929fb83-820b-4bf4-b2a7-e944b639311e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa1325f-d79b-46d7-af4f-f95f99540ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0febd6d-d3a0-4abe-9675-01578a436666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c81a5ab5-f1ac-416a-9732-552a93c3c9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8a7fe7-ef84-486a-9b5c-3b7e2662aac9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f033931-d7cb-4ed4-87d1-4e2cb0bc300d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40221196-3016-4257-b11f-7d590e9747dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2a7b3e-f5df-4e87-a6c2-a0948740a13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2ab340-2114-421a-a011-bf2185f1139b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78efe5f9-f6c4-48a9-b167-db42ea879cbc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536d1ad1-e65b-425e-8c02-8d5ba3de863d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bad4091-b562-406f-9b5b-84048012ad21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8c4d98-0ec4-420b-81bd-6d8efcae9c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89ca1e75-66ca-444f-b421-5c746093e107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1429d1-83fb-4b59-ade7-49e2ec66a87c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01afead5-ab7c-4656-98ab-c6ebebc3338b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70563c6-6479-4c05-939c-c0acd3c2e408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedcd04f-7bb4-4f0a-b85e-e4a46b91905d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e63bac6-22ed-4f30-9397-017e26da2f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee1c762-2b8d-48c9-a1f8-5a2d5c5ee4af",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef803d3b-bb30-4e4a-941d-31efe58a9d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e29a4954-7c17-4c90-a890-655a60f7cb81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4d1474-233a-426e-9691-956ccd6cf806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "697f1a95-307f-4d26-af12-15623be35e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98021db4-e4b9-49b9-b75e-54917e6d8388",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9249644-1756-4e19-9ffa-6bd00e9cf3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df67aff2-4028-460f-b38d-482590771155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ecf2fe-70b3-4d88-bb86-93ea77ae4b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6269ed-750a-46b4-9e4b-4c3f67f836ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d409cc6-f365-4284-88cf-027b43cf5692",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adeda3ec-7216-49eb-8d89-55a48e686777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e75cd42-39bf-4a75-8817-261eabd1fd76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f565788-2ba1-49f9-ac1c-d671a0a891c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dab32e9-931e-4a13-8dc9-db32a1b1025c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e793cf9b-f2c1-46fa-9bcd-b9678385359f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b834a83-82c6-43e3-a2bb-c88707163e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180e3a48-1bbc-4537-9b63-304267b5607b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8931ef62-5070-4fae-8c47-a3c4d6fc25fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12525d91-84fe-4908-97ab-5e32e0f94e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c50d9e-0b87-40d7-8bd8-e9edff91923b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cdbbe5-ffeb-4ca7-b0ae-b46bf3506abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857a79a1-e694-4a83-8621-8bf83116dfc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7beb26cf-e02a-4537-9644-ecac7a0d3bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3da152de-a960-4d06-bd17-cb84d0d68d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf05cdae-eea8-48ef-9cf9-e1588a2ff678",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa8a05d-cab6-412e-a0c4-24ca1536acbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1faafd14-bf0c-40b9-bbfb-7a2c6445e02a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0974d92-2416-4d3c-a441-99ca663544dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16f92a62-9aad-49fe-a0e7-9be7fe7233bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c496e49f-5d4e-401d-b7a1-13024b964fcd",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09852536-e23f-4e7d-a779-4b236b711b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999f338b-8ef9-4019-9158-c875e080d387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439ad2ad-d6cb-4bd2-a032-4d1a728ac894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "744bd7a6-2af0-4ab8-ba91-f48adeafc564"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "095c1f59-e2f6-4aa2-8433-3a108b8ebf7a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13ba09e9-dee2-4f11-ac67-c88f9b5db8c2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd2d00f-e868-4521-a27c-6e5a4ec931dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2a76a8a9-bb2f-4e82-96f7-35e2ebf86f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91934d90-b850-43f0-8794-b6e90b6ade1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2683157-24d1-432c-a83c-dabbfb745439"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "688b4379-67ad-4dec-9d62-33c48bb4acd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a9c62d8-076d-4905-a71d-3c159f4c8ca6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd5fbee2-0372-4726-9b02-811a71843093",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c322b93-14b8-4180-9078-c2aa6e4815f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "368a07d4-eb5c-4d14-8cb5-08c57f341fb2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5695c6eb-be98-481b-91f9-66bf963819f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48b281cb-688b-4aa7-ab58-e0907f546c88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69e5aacc-3e25-4fb3-9193-09c926f8e343"
            }
          }
        ]
      },
      {
        "id": "1cb895e0-37d8-4f4f-be50-016d80927733",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d9ce7dad-4626-4556-86ef-37ca4d0c3a72",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb1ded51-808a-4ecc-8a9a-5457e3cfcaa6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "577acc5b-3a31-4fbe-9135-9832ba9f6dcb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf27fa4-674c-4ddd-936d-52248c09837b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8040dba4-a513-4334-8d42-3e8a49109ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65ca3cc-37f1-42e9-ac9a-24e28aa3e208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "874966c0-d9b4-4e86-b6d0-d9edf3c3196c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57ed4ad-17c3-47be-8776-1e9d4f52e7c2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6148f4ba-1024-4c1a-9559-a48c56a12ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7e09b3-29d1-4a02-8631-a6d31064fcbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4527d6a8-d42f-4d57-8e74-f342465526f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "783c0991-7475-4841-990f-9f6cc43b24d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed1f1dc-fa5f-49d9-86b4-9ada95798cf6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9cdd72-bce6-492c-a35e-083d9508d280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad87e6d5-a669-4aa7-a17b-cd51246d95c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4184cce0-d714-4438-9b5a-2b9c9d6e954f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57ec9c7a-d8ed-4ab0-acae-2bc62d37d2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017e30b3-91d8-4a31-a191-4ee3846bad15",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ded3963-a76c-41fc-862e-98506fcb6ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b5c75b-93cf-4357-b871-a711a696a12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60ec6f0-5de5-4461-8c08-5b40299f3765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d69a9fb6-604a-417a-ae3a-ef52a6d1776f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99511bd-fbc2-4d94-a6e3-c446478f778f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb1381a-a3ae-4f6a-bc8e-00a1844d7043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b43a8e7-9595-418e-b4a7-df6eaf2ddd9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fae2970-4fe7-4577-9ce9-6712d092da1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58962326-2ead-48a9-8de5-ebec39815404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e23a5d8-1ad3-435b-9b34-5ec6791b8b2f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddc18a0-6df6-463e-bf68-0ca3977e58a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c526d0-dca7-4fec-803d-3dbe35d1adf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e7a9c9-65d4-4bab-a3f3-76d0ec8ee533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4bf71e-e478-4c1f-bdf3-8c4a8a8a6f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbd6f0b-965d-46f1-9fbd-de45bc9a1ebb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a902e6e7-4672-42d6-b666-5419557feba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1df39e-a89a-439e-bd0f-c2797d38cf49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4eee1f-0227-4937-a5b8-bb30ca2c064d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d2b334-c53d-4a2e-a8cc-6185d8164195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103e698a-84ba-4253-97fd-42c41824ca4c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b9c981-5379-44b1-bfb7-72de7a789faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb65ed03-fbf2-42f7-8768-84403bde996e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a272e8eb-cb7b-4f42-849c-58215e671c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63490e6a-f0e1-46b5-afac-899b998f3035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc515fd-49fe-43ac-b31b-317321335c3b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0e60f3-1fb9-4b83-b227-181d19bb3046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc52dcc9-f04c-4f9a-be14-3ff718810064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffa7187-2f41-4d58-bc6c-49ae7a0e4004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b78664b1-2eb8-44f7-a5b7-50d80ada0506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea9e3a2-8326-4aaf-8f2b-426981a62852",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c508e3f-30d0-45b8-a40d-3e303d8af81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ba066e-3bd2-42dc-abf2-66473d23d593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8027ccb7-6311-40a3-8718-9f5ac044dfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "775fb3c2-2793-40ab-8ad4-3560cf3ef80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46239ea1-dbe0-424d-90f3-50156178d352",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9b90df-c05f-4a38-8c01-b747172ae0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf93460-fea3-4eb7-a30b-89b31c3569bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e902537-414e-499b-b45d-44eeb243495f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "87a63365-c334-417f-acc5-a4d6466b5643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4644bc1-e4aa-47c0-8b2a-a98574bd7319",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c9ba04-dad9-40ca-84e4-0a5ed8753856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34bd223-9062-478c-be3f-e4156d25478a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61cd3e0-2f07-4c64-8ea7-7b8ad7e22f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ded30a46-a47e-48e5-afb9-a2b25b07e14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79bac62-f7ce-44e4-81e9-f1dd0203011d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5c0bbe-dea3-4cd7-8d10-bf96c3ef2316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1598af3-2197-48f6-80be-2440bee6e94c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808f5b76-2ce3-4930-a9f7-a951cc79ccdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "959a0a39-546c-4a70-8cc2-5fec92817e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155b7225-b202-4dd8-8a91-cfe1231cd3cb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21eef44-8513-40af-9144-7c6f012f32d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac34282-d671-4565-8270-80ff9d3fc845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e61dee5-2e55-4345-bdd7-f35d4ed75b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "347e470e-87ba-4cf2-8e1d-68bd2b212fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba0cef7-8512-44f3-8799-191530d3083f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3e555a-2f8b-4ec0-8b42-4fff4ed91c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b859e151-e715-4ca6-98ad-bfae384ab5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52002c95-0066-42bc-a479-5956ce3683b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a6cb98-8e15-4dbb-9b21-6924b7b1a5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b46e47-b1fa-4ea2-b551-3295681adf31",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9b2985-2ede-4566-8751-85953c80cd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d42009-e5c0-44d8-936c-62ffb09190c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030e4b4f-3e88-4b2e-8ed4-1b283a84b0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf39029-8dd8-43c9-bcd1-bf6f5f289635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc398e69-8f61-47f3-8037-0eb01db7f996",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e25624c-645f-4292-9cc8-d0662875d418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9de0b36-ee91-427a-98c7-459f9c6a0283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316ec23d-129f-4f87-ab56-d7097ce53601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "233ec993-33ed-4bc1-be51-8b8b567b98db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f91020b-6d6c-4a09-b479-f5f307ceaf1b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1493850-1781-43b9-b593-e1b3506fc0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913b3352-68e8-4f1d-99cc-5ed080076c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee8429c-e03b-4b43-b101-519fc7af3738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b673eb7-26a9-4688-92b4-3b6d20e10e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5910605-556b-4eb4-8087-6c22d544d672",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f94a2c8-09ba-4a78-b6fc-e3470c43f178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ee364d-b8bb-496d-9c4f-5f62ad8f1dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e8bdd8-c880-4455-9ffc-442bf62195d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc9d23fb-5ea0-4219-a93d-a367e020b587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c6c85e-53c3-475e-ab91-952c206c4bcc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fa6d30-2a51-4f97-881b-6f97b662e663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4947c8e3-c173-4f49-aa4b-c8226bcb5057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c93086f-39d7-4a6a-95b4-7204e973dccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f838c6-9ddd-49c9-b755-501450c6b7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebaac629-e342-4a96-a59f-053a1b4a52af",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea2cae1-7172-453a-a4ed-e5c814920689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7fca8d9-98c6-481d-a818-e984051300d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bf7252-a165-40c6-b3d5-fe67d99b0a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb5c935-bb0c-4b18-aab9-cc5358d7f175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d3534d-a0ac-4ceb-9462-1eb358c2442f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e899be-d67a-427c-89c1-fe5b0d7db293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e642133e-ace1-4930-9661-3b7dc437286e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3d53b8-5b11-48cc-9754-b223f4d5180e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51e529f6-37db-4c82-bd5a-6c1eba5def64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc9043e-3dad-4381-99af-94fe65b04983",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b0e39c-94a1-4cef-8a71-402926179be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0549d92-4fc2-441f-87be-c4eac49b834e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc818aa-c3c5-4ab6-9faf-4539ab519195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32e6698c-2148-4986-b108-82640ca1b482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973aa511-a0c3-46aa-8258-9b9743f8a441",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6f5e80-2b98-4d0b-8452-de6aa97b78bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fd591a-3547-4c30-92e9-ec0460648cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf0782d-6e56-464d-8435-cfec603e16c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaeb0966-4d47-43b2-a70c-e99322e3524e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e80e8bf-0f34-4bfd-831e-9bdff8162f04",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa77b7a5-a0c7-4271-9f91-55990a63981f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a76bcd-c782-485d-a557-81584e1c1196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72636939-06ef-45fd-911c-b485adafa1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e10e77d9-3e4f-4b57-a00a-48adbdab2c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7a92af-5e6b-4ced-bdbb-85b277fc4395",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018f4aea-4772-429d-bb2c-6ae8a62b8e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547d1017-9cb6-4073-83d9-212a042dfbf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f7fdea-8160-47d7-8133-347c8554e57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68501db4-7bd7-4995-8b83-5b6a6e38efd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f058cb24-ad47-44d0-a0e3-2250f90b237a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42374d9-b682-4d6a-9edf-4abb21c32ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6c5661-b554-4b09-827b-e9ff3f94b662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10f364f-3ba5-4c36-a880-86644978fc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3144c8d7-ce14-4dab-8e4f-9f998f9fd337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24a43db-d1ef-47e1-a4fd-16ea51c99109",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82ca48a-5105-495b-b6d2-c079b76e427c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04805df-1b65-4219-87b7-32c9aae0cfe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b1f7e5-7923-42ed-8242-a8529d570646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eebc626f-450c-4d53-adab-06df5a69ab40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d137bbc-4315-4c29-8597-2c21fa82fc7d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52399d86-9027-4205-9954-aa1327f89aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978f137e-d94b-4d49-802b-2c928c92262a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898c18ab-ec0b-45ee-a09a-97a89a7ee8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48a0353b-dde5-472a-a172-1e9ed835ef68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ab9607-1a27-4bc8-937e-dea33ad148b4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf0c30f-1f8b-4880-9a0c-b845ce683854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c6b971-9c4d-4e4b-a4bd-f0107b84e330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6091c5f-80d4-4a3c-82c4-0f543519218d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43cb195e-5980-45db-bf73-d50ba7728e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67703e95-2f0c-469b-8346-0e7c04038867",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4011e6ed-1906-4f32-bdbb-7d1aee6560cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e236c297-dd62-4a40-8fd4-17ed4680a1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c7750f-1a4d-4fa0-96cd-ba8f838df326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "352f8501-5c15-4714-9128-8fc1abc9a3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8491fdef-7708-4ee0-9e80-2c8240ce5e72",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d97372-8b98-48f0-9ef4-b75e50ef4307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5791db0b-c35e-4ef2-ba3b-94a82e1c855e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd09741f-a2bd-40f7-b03e-8bba586797d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "154ce69a-cc94-49ce-910c-3e1e6bc61f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b3f68e-c5f3-4284-b896-4ced6a305731",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9b6bbe-bc2c-47d0-9f97-04fbea2530f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d4d4aa2-e7fe-48a5-b18c-4caa08f7db5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de2f7e8-de5a-4bc3-9f58-91f45a6047c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55ac12c5-5990-4875-b462-d4b9b01e3521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489e8254-d287-41d3-8dfe-ccda58b65ff7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8db180-e158-474e-a7d7-4bd8670dc031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ade92c-c27c-4b84-a8b4-5098ffcbf6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4245c13-bd9e-4955-9edd-286469b2c043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8edeae9-9b4a-45b3-9398-4b83055187a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f773a691-c190-4a8e-9885-4a899b08dbae",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f37671c-4e5b-4048-916e-ce7eca273447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9030a8f-c6de-4ab9-972b-9bc8f8591d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67372fb-2c50-414b-b0da-12b0d58ba534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe5c1ac-16c6-445e-89bd-60f3b641a049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22adddc-1db0-4672-a6f6-65edd79f9f5b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc54c5dc-7a0a-4632-95a5-019b19921ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7da25a-c857-40a1-bd0f-de7b17865a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005839dc-29bb-47c2-9cb4-66e6e6c443ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d45785e6-f562-424f-9fb0-db758dfab898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53c6b88-8ced-4069-925d-555e8ba72d4d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ab5e21-bb8a-4637-9388-2c9947015fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b39a2f-7067-4e14-a3ce-503e43dfc08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff2aa6b-1d6e-434e-82d5-36d92cf1f44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "432fb119-3fd4-4c44-b651-3e05eba78c90"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70f4ded3-4f92-4695-a0cf-f500fd7cc403",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "efb7bab6-8a8b-4a04-a024-8b845949550f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cf22f3-6a93-44db-b586-01896350d9aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c2625e48-2f6b-4b47-840c-95fabbb3f018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd65ffd-7303-414f-96b9-c5cb2f7db093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "142047a5-00e9-407e-b005-aa56c1afd0b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57f90151-ec29-47da-b1d0-c2c81d436c76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "620890ce-3c46-49a3-b06e-f2e1e89d8e7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b88470e0-2f0e-437e-984a-b98d2b2d35d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46d90ca0-01b1-401f-b68c-c0588d8626b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94d83587-2b60-45ad-a572-865d81c0ced9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9c203932-f39d-48cb-9eca-8a9cfc6fbca7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53d9e240-dcb9-4987-b47c-e4206f5ff21f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a9d5af2-1f7b-4241-aa18-ae91df0b2a4d"
            }
          }
        ]
      },
      {
        "id": "5caefe01-4749-447d-86fb-a325e1da002d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ef3c3a2f-c682-438c-bbd3-2695220b6174",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14f43abd-9943-40f9-abdd-a01c8f1aca45",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1e0e073b-3e59-413e-84ae-9a98155425c7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1e9d8f-f67a-472a-a316-1cececb18927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ed0da9-b96c-4595-8025-a0c6b00be50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce434b7-a6ce-4c41-ac6b-cf0aa7a2cda4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d3e50d-5d17-45ac-a265-800af4462c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b027ea84-de0e-4dfb-8317-dfe20955ae98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588275c5-f237-4e6e-97af-e197748be744",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880b2c5e-c446-4962-b515-6fc89509a627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6634c5ac-6dc1-4b46-93c3-754c4f4907e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34294249-4400-4247-88ba-0ab4c552ab35",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfc326d-8998-437b-bb44-42bbafa89adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902d04ef-b47f-4476-b9ec-5352815b825c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230b2a70-3219-4d08-8721-fdb91987327e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad255282-b7f1-4a4e-9846-4d2e63b5ca2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f203c1e8-efee-42d3-a7d2-348cbefbb7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd3e5d1-769d-4e83-a0c5-6f6fcebe42c3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94306d1-c192-4c90-a653-7ba462a74f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624583c3-07ab-4a65-bfd8-4501345d0cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f18506-65aa-44c8-84f2-b1195faba1ab",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8ded41-6dc4-4392-9155-52f09fe6a12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337f35b0-a36c-4d95-be98-c206b228514a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "622ba1fe-2c83-469f-b4da-4a2cc9893ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f45b0f-4071-4430-a270-f84458421087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ea7bd6-f108-44da-b9a7-5983b62d8372",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c4eac6-c539-4da4-a30d-624688e3fabd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fb72d34-930f-44a1-b722-393ec9928a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64dc85de-8a48-49b9-8d3a-933d0975f381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2afcb40f-c9d7-4c09-8325-20bc4681a234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68da748f-0d41-4f47-b08d-61cf16fa7faa",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7464f0dc-406a-4022-b0ba-ebcf70966b25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2957560-5bbe-4246-9204-1a2c44f01785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecbbaa4-aa56-4b74-bc19-b95a391fc27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4850124-eba4-4c1f-a6b6-1ec3b5b3a2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d3c18d-9b88-4c92-94ad-0387644eb84e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdfad3c-5585-4228-80b6-5f7922dd2674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66314720-1e22-49b5-9f67-c1f3039291c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b505975-f14b-47cd-9266-c83db6d08140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c743bb-6ca2-4947-b928-de3a148c54a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012acb15-ae07-446c-8f36-92d127e78929",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d058d86-9909-4743-8af8-79f01898151a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35caf14-a769-44a5-ba36-52f6d41614e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e75adc-98ad-4390-99c8-71499699c4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8fc9f4-046b-4588-9056-2619c84e52c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a76f3e9-f396-477a-8c70-43c17c2bda63",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851572ed-308c-4a54-9cd1-2101c84c3674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f7ee44-9307-4ab3-a9b1-4a26124eed93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18052289-745f-4398-8174-e7506e3a8c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f684cbd-87fd-494b-8ca3-4ba329a9c1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b2617d-bbf8-4db9-95ea-7da99bfc38cb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f9fcd2-1f5f-4da4-a71f-b746803f1a64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca2a730-1aa2-4241-9f90-aae971d11adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcb4ec8-b8fb-4113-89d1-d097e3a00ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5010a09e-83d7-4267-a034-ece09fa00b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a993c2-623f-4c3e-af4e-51b654e0bcc5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847543d6-69f7-4407-8bb6-17e1320f1eeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1399307-9bb0-4805-8633-f9f39457d6c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "393d55a9-954d-4489-9ca8-d142fbe962d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f19af5b-2eb4-45c9-b30f-1e190c32f341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb0113d-72ba-402b-85f6-149f3149191c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeecfec0-8f31-4ff1-9c14-25ca60852c5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "322b7c9d-36e8-4952-93e0-7c6502623c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b59c6f-560d-41ec-acb7-97110d40f250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ef15b9-0e28-42aa-83c7-fdac4fdc80f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5970b9-ea4f-4144-9b25-f4516441feab",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5a313a-89f9-4a0b-9ac8-003a432ff00c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19a8913a-1806-418b-a8e6-978be3cb301e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1443d69-f9bc-4747-95e5-e1812a3a79ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f98cec-15cc-4917-a103-d15fb42affa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d6ae87-2b64-4b0b-9bcf-563207aa1a37",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a46c59-2ba2-475a-88d3-193d978b6fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13bdae9b-0c74-42ef-be4f-33ddc0596631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffe015d-0630-4007-beec-f4f3fcf8791f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2976807-8f15-47c2-8b5c-d329df7df308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598a3b1e-3758-4525-ae80-c234f8b232e5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024ca09e-1b71-4d33-8894-0d73247bb302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99409e69-15a2-4894-a2e2-3e217cb7dea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6703f15-4928-4f6d-8b39-037eac97667d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df1e60c-7c5b-4150-bde5-de59ef3f5f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef25838f-27f3-47c4-866d-7c277c4097fe",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faeee56f-4583-4a33-91eb-3a12e80ee49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2894e164-847d-4761-af6d-90ac4886e357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "417c099f-e86e-40f3-a839-b5128ecd2df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c61c053-121f-43c9-829c-584d7613aee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba7196f-a550-4514-bb00-f3f0f0f3c95c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c88bf7-01a4-421d-96e3-e8b4aebf5b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85409aeb-d7f6-4880-8694-1bc8bdb4a5fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a0dcab-3b51-4103-8f6d-2080d41b3eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ebb956-282e-45bc-aad0-e9289f841285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e8d31c-616e-4e05-8570-57683236cbe8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1d1ac5-db1c-4c6b-9793-35eca51aa89c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b834767-cff7-4a45-9aeb-f84a3c737758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d40104a-3c47-4b82-99ad-faf960de3e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04965683-a935-45ed-a876-8498155efae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ff4fa9-c52c-4c4a-b6ac-ec0a6e766b2e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069f92a4-ed90-438b-9825-d8072a0387c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3129124-07db-4e23-b923-5b055f4c0ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02df19c-4caa-40f3-8277-f685a0eaa982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "439d1844-4ea6-4ed5-9a8a-aa44331fb2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402b7a25-f18b-4df8-9e6f-befa59fa1818",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfd906d-0c84-4b43-acdc-ad35f9a5ca8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d1018f-500e-4326-b1af-cd273b7e362f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c75058-b7d0-492d-a4bc-ec1b1f22d854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669b16e8-af1e-4142-9500-a1d53eec54aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67fc806-8cca-43bc-a5aa-7bc9609d5d72",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38020d2f-4546-482d-b95f-e01b2c05e454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1282acf-1dd5-4322-94a1-3a73d028bb3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafc73ec-45da-4d7b-ad46-a26df5d1570e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d195c8-a01c-4c06-89b6-ac2e6c0b4b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636f091b-a445-41cb-a2d1-8bae4af37bfb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469813d1-b811-4a9a-8acf-59d825544978",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebd9f0b2-0733-4804-8783-49714661a36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9531bc-b340-4ffa-b234-a6d50d15b75f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d5a841-7d1e-4a35-9291-7a7c63dce1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7c0fff-ec04-48d1-8f42-1c44b63da141",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598490ad-9652-4230-a2c5-fb3c1aad7285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83c120e4-ab99-409e-8ccc-3b49bc2cbdde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2403aa-a557-4ce3-a4f4-6ddb478d5121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b621ed-8273-42bd-a8a6-78855c04297b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d111af-5173-4f17-8df2-22d1e22992fe",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e906adff-ab37-4ec2-bf30-bf850bd55a22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acea5bd8-cbae-4ac0-9791-1a9e5cb0be5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cebc7ba-6256-4898-8f8a-05604ea5024c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ef090d-f594-4c53-812f-549b1b0f4609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73df9a01-a632-42aa-8fbe-37018cfb4b79",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc584b35-0d18-4b20-8ace-2b16f4e65381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f458dc6b-c8c3-4099-b120-e38898b0a74f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b21dfd-c5dc-4ea1-bd29-4d2fd5acc3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a03fe20-d21d-4146-a5cb-dce6cbeac26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d59f88-d892-4f98-a94e-b894ab254baf",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bafcde2-641e-4e24-ba91-63642aabb7c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40a38a0b-964a-4c8c-a020-0765f78cd41d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41358ed-8ff1-4077-b045-602a704d2765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480da3e4-7189-4e42-8f5e-0507456a1e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044d692b-b8f1-46b2-9455-3f038c510386",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be864efa-e3d1-4141-9791-072bd03466a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "623ddaa2-f15b-49dc-94b2-a7494788e355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e676da-def2-4682-8524-90182ea27792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7f45c6-b4d9-4580-8459-1589291caa8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b86337-f2b6-4382-806a-9a2d984a763f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8af5656-7c36-4f55-ab66-6adbce672e62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a9efda2-58b9-4672-9587-0ee46193e020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f762124-521c-44af-829c-af244da0c8e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec35c87-6cfb-4571-b36b-d8ea9e255dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2060ca52-3c41-423c-b292-52c538d0bb28",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057163ab-7d55-4b43-80ea-29343860c50c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beb834ec-bff8-4822-94e1-78006e5d5e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3626a52a-4c23-4419-b686-c24f7f5a5eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b5416a-f774-4208-af4c-fed94689db56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33581276-9358-4576-8824-93a8c7b83f54",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c189ef9-b0bc-43c3-bb78-7f8a7ffe2f4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "600f7a4a-660a-4dd8-a77b-9546c083987b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20bb179-267a-4904-a31c-1018276db57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e59f24-7d84-4e0c-a529-abcd8795a134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5c339a-726a-4bd3-86e5-11dcb67e27d0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347dce90-d3d4-4323-8ee4-b2dcd6950019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88613a4f-15fa-4176-8e1a-4fba4474a226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd5330b-a94a-4b5a-ad36-581d79504836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00bbff01-ae54-473d-a77a-e940f2628a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69450d5-2247-4e04-b242-f401ccbdb367",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d70f25-4678-4229-b1d9-ac050efc8aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78380c2-3a41-44f1-b433-2709673ee7b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddcf002-c9bf-4821-b53b-155168104ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364c502a-bd08-4b87-8f13-269b6553f882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0670359-e32a-45d4-aea4-b215ffa679df",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35dcda82-32a3-4ff4-984c-0fc30162722d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d500b23-1fdf-4d53-85f3-d85b556dea42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a208988-7fab-4766-88ce-e57557681ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd66ac5-a4de-4d21-bb46-12b0d4919612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e915fcd-6c03-4813-88ed-8ddfac0e118a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b8e402-91fd-4fb3-89b2-f7936068d2db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6c6442-2094-4a25-bd5c-0f8f275d3fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eff9586-db4f-48a6-9f74-a54efdd1e4bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "801ee472-7aec-4ef5-9c05-b107ff8831c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7eb9efc-3708-4048-a8da-8ecc7e2596fe",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ae8139-eda8-4dd6-959d-6e1257ae510a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9174f75-3bd5-47ca-aec8-e5cf6f9a7083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c182b698-3a03-4d8f-b960-c9246be46713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244b9243-fa7c-4c6e-b16b-cc29c189715a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba6cf4a-7415-4bd0-8eba-82e13e6218cd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f100bd8a-61cd-4b66-9895-24c0e32bbac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369f439a-6f22-4934-9ac6-8513db202f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfe8cd3-3e8b-41a4-a078-286dd0e0cf45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c4e171-8916-4abd-a740-8766e2fc7bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e3e921-9d1a-4e34-85a2-7c1ddb3d3fb4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd07116a-3ad7-429f-a565-90d4b081211a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062501bd-790c-4e0e-809f-0d82116ab5c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc14a8ba-564b-4122-8d09-deba311f847d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f56f70-720a-4fd0-a992-7508a0dcd198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076ba095-d042-4139-935d-4a6c8a1a13c6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e387695-ba57-475d-b75a-8ba30320be8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f938bca8-3a66-4790-8886-f3f217ba4936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7261485-7aea-466e-a29b-30ef314a6c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56848c81-ef41-47b2-8359-5a38c1d16c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e10f4b-acf8-4166-9d73-8755ff4e1242",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f1687e-f4c6-45f4-a472-de114f956e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4ef661-aecb-44c3-bf9a-c88eb78920a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a1f380-27d9-4772-9d20-250488aea7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d93b4b9-ff0e-432f-8a14-5438d545bea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddcc730-42b3-45d3-b4ce-3ab7c762705c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8203b217-8858-4522-b88b-7f7479942b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53338b6d-4e0b-4e43-82da-68b03b77434d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3252c670-25d5-4d68-bf01-95dc3ccea786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76b1880-0441-4e04-9877-cbd1f8cc5178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fb8ffd-0ff5-4cf1-bdd3-b486c2508b70",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c74ebb8-e232-419b-b119-1b328eda6202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc93c9d9-4c0d-4aff-80ad-13036d596dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7520e22b-d001-428f-aaf9-40c1ac8b2e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8caa4ccb-10b6-42dd-8a17-f266ea0577cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6290c1-86bd-4ee4-ba2b-8c7d87de618f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7329de35-52a5-4951-95e6-333fac0e6fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea569c28-682a-483d-a4a6-4169e7c92c2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "928335bd-2e85-43fd-9977-744dce99fd46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b75c9771-ae21-451b-8172-fc9e589ac557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58cbad63-9e97-4174-b0f6-1c7c1a782008",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abb8996-e01b-42ab-9ac7-7c8e56204b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0ca3ec-fc90-4efd-b7dd-45b1254f6f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "613ef151-0eba-450f-b262-3b6e5d6c5dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd883c9-486b-4571-90fd-37157408cdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a947b4-8f7f-43c5-a1f2-cc0e57da23aa",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8061593d-fef1-4ccd-8d9d-a55485834f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a34bd25-6e38-4974-92fc-2f4c982b69a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49da6b65-30ef-41d3-8e79-89d8ac0972aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68be847b-ca9d-41f8-a281-67cca3e6ab27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffaa9c5-ede6-45b4-8bc9-7372385b18b6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f26fa7-7d68-417f-97e1-34253bbe4522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44b6cac-b39f-4754-93cc-c7d22b999858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab2cf58-b395-48bd-9e7c-3f83f7673d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f65381a-7a15-4fae-876e-f8bc46b17d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564336aa-f1b7-474d-a79a-3b916711d3c4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a5a2cb-a195-4dd0-b6d4-4eacd0f325de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673ec0a3-2840-40ed-ba14-0f3fdb8df36e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa9d7c0-66b2-4ae7-b973-1a77eae497e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec79e2c-cd08-457e-8210-6dd379940115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c07c8c4-8f7a-4497-b522-0856c8978d68",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ad9edf-5291-47d5-849b-fe11c832b272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc992ceb-c379-408b-9d87-13a41508af40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad805f5-63eb-4c9e-9b45-e56129cc2a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5093f052-6a90-4c2c-a738-c51e26238d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348ad799-020f-446b-b613-a1037c052ec2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af9dbc5-9a16-4b41-a167-dff4de826059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e25cf34-f452-48d6-a4cc-5140478bdcb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef5615f-7772-478f-9a26-4d8649e51d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7213ba-b658-40a8-84d0-328ffb57170e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c50df0-d257-4c99-8184-232cbfab524b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba822c99-5bf8-4ce1-bd47-ca88b17edf51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb29b2e-94d0-463b-9aee-0c7ab93d6e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98370a8-0ff8-4d2d-8a87-3cce7a315b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1064676-253c-4ef6-8f0c-af5a6c590165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c59f82-42b6-4e15-a896-30bacfe94b07",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bde84c-5f67-42f2-984f-0c4b9e8a1da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0b9518-0487-4c44-ae97-c8bc1c25186c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad51272-9ef5-46e1-93f7-f8c87c5837c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b329c6-4f0c-4f5a-ab0f-4823464f395b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eedd972-32c5-427b-aa1d-eb93de37feec",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7867dae1-0bd5-4a03-945f-23af95cbb8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c31c9f-dab9-4acf-8216-d7f0778969bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aceb2421-54a8-4853-b192-74805a829f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5417bc61-4d99-4de3-829c-5750f63660d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff0a66c-ab95-4106-a533-1469eafe84d4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4770dd02-ebd4-436b-a5f1-25e0558f8b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccec7ba5-4467-43c3-8970-469545f3f980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7835dabc-a896-4a5c-926e-e1ab46003e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f46bb2-74f5-4dd1-bc4d-41547f0286de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5782a8cd-43db-48f5-a4e8-6213007c8aa3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d455a26-d9ee-4232-b473-e10a27872e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30333f2-08e9-401d-8e41-f0ff27732f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe71c458-8da0-4791-b718-bbfd593f37d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83283430-a672-4818-b6ee-59d850680f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1227b498-738e-4db5-9710-5fc72a2efcb2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66e742c-0919-455d-9669-9614e9e985db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65faefd-f221-4a69-a5d4-e960dc0587fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0590228-1ab7-4d46-a9b3-123f591e371b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a53e87-dd12-4ee0-8767-20497e3d050e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ebdbd5-c8e1-4580-b8f8-fddc2cf21cca",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0765f6b3-63ac-41ba-b6d2-61aae3742e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb7e2f5-02c5-4cbb-847f-f4a368102251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3358df59-f258-41dc-9c81-8307bb21388d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531ec431-97be-48a8-bcdf-2be97c9bb8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812fa7c3-1d91-4604-be18-9e3482f8d8b8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf61b5d-e31c-4d5f-a05c-1a8ef411cb09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b04293-151a-4902-8d9a-2ec64311c130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbddeb1c-bd42-4353-af01-e748e4bf1fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e4057d-c25c-43ba-a1ca-2787e704e4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faec6387-c498-43f1-8022-71bf4cc84ad7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd8443f-5c59-41d9-adcd-bd55faeaa9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58674c3d-a42b-402a-ba26-befa950616e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "191c3f9e-76a1-43b4-baa9-675d89665991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ea3109-8dbc-42f3-b38d-d35c5edd57e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270fad9a-a264-42ff-8aa6-e56bbdf8b881",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f5ff65-00a1-4ab8-9810-db0e7bfe8f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb2b34d-b2e0-4532-83af-2f9e82a11b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b97cf6-c9c5-4556-8dee-475f79d23724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3918c8f-3cd6-42a0-887d-3b3b5ee851b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e735113-69db-463a-9473-50d0e7625f85",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c911039-155d-4619-a815-aab9e866e3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a58a92-76c0-43af-b6be-f728c1ebb22e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e29b600-8306-4c47-a4c9-52265c7900b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f034b28d-61ab-49a2-b8c6-65a7e1ed261e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50425e87-2539-4758-8599-ff653a9c1417",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292abd77-cd11-4b3f-aae7-9dd0e285b6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09661292-5521-4727-a13a-1f7f8f52412a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1118a2-bdae-4986-b1e5-2ff79d2ea831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb21d74-43ff-439e-9f64-ae6604849281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa9c467-6995-4452-b48a-89b80309c282",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a61aee2-ceab-46ef-b72a-6e1224de9ad6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6a524f8-a054-41fa-94dc-de4e168e63b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d25aaa-c774-453c-a967-8e2cfb28eac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d63eedd-a9dc-43aa-bc1c-0f2090e6301e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171897ae-0f57-4e4c-81e7-f1f8688ab52a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075bce0e-206e-4478-b431-81458c33daa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ded24b8-f75e-4209-aba3-0b05e7c05f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bb5cb7-b881-4474-b03b-9d1094adf364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072a23a5-31c5-4a93-80c4-af2bf77224a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c6565a-3b15-4a4f-80ef-dc1f9d2d2174",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc47a73c-7328-41c9-8c6e-ae1bb4924bd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5643e4da-b9d5-4f29-80f6-b4c9d7df479a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f41187-e739-485d-b43a-413fda266e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49154b8e-84b2-4a22-9052-719a1ce32b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604ae645-1cf2-46d5-934b-7e2ccfe58b6e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd285e9c-379b-4c1d-9a41-7eadab2df46b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4029f6ac-9da6-4735-885d-d21c74d804ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f3798c-d729-4f54-8d08-24373d890f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "127dd053-151e-4032-b60a-4d50e6777dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ad31ae-13f8-4f61-a5ae-bd1cf3b2c1c5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd3ed4e-fbc2-4d17-a0b4-4d6872b36c27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea6f15fe-2abc-4ffc-8288-a955886b1a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b173d838-15f8-4aca-9103-5d67b33c0ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3afed235-9151-4a91-be4a-8528a986dce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56101b86-5350-4c48-a9a8-9329a3ce0ffd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa2ce03-45d7-4191-a49e-463d0a624999",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79d35294-a7da-4e8d-a85f-7d64bd92e66e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704143f9-b752-411d-9476-6acfd8bcbb21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cfbda2e-bcbf-4ac1-930c-9fe9c986c93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da845efc-99ec-4ccd-a649-4aa56a540c04",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6827845-fb71-48a7-a2df-1669d7f010a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97f48510-56a0-4fa6-acb6-c4f31d1be8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "506abec4-4076-41a8-be92-d169a71bce2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3c76cf-aaee-41b7-ae52-0fa35fbc96c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d3fa6b-64b3-4f1a-8595-b1008b9ca18d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4dff89-54c4-4524-9790-3684215d21dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "903e927c-2675-4c00-a849-79c7cda2677b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebe2ced-061e-4414-90de-844e3322e11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be7ca01-ad17-48cf-b1ec-7f4c0e288c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a67a94-3cee-4db8-96d5-3a9de9c33785",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36afaa57-119d-4d84-a611-9fdd5684f7a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08dbe237-a195-4200-85dc-59e94f86620e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8686cbb-cc2e-416a-ac3d-074e0d7765eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de179f7d-8e39-4f2c-9cf3-f836581980c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fbbd84c-ce65-4837-b6bd-1f03f005152e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcec7a46-3ff4-44ae-84bc-8401251e8ccf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d75e6b39-11ba-4e7b-a078-39271ef12e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ee26a9-41d4-4583-a334-5604364917b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1f3efd-cf1c-4448-a553-efce89edf136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0abe4be-dd91-41d2-b64f-f4763ea76e9c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddd40e5-c8e9-4ff8-88fb-3cb8e427eb8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbd324c3-198b-479e-9608-5bbbf44ef466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb57582f-6d98-4167-a056-d8d63f116e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af3c64b-d869-4c4d-a669-4f8b97cccda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006abca6-0764-486a-ab7c-36d340d92d5e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fafaed7-915d-4c6a-8f31-c0541c825ca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba2ca59d-470b-4549-857f-df59fc40b74c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2871fb6d-b5b2-414a-8706-2a861492228a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3311d45f-205c-44b1-86d6-ae7b875c24a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ea300d-f316-4652-bfa2-33d8a5bf17b2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b2b588-277e-4e68-91ba-1e899b2b7bd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "312f54ee-b7b4-4479-b5cb-2d66b614e50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc4ca0d-2556-43e0-a642-96211caa7ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8653ed-6b18-421a-8933-6d215589d6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774ea89b-b8de-4e73-8e36-9bb1edfa5671",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8977b42-aa76-4003-9ef0-b1c96c08fad7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91aec4ac-d547-4483-ab74-61ce8cf6b9e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aba9a5b-1c31-44f8-86d8-65d3d987b548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac6be36-0ab0-417f-8ea4-abb837322ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5c0399-900a-44a3-a361-a1a186bc5c89",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a1b287-80ab-498a-9e21-36a54bcc796b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59890595-a111-4a50-ba94-0c8010e72c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "043aaf68-753e-4a1a-818c-5862f942c16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fdd881-48a7-4877-917d-d17f39c56cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c0b6c6-e5ab-40eb-8db3-131aa60b8de9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875d6d90-a862-422b-9ab2-b5b9ed399dbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5955e77-828a-46f8-b8c8-5d02b2c2feb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466e6fd7-b0ac-4405-bb38-c8bdcfa2475c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff5cc05-b83b-4615-8b2f-6d58aff2dc1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6f509a-347c-4b6b-bafe-a9510a34e361",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84499ef2-071f-44c1-bea7-13ebe9f82161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58a8754a-8413-4658-9e8b-c5e8b3614b8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69de4c46-c19b-405f-a2f8-578a35ef7b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "974bdda5-0047-4f71-882b-7ebd221b5e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4403c9-e0f3-4440-be9c-cb8a452bf704",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4a0d9b-062f-4f98-9d3f-c5646aaebd3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ca8e300-3a1a-4693-8a14-e225d3992ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5128ec8d-f643-4689-ad13-97b8530e862e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a0b3a9-2275-4aa9-b30e-f7fda9c3aac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd5e373-98c2-4706-b73f-6034c3f84008",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28c51ce-20b2-4aea-89bf-83d97cc29d59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b61d8c25-1519-4170-92ec-8bb2609e2435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d70054-bd8a-4ed1-bd25-b37bcbee8805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722516a9-5e68-428a-8e2b-20fa4880c23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf8917c-3705-47ec-9c71-b3a335221b6d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6411f9-0cd6-4102-80e7-1cec4d7e9e5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2394b933-90a0-4ca3-b855-29310dff0dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7997a947-2393-4f33-8e5b-5ef237462015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db03da2e-31dc-402b-8c0a-1b41a5661b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af75edc-a577-4cb1-b292-2373f8da69bb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41af72a4-990f-488a-85f4-b7e92b051276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9855625-ad8d-478b-8ad7-da6c8d247e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31272ac8-b597-4a0a-a6e9-13b8ef6e332a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981a7b47-5b3c-4006-87e7-8e3b50852c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863e9ad7-444a-4759-86e1-d275b3d86830",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca96ad5-9b70-49fd-958b-a7c2b4bc151b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7deb0fb-1a9c-436f-a4bd-b1011bf5360e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a596427c-f510-4bd7-a0b0-cf1074dec40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb5545a-ef5e-452b-9608-99fb49ebd076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc3bf9f-3609-4a94-8323-ef8c32fbb31f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edff871b-9e48-4149-9df7-7d0634d51cb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fbd6173-3e84-48f5-8a64-9e35b21a1b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23796b97-1ab8-4e47-92d4-9d57159b9953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3912db0-4895-4052-87ba-f8ce914f35cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54de56cf-37de-4b73-80f3-b40b5f59d1f0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed683859-f361-495d-8015-3e4b5f351e45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6e6730c-0ade-4195-923c-cf2cb6d4e2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7130e7f-bad6-47e7-b9d1-3868cdc82c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b992392-8d72-4249-94ae-5078ebeded38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1375f5f-f323-472f-b469-25217a9d2bac",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd2d5ea-93b5-47ac-bff8-b4f91006bc6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f7c1ec-0626-42a1-bb92-ac4c7ef9841e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0162588-b449-4c58-b798-24997dc965f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4812848a-d3ba-4977-97f9-b14bacde8a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd100ba-e49e-4f4b-8352-502547689452",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37046d9-aa60-460a-afd9-afdd0f70aa42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7af760ac-91a8-45e5-a424-1b0f413c7436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea41213-ecec-40f3-a1eb-0eae72b3180f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6059b4bb-1522-4cac-a939-67c29084388f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e917bba-61a3-4cec-abfa-0f1ecfde3868",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fffcf1a-ee0a-4857-a113-ea38d5fb388f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e7e1432-b17b-4d21-a9dd-ca1531337c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0b7d2f-b6be-4fcb-9bf3-1c670a4f38f1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3352b866-cb78-4c9c-a2ed-dfc8c85b5441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c044cc9a-1415-4379-be4c-611e14f44cca",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccf0705-d63d-46b8-a975-2978f167614a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d84a61cd-852e-4431-b809-af1b8d70a31c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd80822-dc16-4c71-8dda-3f373cbfd888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4f663d-917b-4424-babf-75a141034275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6146a460-6d83-4e2a-8a68-97121db3392e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57136a6-79e1-4b03-b187-26d7d7460742",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a00d95c-8d45-4a8f-9343-4f9797678ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d07b40d-9e52-410d-b75d-a22e135b7c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1470a93-c91a-439d-9d86-3097ba27e5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb3b3be-77bc-4c5c-8484-013ef6d22675",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1743c313-2497-4183-a060-ca8e24de07a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beafb017-f952-43f0-82c4-bae290fdb5fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "672ec40e-5181-4b89-acaa-b5d9e148e3bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0791c829-e9ba-407f-994f-5cc76b40aafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be76aa9e-b4be-4bcc-995f-615169afeeaa",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7473f56e-7315-43db-b0b7-1a6d71f8c7c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc117081-cb35-4b9d-8d41-a8c99ea94792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbee2ed5-f446-46b3-94e4-f56c7f8ed71e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c2b535-3e11-4608-b4b0-011c103e73bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7a6fd9-6175-41c8-bf6a-deb4ae975cc5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efa33b7-9384-4541-a5c3-ddfdfb844fee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7746f595-de91-42cb-9ca3-2b0d1f6c4730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c8f0da-e9a5-490f-918b-732b72c18432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84bcb711-5b2d-460e-b818-6b77fff2aafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68421a0-7e2c-4b29-a524-dff480bac66a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252d3324-76dc-4821-a811-e2aff4cebe06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cd5154c-999a-4256-9a9b-d775564b964e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5ba2a3-fb27-4d8b-bc97-9565d02f443f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8ada73-9427-4296-8c23-8f934820e5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad10ddab-34c9-40b6-946f-db84ad337d55",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14433402-2b73-4495-8824-b59ed6bc882f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5a3c1ac-fca8-4c28-b251-b0d292649097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79074ad-68b4-4e2b-add5-3390cb59fd98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc30bf5b-aa7f-47bb-b666-d4474044f533"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cdeed01-998d-4027-9b2e-ab14cf8ddda6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91716e3e-9091-4ef6-aaff-975acf525c07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0b874f3-4f6a-452f-aebc-503b6a9ff14d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06dfee78-a103-40e5-864a-976e590adf1a"
                    }
                  }
                ]
              },
              {
                "id": "6d5fe130-504d-4a63-82c8-c1ef9252c204",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca8f842f-d978-4fb7-8bbd-79f1b6751cf3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f4f5d8-8be2-4db5-8e8b-9c1def87efe3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "71aa78e1-9e82-48e6-9a9f-44336ac96a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fe4689-721f-43e9-8e7e-7f5ba6d098ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "470f3e85-fbb3-4920-af39-26b40c23e24a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fae3e0f0-144c-41ba-8a90-702c0d31f741",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a94b27ff-c229-4c43-9fd8-6c55b9f73031"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f2835c4-668e-4538-91b7-50995586207c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57865296-f0ca-4fce-9366-c496cf577aa8"
                    }
                  }
                ]
              },
              {
                "id": "1a851b7b-b05f-4501-904f-02922cf4bc33",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3dc7867a-d917-49d7-bbc1-ea37fb14484d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4157c50b-96f0-4318-aaf4-1bca0ad126d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "40ca9d49-5e54-4f02-9301-35111c76e3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acf41df-f1bd-4ab4-8c34-22580a7f501e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f2fdd1-90b8-4547-9d5d-c5bb7fe17135"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "14703f94-cce7-445c-8c1a-0361d4f1abaf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4e25db3a-5d10-4b2b-afd3-c1f9108a618d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae6659cc-4c2f-47e1-8a47-ebd0905f6d02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "015caf56-94a5-493f-867d-458dbda63eb4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "424a0859-0042-4317-82bf-ff73f860cc9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4ea8c9a-7262-4153-a113-b9e22009af7f"
                    }
                  }
                ]
              },
              {
                "id": "055dce99-8af2-4c8e-9eef-881129ec4132",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a503ed07-cda5-471e-9e69-e0b5bf5ee436",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3995fc3a-44de-4b44-beab-82d4a7a9deb5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1056b559-b245-492d-a2cb-b6897f7abda9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c296303-1b03-43f9-ae28-2d5ebdd238eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7182445c-e79e-43e1-aeee-7b8b185104e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1f4b0889-1391-441f-ad34-3145693d0abd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eceb5ec0-dc65-4ce5-ac04-28e25e6559da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "863db96d-9899-4083-a838-07829c56e77e"
            }
          }
        ]
      },
      {
        "id": "563ac937-33c8-450f-9791-af514f1b2f28",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1bc50709-a732-4e64-9bb4-ed74ca2e966d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de53b55e-38a2-4529-ab08-d9beda0caaeb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82c95c69-cf63-48e8-8ca9-175de16c360a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286d678b-d67e-49d7-8bc2-67da68c31885",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cd6593b8-cd6e-4fa5-a78a-7674a99c0281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5ec4bd-aa44-4cbe-9a2d-6de362b3c255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73cc2078-a1b6-4d60-8032-53a778c119e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a28680e-2195-4bbf-a10f-a505c053a5ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d64ff3e-d95d-4170-8064-f6dd74a1b6ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04ea748b-92dd-4dbf-8bb1-a33502a134e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d132b07c-1964-47d1-9079-d6d73a2ecb28"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "092684f0-a31f-40ea-93dd-c6fcd4f2a1d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "42e49c2d-654a-4c75-8603-b24cef6a7326"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96899852-f985-4202-b879-81a6e1a039ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf70862e-7c7d-4f1c-ad75-20c4c672bd66"
            }
          }
        ]
      },
      {
        "id": "dcd012bf-e380-4811-8739-892a6e0d568b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7220bec8-5e58-4ff4-b8ae-c09d1e8489a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2317bbba-10cd-4f0c-b2c4-ad7fe0041c37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b62f332a-c8dd-48d1-9bfd-08509b988712",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992d2aef-4df8-4b25-aaca-64ea143a4ce1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba4f1a50-bb7f-485d-8b9c-d09b51ad560c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c6741e-9205-4fb2-9854-9dcfcea5e03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3eaee16-c672-4f9f-a1e1-27eb1c09d6eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "522f0ed3-19cf-4e15-b925-5f73ab67b68b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "795f9b8d-3d76-495b-8ef1-3593c66ead3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9858aa2-ceda-4092-9369-ba97fa4a067d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80014f2e-591f-42bc-8858-7a74e2d3d516"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21252b2a-163a-415b-8b24-c602ad14419a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fa8d13c3-469c-4db1-a64c-9239bef52272"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d66fb7f9-ba26-4c5c-abbf-ee42be28bc86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "782334f4-e862-4429-bdf3-f31ff690f750"
            }
          }
        ]
      },
      {
        "id": "bd4f1428-95d4-44e8-a38d-0e3fc48eacec",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cb73fd5b-6e0d-451a-874f-645847811155",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aac31eaf-00f5-4781-9482-e3e4033a3c75",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40610ac3-c5a0-4916-870d-7d862e9396f5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbfdef4-118e-4704-ba88-f435a784aa86",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e8b2494-eab1-4534-a048-274cf5ab1b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ad9a1d-ae7e-4c2b-adf4-aadf01ad390f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7120c9d3-bf72-4eb9-8b52-f2f2a88a5e79"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9af657c7-a134-480f-b3eb-ecc2f45c799e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b882fb4-8f11-4b45-8eba-68994a0becfe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6099514-be05-42aa-91d9-f0935d9c1eb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "152f5ac7-dcf8-4f06-a921-646c48954f70"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "211c0df1-4f04-4779-acc0-1ff66489dcd9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "933ba5c3-c446-44cd-8758-6efb963e6c9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "527ed744-1bd5-4c7f-af78-b6fcd1c4f0ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "47fd772e-6698-40b3-85f2-0a1aafdd983d"
            }
          }
        ]
      },
      {
        "id": "3fb9f299-777f-4e52-9a1a-e290b761eeb1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3126b14-2fa0-42ea-8c47-ae2c0f93e6d2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1b3731e-c064-4cc6-a00c-7afcce9b1826",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1b3c6422-d09e-457a-8aa9-9f78251a8509",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d29535b-56c5-43c4-a450-2049f96372cf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "036be7a0-af6d-4445-9ae2-4a8f094253e3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 105.87368421052635,
      "responseMin": 4,
      "responseMax": 8328,
      "responseSd": 683.7967982063857,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705279082686,
      "completed": 1705279122581
    },
    "executions": [
      {
        "id": "6873cd67-d83c-4f0d-90f9-9108bdf4b44b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "037a1fe7-0767-4401-910e-526fb4ccdf3d",
          "httpRequestId": "974b4c69-7991-48cc-b8de-9cd5b525004b"
        },
        "item": {
          "id": "6873cd67-d83c-4f0d-90f9-9108bdf4b44b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5d8ea5e5-ef60-4ae1-be1c-8449a9c4424a",
          "status": "OK",
          "code": 200,
          "responseTime": 114,
          "responseSize": 0
        }
      },
      {
        "id": "016c7ae3-fb41-4c22-945b-73f5bb2b05f9",
        "cursor": {
          "ref": "3e225f75-9999-4396-9adc-3dfd9a38903b",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "67b7399c-b009-415f-8e92-2c539e6f180b"
        },
        "item": {
          "id": "016c7ae3-fb41-4c22-945b-73f5bb2b05f9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3139ec24-f3be-436d-9154-307f3cc5a184",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 0
        }
      },
      {
        "id": "5dbfe4d5-f765-4929-8a40-b8635eba21c4",
        "cursor": {
          "ref": "40973fbe-61ea-48df-80de-30255fd80cdc",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "784b99da-d7b9-496a-86d6-4e505a28cfc8"
        },
        "item": {
          "id": "5dbfe4d5-f765-4929-8a40-b8635eba21c4",
          "name": "did_json"
        },
        "response": {
          "id": "06b7e02a-4c87-4d01-b9c4-df519b359b44",
          "status": "OK",
          "code": 200,
          "responseTime": 248,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f15131-578f-44e7-9eb4-8fbcb950be55",
        "cursor": {
          "ref": "63916d4e-1148-4717-b006-f31017af4c67",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0a79c35e-6efe-4656-98f9-b46867a8d4c4"
        },
        "item": {
          "id": "a7f15131-578f-44e7-9eb4-8fbcb950be55",
          "name": "did:invalid"
        },
        "response": {
          "id": "d39975b6-7534-4859-8a12-638ffe3b72f6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2817,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f15131-578f-44e7-9eb4-8fbcb950be55",
        "cursor": {
          "ref": "63916d4e-1148-4717-b006-f31017af4c67",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0a79c35e-6efe-4656-98f9-b46867a8d4c4"
        },
        "item": {
          "id": "a7f15131-578f-44e7-9eb4-8fbcb950be55",
          "name": "did:invalid"
        },
        "response": {
          "id": "d39975b6-7534-4859-8a12-638ffe3b72f6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2817,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4698aba-2f68-4954-ae99-d8bc571c61d4",
        "cursor": {
          "ref": "685ef28f-0a8f-4ec1-b88a-d507e5704db8",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "51ca0143-d7ad-4e3a-b069-49b788eb60ee"
        },
        "item": {
          "id": "c4698aba-2f68-4954-ae99-d8bc571c61d4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "38e1e538-d30d-462d-b945-fa2489694486",
          "status": "Not Found",
          "code": 404,
          "responseTime": 23,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6beb3f-deae-4fa7-aa01-7ba83665a29d",
        "cursor": {
          "ref": "94da3fc0-e3da-4c17-a965-5db395081c6a",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2e0c3975-feb7-4776-83e2-ce458f3950f1"
        },
        "item": {
          "id": "ea6beb3f-deae-4fa7-aa01-7ba83665a29d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1e17f06a-252f-4d6c-9080-29833b99e8cc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 13,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cd89c6-e45b-453b-80fd-897c3b9da118",
        "cursor": {
          "ref": "6492c84d-15d7-4960-b7cb-474e69c7cf69",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9689ac1a-9927-415c-a4dc-a5ec0e9c7ce7"
        },
        "item": {
          "id": "35cd89c6-e45b-453b-80fd-897c3b9da118",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8a4e4627-c8fc-41bd-a733-1a61fb5f6469",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc88fa2-5efb-42e8-a17d-b86f640ef22d",
        "cursor": {
          "ref": "0816a0f3-f722-40c6-9223-6d5082f44327",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "716a74ec-3334-48e3-aa5a-c36bd5d64545"
        },
        "item": {
          "id": "9fc88fa2-5efb-42e8-a17d-b86f640ef22d",
          "name": "identifiers"
        },
        "response": {
          "id": "69cb33e1-fe3b-4e6d-b41f-9e8bb1aa1aeb",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b1abb3-c572-4b66-a37e-5d8f6d21cdd0",
        "cursor": {
          "ref": "bdbe4999-5d5f-4a3d-98be-63f6f6dd4c4d",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "055822fc-bb96-4d7e-8151-d7010dbbb1aa"
        },
        "item": {
          "id": "42b1abb3-c572-4b66-a37e-5d8f6d21cdd0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7ab55c54-7173-490f-b168-94474b718319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99b1066-7ab0-4d38-9e48-0978334f2b85",
        "cursor": {
          "ref": "c8d64915-fcd7-4b3a-9649-f40425099747",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b956d566-b3c1-4bfd-a529-7dfc3748c8eb"
        },
        "item": {
          "id": "f99b1066-7ab0-4d38-9e48-0978334f2b85",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4f36541e-9515-42c3-884d-7c5a7ab08a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0314f58e-8e19-442d-8694-6de770aa7130",
        "cursor": {
          "ref": "5570c0df-cd50-4a96-8e22-1425d33f106e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "03139d47-5e32-463b-806c-bc305712edbc"
        },
        "item": {
          "id": "0314f58e-8e19-442d-8694-6de770aa7130",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c8e66f10-9149-4798-adf2-bbdf0f295019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9c4151-da4b-4e81-8403-06a51edd561d",
        "cursor": {
          "ref": "fc52e6de-3568-4542-a59e-88c2a4737878",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "519eb746-d10c-4b83-94c8-8e9f3484682b"
        },
        "item": {
          "id": "2c9c4151-da4b-4e81-8403-06a51edd561d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "84201000-5dd9-4891-87eb-24365c0c3677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3f51e8-74f5-44b8-ba31-1d28e0ce4d21",
        "cursor": {
          "ref": "2147a14b-db51-409b-bf42-741901168830",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e00b89e8-8be7-4250-997b-e8244b8fbe30"
        },
        "item": {
          "id": "dd3f51e8-74f5-44b8-ba31-1d28e0ce4d21",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "11d9dc92-d729-4def-a7ad-d254604f8bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca3e05e-c952-42b1-8e4d-2148967a4a3d",
        "cursor": {
          "ref": "685af637-170e-4342-b167-053f077eead1",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8c6f1d24-ecde-4299-b313-da99e9fa7d65"
        },
        "item": {
          "id": "8ca3e05e-c952-42b1-8e4d-2148967a4a3d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5497ec60-2f2d-4854-a785-f88a60b16cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042a881d-f5b0-4258-8ff4-5fc177db4873",
        "cursor": {
          "ref": "e52155ed-a8ff-433f-ab9b-8a765d8627b3",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "de298dee-1a73-42f9-bb17-1410f1d05d29"
        },
        "item": {
          "id": "042a881d-f5b0-4258-8ff4-5fc177db4873",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b7a44d76-d767-4ba6-ac9a-9396bd6ba405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faacc02-0d82-423d-97d7-dc7939dc12a2",
        "cursor": {
          "ref": "da95fa58-11dd-4cfd-9fbc-db459d6ab71b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "eb206aa1-7f43-4152-8e4c-c9887960855b"
        },
        "item": {
          "id": "8faacc02-0d82-423d-97d7-dc7939dc12a2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ab8b96e0-6fcc-43eb-99c2-dae31bc60fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b19ada-4942-49d2-8382-6e9d5bdd95a2",
        "cursor": {
          "ref": "2e2c216e-c385-4d7d-94ba-304ca6ddd443",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8024c15e-f5d6-43a0-aaaa-7aef76310f67"
        },
        "item": {
          "id": "d9b19ada-4942-49d2-8382-6e9d5bdd95a2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4333f62d-7929-42d1-a2f3-68b2ea5cfc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cf4996-ec3f-4c3d-852a-57d3a42e8ab1",
        "cursor": {
          "ref": "c300f5ed-ce1d-468f-9adc-1438c3f990a2",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f1da747a-9eb6-4b5b-92ab-f7771107b150"
        },
        "item": {
          "id": "90cf4996-ec3f-4c3d-852a-57d3a42e8ab1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "df78e344-2829-4fb2-9267-53302fa090cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a323023d-11f0-49d5-8fe0-7f914dc9d95c",
        "cursor": {
          "ref": "d4f92431-00dd-4878-bf70-f7266e0f9638",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "64c4bf6f-c8ca-4d9b-ad6f-86dc4737f635"
        },
        "item": {
          "id": "a323023d-11f0-49d5-8fe0-7f914dc9d95c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a41bf8e6-b2d5-4c13-a13d-06c24ecc0b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317618ca-0fe1-4fe5-8f5e-06302a2755c3",
        "cursor": {
          "ref": "65211ef9-84b2-44f4-b375-b130c3a5e045",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "97fcdccb-63d5-4263-a8fa-67879d396651"
        },
        "item": {
          "id": "317618ca-0fe1-4fe5-8f5e-06302a2755c3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "eb9390b7-262e-408b-b0a5-a7a98fac5b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84da821b-fc77-47f2-9a58-c4a41492fba5",
        "cursor": {
          "ref": "72f73d02-da1e-4648-90ba-99d88c673af1",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1f8924a3-8e69-4156-a66c-2089c341b8a5"
        },
        "item": {
          "id": "84da821b-fc77-47f2-9a58-c4a41492fba5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bb85d468-fd59-4680-8b59-31c0aba7c1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06695994-7a97-4eb4-b952-0cf7f2f0cee6",
        "cursor": {
          "ref": "dcb34a82-8293-4d14-a098-b95ae2e7256b",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "41bcf48d-c609-4b1a-a6be-674914bfc6e3"
        },
        "item": {
          "id": "06695994-7a97-4eb4-b952-0cf7f2f0cee6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5b99dd32-b0a1-48be-8110-7c62e36ca901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7c71db-8a56-4430-93d5-53be0fbd23b2",
        "cursor": {
          "ref": "18fe3d43-6dbb-48b1-b334-657b0674a287",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7f4829c5-4eb8-492e-8abb-769940e25f50"
        },
        "item": {
          "id": "1e7c71db-8a56-4430-93d5-53be0fbd23b2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1f3d03f4-3e83-4404-a287-a5649cc273c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24969e56-48da-4b9f-a852-14a659300bbb",
        "cursor": {
          "ref": "d36e1e9a-7c2b-4e9e-8fb3-c6e2da83d7b6",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "27b2bc80-f283-4b74-8158-1dd14d61d5ad"
        },
        "item": {
          "id": "24969e56-48da-4b9f-a852-14a659300bbb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1800a87c-71eb-4655-94dc-b0a7fad3bddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40d07c3-c18e-4281-b6a2-f3ab0f22b9ea",
        "cursor": {
          "ref": "9da3d069-c200-48c7-a3c0-06a4353446ea",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c9ac273a-66d1-4740-9e78-63553d589fa3"
        },
        "item": {
          "id": "a40d07c3-c18e-4281-b6a2-f3ab0f22b9ea",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "dc77c2e4-9a99-4243-9e0b-b700f85b1230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e88fe06-3484-4f5b-ac52-a3d30ed15d59",
        "cursor": {
          "ref": "230296f9-2506-4446-b4bb-ebbf0ec00d67",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fc575f2e-b250-414e-8f1c-2564bb397a6e"
        },
        "item": {
          "id": "7e88fe06-3484-4f5b-ac52-a3d30ed15d59",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "be2ce582-ab15-4d68-9261-d5d7f16d4a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc22579-73e0-4990-ab22-a97e47d37d9d",
        "cursor": {
          "ref": "69548ee8-3957-41ce-9f22-e2a1df7a8166",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f67d1584-3f03-492e-9144-8990ec9bdaad"
        },
        "item": {
          "id": "2bc22579-73e0-4990-ab22-a97e47d37d9d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "070bcb31-c045-4768-9ba4-c3d4d61d6a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2701f6-c07e-4030-bb46-c3fa4fed203e",
        "cursor": {
          "ref": "f7d9f706-6f02-4f59-b09a-5e607fae26c9",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "06113d4f-d463-4e55-b468-b5be9cf32ca1"
        },
        "item": {
          "id": "ff2701f6-c07e-4030-bb46-c3fa4fed203e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "444b6e4e-4ad3-4687-94af-d084bcbfcdd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a277c69-37c8-477b-b994-b505b91170e4",
        "cursor": {
          "ref": "e969d678-17b5-4464-850c-7d4f44c5c309",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cb517b4f-1332-42cd-b284-9d1f0a404bcc"
        },
        "item": {
          "id": "4a277c69-37c8-477b-b994-b505b91170e4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "91afe4ef-196c-4b0d-b959-f4a1543cd185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62cb1f1-7336-40a3-ad35-95fb96cf7bf9",
        "cursor": {
          "ref": "319bf514-84c4-4072-995d-f6ec46d23b38",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "54cc4bf5-283d-41c2-9871-f287cbb0ebb2"
        },
        "item": {
          "id": "b62cb1f1-7336-40a3-ad35-95fb96cf7bf9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "78769120-0485-483b-a7c5-fa69e98cef10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44dc66ea-84db-4d1c-bf5f-958fbf59828c",
        "cursor": {
          "ref": "15a3ff53-a0db-4062-af5e-398cceafc238",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fb1c319b-6604-4016-8c7a-8c33c27c878c"
        },
        "item": {
          "id": "44dc66ea-84db-4d1c-bf5f-958fbf59828c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "307fa739-97e0-40b0-b257-c2c841f4ecdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28d9d36-e105-47dd-8c7e-489a26a5b6a1",
        "cursor": {
          "ref": "6d4a4992-c059-4439-a0b9-7eba9021a9ba",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "db52c5a3-f2ca-4715-9d64-0e322a159674"
        },
        "item": {
          "id": "a28d9d36-e105-47dd-8c7e-489a26a5b6a1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3feffd25-d5b8-4220-b41c-541ab7f86820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4276c1-f1e9-4c19-bf9c-4b3fabea9d71",
        "cursor": {
          "ref": "2a432da2-f16f-41c1-adb5-4c427b0f6f8f",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a0517055-1d66-4840-86f8-25101e2cfb19"
        },
        "item": {
          "id": "8c4276c1-f1e9-4c19-bf9c-4b3fabea9d71",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3d37f011-62a8-470a-b171-5f189dc1e5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17e5c68-f300-4121-adcf-bf2ecd946a63",
        "cursor": {
          "ref": "38aecf51-c75a-4ac2-b557-c9f27a3ccc81",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b1c684b3-dd56-4207-b3bc-fb7267b51b25"
        },
        "item": {
          "id": "c17e5c68-f300-4121-adcf-bf2ecd946a63",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "48d38476-9144-4ea5-8815-13eca25f497b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8999f90a-499d-419a-b220-abe0d1d25f78",
        "cursor": {
          "ref": "143720ca-6f56-4dfb-b53e-d4f56c9cf4e3",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d41c1b16-b585-45cd-a268-1bbbee03a96b"
        },
        "item": {
          "id": "8999f90a-499d-419a-b220-abe0d1d25f78",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f91c1f2b-8343-471b-90da-6131c2556385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6410b7-c3f7-41df-a1b3-2ac91c9f4143",
        "cursor": {
          "ref": "14364b26-7d71-4bb7-8477-b7d17241254e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c2dbf2e6-4b58-4976-8038-86a026615fae"
        },
        "item": {
          "id": "9e6410b7-c3f7-41df-a1b3-2ac91c9f4143",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8eb66456-8daa-45de-97b1-202b5728afe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa0def1-2d11-45e0-93fa-eeafb20a18bf",
        "cursor": {
          "ref": "38e65612-0c2b-4970-b09c-0dc69cf057e9",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9aaa8683-4909-4d23-a2bc-78ce735c7635"
        },
        "item": {
          "id": "4aa0def1-2d11-45e0-93fa-eeafb20a18bf",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e938c34d-9705-4849-8a68-ed2b68ac34de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5aaf1a-9a86-4a3d-bf4c-dec3c35c3ee8",
        "cursor": {
          "ref": "0df1c33e-0688-4cda-873c-902a144c924f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9afac93f-c137-4149-8173-068a202a3642"
        },
        "item": {
          "id": "2a5aaf1a-9a86-4a3d-bf4c-dec3c35c3ee8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0d059451-b905-4422-8500-b6734edc4b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d09f247-c548-4b72-b196-ccb75b71cfb1",
        "cursor": {
          "ref": "4313bee5-5e20-42b2-92a2-f5b5e4636e11",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c69509fc-7be0-4579-b6d9-e50c6eaf046c"
        },
        "item": {
          "id": "3d09f247-c548-4b72-b196-ccb75b71cfb1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "64b1ce71-7f8c-4985-b337-2312bf61f006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9095dc-d5cb-4bf5-83d0-1fabcb327cc4",
        "cursor": {
          "ref": "e19b0839-f523-47ed-9f03-058488e9d35a",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8f3e570f-fb2b-450c-8594-efc54594c19b"
        },
        "item": {
          "id": "7e9095dc-d5cb-4bf5-83d0-1fabcb327cc4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bb41c1ba-d9ee-4523-bf28-c9d58cc216a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afd7482-7dc6-4cf1-9ddd-5f1855fd94b0",
        "cursor": {
          "ref": "7c96038a-06d6-4f2e-833a-fb268a85a294",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5fcc7f8c-2e60-4b2d-b7c8-cb8b05232513"
        },
        "item": {
          "id": "8afd7482-7dc6-4cf1-9ddd-5f1855fd94b0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c4ed0fa2-f7d2-40a6-bca4-5c884c7020b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad68168d-b3ca-4a60-bc6e-f0c9b3b46bb7",
        "cursor": {
          "ref": "9ba9b25e-75e0-4cd4-a4ed-34142025a7b7",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "796925e3-90c3-430d-ae2c-d5dce47d297f"
        },
        "item": {
          "id": "ad68168d-b3ca-4a60-bc6e-f0c9b3b46bb7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8399e592-6f78-463a-806b-fc4357c5d05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabaa54a-f84f-4c77-9bb0-fabe23ad333b",
        "cursor": {
          "ref": "baa5951c-5f32-4cfc-8fdd-9d4f0a771df7",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "72d7b55d-3d6e-4280-88a8-960cc9530aa8"
        },
        "item": {
          "id": "eabaa54a-f84f-4c77-9bb0-fabe23ad333b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "91e93a1e-8f3a-4053-9b14-a9402bae5bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03f6d08-9ba8-42eb-a9a6-055c69d0a640",
        "cursor": {
          "ref": "b1ed8dcb-e096-4e05-89e7-129c81871680",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "89419448-bca0-4487-9e8a-f59a718b623b"
        },
        "item": {
          "id": "a03f6d08-9ba8-42eb-a9a6-055c69d0a640",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9dd34eb4-c079-4dfd-82af-34bd81891bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc88f27c-d5df-44bb-985d-18655764b429",
        "cursor": {
          "ref": "bbb90f2e-7efe-4130-94d9-517b6c6fc49a",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cd6ac62a-c0ec-4e2e-b3c4-da22567ba730"
        },
        "item": {
          "id": "fc88f27c-d5df-44bb-985d-18655764b429",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c2948f33-c025-46d0-8c0f-cec228628a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0f7d4e-3057-411e-b715-fab2e97fa8e6",
        "cursor": {
          "ref": "82fea639-bb1a-4954-8554-adda71296f8e",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "72fbbdef-64d5-48a3-8d0b-cfa618add354"
        },
        "item": {
          "id": "bd0f7d4e-3057-411e-b715-fab2e97fa8e6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c3bb99ca-9486-4d4e-a1f4-9dffedddea28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93a377a-de30-4df3-815a-68b0bb736c59",
        "cursor": {
          "ref": "ffc7c2b6-91e4-4306-a5cb-a96183e583a3",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0eb1b173-7112-4cf2-a20b-6a8f0f22c468"
        },
        "item": {
          "id": "e93a377a-de30-4df3-815a-68b0bb736c59",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6cf75b4c-67a2-496c-925a-39a7608c9d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3560b46-9b9f-4e02-9719-142775234539",
        "cursor": {
          "ref": "a0324f11-0bd3-41c5-97f1-7a052bc22ea1",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "170a004a-8327-469f-925b-b601e2761de6"
        },
        "item": {
          "id": "e3560b46-9b9f-4e02-9719-142775234539",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ebd9d103-c1ea-4854-82e3-cc65cc5d2a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a96bcf1-25a4-4330-ad36-bf8bf66c19e9",
        "cursor": {
          "ref": "2c6c7854-409b-4dc8-8bf9-f456f64c7347",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1a8ef26a-9b35-425a-87c1-ca631afe9604"
        },
        "item": {
          "id": "8a96bcf1-25a4-4330-ad36-bf8bf66c19e9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "12bb53ce-ba95-42ce-b1e0-4d25b54019aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b832bdd6-8f43-4827-8ff4-c931eae78ff6",
        "cursor": {
          "ref": "5ae40b0b-845c-420d-99ff-f167cb5558bc",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a6ccbffd-060e-42e6-affe-c07c2399cec9"
        },
        "item": {
          "id": "b832bdd6-8f43-4827-8ff4-c931eae78ff6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "73842f90-bd4c-4e7e-8610-d8d4a5614efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774fc9ea-5443-47bb-9246-c01f0816edd8",
        "cursor": {
          "ref": "5a947bd9-d9d1-46b6-b4b8-b0a107cbd906",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "78d8c6ff-a953-48ad-a066-4253a919b96f"
        },
        "item": {
          "id": "774fc9ea-5443-47bb-9246-c01f0816edd8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7d1aec58-12ef-4602-8a95-8a667d107ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98c9734-734a-4753-b63f-d0415f7d95d7",
        "cursor": {
          "ref": "3f08f9bc-48ba-4796-b2ab-b323d7f654ae",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0d272d6e-03ef-4794-9b2a-60b525cd6271"
        },
        "item": {
          "id": "b98c9734-734a-4753-b63f-d0415f7d95d7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "892ddf6c-78bb-4849-a118-6930697e6211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac91fed-baaf-4198-9119-d0ea3db31645",
        "cursor": {
          "ref": "72c5b303-4bd0-488f-a584-8005e7d05086",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "444622f2-e210-4adf-af90-a78f7cfed346"
        },
        "item": {
          "id": "cac91fed-baaf-4198-9119-d0ea3db31645",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9f2d8429-7f65-4530-8fe5-f78e42170045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5190927c-1954-4c93-98b2-c905beda52de",
        "cursor": {
          "ref": "81906bf4-eb36-45cc-ace8-1f4d1a8cd7b4",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "76f8a08e-22ef-4ef9-9468-c7ab18019f14"
        },
        "item": {
          "id": "5190927c-1954-4c93-98b2-c905beda52de",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "738c6d23-0443-4c42-b00b-ccd2c63ac61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a1b91b-b8e7-4273-bbff-ee3256f96f8c",
        "cursor": {
          "ref": "2a0d9f30-0f3a-44e7-8f57-2c09b9f7ef27",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e8d4cb1f-1b1b-41ae-b70d-fbb5a2ce67af"
        },
        "item": {
          "id": "f7a1b91b-b8e7-4273-bbff-ee3256f96f8c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e8c78a4e-307d-4aa3-9ade-0baccd2e3bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c28efd-be85-4f8e-b01e-aa0667f83c52",
        "cursor": {
          "ref": "0f3cc70c-ffb1-4b79-a590-b1a5bdcd0724",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e87d366e-499e-4969-96c4-df6fd624459d"
        },
        "item": {
          "id": "b6c28efd-be85-4f8e-b01e-aa0667f83c52",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "abe17e4e-e9f5-499f-b43f-8414c0afea91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915dad34-a40a-4261-a01d-5aa08b9da1b5",
        "cursor": {
          "ref": "0a247922-6f46-4b7f-941d-cf95043e8ac2",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b0534704-8108-4143-8401-59310f5a731c"
        },
        "item": {
          "id": "915dad34-a40a-4261-a01d-5aa08b9da1b5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "52da8240-cbee-4d90-b9ce-4deb7ab97520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5b1ec8-84a4-45ec-8d38-9337f6a99828",
        "cursor": {
          "ref": "c1657340-af6b-4850-840d-d4ba62e47438",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ddc5e9c0-aead-4261-bed7-7198c9cd8d20"
        },
        "item": {
          "id": "af5b1ec8-84a4-45ec-8d38-9337f6a99828",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "eede0cc3-dc43-4db9-95f3-cd52e756e9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe90e6e-ef16-4e9c-a936-59f118df6eb1",
        "cursor": {
          "ref": "db9932b8-deba-4abd-a19b-908e0da71399",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ac2c8b68-7515-4daf-b6a0-804df88b106a"
        },
        "item": {
          "id": "6fe90e6e-ef16-4e9c-a936-59f118df6eb1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4cd16505-e7da-4ec3-ae3b-1f01b23c1de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a076e8-222f-4f6d-abbb-9778d95e2573",
        "cursor": {
          "ref": "16c32aa1-ec9a-4970-9b24-fd7edf47e46a",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d80b6337-b68b-4675-bb15-304769b210ea"
        },
        "item": {
          "id": "78a076e8-222f-4f6d-abbb-9778d95e2573",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b84e37dc-9eec-4dc4-838a-e9617a7be23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a577a1-010b-4e36-84c8-aca51c2bfece",
        "cursor": {
          "ref": "7b70544f-026f-4417-a179-14907d57f525",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "16e50077-70dd-4242-bc0e-508a62907d83"
        },
        "item": {
          "id": "07a577a1-010b-4e36-84c8-aca51c2bfece",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "20ea07c1-be1c-413b-b5a9-e0c4f792ca3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f60172b-f18d-4b15-b594-3ed4c65baf6f",
        "cursor": {
          "ref": "20699643-2e42-4a68-8e94-8aba2c3edeae",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "09e58b79-94bf-4dc7-8810-4c6f5001507d"
        },
        "item": {
          "id": "5f60172b-f18d-4b15-b594-3ed4c65baf6f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "363d4343-1f59-4321-8cd1-7ec35eff48d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0fa9f2-a14a-46a8-974c-4957a370885b",
        "cursor": {
          "ref": "5f8c0699-63e8-43c1-94fb-45b672a769ed",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "649f351e-8dfa-4df1-982e-50f1044741a7"
        },
        "item": {
          "id": "8d0fa9f2-a14a-46a8-974c-4957a370885b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "99ccd3a9-31c2-485d-902d-3517d8132ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8314560f-7b55-4076-976b-c4527c565971",
        "cursor": {
          "ref": "bf578116-02ef-42a4-90c7-0080161b6163",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a44e37a5-4cf5-4cbd-b896-1ce5ea5dff7d"
        },
        "item": {
          "id": "8314560f-7b55-4076-976b-c4527c565971",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8fe8687a-8c2f-433b-8a6e-a329ee68d7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3957919-a2f3-48b5-87fa-869121d9c7d6",
        "cursor": {
          "ref": "01db7132-a5cd-401a-bfa6-91a5b0fd5d39",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2402b7dc-8d06-4097-9ca2-becb034b3069"
        },
        "item": {
          "id": "c3957919-a2f3-48b5-87fa-869121d9c7d6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7ab95cdf-4244-41da-baac-02626b26c528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e7788a-9ba2-4208-9036-5e1255af499c",
        "cursor": {
          "ref": "afa4ea9b-5e3e-4aea-9d03-9314846fdb0f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7ef8b327-4de1-4138-89dc-3159e845a3ad"
        },
        "item": {
          "id": "b9e7788a-9ba2-4208-9036-5e1255af499c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "109a8a44-57fa-48b8-80c6-f80e46534275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f923532-f056-4f25-b595-f7e2ba7450de",
        "cursor": {
          "ref": "3f21d95e-7d80-417f-a43b-64db00c69148",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7c5c5862-9489-46be-baf7-e920f458d85f"
        },
        "item": {
          "id": "3f923532-f056-4f25-b595-f7e2ba7450de",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b988fede-3e6a-483a-8d7b-b60a3ac95a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd49efec-6039-4a69-a213-f731080d7442",
        "cursor": {
          "ref": "adbecf07-7544-406a-9e5e-68d94f2428c4",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "aa008360-6334-48ea-b114-1ce2b6ce04b8"
        },
        "item": {
          "id": "bd49efec-6039-4a69-a213-f731080d7442",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "26f40ebc-7ef3-4202-9d24-7eb0f536a85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef213ff8-d000-4f0e-a366-a266b152ce4a",
        "cursor": {
          "ref": "003c8a4a-6eb3-4bf0-9845-b51edbc9d2ae",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7640ce2b-2e3b-4ef5-a5b4-912711c53ab5"
        },
        "item": {
          "id": "ef213ff8-d000-4f0e-a366-a266b152ce4a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "177db88b-5417-4def-8d22-234a47801d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d74cdb-ffac-4023-b049-ef3517df7245",
        "cursor": {
          "ref": "63e82786-e005-4342-9a4d-3f52db564141",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "49a66dfd-5947-4f75-b465-163c29d4d65f"
        },
        "item": {
          "id": "87d74cdb-ffac-4023-b049-ef3517df7245",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ac044936-2807-4412-b9e1-bea80d05993a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f88136-e90c-4571-b1cc-fee6ebaaae58",
        "cursor": {
          "ref": "353b98a9-42a0-4106-a51d-4ac72d49216c",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7f5f4dea-819f-4501-8040-fbb78d15cf61"
        },
        "item": {
          "id": "08f88136-e90c-4571-b1cc-fee6ebaaae58",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e2dd99bb-67c5-4010-b0f7-0936a348f1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0521bea-0c1d-4490-8489-e537e46425d1",
        "cursor": {
          "ref": "f1fe8160-3fa0-45a9-b157-8bfa8d73a08f",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "09339d2a-3aa9-4fbb-9ef9-1149e83d4d25"
        },
        "item": {
          "id": "b0521bea-0c1d-4490-8489-e537e46425d1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a9bbbeec-6967-4da5-bff0-8b35f07b12b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49996924-fecb-4d0c-9732-74b44185bcf3",
        "cursor": {
          "ref": "6c4b134e-ba5f-4a56-9aa5-8d4b7dd6b057",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f3dbdd6e-bf54-479d-8927-05c7dfbce41b"
        },
        "item": {
          "id": "49996924-fecb-4d0c-9732-74b44185bcf3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e98a0873-65af-497a-8072-48ffad705a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e2b90c-fa37-4559-b3b4-0e3476060e1d",
        "cursor": {
          "ref": "f0c3bd1a-7a1a-454d-9141-23707e56af9d",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d50ec78d-c0c1-4380-9a32-6fa0ce87923c"
        },
        "item": {
          "id": "96e2b90c-fa37-4559-b3b4-0e3476060e1d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e37aa59f-bd4f-4b0c-be68-544cd7cebef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bc7451-c752-4f46-8eff-c6affb6c96c5",
        "cursor": {
          "ref": "0bd61644-3d93-4ac6-bbe0-b73739332807",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d2147d65-ff7c-426c-b768-09cafe2b472f"
        },
        "item": {
          "id": "d7bc7451-c752-4f46-8eff-c6affb6c96c5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "06bf0ef0-9492-4790-9f6b-76b34844f25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be4afcc-9147-45ea-965c-ee7d29f016c2",
        "cursor": {
          "ref": "e6ebc8a6-08a0-4290-b307-c9185023f5ee",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "69094391-d738-4833-b24f-5f17fb21a1a5"
        },
        "item": {
          "id": "3be4afcc-9147-45ea-965c-ee7d29f016c2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "85b833ab-e7b4-4b60-b68d-9a765e35a881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f714f38-88a0-4c8c-8f7f-13b048974d10",
        "cursor": {
          "ref": "6b0852ae-1468-4a56-a536-97ff0089b0a3",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "726fc3cd-058c-45c1-8d43-17eda8d290f5"
        },
        "item": {
          "id": "0f714f38-88a0-4c8c-8f7f-13b048974d10",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ae36ff46-576f-4703-a0c6-68c605ba7c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945c60ad-077b-4d0f-96d5-cd4f31ff8035",
        "cursor": {
          "ref": "fd0c704e-bf02-440a-9304-c3e7fdcf5cc5",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "92c617ac-9969-4139-91f5-4043b7f7d741"
        },
        "item": {
          "id": "945c60ad-077b-4d0f-96d5-cd4f31ff8035",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f29258c5-0f41-4e2d-9601-f9d5d229d1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2bcc6b-679f-4af7-abc9-1f73620281d4",
        "cursor": {
          "ref": "a78accff-daba-47c0-965e-1345e357ac49",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6a629c10-6522-4d3f-b0dc-656e7bacfb66"
        },
        "item": {
          "id": "8a2bcc6b-679f-4af7-abc9-1f73620281d4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bb482865-acf9-404c-8db8-10ce991aaf4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d83cb3-313e-498f-ae7c-1fa6366b5d6b",
        "cursor": {
          "ref": "7039c307-3f25-42db-9bce-fa033c0adc86",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4eeeb04f-9c30-47fd-9879-b8f2e1f42302"
        },
        "item": {
          "id": "d7d83cb3-313e-498f-ae7c-1fa6366b5d6b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ac0d9c8f-df9f-4514-ae7d-798efb8e0662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8786762f-ed7b-46fa-8cf6-92d0ae4e3e35",
        "cursor": {
          "ref": "19e38fc3-0198-45df-9e42-91976add5233",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3dd1b25c-77d5-4116-bf8a-d60155f076a2"
        },
        "item": {
          "id": "8786762f-ed7b-46fa-8cf6-92d0ae4e3e35",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "84931732-987a-4818-91f1-5c98450ca467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f067dfe-e4fb-45b4-9d6e-fe3b5efaac8b",
        "cursor": {
          "ref": "0d9c3a4d-6178-4abf-a93d-bacb8ddb630a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ead5bd33-c73a-458b-a8b3-ca22e3345b79"
        },
        "item": {
          "id": "4f067dfe-e4fb-45b4-9d6e-fe3b5efaac8b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a7d52985-3649-4b17-88df-a9b39d6833e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd59e54c-9cb0-4d33-a029-e43c67966865",
        "cursor": {
          "ref": "770c6eca-38de-4ac3-85b5-bd26e8101855",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9d9f962c-e620-4d82-b87e-999017726572"
        },
        "item": {
          "id": "fd59e54c-9cb0-4d33-a029-e43c67966865",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "49f02aec-a10a-4171-9e44-8927f582babc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79ba0b1-2479-445c-8c9a-c6e4f5e59a29",
        "cursor": {
          "ref": "1657c9db-1794-4c6b-a78a-1a6c5d5a0f37",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2232bc86-e004-40ba-80e7-5f62ff9b0617"
        },
        "item": {
          "id": "f79ba0b1-2479-445c-8c9a-c6e4f5e59a29",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ef04e6c9-9912-4c0d-af6e-4e15eb8a6a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b444dee-d6e3-415c-9a50-af2d71d2551e",
        "cursor": {
          "ref": "456bc162-9f13-4f61-bc34-c8713662307f",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9c71e0f1-5393-4298-8794-3578d6ad7e22"
        },
        "item": {
          "id": "2b444dee-d6e3-415c-9a50-af2d71d2551e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f6e4990d-7a95-40cd-bee2-250c2f50e167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84809bb-7bb4-4a11-a03e-5d608ee0ac97",
        "cursor": {
          "ref": "9e2d603f-a922-48af-bbd1-eaaf090e2d92",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "35d7e352-f533-48e7-b7f6-d86d843ab393"
        },
        "item": {
          "id": "b84809bb-7bb4-4a11-a03e-5d608ee0ac97",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "154c2f11-f626-4d27-8e22-54921c0369d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46df3eda-242d-4e70-bfa5-4110226d4d19",
        "cursor": {
          "ref": "89153ce1-b87b-4993-ab7a-976a8b7c6774",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "eefb92ba-7f8c-4d9f-80fd-e0f22db6c232"
        },
        "item": {
          "id": "46df3eda-242d-4e70-bfa5-4110226d4d19",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "89ec9f9c-6517-438c-8a3d-21506ed69b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046a89b5-50e7-4aee-8987-2187d7122236",
        "cursor": {
          "ref": "c6d5cf31-b3be-49ff-94ff-3b3ed8d165e1",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cf52bf1a-04d7-4130-8022-ab246e5df4a0"
        },
        "item": {
          "id": "046a89b5-50e7-4aee-8987-2187d7122236",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "018847c8-279d-4b04-bf01-3b190044abd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc832b9a-ed15-45c8-96f0-674b55e67eb3",
        "cursor": {
          "ref": "0fbb8aed-d80e-46e5-b9a3-8073a3992946",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2bbd1f2e-3b8d-4f3d-8646-0e5605936cc6"
        },
        "item": {
          "id": "fc832b9a-ed15-45c8-96f0-674b55e67eb3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9d9f2922-de6f-403d-a38f-80e786209bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d4d884-9b9f-4323-9c1f-06eb06e49be0",
        "cursor": {
          "ref": "2cb68216-1f61-459d-abf4-17f4ea5811fc",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e9122c51-f892-4532-bf54-a6e90aa7a837"
        },
        "item": {
          "id": "d7d4d884-9b9f-4323-9c1f-06eb06e49be0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f46726e5-4208-4514-9348-b151e765d8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e98182-f955-46d1-a46e-46140713b426",
        "cursor": {
          "ref": "2663009d-ea30-48cc-b726-d672bb2488be",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1fadedbc-c7bf-41e3-bd22-63714dbd9385"
        },
        "item": {
          "id": "51e98182-f955-46d1-a46e-46140713b426",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ee3c0b5a-4e44-4ff4-b830-e23bdeae7835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a1157c-ee32-4d96-bf03-444178fb7b02",
        "cursor": {
          "ref": "0acd48a5-910c-46ae-84b3-09ccdf47bd07",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "eb6adccb-286d-45f6-8fd3-7120e36bc513"
        },
        "item": {
          "id": "56a1157c-ee32-4d96-bf03-444178fb7b02",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b0c52b54-b5d2-43ed-a9d2-3a0b6fffc4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3603e330-25e6-4f4d-bdde-86cb5ee27e2b",
        "cursor": {
          "ref": "5c7e875b-5fbc-4452-8fe2-bfeb64883f7e",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3741dcb0-ecac-43f7-83a1-65df5297dede"
        },
        "item": {
          "id": "3603e330-25e6-4f4d-bdde-86cb5ee27e2b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3361f759-8f6b-4b6b-8d57-7f4a1ca75563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9536c460-d6e7-4972-a7b4-44f72245fdcc",
        "cursor": {
          "ref": "693bb16a-7817-4bef-a60e-3cf67dbfc354",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b726cb89-799c-450f-bc32-ec12d14fba9c"
        },
        "item": {
          "id": "9536c460-d6e7-4972-a7b4-44f72245fdcc",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cece5413-8cb3-40c8-a1a8-43c58347e906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f24cb3-4b8a-4448-9d49-61077dc52656",
        "cursor": {
          "ref": "713a144b-83f1-496d-97bd-fee6a0528f13",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "074aa211-cb49-485d-aced-b81e0f93c6e2"
        },
        "item": {
          "id": "c1f24cb3-4b8a-4448-9d49-61077dc52656",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "178ee804-bc1a-42b5-a808-f43f4b44037e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d5aa35-bd4e-404e-801e-4d13272e596b",
        "cursor": {
          "ref": "ea0a3c72-bf39-41b8-b62b-fbcf38aeea9f",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7c5cb3f0-819e-4670-9af1-afe9def63a53"
        },
        "item": {
          "id": "e5d5aa35-bd4e-404e-801e-4d13272e596b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1d737536-a518-4611-bfff-49530df6e586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798c25be-fde3-4b34-98a8-9e1ace0856b7",
        "cursor": {
          "ref": "8648c0bf-5b9d-4945-9cb1-cc2b0b73193f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2b6c373f-726a-4111-895a-e40e035ec250"
        },
        "item": {
          "id": "798c25be-fde3-4b34-98a8-9e1ace0856b7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "75de33ed-0112-4a52-b105-368a218baf6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb929016-5b25-407a-a43a-5fc49ff4da88",
        "cursor": {
          "ref": "48ae577f-2ad7-4563-a588-d06e96e15d9d",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1640ec53-5e9b-4901-b8b2-6e2ba96a4ccd"
        },
        "item": {
          "id": "eb929016-5b25-407a-a43a-5fc49ff4da88",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1c9e7f3b-c2db-49b8-833f-e8ed1b053d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78abbae-9da3-4d0d-b185-1607a8cd5083",
        "cursor": {
          "ref": "8cc55cb6-990a-4097-87bd-a63b021de028",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7abece19-077e-4a5b-9273-79c3f4ea8ad6"
        },
        "item": {
          "id": "d78abbae-9da3-4d0d-b185-1607a8cd5083",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b7fcea65-7e86-4168-bc5e-daab7404d6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d2dd13-31fb-4c80-be17-0bfb892a2b2f",
        "cursor": {
          "ref": "2d3b2194-ac0c-4bfb-93b5-3e2d86cb37c9",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a138353f-8f56-4e91-9879-b3e9a937a06e"
        },
        "item": {
          "id": "36d2dd13-31fb-4c80-be17-0bfb892a2b2f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0a0d425c-801c-4d4c-a4c2-63737349ffce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5604595d-0bb8-49e7-9990-f07c90489fd7",
        "cursor": {
          "ref": "4df239d9-f079-47b9-b1d4-99173e2d96bb",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8c5aa66d-dc50-4948-a196-22b71e40f675"
        },
        "item": {
          "id": "5604595d-0bb8-49e7-9990-f07c90489fd7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2c6f4032-a476-48b7-bcdd-3350a147ec8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab33c2b-14bd-4456-94c8-04f7dddec572",
        "cursor": {
          "ref": "cba35722-54b8-42c9-80dc-dfb7c6a2cab6",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "69c25553-e432-402d-b507-371ea2b5e411"
        },
        "item": {
          "id": "1ab33c2b-14bd-4456-94c8-04f7dddec572",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "decab3ed-038d-431d-a4e3-61bb0feb7255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ee5c702b-d774-48b4-a294-298e6ecef2f8",
        "cursor": {
          "ref": "95738818-99f5-433c-acee-30344b7f2911",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "81069a4f-05d2-4661-96ab-b414178aaf35"
        },
        "item": {
          "id": "ee5c702b-d774-48b4-a294-298e6ecef2f8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "224c4dc6-75f9-481e-986c-a53e8ddeaa3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "a90d4411-5d9f-4c94-9b2c-b4a3f216c908",
        "cursor": {
          "ref": "40e19319-eb05-4250-b4d2-fd06e07797f9",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f7fc25a0-aa37-42ae-8551-9b43e222c647"
        },
        "item": {
          "id": "a90d4411-5d9f-4c94-9b2c-b4a3f216c908",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fd640b52-7b85-467f-b8c0-7bc25049eb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "84cf6d76-0faa-483f-8ec7-080b143c0081",
        "cursor": {
          "ref": "32f0daf0-6874-4b31-8a18-8533bad13f80",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f6219252-11e7-4fd8-bd40-62fd88105a28"
        },
        "item": {
          "id": "84cf6d76-0faa-483f-8ec7-080b143c0081",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b0cddcd6-3660-4722-8201-446872c4acde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "00608476-0240-4467-8a46-f0eca5fc2c45",
        "cursor": {
          "ref": "9adacb17-ad50-40fa-a188-18fb248b443d",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "daf4e81c-6d17-46d0-ade9-882ca70e1ac9"
        },
        "item": {
          "id": "00608476-0240-4467-8a46-f0eca5fc2c45",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6c131f0f-7da8-4bd4-a45c-5280f22ea2f8",
          "status": "Created",
          "code": 201,
          "responseTime": 8328,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "74789da9-d0d0-4d11-86be-40a1f1c65933",
        "cursor": {
          "ref": "a60898c3-e3d6-47b4-8eed-a174f4eb9e7a",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c936fe3e-8591-4dd6-b5e7-7d4224317647"
        },
        "item": {
          "id": "74789da9-d0d0-4d11-86be-40a1f1c65933",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1aeaca42-950d-4f33-8a0b-7ea4d9d256ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "bfbe1eec-248e-42be-a8ef-6ce8b22157aa",
        "cursor": {
          "ref": "f3f94229-efee-46cd-bc4e-ea2e89696c27",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "804ad0b9-c733-467c-a5ee-11ff3dc8c27f"
        },
        "item": {
          "id": "bfbe1eec-248e-42be-a8ef-6ce8b22157aa",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8ccd8e02-7e29-46e7-b07f-e9df42c93498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "95f92b16-063d-4f80-bad5-c49dce7d7cc2",
        "cursor": {
          "ref": "6f98578f-4866-4afb-bd74-723b63a0f4c5",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "090987c3-ea8f-46d5-9de6-4510e9d404b1"
        },
        "item": {
          "id": "95f92b16-063d-4f80-bad5-c49dce7d7cc2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8c5911dd-5497-42ea-89b5-dc81bb121d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522d957a-eb24-47fd-aeff-23d47121aa3f",
        "cursor": {
          "ref": "474f64d6-977f-4637-b075-b8ca1a791687",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5f55676a-4810-4603-b80d-1e54f38600a2"
        },
        "item": {
          "id": "522d957a-eb24-47fd-aeff-23d47121aa3f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8a2a1f69-beb8-4ce1-8cac-c76410d5a70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b8ca5a-c847-40c6-b293-22161ad4e415",
        "cursor": {
          "ref": "de65b1f6-c5c5-4c25-8061-448cc21e4078",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e7444908-8fd1-44d3-b035-9c18580d6648"
        },
        "item": {
          "id": "a1b8ca5a-c847-40c6-b293-22161ad4e415",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1a21660f-75b3-458c-b205-a3f9af6fba03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e5d9b6-c3bd-44fd-a1ff-b6bc1bbaac17",
        "cursor": {
          "ref": "e0757577-5e9a-44f3-9d8f-3b49f26b21d3",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7f5ae11e-e788-4c05-a9ec-65a7d589c29c"
        },
        "item": {
          "id": "90e5d9b6-c3bd-44fd-a1ff-b6bc1bbaac17",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7cb6e554-3fde-4488-a57c-816a42b5ac3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4936d7fc-0a92-45d6-ab0c-4d4928fffd77",
        "cursor": {
          "ref": "e0166173-6862-43d2-97bc-a1c09f317bc0",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "160d2af8-5258-43ae-9a7a-d69fb8e39e21"
        },
        "item": {
          "id": "4936d7fc-0a92-45d6-ab0c-4d4928fffd77",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a2e0ffb8-52d3-4048-b709-04f5643a0101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4339317-58bd-421e-966a-c8133788af49",
        "cursor": {
          "ref": "63f3f321-c0f8-4d38-82df-2b0552e3d6ed",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c9b76927-5e00-4365-a1c6-90646d7fb321"
        },
        "item": {
          "id": "c4339317-58bd-421e-966a-c8133788af49",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "90628ea9-303a-4c6d-bc3f-e0217c2a67bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21004ee9-e9a1-4672-beab-0fbdd0c3576c",
        "cursor": {
          "ref": "179a032c-177c-4cd2-a04a-ccdc33128eb4",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "370ee50e-38d5-41f7-ba0a-7d3e966ffa05"
        },
        "item": {
          "id": "21004ee9-e9a1-4672-beab-0fbdd0c3576c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c48e2655-c03c-442a-89a1-aa28ed0ed78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8a4ef2-38fb-4d13-8282-84702e87e381",
        "cursor": {
          "ref": "e22bab5d-17c1-4d73-8c93-6f44d550f7e0",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7f6f76fb-aa88-4f26-913d-8b960aca2605"
        },
        "item": {
          "id": "1a8a4ef2-38fb-4d13-8282-84702e87e381",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4fa871be-d9d8-4c4a-98fa-a0a4ff36f7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84efe0a8-d382-45e0-aedb-e735957d188b",
        "cursor": {
          "ref": "9c836985-1dde-439c-995f-4ed2e005d73e",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fa7d0a01-0349-4c48-ad2e-a6d0a1fa113f"
        },
        "item": {
          "id": "84efe0a8-d382-45e0-aedb-e735957d188b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "60928a8c-83f9-434e-a9d5-d92e28ca80fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744c82e8-5b5a-46f9-a7bb-18b141251ff7",
        "cursor": {
          "ref": "99df8f51-e33b-40b5-9ae2-c3413cbbc977",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fb57d0ad-f096-4c4e-9fa9-81476f76824c"
        },
        "item": {
          "id": "744c82e8-5b5a-46f9-a7bb-18b141251ff7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0ae8d465-6126-400d-ada5-07591a87e391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbe187e-60ef-479d-97cf-1eedf443b339",
        "cursor": {
          "ref": "bdf1e4ac-1e7a-45df-ace4-e6db1cc0e269",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7565bdc5-8acc-4efd-a503-9ba2e940f576"
        },
        "item": {
          "id": "1dbe187e-60ef-479d-97cf-1eedf443b339",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1714dc2c-50f6-4770-ab41-78d12a973587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa509f6-7914-4410-bff4-7ae9f4adb7b8",
        "cursor": {
          "ref": "b8d3fb9b-e9cb-4ce5-aead-d6fd8e96d485",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6964a422-ef44-47ae-a9b3-6e8a83f99e77"
        },
        "item": {
          "id": "afa509f6-7914-4410-bff4-7ae9f4adb7b8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d40e90ef-f291-4ba8-9be5-03d8326515a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6dae33-9e80-4ed1-8268-666b09f06637",
        "cursor": {
          "ref": "bcaf3643-3385-47cc-b7bb-f77789dd8e17",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "63f1d5df-6011-4956-9e4d-11b25b06a054"
        },
        "item": {
          "id": "ca6dae33-9e80-4ed1-8268-666b09f06637",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "761d30e5-b4ca-4260-9870-823ebed4716d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d3b8d5-a31a-4de3-bd43-dd43d30a30e6",
        "cursor": {
          "ref": "b28f4557-0e59-476e-bba0-15c228be4a51",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f9be8052-3195-4630-a800-79ebee29c0c5"
        },
        "item": {
          "id": "55d3b8d5-a31a-4de3-bd43-dd43d30a30e6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cf73a44b-c622-4a7b-ac59-312fbb48112f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad0415b-c935-4ed8-8293-927c21a3585e",
        "cursor": {
          "ref": "7f9db7b0-d26b-4616-bd86-76481b96cb5b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d47c6164-1204-42bc-8035-fad6690c071c"
        },
        "item": {
          "id": "0ad0415b-c935-4ed8-8293-927c21a3585e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b55a1199-229e-48de-bb40-48f131467b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7375bda-2df2-4a18-b462-3c211dd1f86b",
        "cursor": {
          "ref": "f689010b-27a8-4b89-bb20-1dcec0a27a23",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b517894e-3647-4b36-99ba-72767cbc8cbf"
        },
        "item": {
          "id": "e7375bda-2df2-4a18-b462-3c211dd1f86b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "83c1cd3e-25c6-4121-a378-e4219eaa1aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef1e030-164b-4f15-bfdc-48777d75fb53",
        "cursor": {
          "ref": "9888946d-3839-4408-a626-0cc0b0fd40af",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4eaa1b22-e066-49b1-982d-f8b7e0ea83cc"
        },
        "item": {
          "id": "8ef1e030-164b-4f15-bfdc-48777d75fb53",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "39d261b9-3a77-4911-a848-da8714d361c2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "d06f0e4f-ee29-47e0-a75b-e7d149f2f971",
        "cursor": {
          "ref": "4db0c52c-ed83-4dcb-9da7-3df9ef1d80d1",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e4ad2ce7-0b66-41fa-8213-844b5e94d82f"
        },
        "item": {
          "id": "d06f0e4f-ee29-47e0-a75b-e7d149f2f971",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e7f0eed1-2a2d-4cdb-93dd-7f26763505e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa791de4-7dcc-4237-8793-1b8eaf6fa045",
        "cursor": {
          "ref": "93c3b50f-48ed-4ac4-bcf1-9c38b67eb9d6",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "16fc59cc-8fcc-4563-9685-2515ae6550cc"
        },
        "item": {
          "id": "aa791de4-7dcc-4237-8793-1b8eaf6fa045",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d146e8f6-d916-495f-ae28-3d3e09e43195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea21247e-ae7d-4884-8424-dfb0d61ebed2",
        "cursor": {
          "ref": "8fc630fc-7d0d-441f-8f25-8a4932784e6f",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ca87757c-ae29-46e5-8df3-a071694e6079"
        },
        "item": {
          "id": "ea21247e-ae7d-4884-8424-dfb0d61ebed2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "84261c0b-249d-4a4d-94f2-2b5feddad224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5375e51-e0a4-4196-90ad-400fe46a30b8",
        "cursor": {
          "ref": "99e40bb7-8302-4ab3-875e-1ac279225b30",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bf0f97bc-b0f2-47cf-b7c5-5b8395b894de"
        },
        "item": {
          "id": "c5375e51-e0a4-4196-90ad-400fe46a30b8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "345fa1e2-d459-404b-a437-5d00c648a71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2f8be9-6ba5-4f8e-8ec4-d3e6bc107d2a",
        "cursor": {
          "ref": "08eb5eec-2361-4a98-82d9-281fe4a15c7d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "feff1091-da50-42be-8a8d-8a39ddcb9768"
        },
        "item": {
          "id": "dd2f8be9-6ba5-4f8e-8ec4-d3e6bc107d2a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "69be2197-4919-4742-9103-d55cfbf4e440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8a7fe7-ef84-486a-9b5c-3b7e2662aac9",
        "cursor": {
          "ref": "0e196197-58a3-49ce-ad8f-0ec732ac3dba",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6099e5df-1837-4acd-baf5-b7649e5458d4"
        },
        "item": {
          "id": "7f8a7fe7-ef84-486a-9b5c-3b7e2662aac9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "10aaeae5-6b03-4d5d-9c57-cd4dae1081e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78efe5f9-f6c4-48a9-b167-db42ea879cbc",
        "cursor": {
          "ref": "3b58170c-347b-49be-aa02-6edbd1271a0f",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a1550012-b367-40d0-8776-f3ed61d5ede3"
        },
        "item": {
          "id": "78efe5f9-f6c4-48a9-b167-db42ea879cbc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "67d28aa0-b957-45a9-b77a-ed9f79f61a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1429d1-83fb-4b59-ade7-49e2ec66a87c",
        "cursor": {
          "ref": "4211e304-3eea-49e9-99f3-78b7c5d06ecb",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3fad0204-3fb6-49c3-bf44-51e79a04f0ee"
        },
        "item": {
          "id": "5b1429d1-83fb-4b59-ade7-49e2ec66a87c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f4a601a4-2fb4-4cbd-9f0a-5242862e6478",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 26,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "5ee1c762-2b8d-48c9-a1f8-5a2d5c5ee4af",
        "cursor": {
          "ref": "22d3265d-b032-4a8c-858a-f030b25f692f",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a065d810-8953-4b47-8e59-ea5bd5ec5c09"
        },
        "item": {
          "id": "5ee1c762-2b8d-48c9-a1f8-5a2d5c5ee4af",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e9922ae6-58ea-4c62-bd7a-348fca14ddd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98021db4-e4b9-49b9-b75e-54917e6d8388",
        "cursor": {
          "ref": "6637f9ba-701a-42bd-8807-40163000dfa4",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2b1610e8-ba0b-4294-ad6f-9537219205fc"
        },
        "item": {
          "id": "98021db4-e4b9-49b9-b75e-54917e6d8388",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0901acf2-29fb-492a-ae80-0d575c318894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d409cc6-f365-4284-88cf-027b43cf5692",
        "cursor": {
          "ref": "4a25775e-92ad-4117-8db7-7cdbd7b14255",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3a2c4c3d-49c2-4400-b629-4e4d0529b45f"
        },
        "item": {
          "id": "1d409cc6-f365-4284-88cf-027b43cf5692",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7fa38e2c-8161-4bbd-a899-1c3bb9a6391d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e793cf9b-f2c1-46fa-9bcd-b9678385359f",
        "cursor": {
          "ref": "ceba47a3-45f4-4527-8bd2-61f1c01ce4a6",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6235a663-2a4e-4aea-ab84-0229161a621e"
        },
        "item": {
          "id": "e793cf9b-f2c1-46fa-9bcd-b9678385359f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6df50246-1dd6-4163-93d2-031343724a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c50d9e-0b87-40d7-8bd8-e9edff91923b",
        "cursor": {
          "ref": "a4bd4563-00bb-4ba9-886a-611433fb64cc",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6fd14901-2ac4-47c6-8407-14acf09af720"
        },
        "item": {
          "id": "46c50d9e-0b87-40d7-8bd8-e9edff91923b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9fdc32c3-9cc1-4f73-96ec-348f94fb9cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf05cdae-eea8-48ef-9cf9-e1588a2ff678",
        "cursor": {
          "ref": "9af5931e-c2a6-4515-ba3c-764affc187ba",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "721eb3f6-b313-4779-a749-05ce2150b7cf"
        },
        "item": {
          "id": "cf05cdae-eea8-48ef-9cf9-e1588a2ff678",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "15194621-da59-45e0-aeeb-4a79ea6f74dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c496e49f-5d4e-401d-b7a1-13024b964fcd",
        "cursor": {
          "ref": "dc2240bb-f860-4e0c-b576-9c27a8cbcf86",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3c4815bf-23a2-48fe-95b0-b1982ae74654"
        },
        "item": {
          "id": "c496e49f-5d4e-401d-b7a1-13024b964fcd",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "03ea2ef3-2034-4644-993e-3c37ca7cb117",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 82,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "13ba09e9-dee2-4f11-ac67-c88f9b5db8c2",
        "cursor": {
          "ref": "8b7dec22-38dc-4a22-8088-63f2fc08290f",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "46529484-61de-4107-88cb-c3ee7d45f9a0"
        },
        "item": {
          "id": "13ba09e9-dee2-4f11-ac67-c88f9b5db8c2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1d8f6aa6-4995-4908-9ec7-94b2f3eb51f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577acc5b-3a31-4fbe-9135-9832ba9f6dcb",
        "cursor": {
          "ref": "55766622-a629-4333-a44a-41f3485edc75",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "17954b0a-a194-42e9-9672-2c44d407f47f"
        },
        "item": {
          "id": "577acc5b-3a31-4fbe-9135-9832ba9f6dcb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "057de4a4-5951-4ad8-9602-e4975e1ff437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57ed4ad-17c3-47be-8776-1e9d4f52e7c2",
        "cursor": {
          "ref": "4f5b8647-3072-4a7c-85c1-6f8ae1910410",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "14210a69-7763-4b49-89cd-fa342e6d5971"
        },
        "item": {
          "id": "b57ed4ad-17c3-47be-8776-1e9d4f52e7c2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "31cce7bd-8a4b-48a3-b38c-956ca43fe10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed1f1dc-fa5f-49d9-86b4-9ada95798cf6",
        "cursor": {
          "ref": "86d1c0a6-1ac7-4ae9-b48f-6597a5e61b19",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "182f37b7-42f5-449b-a3b7-98449076fb1e"
        },
        "item": {
          "id": "6ed1f1dc-fa5f-49d9-86b4-9ada95798cf6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "35f8b957-c9c2-47db-888b-e673cbb91090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017e30b3-91d8-4a31-a191-4ee3846bad15",
        "cursor": {
          "ref": "c596399f-6101-466f-baef-244fb56771eb",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "160b5b20-a347-4108-880b-09e0607cf93c"
        },
        "item": {
          "id": "017e30b3-91d8-4a31-a191-4ee3846bad15",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5932847e-b450-456e-834b-d731e0821844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99511bd-fbc2-4d94-a6e3-c446478f778f",
        "cursor": {
          "ref": "5733f102-a3c9-4644-a1b9-67f7c2d8ea08",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "58a81f98-ac50-450d-b570-d301a6dc9a9f"
        },
        "item": {
          "id": "e99511bd-fbc2-4d94-a6e3-c446478f778f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cc233db0-b8fe-402d-bf7c-d47d87f52e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e23a5d8-1ad3-435b-9b34-5ec6791b8b2f",
        "cursor": {
          "ref": "4f49466f-f4ed-4a2a-93de-427a6dd7101b",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "889aaf9d-7a34-4020-9aa4-fa410cc844b1"
        },
        "item": {
          "id": "9e23a5d8-1ad3-435b-9b34-5ec6791b8b2f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2580f1da-e4e7-4cd2-aaec-f05996b381d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbd6f0b-965d-46f1-9fbd-de45bc9a1ebb",
        "cursor": {
          "ref": "66ca8a41-a574-4736-8c58-7035e03eed78",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ceb19065-b7a7-47bf-b53d-c5d7bee182f6"
        },
        "item": {
          "id": "4cbd6f0b-965d-46f1-9fbd-de45bc9a1ebb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4ad28035-1491-41ec-a6c9-6a37871b9706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103e698a-84ba-4253-97fd-42c41824ca4c",
        "cursor": {
          "ref": "4c5a330e-e258-48b1-b5f8-f64524372024",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ab766135-aaa7-49b9-9342-87303f3b48fe"
        },
        "item": {
          "id": "103e698a-84ba-4253-97fd-42c41824ca4c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d44c6975-e413-42de-833a-3da4cada5b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc515fd-49fe-43ac-b31b-317321335c3b",
        "cursor": {
          "ref": "c4aa8341-5098-427e-934f-acf02b976cc9",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "49c96a7f-44a9-4de8-9b2a-3ee429f15b4e"
        },
        "item": {
          "id": "bbc515fd-49fe-43ac-b31b-317321335c3b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "20e8d7ab-09e1-4e1f-b581-5cee3bc065e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea9e3a2-8326-4aaf-8f2b-426981a62852",
        "cursor": {
          "ref": "d4dc1b96-55f1-4d98-ba55-470e8a7d241f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0da8a0bb-bcd2-44a8-8a77-f428df932fc4"
        },
        "item": {
          "id": "6ea9e3a2-8326-4aaf-8f2b-426981a62852",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9876592d-fbb8-4609-81d1-0813382b623d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46239ea1-dbe0-424d-90f3-50156178d352",
        "cursor": {
          "ref": "4790d4d0-fa07-45d9-85d0-ab1999237f06",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e1e5f91c-2b33-4a88-9a8b-e11e61335f8b"
        },
        "item": {
          "id": "46239ea1-dbe0-424d-90f3-50156178d352",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c8a90483-785e-4022-a8d0-6f7381825d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4644bc1-e4aa-47c0-8b2a-a98574bd7319",
        "cursor": {
          "ref": "aa7c27b9-72d7-43d9-a5ff-3c71f03bf04b",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7b3ba450-d90a-4acd-abf4-1403bfa79596"
        },
        "item": {
          "id": "e4644bc1-e4aa-47c0-8b2a-a98574bd7319",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f57e002b-5989-4cee-a411-3f49774c2320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79bac62-f7ce-44e4-81e9-f1dd0203011d",
        "cursor": {
          "ref": "6f39310c-ca5b-4f7e-a300-895a57608397",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7c296a0d-758d-4275-860c-9110a0202c32"
        },
        "item": {
          "id": "e79bac62-f7ce-44e4-81e9-f1dd0203011d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bb8e3706-624a-4c88-8e7f-7939f728eabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155b7225-b202-4dd8-8a91-cfe1231cd3cb",
        "cursor": {
          "ref": "0986fbbc-d566-47be-ad1a-7a2b07780e17",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b5a8184e-bcaa-427a-8fad-24a7a743d676"
        },
        "item": {
          "id": "155b7225-b202-4dd8-8a91-cfe1231cd3cb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cc2e40bb-744a-4948-83c2-c4bf797cc410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba0cef7-8512-44f3-8799-191530d3083f",
        "cursor": {
          "ref": "608763fb-1807-484b-9934-e5dde2bd8881",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "85d95fc9-dd6a-40f4-a6b4-358b4c050b5f"
        },
        "item": {
          "id": "7ba0cef7-8512-44f3-8799-191530d3083f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "abe71beb-7c48-401c-9e4a-a7abacffa6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b46e47-b1fa-4ea2-b551-3295681adf31",
        "cursor": {
          "ref": "06b24011-88b8-48a3-9553-8efbc5091322",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cf92edb3-3439-4565-8245-97db73e9db42"
        },
        "item": {
          "id": "28b46e47-b1fa-4ea2-b551-3295681adf31",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "36fce4e9-7a09-4b38-8060-dfa8ab3d2dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc398e69-8f61-47f3-8037-0eb01db7f996",
        "cursor": {
          "ref": "1e29b0c4-e3ea-476c-bc29-f4b088c27d51",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3f832a74-a6ec-40ff-8590-9c2abc7bebf9"
        },
        "item": {
          "id": "fc398e69-8f61-47f3-8037-0eb01db7f996",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "54f8526d-8e99-4efd-90a2-dea6eefe7c27",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "8f91020b-6d6c-4a09-b479-f5f307ceaf1b",
        "cursor": {
          "ref": "161f0f87-e995-43af-9686-9e966a1e20d6",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3bb4110d-ebde-4d13-a4aa-8248c298554a"
        },
        "item": {
          "id": "8f91020b-6d6c-4a09-b479-f5f307ceaf1b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b0669609-b78a-464c-8fb2-dc7bb547dc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5910605-556b-4eb4-8087-6c22d544d672",
        "cursor": {
          "ref": "3ebb5e16-3d20-4104-8b8f-5bf3572e4e8f",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "10a5a975-7d0d-4595-b5a0-148b8f49b4e6"
        },
        "item": {
          "id": "b5910605-556b-4eb4-8087-6c22d544d672",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9927d7d0-b5db-4ad3-818c-c3f7e5275b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c6c85e-53c3-475e-ab91-952c206c4bcc",
        "cursor": {
          "ref": "603c935c-5bb2-4e63-819c-6021e5cfabc6",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c14dbf7c-0d82-4c34-877f-0c8e721617e2"
        },
        "item": {
          "id": "13c6c85e-53c3-475e-ab91-952c206c4bcc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "68b89cae-2761-4fae-9f99-e3eea2f33e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebaac629-e342-4a96-a59f-053a1b4a52af",
        "cursor": {
          "ref": "d3f49992-aeac-4709-b822-92f242effcdb",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "950be20c-2f26-45c0-8cb5-d02c52b48dac"
        },
        "item": {
          "id": "ebaac629-e342-4a96-a59f-053a1b4a52af",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cb7ead03-6f46-41b6-b2cf-b5fd57da5283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d3534d-a0ac-4ceb-9462-1eb358c2442f",
        "cursor": {
          "ref": "9acca64a-e45c-4b44-bd5b-ffd90d44ee94",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8cd4611a-4f40-44bf-9b72-fa0e1b9c08e4"
        },
        "item": {
          "id": "61d3534d-a0ac-4ceb-9462-1eb358c2442f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "46d42201-4ac2-4eb3-8867-1abc1436bc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc9043e-3dad-4381-99af-94fe65b04983",
        "cursor": {
          "ref": "efc45349-9f36-423c-a94c-58c29355b372",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a33e143c-4cd0-4e7f-805e-4a9d651ef0d4"
        },
        "item": {
          "id": "bfc9043e-3dad-4381-99af-94fe65b04983",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "02071330-211f-4a67-a361-ab3913562786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973aa511-a0c3-46aa-8258-9b9743f8a441",
        "cursor": {
          "ref": "b8d181b3-4534-424f-afcc-e725b4460cd4",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1f85d222-019a-47f9-8b91-d9698fb64b9d"
        },
        "item": {
          "id": "973aa511-a0c3-46aa-8258-9b9743f8a441",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "29ac2972-8ba5-46d6-a434-3949c5868f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e80e8bf-0f34-4bfd-831e-9bdff8162f04",
        "cursor": {
          "ref": "205cfc53-1ea3-4492-be3f-858f9d85f2f2",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "388eb68c-700a-450b-98de-83ff1275d8d7"
        },
        "item": {
          "id": "9e80e8bf-0f34-4bfd-831e-9bdff8162f04",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ddb39c40-2f2c-4a41-b048-8018e36d4e50",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "7d7a92af-5e6b-4ced-bdbb-85b277fc4395",
        "cursor": {
          "ref": "c2db64ba-cd6c-46a0-8a30-88800809f55d",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "81ffd983-f5c7-49e9-be39-2ec8dbcc5d53"
        },
        "item": {
          "id": "7d7a92af-5e6b-4ced-bdbb-85b277fc4395",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2cd1cce1-6bf9-452e-8286-37c5f3d80b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f058cb24-ad47-44d0-a0e3-2250f90b237a",
        "cursor": {
          "ref": "c1a18272-b1fe-4614-8768-9a3d1e79dbfa",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "63dd5565-787c-4237-ad14-1b061372f413"
        },
        "item": {
          "id": "f058cb24-ad47-44d0-a0e3-2250f90b237a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ca9977cc-5440-42b8-b653-79a55c43004b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24a43db-d1ef-47e1-a4fd-16ea51c99109",
        "cursor": {
          "ref": "0464c510-a8de-400d-9ac3-81831ccae248",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9e6ba7f7-287f-4bc4-b1d3-1aadf382bc88"
        },
        "item": {
          "id": "b24a43db-d1ef-47e1-a4fd-16ea51c99109",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3c88b7e9-a189-4f89-971a-4f7233938a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d137bbc-4315-4c29-8597-2c21fa82fc7d",
        "cursor": {
          "ref": "ebb916d2-41a5-492d-a778-1a2da3b122c2",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c6da6cc8-196b-49f4-9321-95850027c7bc"
        },
        "item": {
          "id": "6d137bbc-4315-4c29-8597-2c21fa82fc7d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c0e107a2-bfde-412b-a946-7efa2439374f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ab9607-1a27-4bc8-937e-dea33ad148b4",
        "cursor": {
          "ref": "8849add9-bc4f-42d4-8ed4-2cf4f1d2bc48",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "58b947f6-07f6-4984-beb1-02bc81fbb685"
        },
        "item": {
          "id": "e2ab9607-1a27-4bc8-937e-dea33ad148b4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "70a05318-ff45-4ac5-82ad-37aa0725b924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67703e95-2f0c-469b-8346-0e7c04038867",
        "cursor": {
          "ref": "48d6a98f-150a-487f-84f6-1aa76386bb38",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "51eaaf72-87af-4d2d-bbb9-8e29ee45b268"
        },
        "item": {
          "id": "67703e95-2f0c-469b-8346-0e7c04038867",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3d31ffdc-44fe-4d62-920f-6cf9dc542bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8491fdef-7708-4ee0-9e80-2c8240ce5e72",
        "cursor": {
          "ref": "daf79266-c488-43fb-b4cc-a3941afba5a5",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c1aed9c9-92f4-486d-ba57-22c5f09882cb"
        },
        "item": {
          "id": "8491fdef-7708-4ee0-9e80-2c8240ce5e72",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "08917122-f3e2-4bcd-9ceb-76e86acf8914",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "60b3f68e-c5f3-4284-b896-4ced6a305731",
        "cursor": {
          "ref": "0d868ad9-7d7b-4f9b-8a96-f848af7236c1",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3d77d8fd-ebf0-43c8-92f8-34ae102690af"
        },
        "item": {
          "id": "60b3f68e-c5f3-4284-b896-4ced6a305731",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5482ee21-8c9a-4988-81e9-5ffebe3abf13",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "489e8254-d287-41d3-8dfe-ccda58b65ff7",
        "cursor": {
          "ref": "f3e6966f-7855-48a0-8188-ff47694d5947",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1281ec12-9263-42e0-ae94-2511133f10ea"
        },
        "item": {
          "id": "489e8254-d287-41d3-8dfe-ccda58b65ff7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1f49b097-fb95-4c00-8a40-bbdd1db9f146",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "f773a691-c190-4a8e-9885-4a899b08dbae",
        "cursor": {
          "ref": "333a359d-b102-4dd5-93a3-9ac25f2f2829",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bae7128b-31c1-44d8-b8f8-710eb710405c"
        },
        "item": {
          "id": "f773a691-c190-4a8e-9885-4a899b08dbae",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c22c2d01-f248-4119-98d8-5c304f198272",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "c22adddc-1db0-4672-a6f6-65edd79f9f5b",
        "cursor": {
          "ref": "5423c9cc-13ed-43b2-a190-c67406f95253",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7b4df63e-b495-4ec8-9fe2-85e59e029a68"
        },
        "item": {
          "id": "c22adddc-1db0-4672-a6f6-65edd79f9f5b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "445a219e-97d6-4b8d-a5bc-ff3da6872f0d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "b53c6b88-8ced-4069-925d-555e8ba72d4d",
        "cursor": {
          "ref": "94d50403-8062-493e-9a2a-31f6b25cbe24",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b16b4148-312e-4d45-a521-ab9d4961fc9b"
        },
        "item": {
          "id": "b53c6b88-8ced-4069-925d-555e8ba72d4d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8723849f-fe4c-4dad-9d9c-35368702127a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "efb7bab6-8a8b-4a04-a024-8b845949550f",
        "cursor": {
          "ref": "d489417c-b65f-4fb6-a970-aaea3a0cfab0",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e9404192-ce0f-4a7e-b4be-3ebaccaccd99"
        },
        "item": {
          "id": "efb7bab6-8a8b-4a04-a024-8b845949550f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b33ab934-b5e1-4890-997b-43e6b1a2c2ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0e073b-3e59-413e-84ae-9a98155425c7",
        "cursor": {
          "ref": "f76aa6ad-5e7f-4f69-9a31-81ad4095d4a5",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8eb528bd-3b02-4dde-9b70-46971a6e9372"
        },
        "item": {
          "id": "1e0e073b-3e59-413e-84ae-9a98155425c7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "eac5663f-7806-4883-8f91-bacb80827574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce434b7-a6ce-4c41-ac6b-cf0aa7a2cda4",
        "cursor": {
          "ref": "0ad2ad69-cd4e-4808-bacb-3db29914d4be",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "07c7ad50-2152-428d-9e49-0551c93eafc8"
        },
        "item": {
          "id": "6ce434b7-a6ce-4c41-ac6b-cf0aa7a2cda4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "00978810-d0d0-4358-880b-d7226b54a40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588275c5-f237-4e6e-97af-e197748be744",
        "cursor": {
          "ref": "6e69d31f-d881-49f1-87a2-427f90e16a5f",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "15f0d48a-f96c-4b13-81b4-2619d8272b2e"
        },
        "item": {
          "id": "588275c5-f237-4e6e-97af-e197748be744",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "95339ec1-9b44-4499-8a5e-3f30b6a13a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34294249-4400-4247-88ba-0ab4c552ab35",
        "cursor": {
          "ref": "9f886bd9-2468-4a9a-b02b-81807a00b8a3",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c4ab9a89-9ee1-4b4d-93ed-42ebfc98c1c9"
        },
        "item": {
          "id": "34294249-4400-4247-88ba-0ab4c552ab35",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b92bb0a6-33a4-4c87-96be-b08b47fe0b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230b2a70-3219-4d08-8721-fdb91987327e",
        "cursor": {
          "ref": "968e8b8c-eb7e-46d7-babf-6d6f8fa3a514",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a201228b-5484-418e-8a5a-14f3442c597c"
        },
        "item": {
          "id": "230b2a70-3219-4d08-8721-fdb91987327e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fd93e5e5-a814-4f43-845e-016450402397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd3e5d1-769d-4e83-a0c5-6f6fcebe42c3",
        "cursor": {
          "ref": "6fe8174d-533b-4629-9c9e-4e15933894ba",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5312d17a-8427-4f38-afc2-34ab8f295a7b"
        },
        "item": {
          "id": "1bd3e5d1-769d-4e83-a0c5-6f6fcebe42c3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8750654c-9900-458c-9ba2-0a4f2e547233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f18506-65aa-44c8-84f2-b1195faba1ab",
        "cursor": {
          "ref": "1fbb767e-4c86-4ed4-9488-745ac1709775",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b07a3d78-327d-4196-ba38-7df8edc182d0"
        },
        "item": {
          "id": "34f18506-65aa-44c8-84f2-b1195faba1ab",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1c2f2025-0162-4502-a618-8010ada1dd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ea7bd6-f108-44da-b9a7-5983b62d8372",
        "cursor": {
          "ref": "61757e3b-a560-4e50-b30b-6236c8fa2c5d",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6a9ea4a1-cdf5-4d93-b807-4c3c97dcd542"
        },
        "item": {
          "id": "c0ea7bd6-f108-44da-b9a7-5983b62d8372",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cb70f06c-25e1-4ed1-bde2-c4577f8d20be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68da748f-0d41-4f47-b08d-61cf16fa7faa",
        "cursor": {
          "ref": "0a4384b2-effd-472e-939d-af5ec93e58ad",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0c839965-1141-4b68-8ec5-de868fcfa8f0"
        },
        "item": {
          "id": "68da748f-0d41-4f47-b08d-61cf16fa7faa",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cec9c24e-224c-4930-a1db-861e6e61f8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d3c18d-9b88-4c92-94ad-0387644eb84e",
        "cursor": {
          "ref": "80241ddc-6c9a-453b-97b4-8d2840147a1d",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "29b0590d-0226-4da3-bc78-8a3a752939b4"
        },
        "item": {
          "id": "12d3c18d-9b88-4c92-94ad-0387644eb84e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a240c463-69b8-4270-a167-43efe974876d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012acb15-ae07-446c-8f36-92d127e78929",
        "cursor": {
          "ref": "08037177-f330-4f89-8aaa-2a7e31d54a7a",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f583da60-0136-4217-81af-39f8cc8eb87f"
        },
        "item": {
          "id": "012acb15-ae07-446c-8f36-92d127e78929",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "01c5ed36-8411-48f2-9c95-904e158fe8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a76f3e9-f396-477a-8c70-43c17c2bda63",
        "cursor": {
          "ref": "a8c9ea1c-6331-40fa-9dcd-327eb7a7a82d",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b927d592-c632-4e79-8691-5285a28eb11d"
        },
        "item": {
          "id": "6a76f3e9-f396-477a-8c70-43c17c2bda63",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7f459193-cd9f-4eb1-a350-639cde3270cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b2617d-bbf8-4db9-95ea-7da99bfc38cb",
        "cursor": {
          "ref": "cc42e567-2a78-46f5-88a5-1598726f318a",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "362a00dd-2f3e-4a2b-9d8e-9f697d2116a0"
        },
        "item": {
          "id": "b9b2617d-bbf8-4db9-95ea-7da99bfc38cb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b1045c0e-9c0f-4855-a0d2-dccb218924fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a993c2-623f-4c3e-af4e-51b654e0bcc5",
        "cursor": {
          "ref": "2d3c560c-3844-4c09-a438-b2b509ff8c97",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "53646021-6924-408f-984d-f2179e1d9a87"
        },
        "item": {
          "id": "24a993c2-623f-4c3e-af4e-51b654e0bcc5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3054bc46-fc52-446b-9662-2937ef75dc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb0113d-72ba-402b-85f6-149f3149191c",
        "cursor": {
          "ref": "213656f5-20ca-4def-a664-0096fa02578e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2e18d95f-c596-4cba-9608-3a7f6dc2d058"
        },
        "item": {
          "id": "deb0113d-72ba-402b-85f6-149f3149191c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e2b79a68-6b2e-4bf5-a515-e7b3e89d4729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5970b9-ea4f-4144-9b25-f4516441feab",
        "cursor": {
          "ref": "b4e89488-7afe-4b4e-b3e7-014a9db6886a",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8fda8289-08fc-4026-97a0-057b0f84c5b1"
        },
        "item": {
          "id": "0b5970b9-ea4f-4144-9b25-f4516441feab",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "24697093-9d54-43b2-8690-4f761ec45712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d6ae87-2b64-4b0b-9bcf-563207aa1a37",
        "cursor": {
          "ref": "08c1548e-ba9c-4440-8268-bf7ba2f2c37d",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d5cd5c58-4055-4aad-bfe4-30f48a34ea6b"
        },
        "item": {
          "id": "76d6ae87-2b64-4b0b-9bcf-563207aa1a37",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a8cc99f0-1068-4449-8851-196191b23827",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "598a3b1e-3758-4525-ae80-c234f8b232e5",
        "cursor": {
          "ref": "fa5cf273-b38b-4fc0-a206-409ccc51dff5",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6e91a48a-9052-4cb7-bf83-b255527193b7"
        },
        "item": {
          "id": "598a3b1e-3758-4525-ae80-c234f8b232e5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3839a8e4-60dd-409f-956d-c527f50cde87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef25838f-27f3-47c4-866d-7c277c4097fe",
        "cursor": {
          "ref": "2d8be274-f438-4f60-9a80-e8c4e736d656",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6b9be2f6-68b4-499a-aca8-c067064ed871"
        },
        "item": {
          "id": "ef25838f-27f3-47c4-866d-7c277c4097fe",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0fbad033-851e-487a-a578-bbc12ef27a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba7196f-a550-4514-bb00-f3f0f0f3c95c",
        "cursor": {
          "ref": "16a1748d-1d32-49be-ab30-0fb451afca8e",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "14ba5215-b868-409b-a9d6-8e73500710fa"
        },
        "item": {
          "id": "1ba7196f-a550-4514-bb00-f3f0f0f3c95c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1d2429c0-8799-4a24-b8c5-d6423aa1c6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e8d31c-616e-4e05-8570-57683236cbe8",
        "cursor": {
          "ref": "2a171c49-daf9-4f24-a8a5-b818b380d1db",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fff3aedf-f7fa-4f7a-a63d-a5ef94dba923"
        },
        "item": {
          "id": "20e8d31c-616e-4e05-8570-57683236cbe8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e4fe0cc3-4ae3-42b0-b73d-1cc6a9a717c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ff4fa9-c52c-4c4a-b6ac-ec0a6e766b2e",
        "cursor": {
          "ref": "39642992-0732-4512-8cbf-5e0479191e9d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d38b8ca0-e188-490d-a00b-ab5d0e46fb3c"
        },
        "item": {
          "id": "53ff4fa9-c52c-4c4a-b6ac-ec0a6e766b2e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "31f6e4f4-9ab5-4c54-8a5a-26882229e34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402b7a25-f18b-4df8-9e6f-befa59fa1818",
        "cursor": {
          "ref": "96452871-318f-46e9-8b9f-8eec9cfec61a",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3c9d90b1-cc26-4359-b151-eabf8144c35b"
        },
        "item": {
          "id": "402b7a25-f18b-4df8-9e6f-befa59fa1818",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8b981883-be23-4459-bee7-a2b597980a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67fc806-8cca-43bc-a5aa-7bc9609d5d72",
        "cursor": {
          "ref": "efa93580-1243-4964-97c3-8f3413b1260e",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4764669b-0f9d-4787-aab2-d427883b86dc"
        },
        "item": {
          "id": "e67fc806-8cca-43bc-a5aa-7bc9609d5d72",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "60b3fd39-e859-4d1c-8ce6-b659b4abc5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636f091b-a445-41cb-a2d1-8bae4af37bfb",
        "cursor": {
          "ref": "1cbb7085-4573-4fbb-9985-717bfe6ff684",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9f60fab6-2d80-4936-bd91-5663811bdba6"
        },
        "item": {
          "id": "636f091b-a445-41cb-a2d1-8bae4af37bfb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a1e09498-8ddc-4d01-b110-736bcf313374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7c0fff-ec04-48d1-8f42-1c44b63da141",
        "cursor": {
          "ref": "5ea03c7f-1f3c-4904-aebc-1e20fc106874",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "838c2395-b8e8-46b6-a756-f3a1dd7e98a0"
        },
        "item": {
          "id": "1a7c0fff-ec04-48d1-8f42-1c44b63da141",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "dea531f5-ee72-4166-9716-5476e950d9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d111af-5173-4f17-8df2-22d1e22992fe",
        "cursor": {
          "ref": "cdb8adaa-eaec-47d2-a6d4-efc1966ffe0d",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2a56c149-f6bd-483f-826e-5b3f75c92814"
        },
        "item": {
          "id": "b5d111af-5173-4f17-8df2-22d1e22992fe",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "13766c0b-a894-4e68-893f-9f9fb5d90327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73df9a01-a632-42aa-8fbe-37018cfb4b79",
        "cursor": {
          "ref": "f1dbe1a2-daff-4174-b4bd-53354756a6fd",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4762843a-db0a-411d-9579-8666be7e517b"
        },
        "item": {
          "id": "73df9a01-a632-42aa-8fbe-37018cfb4b79",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0daece3a-c4b1-46df-8355-3b020aa4c633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d59f88-d892-4f98-a94e-b894ab254baf",
        "cursor": {
          "ref": "b83882fe-f8f2-41cd-8436-72627554ff89",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "47e8d7b5-2990-458c-b3e8-40e40b22f789"
        },
        "item": {
          "id": "08d59f88-d892-4f98-a94e-b894ab254baf",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8097540b-c668-4bbc-9fd0-c9621644eb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044d692b-b8f1-46b2-9455-3f038c510386",
        "cursor": {
          "ref": "27b5173d-48fd-42d3-b3cf-d435a0c0fc76",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "97b031ef-868e-4d41-bb7f-4cc408969233"
        },
        "item": {
          "id": "044d692b-b8f1-46b2-9455-3f038c510386",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "53e280d1-0720-4da8-84ab-606b410f78ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b86337-f2b6-4382-806a-9a2d984a763f",
        "cursor": {
          "ref": "bdad038e-c410-4902-bde1-e74a4df0f9be",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ea6223fa-3e80-4982-8f50-5b10f6f30a58"
        },
        "item": {
          "id": "18b86337-f2b6-4382-806a-9a2d984a763f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "49c92262-3ddc-4805-94a3-9d59dc1d4581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2060ca52-3c41-423c-b292-52c538d0bb28",
        "cursor": {
          "ref": "0c548fd6-4afb-432d-bf1e-dcb8e9dfb9e6",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3579b44b-0fff-4af2-9e46-3d9ab9bab929"
        },
        "item": {
          "id": "2060ca52-3c41-423c-b292-52c538d0bb28",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bcc5226c-624d-41ce-bd51-e8ec1cead34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33581276-9358-4576-8824-93a8c7b83f54",
        "cursor": {
          "ref": "7fe6e2f6-6e63-48a5-9f6a-76b66f5fe3d5",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fa91d32e-214e-4060-a48e-1ab73b31cad1"
        },
        "item": {
          "id": "33581276-9358-4576-8824-93a8c7b83f54",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "abd489f1-ba50-47e2-a4db-d20581bde5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5c339a-726a-4bd3-86e5-11dcb67e27d0",
        "cursor": {
          "ref": "cc28c614-05eb-44aa-b94a-eda2e632a195",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a85158b4-61b2-49fc-a731-c0c6f0c68238"
        },
        "item": {
          "id": "db5c339a-726a-4bd3-86e5-11dcb67e27d0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3f129999-8a1f-462d-9241-d960ce69a111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69450d5-2247-4e04-b242-f401ccbdb367",
        "cursor": {
          "ref": "8c220950-e5d4-4891-bce6-ce28d5db268f",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0994455b-5e00-4bc5-bb3e-19f41e25ce06"
        },
        "item": {
          "id": "c69450d5-2247-4e04-b242-f401ccbdb367",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "54b0ccd3-6b37-4ee3-b2f4-aac27c09ddfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0670359-e32a-45d4-aea4-b215ffa679df",
        "cursor": {
          "ref": "b2e7608d-5d76-463b-8dbe-f4e2a7f2934e",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cf3553f1-51b6-45bb-be67-dfb134b68394"
        },
        "item": {
          "id": "f0670359-e32a-45d4-aea4-b215ffa679df",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4e6ce5e9-adb9-4419-861e-8d9f947054dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e915fcd-6c03-4813-88ed-8ddfac0e118a",
        "cursor": {
          "ref": "8fc53f59-7c48-4af5-b36e-b51b1198850f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a25bc98f-4085-43f4-bdb8-e18820bffd72"
        },
        "item": {
          "id": "4e915fcd-6c03-4813-88ed-8ddfac0e118a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f5ffbcbb-b0b7-4f4e-9c05-7ff68d4163d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7eb9efc-3708-4048-a8da-8ecc7e2596fe",
        "cursor": {
          "ref": "b5d4e73d-4db0-460c-9aa7-68412125d4f9",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7034c41d-be50-41fb-b9ce-48994b6bd60c"
        },
        "item": {
          "id": "f7eb9efc-3708-4048-a8da-8ecc7e2596fe",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8b097561-b604-4149-9bcc-d7e0eff178dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba6cf4a-7415-4bd0-8eba-82e13e6218cd",
        "cursor": {
          "ref": "5b6dc0cf-842d-4172-b9f3-9d1ad499862c",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a956b4b5-8383-4943-ac43-6c9b9626b9db"
        },
        "item": {
          "id": "1ba6cf4a-7415-4bd0-8eba-82e13e6218cd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "82ba7b4c-1364-4ae7-92b9-9ad6da2f55c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e3e921-9d1a-4e34-85a2-7c1ddb3d3fb4",
        "cursor": {
          "ref": "09919198-33cd-4564-86d9-297e0652aa82",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7d6fc7da-e3b5-45a3-b051-491f384cba3c"
        },
        "item": {
          "id": "09e3e921-9d1a-4e34-85a2-7c1ddb3d3fb4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f879df53-d561-4e13-b722-b00d4c23bd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076ba095-d042-4139-935d-4a6c8a1a13c6",
        "cursor": {
          "ref": "1650ec49-ed30-405a-8c98-730bfb8d0a11",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "15ddb3e1-64de-4d4b-bd69-fadcad5be19c"
        },
        "item": {
          "id": "076ba095-d042-4139-935d-4a6c8a1a13c6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "07e53faa-075c-4bab-8cd9-81caaac7bfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e10f4b-acf8-4166-9d73-8755ff4e1242",
        "cursor": {
          "ref": "ae818701-1a30-4424-b51f-a305167b665f",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "25ecec19-aa7b-41c5-9fcc-96fbe2025d0f"
        },
        "item": {
          "id": "c3e10f4b-acf8-4166-9d73-8755ff4e1242",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1a216ff3-b1df-4395-8eeb-810965716a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddcc730-42b3-45d3-b4ce-3ab7c762705c",
        "cursor": {
          "ref": "ebc292c6-5d8e-4822-b521-15fa84c20734",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d592c3aa-4d63-4713-8a6f-3a7f13d650a2"
        },
        "item": {
          "id": "4ddcc730-42b3-45d3-b4ce-3ab7c762705c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e60d1561-5912-4f0f-b190-2c12a98f5d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fb8ffd-0ff5-4cf1-bdd3-b486c2508b70",
        "cursor": {
          "ref": "4e87f221-3b5e-47ff-9318-428fb14169ae",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "39e784ee-548a-4566-b377-59ba01e22223"
        },
        "item": {
          "id": "83fb8ffd-0ff5-4cf1-bdd3-b486c2508b70",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3a9ec7b7-bb2e-4473-b2e0-08382c66feeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6290c1-86bd-4ee4-ba2b-8c7d87de618f",
        "cursor": {
          "ref": "35c34b9f-bb5a-4e9f-bbe2-907a8967611d",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8febdd95-1ffd-45ce-ab50-fdef4c38f1de"
        },
        "item": {
          "id": "0b6290c1-86bd-4ee4-ba2b-8c7d87de618f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4f964278-924d-4dad-97ac-8732db7a85d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cbad63-9e97-4174-b0f6-1c7c1a782008",
        "cursor": {
          "ref": "d3be95db-3715-4408-b031-d965d995abb5",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f8c7f933-ebfb-4b2b-ab43-3141fbe7b8f9"
        },
        "item": {
          "id": "58cbad63-9e97-4174-b0f6-1c7c1a782008",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7bfc3de2-3972-4344-9dca-e67d3a51b8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a947b4-8f7f-43c5-a1f2-cc0e57da23aa",
        "cursor": {
          "ref": "438bf991-5ac7-44dd-864b-b73c17b212ae",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4d47b23e-cc53-4abf-8cf7-a2d1e3da1e4a"
        },
        "item": {
          "id": "65a947b4-8f7f-43c5-a1f2-cc0e57da23aa",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3b6ddde7-7c01-4ea3-aab2-c83fbb0b2bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffaa9c5-ede6-45b4-8bc9-7372385b18b6",
        "cursor": {
          "ref": "509d9ed4-a14c-4b5f-967c-fd9b8432a52e",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "90895cf6-d003-4b91-bae5-54445fa28f6d"
        },
        "item": {
          "id": "cffaa9c5-ede6-45b4-8bc9-7372385b18b6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fe275b02-c10d-469f-8ac1-b64cb2e634fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564336aa-f1b7-474d-a79a-3b916711d3c4",
        "cursor": {
          "ref": "0c86b9c3-dc22-4fe2-8dbc-9c258ce43972",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a455e25e-1f3f-4e6f-9d1a-c4c3a0b88fde"
        },
        "item": {
          "id": "564336aa-f1b7-474d-a79a-3b916711d3c4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bb0667fd-07c0-4344-a430-2220cc5638bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c07c8c4-8f7a-4497-b522-0856c8978d68",
        "cursor": {
          "ref": "b278be35-52e4-4b03-b207-d2a386fc6d31",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0fe81148-ca2b-4d4a-ab6e-a80898e017ef"
        },
        "item": {
          "id": "2c07c8c4-8f7a-4497-b522-0856c8978d68",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "de856b49-7a09-47db-9aaa-c05a463f6293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348ad799-020f-446b-b613-a1037c052ec2",
        "cursor": {
          "ref": "bc8b5c23-97b6-4b89-aa3d-d1186825d20e",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6c19b853-e7a3-4d7a-88af-516752b83863"
        },
        "item": {
          "id": "348ad799-020f-446b-b613-a1037c052ec2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5564baeb-bbea-4e9d-b812-96f8f2d7a7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c50df0-d257-4c99-8184-232cbfab524b",
        "cursor": {
          "ref": "c1678fa2-f1c8-4458-9aa7-8fcfa85e7974",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b7625b71-c04e-4342-a8e5-c26105d2e7ba"
        },
        "item": {
          "id": "22c50df0-d257-4c99-8184-232cbfab524b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d0b6dc12-b3e2-44c7-ba84-73be58bb5522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c59f82-42b6-4e15-a896-30bacfe94b07",
        "cursor": {
          "ref": "087d62d7-8151-4c0a-9f8d-8adb8338baec",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d06e799e-b384-4938-8f68-74bc851e1dd6"
        },
        "item": {
          "id": "d9c59f82-42b6-4e15-a896-30bacfe94b07",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7bd00111-73cb-4178-8d97-0fa3500f49ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eedd972-32c5-427b-aa1d-eb93de37feec",
        "cursor": {
          "ref": "93a3c5f0-6048-4fdc-80a2-aa8b30d3c60e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "50c29085-8d28-4909-b8e0-5fea6f916689"
        },
        "item": {
          "id": "2eedd972-32c5-427b-aa1d-eb93de37feec",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ed260dd2-74d1-478b-becf-f1088a1c10e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff0a66c-ab95-4106-a533-1469eafe84d4",
        "cursor": {
          "ref": "c3719938-f0a3-48e3-a913-84044dc22e95",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "57847ebe-9d84-4fc1-892d-dbe2cf23410c"
        },
        "item": {
          "id": "1ff0a66c-ab95-4106-a533-1469eafe84d4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4744cf7c-c397-4a33-80a9-57412bb51789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5782a8cd-43db-48f5-a4e8-6213007c8aa3",
        "cursor": {
          "ref": "8f39da14-07d3-4fe5-9ae4-4d0673c33064",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "14a6ebaf-d9dc-4cb9-aeb8-25670befd688"
        },
        "item": {
          "id": "5782a8cd-43db-48f5-a4e8-6213007c8aa3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e07f60cc-fef0-4261-8011-608a9ef6c906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1227b498-738e-4db5-9710-5fc72a2efcb2",
        "cursor": {
          "ref": "3375bd1a-8342-4485-8b01-647f756fc633",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4a625205-fe0c-4462-b965-401d280ec94f"
        },
        "item": {
          "id": "1227b498-738e-4db5-9710-5fc72a2efcb2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bef6554b-f395-4035-972c-058d3f55136a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ebdbd5-c8e1-4580-b8f8-fddc2cf21cca",
        "cursor": {
          "ref": "802a3507-7f60-425e-8ea5-844e08663bf1",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b38cde38-f000-4573-aeab-1fcf5a05105e"
        },
        "item": {
          "id": "33ebdbd5-c8e1-4580-b8f8-fddc2cf21cca",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "401c845c-f31e-41b6-be17-4d9358634cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812fa7c3-1d91-4604-be18-9e3482f8d8b8",
        "cursor": {
          "ref": "7388c895-3d57-4d8d-8ff5-5d3522f8ac1d",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "148b0149-51f6-440b-9950-2e154979c15f"
        },
        "item": {
          "id": "812fa7c3-1d91-4604-be18-9e3482f8d8b8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fa000e1a-3d06-4b05-bc22-4b16852491db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faec6387-c498-43f1-8022-71bf4cc84ad7",
        "cursor": {
          "ref": "0a2bd667-7463-4737-ba91-47d3c3a23e5a",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7ccc32e2-5f38-48c2-9ee0-8df9bb3e92cc"
        },
        "item": {
          "id": "faec6387-c498-43f1-8022-71bf4cc84ad7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "91a8e6e0-b99b-4d55-96ed-76089ee0c00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270fad9a-a264-42ff-8aa6-e56bbdf8b881",
        "cursor": {
          "ref": "b94f8550-4761-4390-8202-60e0ff853089",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fc8c9240-cc53-467e-a105-7d1ed414bc68"
        },
        "item": {
          "id": "270fad9a-a264-42ff-8aa6-e56bbdf8b881",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0d166fa4-db04-4cef-b3a0-46ca159b198c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e735113-69db-463a-9473-50d0e7625f85",
        "cursor": {
          "ref": "e473fc53-60a3-46b9-9563-b66af8cfdea7",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9caedc92-56bc-4215-a302-a1f842f141de"
        },
        "item": {
          "id": "9e735113-69db-463a-9473-50d0e7625f85",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "99529768-0140-4cf6-a639-948b907216ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50425e87-2539-4758-8599-ff653a9c1417",
        "cursor": {
          "ref": "3015efe4-fa76-433c-a05a-4fa3abd9dc5b",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d867e0c7-d8bd-489d-ad53-dd60de5fdf9f"
        },
        "item": {
          "id": "50425e87-2539-4758-8599-ff653a9c1417",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8ff7c856-78de-446c-a2bd-a9465fdbb36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa9c467-6995-4452-b48a-89b80309c282",
        "cursor": {
          "ref": "cbdd014e-b5ec-403c-b3fd-643cfce935da",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "86e05661-bd79-4c21-8e22-32e8e33e98a2"
        },
        "item": {
          "id": "2fa9c467-6995-4452-b48a-89b80309c282",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b5ca7bf9-fb95-447e-b1db-b3b255e0eb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171897ae-0f57-4e4c-81e7-f1f8688ab52a",
        "cursor": {
          "ref": "641caebd-8d22-416f-987d-d55a04aa6597",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4c91d5ee-0d41-42b6-9c40-33cf9ca9916e"
        },
        "item": {
          "id": "171897ae-0f57-4e4c-81e7-f1f8688ab52a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "553888df-580d-4417-bb43-3edc1bdab7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c6565a-3b15-4a4f-80ef-dc1f9d2d2174",
        "cursor": {
          "ref": "9173271e-2852-4045-8847-2a8ef7aea6fd",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "45145a73-b3ca-40f0-aeca-8215d92a3bc7"
        },
        "item": {
          "id": "47c6565a-3b15-4a4f-80ef-dc1f9d2d2174",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "897459f1-c3b9-4241-a655-aee67baad5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604ae645-1cf2-46d5-934b-7e2ccfe58b6e",
        "cursor": {
          "ref": "55c8fb46-cc01-4563-90e1-d2fb18248300",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "83b37688-b983-480e-ab32-496f29aba782"
        },
        "item": {
          "id": "604ae645-1cf2-46d5-934b-7e2ccfe58b6e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "49f7fc79-e3cf-4b6d-96a6-e3366a139a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ad31ae-13f8-4f61-a5ae-bd1cf3b2c1c5",
        "cursor": {
          "ref": "7af83708-b93d-4e67-b024-4bb2f3325fc8",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "dc2ebaeb-0164-48c5-bb19-70dc119bec4b"
        },
        "item": {
          "id": "a8ad31ae-13f8-4f61-a5ae-bd1cf3b2c1c5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4c38b634-3431-467c-aeb7-544cd6c2e6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56101b86-5350-4c48-a9a8-9329a3ce0ffd",
        "cursor": {
          "ref": "d2f2ec71-6ac0-4cd0-a62a-da3f0e976c0c",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ec06732a-a8c8-4a75-959e-13e7f6e7a69e"
        },
        "item": {
          "id": "56101b86-5350-4c48-a9a8-9329a3ce0ffd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e9f324cf-2c57-499e-8834-00ee2b4006e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da845efc-99ec-4ccd-a649-4aa56a540c04",
        "cursor": {
          "ref": "4445d656-4919-40b5-97ea-ab25d68c60a9",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "12c3ce8c-976d-4214-9bd6-d6b2ff9722c0"
        },
        "item": {
          "id": "da845efc-99ec-4ccd-a649-4aa56a540c04",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8c652f55-431d-413e-a470-12bc95fb8d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d3fa6b-64b3-4f1a-8595-b1008b9ca18d",
        "cursor": {
          "ref": "327998c4-950e-4349-9a00-881e9effb655",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bf311882-3be2-45b8-bebd-2de98330f317"
        },
        "item": {
          "id": "24d3fa6b-64b3-4f1a-8595-b1008b9ca18d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c70c5a4e-99fd-4486-b2b7-ee9d7694ea0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a67a94-3cee-4db8-96d5-3a9de9c33785",
        "cursor": {
          "ref": "28975d18-bf6d-4f58-8516-06858f5b5ce0",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6204fe22-2ac8-4a9e-99e0-961b2092d154"
        },
        "item": {
          "id": "93a67a94-3cee-4db8-96d5-3a9de9c33785",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ae93d292-24f4-4894-9b6a-df73cde9867a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbbd84c-ce65-4837-b6bd-1f03f005152e",
        "cursor": {
          "ref": "e7bb70d8-80be-4772-b8e3-cff716f9e4b6",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1fc752e7-a2c2-4542-98b2-5122afec3dc8"
        },
        "item": {
          "id": "6fbbd84c-ce65-4837-b6bd-1f03f005152e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9c5bfd06-4aa1-4956-929a-0739de06b0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0abe4be-dd91-41d2-b64f-f4763ea76e9c",
        "cursor": {
          "ref": "4234abac-17ca-45ed-b050-7107cf9faec7",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0208e192-0eff-4fff-9c15-99070d32c578"
        },
        "item": {
          "id": "c0abe4be-dd91-41d2-b64f-f4763ea76e9c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5518a498-2991-45d2-8e41-58081aa154c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006abca6-0764-486a-ab7c-36d340d92d5e",
        "cursor": {
          "ref": "4ec68e37-3277-4f64-8141-3c84adcf9e68",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f201b7ef-e2c2-4974-a9de-98d57f29be77"
        },
        "item": {
          "id": "006abca6-0764-486a-ab7c-36d340d92d5e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3bbb621e-e174-4fb2-aa92-fabc46d57c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ea300d-f316-4652-bfa2-33d8a5bf17b2",
        "cursor": {
          "ref": "685d1782-9338-438f-8d7d-423e45f39cea",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "aa3abf00-83e7-475e-a714-86c22860315c"
        },
        "item": {
          "id": "08ea300d-f316-4652-bfa2-33d8a5bf17b2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "44975300-6f6f-40bd-bcd1-49436248005d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774ea89b-b8de-4e73-8e36-9bb1edfa5671",
        "cursor": {
          "ref": "ac72adf9-b091-4f05-9f8d-833773ec0899",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5d209816-cefc-43cc-aee4-2f5f7abe5fbd"
        },
        "item": {
          "id": "774ea89b-b8de-4e73-8e36-9bb1edfa5671",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b7f26220-5a1b-4870-a4ce-cf1124cb9891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5c0399-900a-44a3-a361-a1a186bc5c89",
        "cursor": {
          "ref": "6f0d51b2-55a9-4ded-9b33-6739d303eb20",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a655fafd-3062-4d3b-b6ed-9c20910ce51d"
        },
        "item": {
          "id": "cd5c0399-900a-44a3-a361-a1a186bc5c89",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "65c3ec08-fbcb-4a0f-a4c1-a107c6612441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c0b6c6-e5ab-40eb-8db3-131aa60b8de9",
        "cursor": {
          "ref": "9f4a36c6-8a05-4bbc-8e21-7b77a2176ae8",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "14be2f50-e158-4dec-bef1-7d5440fa74fc"
        },
        "item": {
          "id": "f5c0b6c6-e5ab-40eb-8db3-131aa60b8de9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ae3dd705-a295-4f55-bcb8-c27adb0adcfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6f509a-347c-4b6b-bafe-a9510a34e361",
        "cursor": {
          "ref": "eb56de17-2abb-4283-b9e8-27e954fb1977",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "871f26a4-1461-4b81-a292-5741b81f37dd"
        },
        "item": {
          "id": "1c6f509a-347c-4b6b-bafe-a9510a34e361",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2a0de4e0-eac2-4c5b-9787-ebfea6d475b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4403c9-e0f3-4440-be9c-cb8a452bf704",
        "cursor": {
          "ref": "4bd16f54-2afe-47c6-9500-46c715ad4aa9",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2b2f98a3-503f-4126-9712-e64fa6ffe2e6"
        },
        "item": {
          "id": "3f4403c9-e0f3-4440-be9c-cb8a452bf704",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a49d9264-e220-4861-b43f-4fdd8d49b276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd5e373-98c2-4706-b73f-6034c3f84008",
        "cursor": {
          "ref": "36fcd8b2-9823-4b08-8d39-b84f87c34a34",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d81146f3-29d9-428e-bfda-b4345c17e521"
        },
        "item": {
          "id": "0cd5e373-98c2-4706-b73f-6034c3f84008",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "99ab4ee6-0429-4d90-89fc-d436ea0f54ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf8917c-3705-47ec-9c71-b3a335221b6d",
        "cursor": {
          "ref": "67207097-4ac5-432a-ba27-7ab0d5272a51",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "399ee912-d9cd-4ac7-b3d4-bfe1ca27839e"
        },
        "item": {
          "id": "7bf8917c-3705-47ec-9c71-b3a335221b6d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f0c3ddba-96c4-4bc8-ac84-0bc967cc9942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af75edc-a577-4cb1-b292-2373f8da69bb",
        "cursor": {
          "ref": "14af55c7-1b95-4843-8b3c-ca996ffa9c17",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "84c74ec6-98fd-49bc-87f6-16ca747d5839"
        },
        "item": {
          "id": "9af75edc-a577-4cb1-b292-2373f8da69bb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9bfcccd1-054b-4a22-8706-88a1bf3a4d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863e9ad7-444a-4759-86e1-d275b3d86830",
        "cursor": {
          "ref": "e7fb5880-c971-42ec-9d69-957318bb1ab1",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f08eef11-aed5-4e9b-89e1-a2e2ae6286e2"
        },
        "item": {
          "id": "863e9ad7-444a-4759-86e1-d275b3d86830",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "54216495-7a78-4e1a-aa4b-f3a734b90148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc3bf9f-3609-4a94-8323-ef8c32fbb31f",
        "cursor": {
          "ref": "aacf0482-946d-4aa3-b12d-af24451d4298",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d37ea26f-07a0-4c11-bf30-47c2cdd6c02c"
        },
        "item": {
          "id": "bcc3bf9f-3609-4a94-8323-ef8c32fbb31f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c1f99825-9544-46ae-97a7-917f248e689f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54de56cf-37de-4b73-80f3-b40b5f59d1f0",
        "cursor": {
          "ref": "25c9bf56-db79-485e-940b-b11149c7370a",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6bb6235b-a91f-440b-adf8-9c11f7d860c3"
        },
        "item": {
          "id": "54de56cf-37de-4b73-80f3-b40b5f59d1f0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c70a3288-5384-4dba-aafd-c7159df1fc13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1375f5f-f323-472f-b469-25217a9d2bac",
        "cursor": {
          "ref": "41c2497b-96c1-44c0-9804-630e503880db",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "10db0720-86f9-4eca-9bd0-118e0935e9e7"
        },
        "item": {
          "id": "f1375f5f-f323-472f-b469-25217a9d2bac",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "38d125ed-c22e-4363-9064-d327f095dc5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd100ba-e49e-4f4b-8352-502547689452",
        "cursor": {
          "ref": "2c9f7405-a059-4e81-91d9-a61a203632c1",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "112bd98a-d237-4e63-b6f7-9b861e2dfe72"
        },
        "item": {
          "id": "afd100ba-e49e-4f4b-8352-502547689452",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "707e178a-e9d3-46cb-bc63-8481b7dab10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e917bba-61a3-4cec-abfa-0f1ecfde3868",
        "cursor": {
          "ref": "50a31530-fb00-457e-ad32-bb5b19c24807",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "171d7b23-91c6-4dfe-bdf2-9897770a0640"
        },
        "item": {
          "id": "1e917bba-61a3-4cec-abfa-0f1ecfde3868",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5ef9b2a3-ae28-4143-bc59-593931be9835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c044cc9a-1415-4379-be4c-611e14f44cca",
        "cursor": {
          "ref": "82f24a52-e63f-4c4f-a13f-97746edafcb5",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "fcac2c9d-585c-45ff-add3-19e4c4fa7453"
        },
        "item": {
          "id": "c044cc9a-1415-4379-be4c-611e14f44cca",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e709bf78-a8b4-433c-a093-2713306b7338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6146a460-6d83-4e2a-8a68-97121db3392e",
        "cursor": {
          "ref": "16619453-7ca1-4e1e-90b2-3671d02bd4bc",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "17ebefeb-1bd9-4708-a098-11371e603104"
        },
        "item": {
          "id": "6146a460-6d83-4e2a-8a68-97121db3392e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c96bb163-f6a8-498b-9b54-e8856b693fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb3b3be-77bc-4c5c-8484-013ef6d22675",
        "cursor": {
          "ref": "14970165-68b0-4735-a8a1-b9e8fd7a5293",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "774b1b96-95b1-438a-9161-211f93294fb0"
        },
        "item": {
          "id": "fdb3b3be-77bc-4c5c-8484-013ef6d22675",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "22bd66d2-70b2-4c87-bb2b-5eb9446b6277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be76aa9e-b4be-4bcc-995f-615169afeeaa",
        "cursor": {
          "ref": "c2f7bc24-f234-4431-8629-9c9b40d879b0",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "760de14a-9466-41c0-bb28-b88187b7e832"
        },
        "item": {
          "id": "be76aa9e-b4be-4bcc-995f-615169afeeaa",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b33f8cd9-67a3-4e5f-98d0-79985c045e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7a6fd9-6175-41c8-bf6a-deb4ae975cc5",
        "cursor": {
          "ref": "eb531f84-54d8-48c0-b5c1-e78457d917d4",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "aad379ac-0468-4d6f-828d-1f3fffb53ebe"
        },
        "item": {
          "id": "0d7a6fd9-6175-41c8-bf6a-deb4ae975cc5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "17e0ac81-65cd-45e9-ac48-7f93b2a609cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68421a0-7e2c-4b29-a524-dff480bac66a",
        "cursor": {
          "ref": "4aa27298-b481-412a-8764-b3af115887b2",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "dde68f62-512d-4b13-83e4-d5739931ade7"
        },
        "item": {
          "id": "b68421a0-7e2c-4b29-a524-dff480bac66a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "07b891e0-947a-4c5c-b6f2-2e1d4086f86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad10ddab-34c9-40b6-946f-db84ad337d55",
        "cursor": {
          "ref": "35fb2b65-558b-40b8-814e-7b899f0ca1a2",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ef26d68e-4f4e-44b1-b19e-77888f37833a"
        },
        "item": {
          "id": "ad10ddab-34c9-40b6-946f-db84ad337d55",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "55e1042f-b27f-4b54-b20a-ceaf440558d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8f842f-d978-4fb7-8bbd-79f1b6751cf3",
        "cursor": {
          "ref": "db8a16b9-ffc6-4e4f-8f90-afce04902eb1",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "85004497-6a11-4367-83a6-cd91f973b896"
        },
        "item": {
          "id": "ca8f842f-d978-4fb7-8bbd-79f1b6751cf3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "31c702d4-5730-4a83-a0eb-459b68b5f471",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc7867a-d917-49d7-bbc1-ea37fb14484d",
        "cursor": {
          "ref": "80241081-ad6b-4b52-a64c-b0eaa7780a7f",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2dc91d78-0967-44b4-8a59-ded508e71c62"
        },
        "item": {
          "id": "3dc7867a-d917-49d7-bbc1-ea37fb14484d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "45370837-a009-433f-bf55-3b615c027a17",
          "status": "OK",
          "code": 200,
          "responseTime": 37,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e25db3a-5d10-4b2b-afd3-c1f9108a618d",
        "cursor": {
          "ref": "75cb6cdb-8526-4cdd-9784-d6ac93aa4a9d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d1cb9887-dfb0-43f2-80b2-3423c928c922"
        },
        "item": {
          "id": "4e25db3a-5d10-4b2b-afd3-c1f9108a618d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "33d15102-dbaa-433c-afa5-f99da6d3e58c",
          "status": "OK",
          "code": 200,
          "responseTime": 2379,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "055dce99-8af2-4c8e-9eef-881129ec4132",
        "cursor": {
          "ref": "f93795bb-4b30-4b07-801a-b088992556e3",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "25fc5a62-37bf-4b3b-b365-249b56a4f76a"
        },
        "item": {
          "id": "055dce99-8af2-4c8e-9eef-881129ec4132",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "922337b9-cf6f-4617-9957-a4292d9000ca",
          "status": "OK",
          "code": 200,
          "responseTime": 2775,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c95c69-cf63-48e8-8ca9-175de16c360a",
        "cursor": {
          "ref": "928b0821-542d-4be6-b70e-2fc8c50b4451",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "07bc6d43-2731-4d57-9c19-2b410b17d9c3"
        },
        "item": {
          "id": "82c95c69-cf63-48e8-8ca9-175de16c360a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "73dac676-f513-499d-afb2-e5fd405b665a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c95c69-cf63-48e8-8ca9-175de16c360a",
        "cursor": {
          "ref": "928b0821-542d-4be6-b70e-2fc8c50b4451",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "07bc6d43-2731-4d57-9c19-2b410b17d9c3"
        },
        "item": {
          "id": "82c95c69-cf63-48e8-8ca9-175de16c360a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "73dac676-f513-499d-afb2-e5fd405b665a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62f332a-c8dd-48d1-9bfd-08509b988712",
        "cursor": {
          "ref": "5d8c98fb-76ed-42b8-8af5-dadcfeba4490",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b0055ae7-b7ab-4bc1-8b14-14b7b6c8fa41"
        },
        "item": {
          "id": "b62f332a-c8dd-48d1-9bfd-08509b988712",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d79568cb-c0e2-4ac2-8a32-386cd42b1ca1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40610ac3-c5a0-4916-870d-7d862e9396f5",
        "cursor": {
          "ref": "f2425cb5-1b40-49ef-8096-b0bce57c5bc9",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "37746f68-b214-4228-a1cb-c2406a1c9240"
        },
        "item": {
          "id": "40610ac3-c5a0-4916-870d-7d862e9396f5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "afec7924-686f-4ce4-af11-e105fec0b46d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}