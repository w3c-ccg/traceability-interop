{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bfb50ee9-b998-4fbe-a319-90e01ef65f08",
        "name": "Clear Cache",
        "item": [
          {
            "id": "058f588c-a390-4a71-b935-a25dc24d6495",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "447e2cb7-6ce7-4356-8c65-e92a097bc69e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b65f424a-37fc-43ca-bed8-d95f8941aa09"
                }
              }
            ]
          },
          {
            "id": "fe60594a-b2c9-45b3-bf97-22fd94f42aed",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d67fb68f-b257-46af-88f0-295db78541a9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b3a48dd8-33dc-40d4-9cb1-73eeaeff96a4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4e930265-dda0-45d0-99bd-d684cf218129",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "96fff90e-9de4-4864-9df4-2714ecea9129",
            "name": "Positive Testing",
            "item": [
              {
                "id": "000f12fa-4bf3-4f19-b74f-24f3d2e7577b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4dc0fac-03a9-4c85-a00a-9944bed81346",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "28347fb2-89b2-409e-80a3-b8e12d70d7b1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bcc77dd2-7e1d-44b8-a2b9-966585bdf224",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f7ca10a9-bf95-4309-974f-f25dadfc70e0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "513412c4-9f1f-43cc-afef-6f0e44a55e22",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "485dea63-54b3-41ec-97e3-cc8acb67c47a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "776e85c9-b9aa-46d2-b612-d68c194b4686",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f843b1bb-fe7b-4ad8-a730-b9b4fb6a07f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90f94b61-d912-4559-ae2c-670ae2a27ca3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bcda8ba0-0fdd-4756-b031-c3c8f449c56c"
            }
          }
        ]
      },
      {
        "id": "c9c550d3-2ace-4213-9845-5877a2ba4dea",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ab5adb56-7935-4b9e-ae24-83847def4027",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54c26ef2-d4f8-4ceb-ad90-d2c8750bb12c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "13838935-a169-4d76-91eb-30686d81c71a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cff62ab-e988-48d6-953c-027da43eda6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7babf412-18c5-4d4f-a23a-f280d4ff1983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc62fcb2-b933-4133-bfe1-b71b1de5930b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363dd7e3-2b84-4572-9240-67a571094132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e46a8b59-5479-4ad6-bafd-522531d0d92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0b9d92-af6e-4497-b315-b62b8ec938f9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949547bc-3bc3-42f2-942d-7316a5d53567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e817ef43-0dad-4e14-889c-fbcd5a6c2e3c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a596bee4-4cde-4ab4-a0e3-dce8c5f356a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ff06798-6176-4ebb-8458-c458ac3a6781",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35de5df8-857b-4b65-b78a-e396747c5c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01b45b3a-d23a-4de8-83be-f7f40934d9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01780ac8-42d5-443c-be08-e69818aeb27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079cf9b7-db6e-4dd9-bc24-b906dc66e513"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "77e62a9c-54b7-4b3a-a7f4-adfdadea22e3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e324959f-b33b-494c-8769-6070faeee8c9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a81cb5e-714e-4314-ac2a-1e9867c35b9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "af4b0618-c4b6-4ac7-8db9-8481f4927d45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b2adb8a-e80a-4ffd-b427-a240ea246398",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bf2f0cdd-7dc5-48ce-8582-bef2a449edb2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bed0bab0-f2a4-4b5a-b54a-7b735a9b5a19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e141da33-14be-4c22-a8e2-5d6ddc4444de"
            }
          }
        ]
      },
      {
        "id": "10afa32f-02f5-4695-b009-ddcd20f3a939",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "483ab8a8-4420-4256-8e77-6daed529778c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32fbefe6-cdd6-4528-affb-96d12dc0509f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cd22c9a3-f2f1-4f47-97ce-43c5e441e17c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b8a45a-6a92-4f4e-bfa3-df4578f1016e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1570519b-5b8e-4400-91f1-345b605c77f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73515bb-7e73-4147-b09d-6a1b0553b2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2030e4de-ae5b-44af-9eac-a445560fb386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f23cd1-c1ff-4c3a-95e5-5da38b28f5a6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8781ca3d-e6cd-4fde-b7a0-b942d25abd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7507ea5-db34-47f6-b13c-256fd16e8c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394479e5-02d0-420c-9e25-1d409ea24376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a50f4c76-96a0-455c-914d-608416e77795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ca253f-d328-44c4-a429-add5b756b348",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf81724-f0cc-4d24-97db-6048f4b9b911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a693ef-3e76-48b7-b9b7-faeb326cfa25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c806374-93cc-4d6b-a47f-886f13bbc68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdfe8321-24ca-4ea3-9d14-5ab8de5af8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a890d512-9a30-47da-8061-16868471349a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b720dd8-de36-4478-b3cf-49e79f17a063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c88aee86-f03a-4604-9bd4-9c903ddbdc22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705812f7-7282-42ea-84e7-94852f299ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e548c6af-9ceb-41f2-bf2e-7a45217f5796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684f422b-dbab-4e9d-b060-426f117ef460",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c27548-a18f-47bc-861b-cd20c46c639c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2469f51f-1a5e-47d5-91b9-4c3c66999f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134d6076-2524-4e32-bebc-11499ae7d957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0f54449-748a-4da4-b50f-dc9b87125964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991290f9-c71a-4d60-b1bb-191fb14e2325",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300b5a8e-b578-4272-a66b-3fd192818797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1658e555-14de-4e51-97dd-2e6e6ff8d190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f360cc-63a1-40d2-9e9f-758922d2da2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27533382-2307-44e5-9140-c0a1db6e5dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cb90a4-0050-421f-9fb9-6f37ad5c233f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a0768b-e2f4-4e7b-ae88-283cc96f8791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0006b0aa-f56c-4c87-8e8b-e65b5226c40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dfc7a1-584a-452b-8788-c18c0e800ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc1f4b14-67a3-45af-8fb2-5a04a9c0d1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297bb998-8b11-4d37-9f8e-ad26f171727c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9dfc35-64ea-4b67-af59-93e521befcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbebf936-9106-4e8d-97e8-274c30161370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7d9e47-05ba-4791-89a2-a44cd31371fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e25e04d4-17a5-42cb-acfc-819f3cc5a1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63508aac-318d-4447-9681-1f30bbeee4a4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c93846-e912-4923-a1ce-4dd8fdaed94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7315110f-9b7b-472a-a2d5-014c01e796f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3611e1-3a16-437e-9815-adc383b4242f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43174d02-f52e-40d5-96e0-aa97f9ba3fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acf2c17-38e6-494d-8706-55264189c898",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9986de9b-b872-4f90-8e4f-56c113a26ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157447a6-d58d-4e2b-bd8b-c828910cbffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfce157-cb5b-48f6-aef3-702d928f269b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d05b9967-8c09-4086-9265-f62d1135f306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b98e9e1-a167-4c6b-a683-86754245b5e5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6180e7-362b-4ef8-bca5-a492a924c009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0b6d00-497a-481d-92eb-518cf567fdcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c565f7e6-9604-458f-ad63-7434268d84e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0a04a59-7f57-40a9-b061-f44f31930be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0f786d-e891-4072-81e6-8371dba0257a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8e852e-e1bf-43b8-b6a8-74d1f916f9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626d7473-784d-417c-a5db-28e93db37fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeba1e15-13b0-4691-9294-70d0ebbe85f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6718a60-cb2c-4801-94c7-c2d549302dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67216a8-9349-4068-8cc1-4d9a3b0a542f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fb3513-0bfa-435e-9943-c42b6901f275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d0aa57a-94e4-4ebc-8aa5-b372cce3cf87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58004703-a578-44d9-a8af-4a1ba453b66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4aebea1-aea8-4883-a7ea-2ceb65f2fe37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a656a2-1734-47ef-b807-b2579f97b720",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3f45dc-20ac-4a9d-8bd3-ecdc58cf00cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd08080-d03d-4bcc-89ed-4e0a9ea2f586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53415abc-99e0-4811-b591-9cf7a9a3f94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d51ebaf-f6e6-4439-8d8b-d3c202f00a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26467a02-1ea4-4b0f-affe-ee58f75576ab",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a6362a-16c9-4b25-8c56-00d1d11edbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f1edf0-a728-4b50-91c6-e433afd08695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac19301-f1b3-4e75-b80a-254f3eb90564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5511da08-a8a7-4519-b0ad-e31435506d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5730d0-12b0-4c30-a9b3-3a55791842cf",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9163dc25-c1e8-47ec-ae51-5f3e84efab8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6890101-6714-4a6f-a6c8-17a9289fd04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786ce731-8307-4282-ad3a-832e593ab0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b72d80a8-5cca-4ed0-afe4-dddff9e3c291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308823d4-fd10-4ac1-b486-4bbafb644ca5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7940f676-6faa-4790-9893-9cd3cea0cd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3c217e-3d90-4870-b2bd-4ed99144a788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db769a7-a067-4e79-ae5f-e5ebc2d3559b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9aaeb59-509d-4d24-be96-9e22173a748c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5482ca4e-b6c1-4d2a-99df-9267984a6964",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4511159c-8e5c-4de3-8321-73f002ff054a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5bf8d2-2d84-42cd-a209-4104bbc05ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a735dd1f-7f43-4cfd-9be2-baa8d0d9352e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a367e92-b5b9-4188-a133-7e472e405ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdab3c41-a470-4d9c-95f7-9ca0fa04ce1d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e75236a-851d-435f-ac96-ea37e9b55763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51315b10-02f8-4ee4-aa13-47176fcc7174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73fab14-ef97-4ac6-9bef-8cb6b612a7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "686acd30-2fab-4552-9ce0-fc132462b92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cb1a0d-a618-4db3-9ec7-9ad444cf3701",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c8a112-7e50-4cf7-8385-aa5cafe0d8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b83d801e-448a-4542-866b-de2f2cf567d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9665b90b-6612-4475-a80d-fa2995bd0986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "763effff-18ad-46f2-84f6-2d4a179f4f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c48c1b-0f1f-4817-98d3-05a82cdfeb94",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfd62cc-cece-451e-8641-1ae54ef05ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b80f064-7c54-4318-a268-b4205f84bdcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bf4c76-7fbe-4480-977a-eb09fe640ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e206d9d-dcaa-4ec9-a0fb-bfecbe30dc69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83dc35f1-0e33-4a8c-9dac-bec8359474b4",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51ffdb6-c87a-4830-aa4f-843f9550746f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990d77ab-f46d-4102-bff1-4eec94aa30f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5c3531-2065-46c9-9538-09cc8873284c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc88f7d-0b61-4bf3-946b-5146d0f524ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d8027a-d5a9-4b35-a965-847b09bb2a54",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505fbf12-c7ba-4a57-a706-3404597ec53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce654691-aa67-48b5-91cd-9c6ede8880ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dd4220-24fe-4147-8696-78c3490abef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "930c6e60-9bae-4dab-877e-02fe1fe7ef37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4624def5-c492-4d73-919c-def4ddb39b4f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f570f12-f3ae-409b-accf-8d794677dafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b56b92e-2302-4275-acfd-ec8593460560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b3a196-84e4-45de-b62e-4e3d54ba5b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2101f7c2-d80b-40cd-a15b-11d81ca996ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ef7ba3-2812-4643-be01-6a14d2e50184",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f3bf96-e1ce-4d34-b63d-12e0f37a1b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d2b66d-c218-4264-90b0-754d0bbf5140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52df8391-aa81-41a6-82fe-cdbbe52c2704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "03da84f6-2d4c-443b-a85e-4270f381c571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2229c532-77d7-4b3c-95c6-5d64b315502d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4480c839-e1b0-466a-9773-df72d8407cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd45daf-acf8-49f8-a869-66ee58e86c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0246ad7-ed05-4aca-b2ec-25cbc5f4a856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43761ea2-9263-4c97-a559-7445638ce3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9d92d7-652a-4281-ba03-d67217d389ef",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8f962e-bf49-4ca2-9f52-663577e2786f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4f1ad1-eb25-4397-8ea4-752a7e609e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6be2b99-c01d-42ff-a720-7017e795539b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "927b2d8f-52d9-45ff-af79-b8318938d184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c53235-bb86-402e-a8a2-a58112824d2a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e182e382-6f87-4448-8756-d72b7794165a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3239c02-3d28-4821-8b32-5bdf176ed234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035dc72f-b2b7-4a77-970d-7e2df7ec8994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c86cda10-3540-4424-87c2-a3a817b9564b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcca590-395e-439d-9dbb-fa1c75b16f44",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30887dae-325d-4042-9111-e28c73bd4233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed56eef8-0a45-483c-a6a2-15bf4be79558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5474b34-c7dd-4aa9-a239-79526a4932b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4237e03-a856-4785-8c73-463ccb3fc0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d335fd06-35f4-424a-91c3-060bb3cc6900",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab66ba3-d5cb-4ff8-9356-4e94eb7c9e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22331a0-0722-470f-b1d0-0656a143e69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6805f8a-4ff5-47ba-ad2e-2519081e5990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b52480eb-4a4e-4a17-9e91-d34a4f4d1182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3682489e-bad9-4e57-a523-ba5abd3ac0ed",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14b7081-e6d5-4a04-ab9d-2c645576ea4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6700c35c-55be-4cb4-bcc3-6b37eb348690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403a87be-1e9c-4724-af1f-24c83dcedc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b718e024-881f-4ac2-b8ee-79a77b3ede0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63190643-a1af-407c-8f43-6b2a31aaab01",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f5d7c4-154f-4e2c-96b8-788b870935f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d773b9-bce3-422a-b17a-c8c69883afe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d38ded7-2718-4064-92e2-015d2e60118f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38458714-ba5a-40ea-a35a-2995f2a8e3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06eff82-c172-4a86-a50a-4f6d405d9ee7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2eeee1-290c-4754-9905-572e68061a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68982051-db6f-4b20-bcc7-5b2d34fe97ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03195c06-f65b-44fd-a4d0-fdb1b5bf1d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79514dbd-3e76-4ba2-a4f3-2a2352bca201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92ca0ce-9b26-48bf-9584-b8422456ce01",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5d1fa6-d77c-4c70-aaac-172c1fe1afaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6981b738-e9f7-4e87-b10a-fb88bc4a6e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd7e3a0-9fd1-4206-bcb7-db31d4a7936e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49a6badc-a77c-4041-a93e-9cbe01ae18e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e3582f-a99d-41ee-b4d1-6ae1fdd6b648",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab2bc50-ec23-44e7-b82b-e435b206fb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b77ceb1-ae5c-4834-b6a1-449903e7598a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb3ca7a-9a9e-4b03-86aa-f7dea45b695b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9ff496-c57b-4ed8-a3e0-394ade9b21fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23009ae9-e870-42ce-8dcf-3519fafc8dbe",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acaf78db-42d6-4f78-8108-7b6e9fbe1395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37fe76fb-8298-4314-97af-0f48d82967ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4542ec-018d-4d94-9303-fce041fdf1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "749961b1-7c4f-4fec-9376-95b9e76efa0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f1d3c7-2828-4c83-aa8d-d82ceea80d97",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05253b2c-b861-4953-9642-9cff133c9fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697c9de3-deeb-401e-8e42-9be6041164a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf675f2-5a44-416a-8a6c-ac0bf664a957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e87e41a-ffc4-4628-9db7-3dbb13356508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06d09d6-1d0b-43cd-a519-f4fdc2c83501",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4604d32d-6faa-4a1d-90fb-d0a462724e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd56e7ef-8e38-4e87-91bb-0966f433dfe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe43bee-03f7-4ccf-a248-1a798938b371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5f616d-ecc6-4a75-8b29-03e5f638bcd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1cecaf-8994-46cd-a3a0-c006dbf289bf",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb1e6fa-146d-4896-a770-8944f8505c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff9d896-f645-4521-aa44-6bb76b099f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0bddb9-ead5-4625-b822-5f3cd5580acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "262d01fc-51f5-40b3-8397-794c4288472e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d8e859-0186-40c7-8fc6-0c4760f09aaa",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d68927-a0f0-492b-beef-6dfa0d064000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c52108-0fb8-41cd-af1c-02c253dcd0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b922ba-62c5-425a-8024-7dff2c7614d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae71f9c4-a3c1-4cf3-bbc0-1a50f5474f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c99c56-e601-4a04-afa6-7d1a59b17856",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620817ad-7d9f-4e70-868b-c2810892565f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c248eb1-8fdc-4a0b-af8d-43421afa53fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f97a054-2af0-4b1c-bfb4-5f555f757af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6788f67f-c676-44d3-9cc3-91c9c24591a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd9c53e-3707-434c-8b94-a3dd41b52336",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c27c20-82fe-45f1-a358-9d5d410a4692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9bde66-9337-4955-9c24-faeacdc8d772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19a0933-9eb3-417a-9934-b3b0194ea8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "765e44b0-387d-4cde-ac8e-5c64aacf571a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3b3113-ea12-4380-aca9-b2e13d9469d4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb46a5f-3293-4daa-9ba0-cd2d6d23a456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ebf33f-1e44-4db7-baec-5f4fa8d8ca4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cba9ea-d81d-4c4f-abff-f75df66d198e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb8f10f-9e36-453f-a5d9-041ebd6ee7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31759041-d8f8-4cd7-90f2-2685db1bcc37",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce18319e-4e2b-4b6a-bf33-a37faab37d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0381269a-3d9b-46aa-8358-33e98f550c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdad8f4-974f-4eab-bc9e-8b66355e9afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "567b1090-424f-471d-8345-69c2121a35bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a05604-5f1d-4fab-97ac-f468a73a070b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980a76b0-dd6f-4c6b-9f88-94bebc35f8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7a2c24-34da-47cf-b583-812f70f80afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fbe7bb-7a3e-4959-b266-045fa1cd43a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "593aeb1c-1088-45c0-a643-305fe91d2bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d324983-ac49-4213-8a67-5d3af41fae59",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f320a6a5-095e-46c4-bf52-0f84a38212d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5edfd9-d4b4-4a0a-89be-6fea59ae7e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e16597e-54ad-4095-9669-7a42fd0cb363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1cf137a-2292-4a6b-b5ef-ad3252d1c032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63248a35-fd99-4843-8237-aa83d310a4b2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d5d5a1-93b5-41fe-acbb-218044a4e654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa255875-5b18-4638-bb72-b9a3edcd12d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c04420-a17a-4765-af05-f7a7e1468de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "398027f2-f5fd-4f4b-b321-59c41d8996ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c14f860-0019-4322-abbd-5f697d581513",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac9bb82-4f20-471b-b2af-4617c4b2d109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9b7a6a-5300-4839-aca9-9e7fdf2aacc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bf0cf0-590c-466c-9d31-099567e4e099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67cb66af-4294-4428-84f6-bd5e19e3257f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863e81aa-68ea-4bab-a0e9-eb93a8f2f1b6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7a57f2-03de-4c28-a8dc-c139b0fc081a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068576a8-87e4-4486-b302-39ec4d669509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e434a9c9-b001-4f19-8199-566461589d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b18683-8988-4a72-a952-836da0cd8497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ba924b-28ff-4efe-9511-13eef82fd397",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59c016a-c95e-4907-8d4d-a54d2d485668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0376e41-4ed9-4652-9bda-9ac10c8c12be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b3783c-0e7a-443c-909b-d077a3341438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "751a1aff-a07d-4131-9445-475872599fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28eea57-9517-4ec3-97c5-6c8dc9b6224f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f372df89-359c-4e08-9f05-8f567f19abbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717755ac-0f70-4752-9a90-6607c51fe053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d09eaf-7640-4692-a609-95c5c8be7b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5cd980-c631-4c6f-8f90-7f7e4cfe96ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92f288e-c499-4d52-87ee-118ed9fa9fc8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800cb0d3-9892-438f-88fd-faa35c6ecf6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52e5d61-028a-4916-8de4-8c634136ca22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956b0b39-60a7-4f57-ba15-1ce9783827df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d591765-8812-48ed-aea3-f45cba772133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66eaea8-7892-4e03-8965-606e7985f836",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d040e37d-bec8-4d39-a0b3-933d286e57fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e06a451-a71f-4e37-82e4-7a690544677f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27dcab3-1492-4cda-8665-e75bc10f931b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e26a96a-3629-47a7-ad89-a6c90b4745ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a897b3b1-a355-4a48-bbe4-36f7e3ca56d0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b2a4bd-16f2-41d8-a00a-1e3ffc2a46e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "441eb78c-0c70-49ad-9286-9b6adc2be3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716ff3b9-1829-4382-bd21-0512f0faedc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd817689-498a-4904-ac1e-16289cff1584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3c074a-6bab-42ed-afe5-cbcb7e752ba6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117eb35d-97e3-48a7-989c-ded624270da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2c9fd4-d554-4eed-a50e-1794432c5fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323a0ed5-e6e7-4e18-8729-a4e57ffc4067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3739b1da-9ec0-4c42-a081-075ba0841a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a6da8c-e82d-4a50-95ab-c9f8aecfe98e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e414d7-2186-44bc-8ad6-c0336b270e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a159d3d6-96df-4c2e-8065-de3609b56180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bd36af-de0d-445b-bcf4-2c3cbc125e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9162b2c4-ac85-456f-801f-bfdeff4ccfd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e352060-6433-45f7-8706-eadb8d2d7b7e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e2c539-1b09-4fd8-9d03-600ffd3f00d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7afb9c1-571c-4cd6-a618-02f430f3a3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee423e58-257e-47ee-9c72-b040c4c4c82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9c381a-48b4-4cdb-90df-312c8bf0128f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5ed757-01e2-44d5-8fd2-953566021a15",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6869c3e2-abe1-4805-ac3d-9abafb2ac2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca80d6c-b458-4214-9554-2cf93f96c201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7661cd46-b841-43ba-96e3-c4993ce47bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8136c8e8-abb0-4661-9a55-3c6ebf2b8a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da86731-955e-4cf8-b9ce-0786fc8601ce",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8dfbd54-aecd-455f-99a0-9020e0d8a6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213425cb-89bb-42ae-a1a4-67caab5e2de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9f94ea-9d2f-4f5f-9545-df2a6b5a714b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "29067d3b-16d2-46fd-abf1-7af11e253538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63665ca1-4460-4f83-803b-a59a3dda8378",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8c29e5-01eb-44f5-9215-092c130c7155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3c61be-4f6d-4384-b6b2-3d717cfc2f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76327b9-75eb-4104-a3c4-2d1061628183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6fbbca3-57d2-4aec-b980-f2b21f07758e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df326b45-6427-48d3-94a6-c3beab496ba7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fbfc5d-f1a3-410b-993a-5c842be7c372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b015d975-2238-4050-a4fb-9e93bdadde64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab9c028-d01a-4e3e-bfb5-41800b416210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "efe5b132-feb1-4a47-8eb6-9e3f15f7ddb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3095e657-ecf8-4c9d-b6fe-c8d857ca26e5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ec1c8d-4ca5-4e7b-8263-f5834a9e453b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0926dc5-52af-40de-8fdd-848e90330e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988b3ca4-199e-4f20-bd9c-11e40afb7cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dddc449d-60b0-4f18-848c-8eb78a3b7243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83aa70f9-b093-4203-ad31-48217f035931",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbbc2d5-67f0-46f5-ba91-37dbf39a20b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2497306-129e-41c1-836b-fb0b42e22e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d5375a-6321-442d-85a6-fd68cae2dbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "43e0e539-e31d-42f2-b1d4-0eec2f8296d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cbcfef-5a88-4d0a-94b2-0fea24b0724e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149d9862-995f-4aa5-8fc7-e45ebfdacc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37b90e3-4a01-4ed5-86f2-439cea6f98f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d8dc93-50ed-4359-96ca-996c25820d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "084509b0-ff7a-429c-a856-7fe406737754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f55a15-b005-4b0f-af2c-e840c009a6dd",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b081c5e8-4586-4448-bb64-02aff7deab6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942989d0-8dbb-4d21-bed3-d9ec42dfc3c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3212cb5e-84b6-44d8-9797-3f829027b0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aabea87f-4737-484b-967a-ea76ca6cc501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7f6fae-1ea3-4120-a2c6-3373c93ffbe6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f69a379-9915-4111-b395-4a9766db17e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a04911d-5946-4989-a7f6-efa5bfa3c45b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966365a4-bbcf-4df0-b701-1ce7c436c1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bac8ffa-9107-4ea3-a022-27400809dc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb31e0d9-874c-495d-b733-50c6b0122d43",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ab81cf-99e3-4e92-82d4-5293621a6dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5db9672-25a3-4605-b7f1-7bf38960768d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e267eca3-26a9-453c-9e0e-943970b50ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad48c6da-82dd-495a-b32b-1804d1cc450d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6c5d0e-bacb-48b7-ae1e-3d125d18f4bc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205e7647-2f71-4efa-9f1b-d988caf7e9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f03707-9221-48a1-a73b-c3b91548785d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0b9cab-597f-45b3-827d-9701dac069e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c316d52-911a-4687-9c4e-460a616758b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcb3096-8286-469b-885c-f33492e53e1a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a4d875-31b7-4380-8cf8-1291f335e6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb10ac3-a130-423b-96a5-2d9c8aec13fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0156aa6c-88aa-4c5f-9844-a50b83ba80e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e14c4b5-b36f-4646-b8ad-4bb065a4f1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ee240d-bcfa-453f-87ad-5536e1b5107e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9230cb00-3783-49d9-b2ce-71d95e8e36aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878d2943-b128-4b7d-8344-35ecae5da216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcfb1a8-6665-4d97-8ef1-561258d25968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aefd7f2-6d62-44fc-ad91-6f16369c3303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fd6db9-9790-4fea-8c93-ca0dc216a640",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee036179-9fe8-4c9c-81b5-68178d8d3dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965cce42-176d-48c9-ae15-b6c25319a307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95d65f8-ea52-4d50-8f54-09dad1059edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ab4cd0-94fe-49e1-9343-d448b620745b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f07db4b-d8ea-459e-9099-4d4cc9e96fba",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1750545-1202-4b48-9b8f-dc54e0c66189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de30b853-46d9-40bf-9976-e5cd07a7f65d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7586d4c0-cd06-4017-bfd9-ed60020915b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab29d102-6c29-4a33-a827-86278cf54542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd054a03-7dbc-48e4-afb2-5adfe993592b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8015599-455a-4b72-8bed-db7391550c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7e3510-5e36-4763-b581-5b4cd7e7caf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e3ac36-cac4-44ca-a280-25f9ed59a0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "79a4b340-f03d-43f9-b349-b42b6aef9904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27af678-3f54-4c7c-94c0-032962e23c23",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d80c67a-1672-40a8-834e-b26388adb622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176e80db-db6d-4b4e-91fe-7a24baf231e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762db01f-f819-4eab-a5b4-db39e45e786d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54be40a9-145a-463a-847a-d9834e72dc32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0577ecf-6884-4eeb-bc43-98ba61c4b6df",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ececfe5-fb6a-44c8-9dc8-e55b4f83cbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e97969-de1b-4710-9813-c534c651dd7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d314902-cb08-47b0-bcc0-91e45c7b46ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5517158-dc1b-40d8-836d-63b2058534d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65893d1-6a10-4a90-89b3-34f0721a6631",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da783ed0-d291-496d-bf6e-85217621423d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541177de-b84d-427c-ba9c-bd962cc70629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c726b251-c29d-4690-9b19-b5ace7d72d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0e6568-0cfd-4f24-856e-1a0076b31f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdd720c-1c81-4fc5-bf25-04fae195b51a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607526c4-267c-49a2-903a-8d62d0059aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5eceef7-8656-4421-9ca1-851210214abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e388aa-21c0-4324-b37f-bf4f3440dbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b015ba89-56c5-4c81-8062-f02accc9703f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d02df39-f954-45b3-99a6-21935d54db8b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee78e7d0-7a4c-418f-b3aa-511dc766a773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47edda9a-914c-4a33-bcb4-afad28372c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee76e2a-5a3c-4102-8064-837b50c14f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee17b950-fa1f-4d54-adc1-68e752633591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db46b38-ba64-437b-81dd-7419307624ee",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e379003-e5c1-4c1f-a29e-868cbbc2efe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720d9cfb-8bee-4b13-99e3-869796c7974b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cf14fa-b68e-4e18-b8dd-5df469cf86bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d9554f-9b57-43ba-91c9-8e39b6efe1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03d54ca-0834-410e-a0b5-6ca366481115",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd79811-8509-427b-9f50-65248be8b036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196f668e-2208-4905-a214-af9019893d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a609e03f-8ece-4d52-9f97-57a8baf66b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f2a72a-3c62-4c1a-b3a0-86e64adaffa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fed4cc-084a-48f5-8021-02b67569c2cd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299acfd4-f8fd-4c0c-9011-852254c122b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7bf281-66da-46b8-80b6-d5301ae4228b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d309652-d841-41c3-b092-8a46101ff8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8e604f-01a6-4c1a-8b7a-f8b271fc9e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db8d6e4-5cbb-41a5-afae-abdeaa656450",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c8c0f0-0349-4552-bdbc-9118c66a4f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07c1874-7228-428e-a55b-ec83e0704a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162493ce-404d-44ba-9dab-710c554b6cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e50e51-b0bb-48cf-b341-8763492463dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43938396-3c2e-4718-bae2-a8252bb9d0c9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1892b3dd-b3ab-42c7-a422-68ee71c34cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17bf16a-a8ec-4bb2-a269-6782b34396d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf77499-6c6e-4ac1-ada8-2c598cec88ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1129ad42-ab69-4562-aad3-3841cbe47641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c788506-3011-4900-9003-e83e05e80d5c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5310a2-28e3-473a-b037-4353e8fab64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b09b67-f3d3-4577-82dd-15783dac62be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ef84d5-8049-4a64-a962-5df258f419d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "22f4200b-19f8-4cce-b96e-c9e6d7cd0b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb08b6d4-64bc-41cf-8084-554bc9c641a0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db76b03b-2923-46a4-b6ed-1487fe4661a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "572fdb13-1363-4984-abd5-77ae0ec6b831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d660472-1a09-45b2-b8de-210bdb01649f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "442599bc-9b29-4260-9f13-00167e0ca304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62114e3-a22b-4772-b9ce-1c391b5be177",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508785f8-6234-4fe0-a75b-69cd88aac933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5fdaa38-0153-4294-a9ea-1f5e8a78d4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2316e3b3-2c72-41b4-aa31-806774f82023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd3f7a7-5083-4ead-ae7b-9597c1e263c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659e7874-1380-41b4-b190-4a26cf347ef6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db637684-064b-4951-9ed3-ac2c3fd7f113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87210db5-546a-4055-924b-8a1837ab5426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439637a3-3bbc-4604-8782-2576de4d9c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c33995c-98ce-4244-8c50-e70b4ff603d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f07db2-3bb5-4ec5-9f8b-9b95fd1203b0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fffff5-b0c5-448d-81e4-c187945c6c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf0d4c5-a253-46c0-9c81-0f1a666c4391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2232b7f-9ad3-4f85-9b31-b55f5dc8a534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "19851bf5-bc63-4591-8ee9-678ee62be705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3baa33f4-e543-4775-8db4-7cfc558673d6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7eed0c0-8f95-4bc5-9fa8-135b49b1b698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e265e2b2-6b25-4293-b3e6-d6d3877d7a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ded05a2-5c36-4711-8272-0c57a7e3d3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe2cb8a7-23df-4cd8-9c16-3e31624a82e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4368606e-d4ae-42c4-ae54-b93bc743507b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c9aee9-fdcc-48ec-a22c-9eb250d43e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e744ff8c-6e23-48c8-9561-d6e24823a4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecbd89a-e092-4651-84c2-08e025c3c99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "91692c2f-1932-4e94-86b9-6f2cd44d0ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff1507a-4289-45e7-aaa8-02f8e0605059",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70ee5ec-1875-48ce-8f9d-c11fc2a96819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd7136f-bf57-4aed-bc85-b630d73ce00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9994729-bd5b-4944-b4fc-43bd2c24d86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "883bfa58-5e0b-47ae-afe0-5b7591eed36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdb4436-9f14-44a4-9a04-56a82af6ab1a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4685cbb-0fcf-491f-9051-4e85e28b447b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "af630361-235e-4c15-8e4f-2125c319668e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9014289-74bb-46c4-b5a9-6cb9f7dd7446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "507ebcab-a685-4ef8-87e8-c6b0393cff0e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b49ed22e-07ef-4c14-8ee8-f53cfe128158",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b501412-4c3e-4d61-8c0a-1ebd2b358340",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f66772-5d6e-4092-a98c-de4f77641cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a05bac2f-9f8d-4a9f-93d5-662b15bde4df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916317ef-80c5-407a-a10f-d9540605a6b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39ff8701-b750-4e89-ac54-2ff19b177ca4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f559d49-ad1f-4135-9107-396ddfb02e5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88cbde62-9bff-49bc-a61e-7ad3cbad8173"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74e3f75f-7ea7-414b-a899-091f8a8c3d20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a81c66c-58df-4ff4-926a-d205d148e5d0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f68a301f-d2a6-4b1f-8e11-600e2048d5f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "45e87e1f-4056-4b64-9250-c2af213f5820"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a23ac9d5-d524-4404-9f8b-483e4a892547",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6fff46c5-1f42-4947-ba4c-d2d5ae11b874"
                }
              }
            ]
          },
          {
            "id": "7bfef504-2849-4336-9067-93da25f14f8a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "343d9f1e-7eb3-4c19-9284-00c1bb522d86",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84ef83b9-9351-4f99-8c58-755df20f4905",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3210e2a-fdd2-4f2a-8730-43d64e6950b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3eb28b27-4655-4402-9876-e9e50d745f8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aea81618-a54e-4696-b56a-f285c251c287"
                    }
                  }
                ]
              },
              {
                "id": "a96048ca-d6bb-4b98-87d2-4c4d546d5c41",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bddb6832-c148-4705-811c-1fcf4a68adab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "edbb16f7-fcdf-4966-8e8c-7473630ae37c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1abf946c-9ed0-4cda-b312-1c370f5c5b8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "94bfba63-304d-45c8-a3e2-d770c0226ffd"
                    }
                  }
                ]
              },
              {
                "id": "c106cb37-3171-49ea-aef4-77f91c5ec671",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a55dc30-fb3a-4cf4-a76e-f15a6cb38f16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3e6d43c-6ce8-45c7-9cbf-e9377d9aca85"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46d91af1-b80b-4706-a7f7-1e7125c2a52f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "70dc28cc-3e86-469c-8128-46c4ac8b3a36"
                    }
                  }
                ]
              },
              {
                "id": "719e2a2b-840b-40bf-b327-c7923316933b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24bf9d81-cc16-43eb-8cc5-a7488557e6e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d557ff37-739f-468e-9c6a-de6003507d18"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed002d75-89ad-4229-8a01-a298b9372fc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9eded1e8-01ae-4fba-9379-1b0ef80bcf0b"
                    }
                  }
                ]
              },
              {
                "id": "ecd83fbe-e457-47c9-bfcf-1966865a698b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "965e7946-d20d-4dd0-b9d3-6edfe4257ca7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64443fc2-656f-4498-97eb-e4bfee0f61bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d898c417-5043-428e-a266-86cc924e6976",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5a882612-3719-4ed7-9e0d-621a855769bf"
                    }
                  }
                ]
              },
              {
                "id": "478470d7-8e72-4ffe-a7bc-65e4edb15c44",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b214ee1f-8650-4b83-8c83-ae7fa9b6f78e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "47dd33c0-d745-4f4a-a547-a93623a95560"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a9b9fb8-a3fe-471b-8816-d5113d029ec9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9bb5cdd3-9a86-4b3f-9b07-3f2299628249"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c2c0962e-85aa-4b74-924b-f23c9d9a1df7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bbc109ac-8e68-42dd-982c-9b324e43f556"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eff8db75-3aba-4e8d-9ebf-01f6d89e1b1e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c42197e-02a1-4458-8db7-fc2084bf8089"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aefb4383-2a7d-4747-bab8-9ae745d4f32f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "501a2626-2945-4576-bced-00c62ac27b93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f1f516a-497b-4008-82e2-58b22cdb56c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f15fcce0-6bdb-4b41-b6cc-bc55eeb15585"
            }
          }
        ]
      },
      {
        "id": "3384f3e9-db8b-4fdb-b181-55095cd5b3c7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ffcc5f55-f5cc-4aac-a283-c8bbd21c7958",
            "name": "Negative Testing",
            "item": [
              {
                "id": "695e7e49-5cbd-458f-abc1-b4ef85c36a73",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d5a3fb19-4dd0-463b-81d7-07e989eab823",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5521d851-72cd-423e-be06-63fca34c9d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58800b76-de08-48f3-b9a5-0a7412ea2a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9d080e-8685-4cf2-bdbd-9d69a3fead63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a40d555-efec-4f63-b522-f8973deb1d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44e32bb-ebcc-4da8-8a32-1162d8c18b1c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0433f0-f849-4446-97c8-f8fabe343075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24544cdf-3790-49c4-bdc7-912a576ac48d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5e4d91-3c77-4986-a765-37a168b28390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e43f204-b5a0-473e-827c-fb906490e377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8628d51e-f8e4-4d29-bf6c-332c559c79c3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4594b84-35dc-4fad-a53b-853e905a2a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd68afe5-2702-47ab-af20-3007cc9153ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea0d69d-0502-40a6-b5d8-7ebc9163a7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71d07933-bd29-438b-b74b-d6ae0b17e2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a38a19-3d62-4bd1-95db-4efd1ea7c35a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48446b45-6ff5-4add-b029-d31eea8945bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ab3593-faeb-462c-a40b-3e925052fcae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9746d2d3-4425-42ae-9994-4cc4e25e8a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab15e4d5-1111-4f2f-8a9e-d5cc036d674f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9951b9bd-038c-45ac-bc1d-e22ce1e55bc1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c673de7-f993-4d3e-867b-0287cefee4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1d6413-70fc-477e-a854-530495444035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b967d6-ee32-4c66-9de0-f8e3a7a3ea3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f8ad6f5-6e89-4a6d-ac71-bf9dc3e324b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ce69e5-ca26-46ff-8f9a-23563a8a943f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5546b66-ce51-4237-a95c-ae9008a089db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d27d1fb-4df9-4358-8df1-a9b84c910dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4452a160-39c5-4c67-b0e6-b9b0c046ffc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f556b365-50a4-4596-9364-3d498e278000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3bf4fd-df1e-4ee2-882b-35458a3db2e6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b8352b-1925-41f5-a349-aeeea48f5dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8c5ec3-8638-4622-b440-9a13c5481533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7b7804-e08e-4ba6-b1a2-b79292c77a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bcc9cc6-79cd-4df4-ae09-937ce015be8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e61751-fc6d-4b59-ac86-e659ac8c0782",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b89156-718d-4e40-8509-03207ada6d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2c8025-9b0f-473f-b358-b659ebfaa596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32bf9ae-a65e-4a2a-b133-f36e7dcbe8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "285c9869-121f-400b-8c0d-84a391c7bf07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08051a95-3883-4456-99bf-b2390a1f0cd0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212b614f-f5cd-4ec9-a07e-1f658999a49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94710207-1eab-4e78-ac5f-c3adc3ec9e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c35628-10b5-45d8-9031-3b43794de8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53587910-11c6-4444-a915-79763cda72b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c4a0cc-1323-42b3-940d-5008d8295b67",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626417ab-d443-4559-a544-f648f6b88dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0687b6-f29b-4360-b668-56acb0378772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368cf9ae-82d5-4ae8-afcc-8189ecdb6b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96ddb431-8d69-40cf-85ca-4a50198be323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8a09d5-40fd-4410-80a5-6459ee838051",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad509add-d478-410f-a0d7-352bec8cc520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f8e490-a22c-4e27-b66a-cbe7a706ff6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab878266-5281-4e89-baf2-8dafd1bce73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "03972659-65c8-4f3e-93f3-ad03ddadbd54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf855fb-3508-46e9-9d19-289506c4c2d6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cff6039-2d66-48e3-a242-a22dabad9ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be1163b-6bda-47f4-83fb-b0f68a5f8802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45bdcae-963f-4509-ad3f-16ceab30a9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "deb667dd-7a90-4aea-b38c-40d7ca0f60b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74374f9-eda1-4297-af3a-b1f243bf1eb1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14dac62-da71-4b95-8e2a-cb3ea020e523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9971a6-58f9-4f58-9700-4d6a8b9fc109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89501a04-fb60-45d3-9948-e816abff01c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2afe94a8-b9d5-4340-93ce-4946c201ad0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a76c66-83c5-4991-acad-34547a29d963",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457d52f2-0d1a-4f95-a5b4-1f2973344518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50b4db8-7d49-44f6-8431-f583231835a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c7280b-19f6-4809-9c11-693d8b1932a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ede1c124-aac4-403a-8432-bc370094f3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1aed4d-b4f0-458f-874a-7d6ea9bd1037",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479b8ebe-5423-4405-8f45-74a6d3aebfb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af3ce47-6acd-4f66-a7d4-d5994c0393c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16672719-d213-4803-8460-7c0ba2d63c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d67e5ddb-4bda-43af-9de8-054d1d60de0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9280e531-9b79-4682-8bcf-b5557dcd5455",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483f2aab-02cb-4634-9800-c69b6848c516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3336b261-cca8-443c-8f73-9ef5f70dee37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15818c86-be6d-4f81-a5e4-0a8e62b89258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b51f400d-1c05-4652-bb56-edde98bf4006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220aa551-8953-48bd-9f2c-71f060a4b4c2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9e3575-8af0-428e-8241-33f848ee493f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256922a3-8fea-48c6-841e-3356a547073a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84763d0b-1130-4df0-997d-b7c28873c011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "95532aaa-e2ba-4a74-8f08-9edeffe8b353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec3d96d-8ce1-4a54-82c1-ecd085d114b3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a48af9d-9da7-4028-abd1-af8cb23c1330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff319ece-874c-41f5-82d7-37e36847b6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc7dd58-4670-4067-9feb-7fb1415eb08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "27a7aee6-8aac-406a-b83e-e7057b60d49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df20c572-2993-4f4e-9aa5-ba8a671900c1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3067db4a-c288-445b-9df9-ffaca63ae3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bcaffa7-6c6a-4dfc-81da-dc286d78d479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aebd3a3-dea4-4170-bca8-1ae14a7bde3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e40e0096-1798-454a-9e80-e8219fa05d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f137e4-4209-48fb-a02e-223058d32d8b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d4054d-79ea-41e0-8b6e-fef334873b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98cd99ec-1b33-430b-91f1-3a220cc46faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8d695c-f8ae-4395-99e0-e276788baa33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b0e1db-8d41-4e4d-a974-574e1622a3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b9700c-046c-463c-aab6-08df7b8a9967",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001d4850-f4e7-4727-92d2-00387e87e8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451a4396-1fc2-423d-b966-ffc0af0db690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7161baa0-43e9-46e4-95a5-6597c9bfae05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cfdba7f-5284-4ff1-bd4d-abf9ff27cc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe7c4c9-3055-4e09-99fe-e52bec992747",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88f0790-bac9-4b6a-835e-4501013bcec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe342d7-e6b7-4362-875a-07c2d9f8fb72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4701455e-4ca3-40ea-b075-02b3c588d6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "621b248d-c597-41de-a589-7055605de80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae888bcc-4146-45c7-8149-88ef17d81d9c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0fb178-271d-440d-8e38-2cefb63ad715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27aea2fb-070c-423a-bfb8-75e0b1db1762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6280dfac-27f0-4fb0-98fa-f4919d1b1926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dff57eb6-fb6c-465b-9142-58fa5a001047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258690e4-06e3-4681-aa3f-808f96f934b4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af247d6-a6c4-488d-a213-3572aae39d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ed2271-946e-4a2a-b6c0-636115d400d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6224b2-dc8c-4d9f-b84d-2a9edb878294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89e1a34d-d7b2-4208-9367-66009d05ce59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a969154a-c718-4439-a565-2923e73937f9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01676ce-968f-4878-8e60-8fee4d0c8a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1677614a-ca80-43c6-a151-e22a8f6f0ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0428a83b-4d54-4607-8f86-c70521552d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77202116-46f2-4d35-bdd2-89efe92dcf65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32828f3c-776c-42bb-8878-3c70056c6fc5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ee8644-947e-4984-9d9b-4120fc048260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39a460e-c0ba-4c7f-b2d9-1c46d16f757a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe078f1-bd5b-4077-833d-03dadc793ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06e2cbff-3b5f-47d3-91a0-f5060944a0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7611790-b4d8-4d20-9c54-1261429edb03",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a42c0bb-ef50-4d0a-9ab7-2c523f44ae8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5262372-f9f7-4254-81d2-683c6708e895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f66ffb-916f-4c3c-b3f2-cb2588e2de0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b55cbe17-8cfb-409c-aeb7-5ee744deec1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6f89bc-8be1-4238-b3ac-e6edf94162d5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26a4a3c-a423-42cf-aabe-05b50f04bcca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434c8af6-2054-4a6f-bada-6a8ffae2e8a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0475bc4-4b14-49b1-93ef-d74f2d124a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16f12daf-796f-4bce-a700-a72fc0a50c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4c707c-bd07-4e1b-8a45-09e5967f01d8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8538c1-78c1-4cec-a9ab-cb439c956abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e09182a-13fb-4311-9041-0c148adc0ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9953a152-3bb7-4140-a8a1-aa01025ee943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "138e956b-d1d3-46d9-9734-67dafebf381b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aba0669-b763-43c4-b044-fc64d2f09700",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a5ca12-66d6-4bad-8968-dc96a816a9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e8131d-7a9c-40dc-ab06-15b78aa6a06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cf429b-6276-49a0-95f7-a92d9feef38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "122396f5-9e0a-4a89-a49a-e357963c974d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b22c38-37be-4677-b24a-3e710e2c2f28",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad512f1-ecff-42c2-81df-7a9d154c9d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da8437e-831f-459f-870f-bc7e58e5b8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcf9c67-cd7b-4e35-82c7-523d1013a1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aca54ee5-e121-4f7f-9c2c-ff1a5c4202df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0785df-a581-4b26-ae15-2a337254cea0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47e5fba-0ba3-4f01-a1a3-5ac5221c66b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973948ba-a41a-494e-8152-4304e3466481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce5bf99-1f79-4941-b30b-6387f14ef7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb4632d-5665-4b54-9437-a22b1e8c6b6b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a418ac58-a753-4bbe-a31b-c991c18f8b74",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0271c722-2cd0-41da-b37f-62d52baeb5d7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0efd1ee-5f8a-4c69-a4e6-e8fa669402a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8841eec5-41bb-4898-b1f3-d26fc7701d4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f7a34b-af6c-4e41-b67d-a993fe11a637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89542348-fafe-44ec-a32f-e25fe337adf1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf7a4b52-6dcd-4132-8f5f-f068bf345a7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b28089ba-7338-4ae9-8dc5-9ce0a84848e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b18c0894-950e-40cd-9976-81180f034ca1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7650d373-52e3-4194-917a-a1dc9c3c5375"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88112dc7-e031-43e8-82c5-53b9d706baa7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fbd8ed72-e755-4c54-8dd0-88b1120430f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8969dbbc-59ca-4db1-a48f-eeb2426aed42",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ad0f368-513f-4db3-989c-ae968aa4fdfb"
            }
          }
        ]
      },
      {
        "id": "7c3be618-118d-4812-b8d4-0a25287bf640",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "265f5a23-6d56-47a9-ad44-2dd12012a407",
            "name": "Negative Testing",
            "item": [
              {
                "id": "433873a5-f6b5-43c3-9f56-9bf01fa4292e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b889c44e-2333-4525-b7a3-f23c3f12f06d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9066e324-210a-4c55-a3a0-5b572111d7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f0bb868-5621-4653-b96e-1d498db2a765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf1329c-ec54-463b-ba32-6b9c9c6b128e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a23b17a-1c2a-4923-86d2-446614b9fc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf5b19d-edfd-4b1b-9945-b185960f3437",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7824be0f-9069-4833-8d72-9e9076b1931f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84f4cfc-2083-44da-a129-8196ec645da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8408e50-ffa6-4383-b24a-a718b4b14e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8507c694-c1f9-4fc3-8dcf-b7099c0ac711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1b17a1-4079-45b7-9bdb-3a38e4fd15a4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa938509-04e3-44c3-aee7-9346ff9cca32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af551bc9-bfa2-4664-8753-a6c437153732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a6d06a-0278-4c27-8e32-9f8894db97a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b551a1df-5ec7-4c9b-9bc8-e786e71862a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb85e31-7a3c-4b67-b667-3ad20c69469a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256e2769-9ade-4a04-b1dd-0fc54e0b88ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21da79c-8206-42e9-8dbf-44c3ad0a6b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2485140d-7712-49b4-8edb-f0a88c0e8253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f72ec25f-1344-45fe-81f1-66aba47bc28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa983c44-f766-41f3-80b0-31db8b991914",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82afccd1-7e65-49a4-a17a-34e55b433d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f2832e-97f3-41c1-b484-031b4cfc19a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a69cb76-03fa-46f2-a127-377b13310f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ca3782-bca3-4590-9a72-ffb278d8be37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7750441-8613-473d-829c-6e726b9bc473",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51dc3e7f-2f21-4331-ac86-5147be5387ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2e8129-f214-4f2d-810d-e9a699fd76cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bf9c8a-4e30-46c7-a062-6bd5f89e4e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "463b762d-2fe3-47b0-b476-4cc282e8dd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33574227-9874-4975-8a38-0f01944c98a0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e024b25-9fa1-453b-bb59-cc69d280b0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8562889-10e5-4af8-9271-89e2dd156532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3a75f6-46ef-4ba9-94cd-3ac8f3f74009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f32d2cd1-c07a-4f56-9351-77f99f5d7fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b52dfd-5021-4f14-a00e-eba2c974216c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6582f5-f3fc-4d10-af19-b33cf57bdbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3e04c3-7021-431b-894b-2b5be791da0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d4e7e0-30b0-49b8-8b0f-5ddcd2d54ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c8784f-a231-4038-9981-4e81827d1060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81f8de3-7cb6-4a1d-9764-ce6fa2f44fe2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8282e12a-08e7-4777-ad5e-ee08611702ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af093679-10b3-48ae-bd2f-32cb0870975d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4afa994-8a1c-4817-9f5d-a2533d21d027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc1ee056-c7b7-417a-ad1d-cc1b9ff7be65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482d7dc9-8324-479b-9f58-778221818c26",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63942d92-5fda-4415-ba07-54719fdd2a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b06cbe5-92e9-41df-a554-c2c744d25189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b365e2e-2b14-494c-b7cf-b14bbb87be25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "654c199c-2fb7-478e-8d0a-a02cf24d6723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d7601a-da19-47c1-aef0-f846eaddba99",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760d0341-47c9-4921-8a0e-bd1b8210a3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5092a8-3ea2-4221-b075-da842b002c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb6c078-4798-44da-a6f2-617cec323ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "065d001f-5a65-4648-8f1f-42b97d4c185d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4e4ba3-b609-4e29-a9f0-d94c8cee53ec",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fd1be3-cd02-43f4-a0b4-467253d75d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ead928-2d3a-4ec1-8ef8-e49460f0274d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dae102f-a18c-4616-b512-44f587e16894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d31c2d0f-04fd-47a9-9c49-f7b44711a51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38905df-7eeb-4b77-93d6-496353fe3acc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777b326a-da62-4401-82ed-12326f523941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c99a21c-33e0-4731-ba16-c05237bfa203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd894e88-8f17-4114-ab03-e6db7267e708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f22fa7-79b4-44f7-a5d8-9e4e2f2fdaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de2f7df-77be-4145-9871-86af0df9eab6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ee7b9a-d386-4896-8285-9985dbe0772c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be4c0e2-7ded-47bf-978d-9604a142f732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa11873c-bf80-4876-898a-186857409402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "74334eb7-73a7-4edb-8397-ba9813f92c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd0b27c-1f30-4c9b-86af-7b862cf8e08d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0615b67c-1c87-476d-a078-402cd6f8236e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd8b8f0-bce0-40a4-b585-7540dfc6915b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1798a9-457f-4ce3-955b-401b4fc427cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2f4888-ef91-44a3-b985-9e9dbbc6f8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc8290b-b2b8-4fa4-a131-4689402cc0ba",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceeb260d-cfab-41de-b7cb-b114f61e28b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc40f2aa-c23c-4226-9d44-b45acbf6655c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6703faaa-5587-4ed6-92e9-b7dea1ab4b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2427bf-69ce-4656-bd84-f0a24d55331e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775415ae-c4b7-4017-a5b2-5d2ec0b9e0d8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551e9206-d511-45df-b5ed-dba863298908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e5afdec-eb75-4d02-b1a0-feca08b2e89d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da50aaf7-36e6-4193-9489-c8b786df6adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a70314-e765-4469-9861-67bcd94bb764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d31a146-fe91-4697-b507-76be071d883a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f314296-0f83-403a-a911-73cb99f03215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6395509f-531b-41a6-82cf-b11eb882ac48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc26caba-c95b-4494-acf9-b57a0208a321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8fa5657-4310-4aeb-bbfe-6175fae93bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d5dbaa-0f45-407e-92b9-2201858acdde",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4519f0-cd51-4464-9b91-07e86202d237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7ba322-a2bb-41ad-8fd4-7c946d3a1f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab736eb-79ad-4b00-b093-73f1b8cbdc58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97bc69b8-7d82-4cc1-856d-de472ab40103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f123977b-92dc-4628-bb65-0c67b15b5b97",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5bfe52-8782-423e-ac02-5c6b38f0d0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ba02e7-f22b-4548-8985-a20e19084d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b818d81b-2464-448d-afc6-8c8770a35f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "568d96a0-9793-4866-91ec-010e92b92483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed822ea-379d-4ee7-982e-6d053e213846",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ce18a0-a7e2-4338-a30e-546bf83f858e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e51e0eb-e041-4794-bf91-214f482c4b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543ad878-6a11-45d6-b5a2-151ae6c0041d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c48d03e8-c4a6-44b9-a52b-c7c14462ad44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c288f1-8de9-475b-9dc0-f5d733969c0a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d283072-e551-4d79-bc29-21fa8eabf35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c3736c-2262-4206-b2cc-71ad80e7cef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70baa132-6f44-4150-ab8d-4a56e4d1cc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b62e9500-1d6d-41a9-b285-7073a8fd5007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad714b8e-37ab-4c35-b325-dda2d84533e0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf40ca16-16d2-4bb3-9593-4aa34a4fcd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fbf9afa-bc72-4ac3-a91e-57907e7f7fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ae9e6a-bdc5-4bc5-ac18-50f9d3c275f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4754ac-27b4-45a6-92ff-1f747b29aae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6ddc92-7937-4c30-b40d-d941ae415663",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5c3a4c-773a-48d9-913a-80a861c81f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78fb77d4-b2ff-4aac-aab7-1c610fc9169d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bfbe51-a06b-4887-a0f4-cecdcc19ea60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14bb841e-a927-4c61-bdde-e6305791d37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184102dd-2657-4775-a299-88090190722b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144d769a-0d25-4abf-8cbe-a79397ca83de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36d843d-3db5-4a84-a20a-61ee4c248fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c66775-226e-48b1-ac04-2ffed017520e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86a9c31e-3ba0-434f-b115-31cfd5bf7e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0417999-4d6f-4037-8b0a-a5232a486623",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a91e2b-6883-423d-bb06-4d7a5be05917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fb5a2f-3131-43ff-bb4d-be9913441a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123222d7-7587-4e7f-8d9e-2cc9231fa787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70acb997-a3cc-4b63-9fd7-43b6c6259617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee675e84-6502-4e3b-bbb1-d118723e9c19",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25ed237-82d0-4fe7-82f9-788d31e943d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dde55bf-0e2e-4add-b097-67e19af1524e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f36c0d-0f7d-4dc7-b404-05baef95ccc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8e1c26-9e26-438e-8142-84f4c122babf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301921ab-d080-4cb6-9f63-f883d531f97e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ad2f98-c837-42cb-9da5-89a6bcc4352d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca814ae-c95e-4d71-9c72-c6391855ce7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd859821-efa9-4d71-83d6-af52e6b22240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "389878d1-6b4c-497f-9d0b-c66027c97e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8d0f06-9de5-4bb4-b7ff-a2772d20959d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55506d2-ab4c-45f8-88d4-70cd65fece34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26135571-b741-439f-b770-40a637f50f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11be81be-911f-4127-89d3-3f8579aa3add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b420f70-9260-4725-93f3-eaf4d7638425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff886e4-7f48-4a58-9036-4478fc544e62",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5683918f-0f53-4458-9304-2462cf6eef9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e367ab90-64b5-41bc-8fe7-a4dd5e387ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cb34ff-2482-42f0-b53f-2373ecb48d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba13530-1bb5-4307-a70a-bbedf91e88f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d827c6-7f6d-47fa-b730-ec662e678d21",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359781be-3d0e-4744-bc7d-631d63387d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4aa5c4-b5b3-4045-bc22-169f73f76f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c740bfe-ca02-433c-935d-097abf148689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8313582e-3e22-4cc1-b922-aee4f3b4d79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15315206-97fb-4d17-a0d8-d13747a58bee",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dceea3-4715-4140-afd8-2baee777122e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeead4ae-1b16-47aa-8def-f5c8001fea1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b7e724-2bad-4e4a-b34a-107775ad3454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cabc8b5-0fc6-48cb-ae33-6e3da627d10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250ef824-ccd0-4e3f-a204-5d96123a06bd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca88787-5432-441d-9ba6-5db6c0789e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e68ca4d-061b-4f5e-8022-75692e152eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f61202a-c7f5-4b98-907d-530fdb75b51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "634d4af4-9e92-47a1-9c51-12f47ec59c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54a4804-3681-4f59-9033-a2886ac80290",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25fe8ef-3321-4246-bcbf-a16b19312814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc57a1da-9256-4c37-80da-51eb1f4c9d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f09a25-41ce-4e7a-b7eb-5da7e827b22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18917b91-74c1-4147-9719-b68065007341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2509dee-5acc-4c70-8be4-69b8020ca0e1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f38602-9e81-49a6-8ebb-b071d355eaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05088456-6e4f-4d3a-9265-f1e602b2d8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd01c35-6e3b-40fb-a52f-f1c3a57aa858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b596480-dc46-4b6c-9d91-b044adfb9844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8187e2-5c06-47b5-94b8-52df61a24200",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7ec713-105c-42d2-a1c2-4852fc3cfb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698716b4-fd21-4146-8e10-fd29f700ec32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee5abd0-37bd-470d-90d6-8d80bd008fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc7ca656-4d10-423b-b929-56c862a8707c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b15dc30-0149-4cd8-bfad-535d9be669e8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc68026-7245-4fac-8922-33321373a203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25c3d17-5aad-4f62-b3d9-d4efc25789b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916ad8e1-bb5f-4fac-a9cb-19da18f306a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c55e32c5-fc7c-4091-8737-7ce71cc623ce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4a6d8a17-09a5-47c7-90da-1060b164e07f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5679d2b2-773a-4974-999d-58ff6828db42",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b23adb-314e-4063-96c3-0e798a978ef2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "232aa6e4-0ff9-4ac3-9308-7d00a0a3dbfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd6d827-5a9d-4b7a-8c16-8fc64aab7922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a1407be-7e77-4b09-8bdf-295f9005ce64"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4071f4c5-d7b9-4d1c-8906-6ec616ef7ace",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae806b9f-641c-491a-9aa5-7bc0b3521649"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2472a431-70a9-4daa-87c5-99183640255b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50e02cb3-1f76-4fb1-a626-8217c2578d45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0554027-0099-42ec-abde-1eb3660ee3f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "580d5835-2004-43c0-b419-9718446aa4e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf69baaa-37d0-400c-8366-b4fb3b0ac1e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c4cf4db-3588-4fe7-849e-8b8b05107de6"
            }
          }
        ]
      },
      {
        "id": "6f1ceb00-dbe0-49ef-ae14-3d6c408f9158",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e8070fbc-acfc-46dd-8234-57ff0010c6b2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53994b10-f2be-4926-a73a-e5da4b572a7b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "959bee98-d1f3-41aa-98cb-118d10d19974",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b33d28a-d4f7-416e-8b7b-8456a2532ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aada85c9-eaaf-477b-b903-4e190d4b3d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4c9310-3672-4d06-8e20-e5e0fbfa74f7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0356762-b4c2-4a3c-8255-3e8d3474cf12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f10c609-d41d-414c-bfaa-58f856ca0a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703922e2-942a-463d-8871-14435e5db872",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7acca39-eda1-4354-84fd-751beee33a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a5be95-c836-4c59-99dc-99c1260f20c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ead963f-6c23-4584-bcf2-1101fadf849f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd0e413-8f18-407c-9672-6a47050f7567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0feeb8cb-48e8-4cad-9f3a-7dfb566beeac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fa9baf-903f-4fcd-bc5e-3ec762137bdd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a19bd71-6cc4-418b-b210-e4b4456d6ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ed78f8-c801-4ac3-873c-919665f6f055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c7977c-f270-4f2e-8fd0-015cf9c76c5e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef18183b-12ea-4bbb-b88d-0ad90baa8a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984b87e3-20b6-40f4-be0b-5f13284c52cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab109da5-44bb-4373-9513-8d5c30be6663",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07341ce4-c58c-4497-bb8a-5465def8259c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22137cd-4702-4fb4-a8d3-20797e92a01c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "979f46b9-5670-4229-8502-7d39b42fc002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fb81e6-d3ec-4daa-baf9-8ad16b6cce3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10647ec2-5f2d-4be4-b3a8-902c0d253337",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1783cb7-63be-4f48-af23-f4ce86648e22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f33015ad-f35e-49f5-a990-5d5ed7da8023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f9f5c5-51ef-49b3-91bd-43128eeb89f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8213d861-8434-433e-9b79-ce384468b0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc25205-5d16-4fb8-9537-d37cb2c6ecf1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ade6e93-d89c-4684-8156-85885801dbd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba9c288b-9b83-4065-95c2-166680da39ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "113b13c1-f27f-4d60-b7b0-fe7722081950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0630baba-e20c-40dc-b441-46925b78ece2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a92a4d-0c3d-4f53-83a6-0c7fc7e5c0a3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e056480a-0c3c-4ef8-aa4a-a8436b1626e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2b4b5e0-4c7f-4ce0-bb77-b3ec1e34352b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5825bc46-cb02-4d3c-bad1-159325b636b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5f1346-f381-4f96-9e64-41e5fd7e0366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e5d711-d6c8-43dc-bfdb-95bec7416c70",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3396fd-3b04-4ca1-87f7-7507df124ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8772d58-1148-435e-ae99-7d0106ef91cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "869ba164-65ca-441c-b477-2513a644e345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7354e392-c1d8-4f89-99cf-720c0c34fc76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8df2da-a549-4361-abdb-5e40d7a310d8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e531e99c-a044-4ae8-a035-71191fc8424c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "460b4d7c-81ba-40f6-8790-d20dc5814915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d465e7f-ba01-4954-9c77-2fe7f094ac13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd1f315-0865-4643-a6df-08b02f76b52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f6b63d-be03-4f9a-ac84-b2cc059f67a5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd3f613-1e7f-4eb7-b11b-f5f4d8645d75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06b9e71a-6d4a-4eda-84f8-e901e6f9c2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0f6e5e-8521-47ca-bf0d-f68eef3c0e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2ab7f1-471c-4ffd-9dc4-c585d1de1780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f856148-f161-4c73-916e-a56a3b450ff8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7927e4a4-5a27-4c39-8689-8396a1711b89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12dbb6ac-9fcc-4bda-9015-d7f02f07a9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1043500-43e9-4ad9-818f-984a8f93790c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38db021e-188c-4da2-a3cf-275abb1b3810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03cc5a2-6397-4c29-9f52-45718d657c56",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eed1db8-e82c-4a9b-b784-9c941684b3f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "125be3e7-e227-4706-95ca-cd4f7f32e41d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce102e5-4eed-494f-a7a7-94a7b0dfbba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae2b232-c6bb-4953-a1f6-84d926a15ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032603d6-31a9-42b5-a481-032b9e40fc11",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee595dd8-5c53-4f2e-9aad-3197e93c766e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05dd90c6-e1ba-460b-b787-57965640e52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e01d58a-586c-4739-8602-c3e903b7a63d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee90efae-3a37-411d-b844-3dc20813eb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0404dbaf-5e1a-4b1d-956a-a7e7844ff42a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b72d92c-a7fa-4beb-b9ac-ac938e05f4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a9e37c-b67e-4eea-b334-71d6f59c07fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431d58f6-e6ac-4fe9-b00b-9c87e3045437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae0bd6e4-8d31-4dcf-9e4a-3108d973de44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cce8f2-5b7b-444a-a98b-3f11c902ed39",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef875945-b21e-412b-bc30-8a1f57fb9111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac47196d-e225-4fa6-a6df-57e6f365c35e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a027a757-840d-4675-b0b3-cbc3dbe369d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0b5f3d-ae3c-4903-8e1a-e7ed16176e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d52087-9921-4747-9bdf-b1bb37d9cfb7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5798734-8bb0-432a-8256-6dc90cf8e503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb80c96-a2dc-4b27-8ce6-6b4c8e80a906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166d6b4e-f176-4054-9d21-1d4d89f7ed3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef482b5a-c986-4e03-a423-7d5b16767b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfee986-5a64-463c-a71e-326a6d183de8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70825387-406e-4297-8e16-caee874538e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efba31f4-e2a4-4410-975c-8c8d97d01cd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c774bb53-1440-4e3d-a11d-1e2d34202cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62774eab-9a78-44d6-aae1-c59e36ea090e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fa2bf3-951e-4813-a027-81e93cc6534b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f68444-12c2-46d4-8809-6143620b75ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2657e365-7143-45f6-aa05-deb1dad66129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5511bb-3ad4-468d-8de5-7d3d35381fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2565d789-260d-4c06-b680-3d2caf24143b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9e1612-5a0a-4cf1-8771-002340636785",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c41ac8d-cc86-4c76-a8c3-5b03cb7e2d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1f9650-f207-40fc-8e34-455f087b0822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c99487-621a-4332-8303-6df546c91709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1e89f1-b2fc-4a3a-8563-2ccb976dfab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a3f852-4952-45bf-ac5d-52ae862f137a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ab02a9-82ef-4455-be2e-8c8d78578152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e73bc0-9a0c-40f1-b8bd-592e6037c8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab78ed31-ae23-4fc1-9c30-77aca1a3a56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2cf9f0-2b56-4eff-8e4e-63b488c4d874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25de017-187d-4b0c-85c5-c580fa829874",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e47275-e5a2-4d73-8595-62e4fb58a8f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "770df177-4a08-4462-a5ea-b37fca21d532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "432d80d6-0257-40d5-98ae-4853fc0f98e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c477db-e6cf-4e02-b771-d30b50cc6a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8afa92-c717-4a2a-82f2-8ee6ce98d4fe",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f844d3-b7ef-448c-bcd4-7a5952eb1e77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6713bfc7-99ea-4b6f-906b-880a360eb88f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5679b8a0-0836-42f5-b2b2-78aee5547029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab68d891-106d-4d5a-9788-cf43265bc886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abe4227-3a09-44e9-a36b-c50c20f6a671",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df601ba-f94e-4aa9-8c99-6d62069dacb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f7e67ac-f1a8-4921-bbaa-192769edca9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4402d4f6-4327-4872-adf0-582bdbc280bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5914ca05-5f2c-4345-b34c-cff50519832b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d8e87d-daf1-4e38-b44f-b614f3c6e127",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1bd9e0-bba2-4bec-b7f8-79aba2fddf36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2439e87-ebf1-46eb-af4a-c24fea9f5571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00a63d6-4214-4dde-a867-9a1049ba3ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a991c7bc-90a5-46f0-bebc-3a22e5733cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b41eeb4-2c0e-4c8a-8406-9a86cdf8fd67",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34ef631-c9ee-47c3-af44-8d4b9895f7aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73c4c42-7021-4de4-876d-3efa12526550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbe6326-27bc-45e2-9d24-ae0ccd4c5980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063970d7-4912-4a20-87ae-c78555633094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10476c8-0786-4032-bdae-5846a60fd559",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c18731-08d9-4d33-9fc7-cd1e126a437e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d03edd43-583c-4d4d-b34e-950b58138f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b5401d-d700-474d-84b8-b667eced42cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "948c34a2-e862-4dec-9fed-3aac9e0bb0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125e32ce-68c5-4f56-8363-e3a71df9f987",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0b62ff-b475-43cd-8bfe-3ebe116beebc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66d946b0-9647-4b3d-922a-3171b25b3259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e68f184-7be4-4e9d-a47d-b386a62fc254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b192770a-b20e-429f-aa7e-855b16e19bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be780dcd-8dfe-4631-b409-764b5f462712",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa70b79-5b04-46dc-bfdd-b721a7c6956a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceb1d0e8-f881-4810-b50d-40aaf0fc9b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0314419-feb5-4f1e-bad1-2dfd06fe2671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac8af50-2f87-4962-be7e-f081fd361707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abbe725-76b1-4687-b1e8-91e08119ded7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddf9607-1452-44b1-929e-4b74a0a04a77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd39cfef-08dd-406c-b193-12bcb98e4fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787ef6c1-20d1-4ec0-b597-81862fd2413d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eacbe0d-c6c8-40c0-ba6e-f488329d529d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12562af9-42e2-42fa-84ea-05e01464d311",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633d966e-9c38-4543-b2c8-9c9610075a98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92bf7394-54a1-4a8e-ac63-d504ab7be7f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9faeac-3209-4af3-ad56-ea627c4378e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa981cad-65b7-4ce5-8a62-5210f145d22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672f6bf1-0cd2-48ea-af63-7503bbcba570",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49170dc9-28d9-4a17-aac3-b718a8e7a283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26d3ef20-5128-4aff-a10b-b166367314ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "193cbf31-818d-4882-9bcd-07a29853307b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319946ea-cefd-4af3-9eec-e31d0669db6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4530408d-855c-464d-864b-289946f33694",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee738e3-6f5f-4997-bf1f-d4bd789fc363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2433803f-e8c8-419f-a542-18ac1014742d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09af0ed-0fb7-4dcf-a76f-cc3782492b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d79300-ad21-41b3-9ae0-9e4761d9e657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd9950d-9b3d-499a-841e-300b8d094bba",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d77999-9906-47c4-884a-5d4695624ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403234e2-912f-41f4-8f15-99b98d1728bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddebffb-d569-4e8d-b7b1-404fee82cd53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6fe7812-1765-4387-a034-46f01e83a9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15840de6-8708-42d1-90de-dce8850db03a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d797341-703a-4548-ae17-d0fd31f9cac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ff1c8c5-d25e-4d2c-a8b1-46775179454a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c8c694-d873-4c0d-99cc-127dec37122b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e279f2-2583-4a84-a810-59e9b79e21cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a074b004-7c9c-426f-9438-3d3cca231935",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6784573-1568-4c35-bcf9-7f2540539e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4f3316-cb7e-4633-a765-e8207b4cfdec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8170f24b-40dc-46e9-8011-a076b4b1830f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db11199-8b56-4ce6-8420-b3dca3036ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba5621d-7a23-4107-a5c2-9b88fa86b657",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7915906b-c56c-48a4-851f-828099235dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426db823-4f49-49a5-a67b-41c646857200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f95874-d1e9-4348-89f9-1984f670a12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86473153-cbd9-420c-99e0-9f0976b2e621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f66cc10-9e66-451b-adc4-5608771183f0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9359901-5736-4d28-8394-02da5834010e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a3c4e8-595d-4afd-872c-55d0f92d3186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08e8097-bc5b-40be-9318-7a74eedd9a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "342b8fef-5929-49e9-a539-b13c4a5a77d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed576510-6dde-472e-8b23-618e292eb953",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f099945-f369-44dd-a7f0-af241225ba9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5786db-aacd-4e5e-8a97-8cd8b6ff68fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcd412e-a1f0-40f2-8f2c-c466ba3027b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0fecfb-1a5f-4c0d-bcde-66f6033db6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f714d7e-b258-4b94-9cb5-d04812e8178e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461c3023-371c-4a61-987e-143ead18efd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e3968a-8fdb-4325-8a46-63c9ca83860b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "113e0252-ab36-4ef7-93b5-9500d1d763a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37c9faa-44f6-4be5-b974-975fe2878cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1876bbe9-0671-4e23-96c6-afafafa85198",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e5dc8c-1f3b-44d7-8287-6723f3f6ce42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06bd3dd2-0f2e-488a-8308-c7d817dc6e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b3d539-38f4-45e7-bee9-af79632a3e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea257bc-efbe-406c-a3da-9a22bd74c1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d38407-e537-430b-858e-e1c3958261e8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de95830-f2d6-435e-9ea5-80d509aa2d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f0b50b-f392-46dc-a4f9-6db6cae248d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd5fce3-7d2c-4a55-8cb7-533c3f57f786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960ec724-3e09-4fed-82ba-4780931cdd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7b9e7a-3fa0-4141-875a-f716db27d893",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069836c9-04a2-4843-a45f-5df96bd41f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615098ad-5e2e-41a8-a078-b97e67ff99f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec67937e-426a-4d37-b99c-7e614a86b54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef54640b-08ba-40a2-87de-1abe4cdea268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaac888a-f9f3-4d25-8da7-ae7bdd9bb2ef",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3ebfd2-649d-4552-98e8-d5b3adac3e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17684033-92d0-467e-9670-2bafd83f4c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b78afdd-a60f-4b6c-8461-e496b00a996a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ccfcf4d-c007-4666-a974-dcdef9a1dbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72d252b-766c-4167-b08b-08fda522d273",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe6428c-b330-4bb7-8f8c-08125cdc1eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0138ae64-184a-4a13-bc38-fede0e9bf4cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e6e80f-99d1-4509-91e4-9e7892724fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52fb7f1-dbc2-462a-b370-e682eb6178b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b280ba27-2fa2-4247-aab9-a8378d3f1da4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604517f0-1c84-44c6-b183-c7f9c5cfa485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1cd3e07-bcd3-49cc-b6e4-7d17fc660520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c03505d-0886-4e50-aeb3-598d62482710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87beec73-c449-4143-8a6f-02a1b477ea25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a42008f-fcc3-4396-8655-646350334459",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102b8e57-f8c7-4803-b49e-b4b4d1fef453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569672a0-5d34-4da4-9e82-51f0d6e74810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb95bbe-5982-4384-a83a-9a9b1a180e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6f1141-36ef-4113-a930-ec495488d285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12bbf94b-29ae-488a-a4e6-936bf8470bbf",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9357a4-f877-4437-9e6d-a44fbfdd9f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08eef1c-ef98-4bdc-8054-60f7f1b050a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af7cef2-42e6-4a06-8318-b1851985a037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b9ddc15-1b9a-4202-b9c6-039fbdb401aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f91673-5286-46c2-bd7b-188b57123953",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46364adf-ef8d-4ff1-877c-160d1a0cdde6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea54c7f-2c9c-41a3-8d5c-85bb69fad34d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e643ddae-0816-4ff5-bf11-98d3c52d898b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5bdad3-3929-4e27-9122-2b579a36927e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ba459c-edca-4996-b57a-34649bdad65a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3249326e-83d9-42ac-8bcd-f0ce80427136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e382eea9-79a2-4ece-9721-fdd2029d6c31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e55b27d-1e82-40bf-ac06-aa3ee87cc747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d9d964-dc0f-4500-a182-1f2086157e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6209bd-d422-48ea-9abf-43a4e4b9238f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d29e9cb-b025-40a8-9cb0-63a52639ed91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18fa4285-f494-48be-be26-eaa25c98e8a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4286e8-ed68-4d82-bb0c-f9556c5bc651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6287711b-e47c-42a9-940d-654af3b0be18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a5f96c-9547-4cca-bafc-a8491765da6f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640450ee-08b2-4669-bf43-c886d832646c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e618bf51-966a-404a-82fe-7f3f7d13d043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d658329-8350-488b-9723-4148e8af39f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2d79be-b71a-41b1-8ea5-76669e8327d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d7598a-b5d0-4beb-8d0f-4a917058e6c7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aae50d6-1cad-4581-b4c1-e0e0f2d024fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083519aa-f37d-49aa-ba88-2049db1c8a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2da175-9ec6-4b31-9c24-aecc7ff0b8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f535bf-cdea-493c-b490-202ad4ab030c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d94329-7601-4f18-ab56-babb8be0e1c9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2da2d7-6939-491b-87a8-eef6feef2896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d030b9-92bb-4b50-b344-d532c32eb58f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f56aeb6-393d-45e8-88c8-db40ee62d894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe127c1-2838-4a51-bdf3-9235508be3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7169be-2b64-4927-acce-7ea7ee0dea03",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba62641-5461-4624-b1d0-2b4449341cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc3a68f-f1ef-4d1e-b2d0-1ce2162181b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3933c00-0ac5-4aee-ae4b-073012460a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515b0c85-706a-4b53-8b8f-a13ea3bd8f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7dbc6d-e470-47c9-8198-ab9750e29997",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83c2092-5aa0-4198-ab94-0ff9a88f3961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd23ae5a-9d1c-447c-b138-1cf7c272b30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413335e9-da97-4e9d-a486-3f6660c2eca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6177816-b2f1-4678-88e1-b0a31f69b455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbb0d66-70a2-4383-bdbe-889ad156047d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ccabc2-035b-4f21-9e05-1c5fa8f0fe55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1815926c-12bd-436c-bd8f-9fddc0f918ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754c2a78-ea9c-4b3c-83ff-2af5c5873ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b5acc0-040d-48bc-b39b-8c5fb5f034b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea48eb9e-5e74-42f6-b442-ce2d532a49c4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125aca5c-b227-4c96-9a41-14485c0dd08f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03556f1-7ddc-4adf-a5ae-8ced13072247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f24f6b-b61f-4d79-89a5-e30555983fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084cc04b-3b84-4b89-95e7-d97957f7ea97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4ab80a-b755-48ea-8225-50d080fb0982",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e976f709-76f1-481b-8ba1-5c6f610294f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da1a50d-2d7d-4560-a242-d4c606b43b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c96f91-fce5-4218-bcd8-bb0d01219661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e652f8b6-c996-4efd-a602-3b0e3628dd2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09182716-73a1-4630-93a5-10c74e8a3487",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2229459-009f-4c98-95a9-75352007f293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d79aae5-600a-425d-9621-f1ea7c139740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ec927f-00a7-45fc-9799-5824d651fe94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4240a5-c043-4bf2-a44c-26b561afd90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d74386-52eb-4035-92d3-909b19c9fbb5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5c8e7a-8013-4bf2-9ae9-1ee316592d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b36b4b-5039-4cdd-a611-c95563d4ff90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfcd4fd-e0ff-4eaf-935b-bea81d371354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02b5d81-6e8c-4fa4-911e-7d0d6fd68aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3ac02e-d407-4ada-8818-05d21f85f6db",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab94a80e-75ea-4754-8618-0265432dcd54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bdcf45f-65d7-4a8b-b7ee-08ae7cbdf162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de240674-5855-40bb-8146-d399ac4ce537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25edd029-ec70-47f5-9697-4060c5adcf2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413343db-f254-422b-ba1b-cfb23122a015",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92481967-4b98-42a6-bd00-c8cbc9e150a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9a71849-d3ef-44d8-b8f4-684547362b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7dff81-5592-4717-b16f-715bf63f25c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c29e3b2-2de7-41a0-8bfa-5cc3e435c5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bed1ab2-f90b-4a33-a747-c23e732fdd40",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5c1199-4492-4f78-867c-75d51878473e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3786a625-81e8-4e44-ac3f-4adc17680311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8f1acf-2a34-4a65-9cf6-1976cbb902de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625dc780-1596-499b-9dc7-bade7d645a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a65e7a-3bfc-4f47-ae30-d234496a40a1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8e1acb-1334-49b8-99ff-f51ff38b8e11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ccaf0ab-4f7b-4a1a-833a-da6921c41b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b474ca-f931-4777-9b9a-707c66a6b7fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31170e48-46e4-47a4-ac21-623888b2d418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e1e862-b1d2-408e-846d-8e3b16d31940",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d7559a-18a6-4ec7-90b4-51698b6c1331",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33eab7ce-f6b9-46e2-99e3-c23d9789baa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5ac46f-7e06-4268-8986-998f6bbb1faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db10a2c7-43c6-4595-bbab-d60d699e6100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e38b034-ff18-4264-946f-0562a931bf5b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c87cac-87a9-4bb8-806a-a1687c4b66af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9fef690-3099-41c5-8b38-16387aaeec49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8df109-211c-4573-bef7-c2f2b8ce62de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88410591-1f0a-4941-9068-e388b492d5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8069658-c3bc-47a8-b5b1-3f2fcc9f8dd6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab3cd0b-bc8f-423c-96fb-3b0d50860eeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82f96669-951e-4e11-a33c-6cef7a44a240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ef0fe6-8362-409a-a313-4cb3b6883332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b86886b-0eb1-4cb2-8edf-a67bae8ef46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fd9646-3b3d-45ce-97e1-a8f91ebf5ed1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13842aef-944a-432d-b348-05dd06dd2726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b78fc61-b0e5-46a2-99e4-7042b98bebd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c760fa-c48c-4d7c-8304-bde16bff139a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f003a415-add4-418f-90a0-c626f8036ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd7ab1d-b2b3-47bf-beae-9e92fe3431fc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7afead-e3d6-4d9c-b094-9b11432e38c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44741112-3f0c-4374-8ab9-f1def098e8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3462b105-120b-4164-9a4b-434b5d5fb7bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c309d7-91c4-4982-be4a-bb251d638ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224b88f0-bde5-4836-9d7b-e0bd665aab8f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d458b4f7-c995-49a5-9271-803441adc7fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2add74f6-0cb0-4af0-901e-0b80e7688299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbc0128-1593-4873-8ba2-d520caddb2bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d4f42a-da5e-4970-bf9b-eb87118a9827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0363d9bd-323c-45f0-a6aa-62914b95b42d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b05eceb-95de-49fb-a4ee-b74ebe33978a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd98e1ad-4516-451a-a1f7-583cb2b1ba5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23135741-e9c5-4447-82b0-871428507dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286c2b10-9a82-4789-a3ed-120f5f2e6ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d4a2ff-d7b5-4db9-ad96-f1cca482e412",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6dd5718-9377-46d4-8e2e-e4d6c0abf1b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f68294a7-e717-4a5a-a8a6-0dd98b04aba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fcc28f-f3b6-4210-9d0f-18cd1a3af9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e57284c-ae84-41c4-a333-295996c0d6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ba5907-35ed-4513-981f-3e8461a9ee61",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155cc182-291b-4daa-9f70-7934f5d304d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a171440-064e-41d0-adb2-5658652c323a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f6d88f-c5e8-4292-b05e-2cd95de6f93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa16685-406c-474a-8b59-4b43eb1e75dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2bfd3e-8637-4586-98cc-80298d7a4aec",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e620f586-1135-4802-bff6-8afb6f8c5298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b7cbbf5-0923-4030-bd77-6d6955f1cca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4198c4-83fd-42fa-ac24-b6ccd4c18778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68953f67-26cd-44b0-908f-63cdd0975043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2721b730-30d9-48ea-9a54-18e26c770fd2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36445ef3-8c23-4ebe-a4f7-36ae4f1a5b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ba5685e-6334-4246-b0b8-dc7d8e3c0aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12456e22-9478-4092-8b43-e2b1d70a6b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9faa40c5-99ce-42a4-b125-c7a9ccaec60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56d3403-e01a-4bcf-8779-8df8b48233a8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59e80d3-b5c2-4db8-87b0-37db7e30ec5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e3a16ef-6d37-43a6-96fe-e0bc6e79d05a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d62a975-17d9-411a-952b-8070a888530f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c9527b-e766-4e7e-9db4-dcadf5717c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671479c5-51b5-4239-a459-7615866a923a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904fd743-8218-4725-b984-0f99ff9bc225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f001251-675b-4b00-8fa7-4a01d019a517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ac4f70-0bdb-48b2-93dc-72ef4c6e40b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21906d8-5af8-49e7-af2f-6f58a3551ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de765fe-8786-48f8-958e-8eecbdff34a2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff215449-6688-4e00-a507-bd84b36736db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc2d5d97-40c1-443e-a8f7-af9a6e29f783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24f7924-d2a7-44fd-bf52-51dc13d8d787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a35907d-40f1-4493-8235-e3a5e7b42aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be120395-eb07-4508-9d9f-a8c5e90b695d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e06b5d2-db6e-4fe2-a480-89359f129a19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dec0b56e-9d42-46b7-8afd-897a50ac4dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fb4c26-e01f-4504-a0e7-94f25de3ebf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436dda9a-b19f-4082-a9ef-5eb7ee3ab260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71176229-ad0c-462c-bafb-fb4fc7e40a7f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0785a8e-cc14-454b-a4c0-5bfde5c262c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9485c7f4-ded6-4753-8f05-85bfb771d7e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbc6d19-83c3-4852-9bd1-4fd905a6e973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e44934-ec7f-41d2-bf81-cbddd4153a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e506df-5224-4d52-9ac9-34b13e4a2fb6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54b4cc2-4d36-405b-bab7-0d0c8f3e478c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12ff02ea-a2c7-44c7-a9d2-e3f71b325c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "552fb149-ed0d-4b08-a3f2-af6901c1b57e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a362b7-8844-4a2b-a326-6a22928701e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63cfd22-10c8-4367-8f7f-072f4f8358b9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062bb921-99c5-4c1b-a7aa-937872ce5785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42a02cd1-db7e-49d7-863c-f5619da206d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94542d1-6279-4250-99bf-171ddd104329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8308e8d3-3560-4d25-b514-88d94ea511d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359cc593-d61b-4942-89b1-10986f7ecae5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7dab12-8e73-4208-961e-b7c6397be6d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e6073a7-fa03-42c1-9547-42f86c10a349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e2b7c6-ba57-4252-ba8c-df44cbf414cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c369cf-3b31-4357-ab3a-7076d6682913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33cb10e-ffc7-4759-84c1-f2a7f6308ec5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29396f6e-88cb-486b-b7f3-4d61dab50d39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "160e2f6a-ef1d-40f7-a68f-68962a82d427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ff7343-f41f-4423-bc8c-254891fb6329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54bfe90e-b986-478d-9e35-03af3f7d47b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0d3182-a87d-4445-95f2-eb0c200c1eea",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbd7ec4-35dc-462f-95ba-d3075c063772",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86bcf354-d7e8-43e5-a68d-c2e6e9892828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f645681-7b84-4f42-b150-04757e11207f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9766b891-7984-4918-8815-f6ed876a273b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02b36a2-2160-4e8c-bc68-48d313efa078",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fafc64-5652-4010-9200-1c1e611774f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd5b3633-147e-4f95-a836-bd08a3dd4776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80e0fc7-0852-4575-bbdf-fcb2c206c192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831ccbca-54a6-44f7-84eb-942a938b8cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58bb659-1968-4a02-85c0-de393ec07296",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e83530-3426-4e03-a4d7-f827e424e9b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e250a34-e103-45a5-ab67-3cdb7a3fb104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074fc6ac-5100-4a98-97c4-1a3be3d05e28",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0693fa31-9e3a-4a34-843c-628e963dc244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc85d322-e1f8-44ac-9b0b-8bc9e9967d32",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddfe056-6dfa-48b8-93ba-12564aedbe5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d120e125-56c6-4141-ac63-82b8f166e172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f713d1c1-266c-4348-a2be-dac60ebd2dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3285070-518d-4aaa-a365-6174e2af4bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fe1b01-5561-4722-9ed5-b7e5e9fbb2c1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fc60c1-1614-40e9-a063-2c8553a2c10b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6151bfa-8c2d-4e42-834a-85e2b7d45489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607930b5-40bf-4794-99f5-e424694fc4e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746c6653-6663-4e7c-a87c-ddcfa053400f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e7b5c4-3a9b-4514-b599-f0428e269608",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17af532-7d9e-4455-aea5-1d3cf69bdf98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "948ade11-5020-4737-823e-995acf245068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2dda8f-a11d-4be8-a747-cd6a6e961d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c685ef-ac8e-4b6b-a03f-fb84dc2a2181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56697593-959c-490c-aa03-feabda79a492",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2581b6-e4a2-4165-918b-5b55c963a66c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff09ee5b-41e6-48b1-a886-ff448ef374f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfbe823-2a57-4945-968c-a2c3c3ca0d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc9ebcf9-8c2d-43bb-b9b9-2829d4494a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8daab5-5236-456f-8d86-dd440011fe22",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c45929-7a96-45e3-85a4-a2bc15e85c8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8b637b2-43a1-43ad-b1ff-187a91f7d0ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7587c608-0bac-4020-957e-4c067e413619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca80c5cc-67b7-4a79-acda-b29bd10f282e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65826588-cc42-4913-9265-32959a7b9094",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8d608d-e07a-4421-a5e2-e82dcd98ec47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "737cf46a-4735-41a0-a7b9-45fb41d80f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988b1288-4252-48ea-a34e-196a6cde80e2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2afc3df-2501-4f55-a766-6d2b8f4b84fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb69a09-d1a3-460b-9945-6b6f8cccdc17",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8418fb97-01f2-4af6-8992-cf433fd16bcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0843cdbb-5a47-492a-a4a6-7b219aca1ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35460392-5dd9-4755-931d-ee9650b27b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36fce980-7b4d-4cd1-9c9a-05c28b5944ba"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6a06ad7-d25f-4524-bf89-bb2dbeb6426b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d2ba4b4-1888-493c-814c-dfe0b957f91c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "827c8b1c-1b1c-4ef4-8877-447272bca6b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d3297cd-c9c4-42e4-9294-1623e45a495c"
                    }
                  }
                ]
              },
              {
                "id": "2a130bb5-59ae-4cd2-b11d-90615939a4b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3d3af92e-5645-4d37-b526-dd5b97990d49",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4e102e-1b28-41b2-b0e9-3b7584a9472c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7d77fc28-9d7b-451a-b2d6-0d42cf42618d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06dafaeb-b2bc-4212-8c42-84099e345421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3dc138c9-5ea1-41fd-b53a-dfe4362fb21a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6400ba80-27d4-4787-9f54-162105c4081c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca1ae78f-c1e4-4dd4-8187-3653b67919f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bcfda4c-123a-41a4-b91a-38333e7ae4cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e715e63-822b-4f52-96e2-38d8f91cfd9b"
                    }
                  }
                ]
              },
              {
                "id": "2e446257-f0b6-402b-ace8-35b4295a760e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2999278d-e916-40f7-8219-3089a9986be0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2e8736-666c-4a94-9d82-5dd515e64403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "faa30cb0-b906-4f30-92b8-a9b4ff3efac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1780a572-1e60-42ce-917b-40cad8fdfd28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d175ad16-0620-40a7-b66a-e8fd30189992"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b2ee4275-93d4-42b8-8b5d-037952087896",
            "name": "Positive Testing",
            "item": [
              {
                "id": "87e3a7b9-0fc1-4cba-8445-2dcfa4a34550",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7017a71e-63bd-471f-b813-737a78bca469",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "19637951-5ee2-4bc2-858f-00f2177db9d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c810652-9e9d-42cf-8196-0dcb8d0516cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29ac57d6-6bd9-41ba-b5c4-f1ad1212839d"
                    }
                  }
                ]
              },
              {
                "id": "c9d83356-1a44-436b-9426-680bc48140b3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27624b52-0820-461b-8474-1e5e24a5d574",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b43aab25-7bc9-4c5b-9ccb-45b7a5a3e92a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36469d97-5063-48f6-b948-43239d8fecde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db07cde9-4fcc-46da-8d93-f868a0e5db5c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c95094b0-4705-4aac-affd-ed64740dd3a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6312c2e8-788f-4b24-bb34-044ed40d236c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d8c3a3b-f2d8-4360-9f0c-c845249dfc65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0cd2f662-3452-4321-8be0-7f248b098f82"
            }
          }
        ]
      },
      {
        "id": "0ad2fe7a-4ee0-4878-82b6-61fc8b451d9e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5cd2be08-ec2d-4668-acfa-0b4c542b94c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cdbd5df0-693f-451c-a471-bc38f535c9d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b82d10d5-2066-4322-bade-bb48fc3c769c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a662b9b2-6808-4e35-afa8-8f66915652de",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "72caf699-a452-4365-add5-b5a5a4758661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bfbcd3-ce4e-4bd2-b971-c3f391f093fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b22b6b0d-8b9b-4bfa-a6a4-306988576dd1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8847c7fa-a1ab-4d5b-a11d-e69bc5d22cfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d942ac0f-321d-40af-b6c3-7ea265b1ffa9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5521a08-a19f-470a-9b44-86079f5603d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bbdf096-f18e-4122-bd4d-9ce75761a076"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78fa923d-a24b-4259-88b4-660f0113fe14",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "03f7746e-495e-46da-aabc-030876b4a296"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e4195ac-9289-4e21-be55-0efe00717c49",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb2e898d-8ff5-4f92-86d5-69bd1e160a7f"
            }
          }
        ]
      },
      {
        "id": "086ee31d-76c4-4551-89e4-5536f8ef79fa",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "23252118-7759-47d3-acb5-55b44a42fb52",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8abed3c8-d73d-46bb-90c9-6489bcaf71af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "beed698b-e485-42e0-90fc-3161688ca750",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9e9f34-7061-4058-b674-244c5193b34b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "897dd043-ab57-49f4-b48d-86bfed7b57c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd3df59-128a-4e91-925e-d027c2c00948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b612f16f-39ec-4314-a699-49063135359e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a07f5d9-5ab3-470b-80f8-80b855c02d97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e85e9c6-e851-4c35-9829-0f974030d91b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4862430-142d-4949-8d47-aa00a98048b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d1c75d1-0e31-4c6f-acb8-260cc1759047"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a74b69b-d0da-4deb-a173-2a5d0eede238",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "764fa81d-7cad-4948-b916-06a9d7e5a216"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa2a9727-c4d4-449e-a2a2-136530331043",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2080e9d4-0d9d-4da3-a5c2-7ff36cd6c05b"
            }
          }
        ]
      },
      {
        "id": "1a6a0045-547c-4df8-a126-4d59bc3130ed",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "276bf597-864e-4e48-b7c0-4506f923e053",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5570c414-8f08-4f4f-8197-954c529a2ee9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10415135-839b-4c20-b69e-a3be3488cb98",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c22d6a-41e1-43e0-b5ba-24fadafcf874",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d47765c-8ddc-449b-9d7e-7da9fc0a322a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f1a173-4515-42a5-9df6-35502b5f5000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bfbe805-8b84-4fe1-adf7-c3d6884828b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f6c4924-bd2e-4fca-a6ce-9ee80eab88cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08fe275e-80a1-46d8-a36e-38aa3b00e45a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64fa7927-f24e-4c48-acb2-9ab71382b397",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2972abd-7c49-4c4c-ba54-426942862267"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00d5bb06-9991-4997-b276-97c58cfb03b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4d9efd38-99d2-4ff0-8e57-0ef6cf4b4a12"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c196f74-dfc9-4c50-bca0-fd0266e0daab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32e94f61-fbe4-494a-a250-a26e1db4998a"
            }
          }
        ]
      },
      {
        "id": "ec36763c-6bf8-4ca4-897d-2e7b7632e635",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1222533-c031-45b1-b034-521aff0f5b22",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0412888-8c0c-436e-b189-201c9779bcbc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3770e76e-2700-44a2-ad2f-e94c98d64a01",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ddac158-64a6-4687-9e68-89e6bc667271",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5308e58b-018a-4ac5-b4c3-6c08291d300e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 92.44014084507049,
      "responseMin": 6,
      "responseMax": 4461,
      "responseSd": 378.45625076199383,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696984400654,
      "completed": 1696984439115
    },
    "executions": [
      {
        "id": "058f588c-a390-4a71-b935-a25dc24d6495",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "925c7d37-511c-4104-9dd3-e89bc08470fb",
          "httpRequestId": "28ed33b1-632c-4c2d-abb8-8d5511104e1e"
        },
        "item": {
          "id": "058f588c-a390-4a71-b935-a25dc24d6495",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "eb1c16f3-0e56-42a6-a4f6-f9e011a81eb3",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "fe60594a-b2c9-45b3-bf97-22fd94f42aed",
        "cursor": {
          "ref": "c36b9e76-88e8-415d-af9a-883cf28a88f4",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c9d4fd5f-985e-4113-9676-a2ed85f0b4bc"
        },
        "item": {
          "id": "fe60594a-b2c9-45b3-bf97-22fd94f42aed",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "83d1cae0-111d-4f58-bd95-442957490099",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "000f12fa-4bf3-4f19-b74f-24f3d2e7577b",
        "cursor": {
          "ref": "46c2b584-4fb2-4307-b9f8-74e0b971d336",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fb56dc49-a88d-4cda-9c14-36147aaf1e9e"
        },
        "item": {
          "id": "000f12fa-4bf3-4f19-b74f-24f3d2e7577b",
          "name": "did_json"
        },
        "response": {
          "id": "a70bb1d3-a452-4422-8203-8ef32cccce89",
          "status": "OK",
          "code": 200,
          "responseTime": 314,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13838935-a169-4d76-91eb-30686d81c71a",
        "cursor": {
          "ref": "26ef0327-3abc-4044-ae43-396d2022ed2d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4623d513-1e89-4b22-b75d-7b48ce8f0b5f"
        },
        "item": {
          "id": "13838935-a169-4d76-91eb-30686d81c71a",
          "name": "did:invalid"
        },
        "response": {
          "id": "fcaf50db-1da9-4b88-8e8e-43457bba0d1b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 550,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13838935-a169-4d76-91eb-30686d81c71a",
        "cursor": {
          "ref": "26ef0327-3abc-4044-ae43-396d2022ed2d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4623d513-1e89-4b22-b75d-7b48ce8f0b5f"
        },
        "item": {
          "id": "13838935-a169-4d76-91eb-30686d81c71a",
          "name": "did:invalid"
        },
        "response": {
          "id": "fcaf50db-1da9-4b88-8e8e-43457bba0d1b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 550,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc62fcb2-b933-4133-bfe1-b71b1de5930b",
        "cursor": {
          "ref": "61372412-726c-4b8e-a8ec-081204ce5098",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dd13b39c-9ef8-47ac-b283-55ac389ff9cf"
        },
        "item": {
          "id": "fc62fcb2-b933-4133-bfe1-b71b1de5930b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0f64409d-cbee-455e-80d9-b918b12527b1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0b9d92-af6e-4497-b315-b62b8ec938f9",
        "cursor": {
          "ref": "d55cd9e1-e887-4fa6-bbc9-094fcd6ba688",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "dda2f4b0-da63-4f89-a245-d33d61e9b908"
        },
        "item": {
          "id": "6e0b9d92-af6e-4497-b315-b62b8ec938f9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0b45639b-b2c3-454a-b4d2-0c95298eee63",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff06798-6176-4ebb-8458-c458ac3a6781",
        "cursor": {
          "ref": "9a17b993-b550-4242-a7e6-d2b67c5df596",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c9c36b43-3288-486f-9d3d-1f84f3fae24b"
        },
        "item": {
          "id": "4ff06798-6176-4ebb-8458-c458ac3a6781",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7f5c3db6-0e75-4450-8ca1-7f12039852b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e324959f-b33b-494c-8769-6070faeee8c9",
        "cursor": {
          "ref": "4b6b805f-c23f-4de9-ac94-4170049cfcc6",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ebb5c270-e460-42fb-80a0-76cff7242bda"
        },
        "item": {
          "id": "e324959f-b33b-494c-8769-6070faeee8c9",
          "name": "identifiers"
        },
        "response": {
          "id": "f901bf71-3b2d-415b-a3cd-4d1d5e6db29a",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd22c9a3-f2f1-4f47-97ce-43c5e441e17c",
        "cursor": {
          "ref": "00b13fd1-8024-4b5d-8cab-e0afe81d2273",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "28f24e08-94b0-4535-8ea5-bc6c2c20cd51"
        },
        "item": {
          "id": "cd22c9a3-f2f1-4f47-97ce-43c5e441e17c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3d0dcc5c-bbec-468b-a806-235ff75d25ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f23cd1-c1ff-4c3a-95e5-5da38b28f5a6",
        "cursor": {
          "ref": "6fa181fd-1675-40c2-bb1c-cf303d2574db",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "29cd97a2-30bb-49e5-b0a8-e56927795063"
        },
        "item": {
          "id": "27f23cd1-c1ff-4c3a-95e5-5da38b28f5a6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "71a514cb-aab3-4a36-86db-51e1bf1c6c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ca253f-d328-44c4-a429-add5b756b348",
        "cursor": {
          "ref": "991108d1-03cc-4665-941a-d8644f8562e2",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0efb2132-f30c-4a97-8bf9-cbfda821d8ec"
        },
        "item": {
          "id": "f3ca253f-d328-44c4-a429-add5b756b348",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "118e27e4-cb90-4ec4-8caa-1e082f637f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a890d512-9a30-47da-8061-16868471349a",
        "cursor": {
          "ref": "99e9e06b-adcf-46af-ac47-1757c7d0e5c9",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4cebae94-3443-4087-8723-709af87344c5"
        },
        "item": {
          "id": "a890d512-9a30-47da-8061-16868471349a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8584df00-2c51-4e6f-bc54-ea6f73abe25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684f422b-dbab-4e9d-b060-426f117ef460",
        "cursor": {
          "ref": "1a0edd6a-d4df-408e-8b91-74cf08fd6c2a",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "125c95ba-b214-483e-a58c-fabe094d4c1b"
        },
        "item": {
          "id": "684f422b-dbab-4e9d-b060-426f117ef460",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "011123c9-f120-4be5-a3ff-89dfc3191e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991290f9-c71a-4d60-b1bb-191fb14e2325",
        "cursor": {
          "ref": "295b67ee-81f7-4656-81a6-dcdcdbfeaf26",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a911ed4f-0689-4195-a7f4-8b910726c567"
        },
        "item": {
          "id": "991290f9-c71a-4d60-b1bb-191fb14e2325",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5fc38fe2-b887-49a6-a619-20ded59e9827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cb90a4-0050-421f-9fb9-6f37ad5c233f",
        "cursor": {
          "ref": "b0cf4ff3-c4db-4c0d-b5d0-cc04aa99601d",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "521a7729-837f-4d09-bc24-4d3397006d05"
        },
        "item": {
          "id": "81cb90a4-0050-421f-9fb9-6f37ad5c233f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "76eaa975-0350-4169-b75d-4f566980ac1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297bb998-8b11-4d37-9f8e-ad26f171727c",
        "cursor": {
          "ref": "5fb9de8a-4874-432a-91b8-90724b2980bd",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "11a05d3e-1772-4764-9d90-4cac4f5514ca"
        },
        "item": {
          "id": "297bb998-8b11-4d37-9f8e-ad26f171727c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a4732137-e8d8-4a8f-b2c9-ed0dc9b2f0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63508aac-318d-4447-9681-1f30bbeee4a4",
        "cursor": {
          "ref": "5ed85c75-6c9e-4635-92b5-e935780eb7cf",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "220f7fc0-5957-4505-9187-13c339f278c6"
        },
        "item": {
          "id": "63508aac-318d-4447-9681-1f30bbeee4a4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0325d156-6556-4a1e-9185-bacb63cca838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acf2c17-38e6-494d-8706-55264189c898",
        "cursor": {
          "ref": "3d09c890-232b-4c32-b72a-aadbeb8d8632",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f1a0dfe2-d878-4e19-a34b-c27c036bccbf"
        },
        "item": {
          "id": "8acf2c17-38e6-494d-8706-55264189c898",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "96a7fdc2-8d34-4960-811c-8b56aed7b35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b98e9e1-a167-4c6b-a683-86754245b5e5",
        "cursor": {
          "ref": "7bb5e977-6448-46d8-ba45-b4b43162e796",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "55d484a3-3441-4121-bdb5-d1a3dc6bcfa3"
        },
        "item": {
          "id": "6b98e9e1-a167-4c6b-a683-86754245b5e5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a913cb96-bcd0-4c73-af9d-beb3448ac42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0f786d-e891-4072-81e6-8371dba0257a",
        "cursor": {
          "ref": "7989bfda-d4d9-488b-bc12-59e528725752",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b5670aec-5927-4279-a96d-6823df67ed77"
        },
        "item": {
          "id": "ec0f786d-e891-4072-81e6-8371dba0257a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fc49dfca-0d38-4566-9c0e-d868e21cf9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67216a8-9349-4068-8cc1-4d9a3b0a542f",
        "cursor": {
          "ref": "aa41de1f-4357-4a59-8d93-474054eb6366",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "85a4b349-d2fe-4824-8683-a9d8945ff3dd"
        },
        "item": {
          "id": "a67216a8-9349-4068-8cc1-4d9a3b0a542f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a3aca612-d5cf-4ffe-84c4-819cb5eb9644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a656a2-1734-47ef-b807-b2579f97b720",
        "cursor": {
          "ref": "03be5a9e-8151-4bc0-ad47-cd8d900a7b04",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e4af4de7-2082-4cab-b15f-a746901da981"
        },
        "item": {
          "id": "95a656a2-1734-47ef-b807-b2579f97b720",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7db0d0b4-4f94-4f34-8faa-bf4681792343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26467a02-1ea4-4b0f-affe-ee58f75576ab",
        "cursor": {
          "ref": "506d7c0a-7158-4c67-9634-e0d37ee8d099",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "20aec148-4395-4cf3-ad4a-a41007de78b2"
        },
        "item": {
          "id": "26467a02-1ea4-4b0f-affe-ee58f75576ab",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "852d9b9e-3512-44d0-9215-63e54f465e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5730d0-12b0-4c30-a9b3-3a55791842cf",
        "cursor": {
          "ref": "ab71e2fe-9eaa-49cd-be27-c139bd9fd09f",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "65e579bf-d330-4e53-ac70-d67e9f80b21e"
        },
        "item": {
          "id": "2f5730d0-12b0-4c30-a9b3-3a55791842cf",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "209df6e9-8c67-4084-baa7-87122871e80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308823d4-fd10-4ac1-b486-4bbafb644ca5",
        "cursor": {
          "ref": "2d89a815-9a23-499b-83f2-848f8cc32fe8",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8690bfa8-ff69-4e6c-a3f7-a03fb1acd5cb"
        },
        "item": {
          "id": "308823d4-fd10-4ac1-b486-4bbafb644ca5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "642f14b4-3778-456d-a182-a13346d82638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5482ca4e-b6c1-4d2a-99df-9267984a6964",
        "cursor": {
          "ref": "ad21d4f3-3513-46fd-96fd-67332f6296ac",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "94392bed-4e37-454e-baf4-9b2bf09a64ef"
        },
        "item": {
          "id": "5482ca4e-b6c1-4d2a-99df-9267984a6964",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e5163f63-1e83-41b7-8fc7-299aeac60fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdab3c41-a470-4d9c-95f7-9ca0fa04ce1d",
        "cursor": {
          "ref": "f7677f1c-dc37-47e2-874b-f497d5c42cb7",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9b1530d9-8ce9-4c6f-926e-b5663f97ce82"
        },
        "item": {
          "id": "bdab3c41-a470-4d9c-95f7-9ca0fa04ce1d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b221f7fe-8a80-4d48-803e-0f4f51a5efdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cb1a0d-a618-4db3-9ec7-9ad444cf3701",
        "cursor": {
          "ref": "5854b97f-0701-425e-a5be-b4033087c569",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8e908dc2-30fe-422d-98de-beee504a60cd"
        },
        "item": {
          "id": "19cb1a0d-a618-4db3-9ec7-9ad444cf3701",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "939bc4f3-5bc9-4e25-becd-652a3af801cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c48c1b-0f1f-4817-98d3-05a82cdfeb94",
        "cursor": {
          "ref": "33cf84fb-a823-4472-b928-7985f95ed885",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f6d8861a-09da-40ab-8550-b4631e006ee2"
        },
        "item": {
          "id": "f2c48c1b-0f1f-4817-98d3-05a82cdfeb94",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "679613af-1827-4659-9082-c4ebb42b1379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83dc35f1-0e33-4a8c-9dac-bec8359474b4",
        "cursor": {
          "ref": "a0204e26-c4fc-4830-a966-c40df8d05124",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cd245d1a-2ed6-4df8-8399-29745d12afab"
        },
        "item": {
          "id": "83dc35f1-0e33-4a8c-9dac-bec8359474b4",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "540b7f90-bc23-4a5a-a841-35dd0b6aa0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d8027a-d5a9-4b35-a965-847b09bb2a54",
        "cursor": {
          "ref": "c0d8f1d6-2462-4706-93f2-d07602639239",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a3a27d18-dfbc-4397-8d72-148890d758f6"
        },
        "item": {
          "id": "c3d8027a-d5a9-4b35-a965-847b09bb2a54",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "66387c42-4022-46bc-a987-c5459a17001c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4624def5-c492-4d73-919c-def4ddb39b4f",
        "cursor": {
          "ref": "6731f8ec-4aac-44d1-b5ac-1446e21f7852",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d0bdfe9d-54b2-446b-8d16-83b043344e58"
        },
        "item": {
          "id": "4624def5-c492-4d73-919c-def4ddb39b4f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "381f6194-1f4c-42fe-9c99-de2f26705744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ef7ba3-2812-4643-be01-6a14d2e50184",
        "cursor": {
          "ref": "926c6136-97b2-416d-9260-7be64bc00dac",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "52d421fd-3bf8-498d-9df4-e4d7d575278e"
        },
        "item": {
          "id": "48ef7ba3-2812-4643-be01-6a14d2e50184",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "947f72cf-0395-4cce-acf8-4374d03cd2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2229c532-77d7-4b3c-95c6-5d64b315502d",
        "cursor": {
          "ref": "abc2361b-b6f1-47f5-a6ed-a1b9f16fedb0",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5033e42b-0b68-48e1-839d-7f0a190f8a97"
        },
        "item": {
          "id": "2229c532-77d7-4b3c-95c6-5d64b315502d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3fc39b5c-43ae-4096-9bbb-f11446578564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9d92d7-652a-4281-ba03-d67217d389ef",
        "cursor": {
          "ref": "e170c1cd-fda1-4ff3-99a3-a1fb06fe09dc",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "943dc334-ad29-4d14-aeea-d745cf2cca04"
        },
        "item": {
          "id": "2c9d92d7-652a-4281-ba03-d67217d389ef",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "70f7723d-6c33-4756-a110-3358cd76fed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c53235-bb86-402e-a8a2-a58112824d2a",
        "cursor": {
          "ref": "9535460d-b3ee-460f-b072-942fdf5c5c60",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "66023b2f-8dc5-4793-b304-a709994eb7b6"
        },
        "item": {
          "id": "69c53235-bb86-402e-a8a2-a58112824d2a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1df55988-b45e-4d1f-8163-1b2eee1a46f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcca590-395e-439d-9dbb-fa1c75b16f44",
        "cursor": {
          "ref": "8627b391-2f2c-4d68-9154-9cfa05480fec",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9b126349-334f-4190-922e-553a62402b3c"
        },
        "item": {
          "id": "5dcca590-395e-439d-9dbb-fa1c75b16f44",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "edf6c8d1-8198-4368-b662-397c37e8aa49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d335fd06-35f4-424a-91c3-060bb3cc6900",
        "cursor": {
          "ref": "d5da95fa-6625-4a30-b73f-c0600846b896",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "67177cd8-61de-4c08-a393-c3d3a78fcbf3"
        },
        "item": {
          "id": "d335fd06-35f4-424a-91c3-060bb3cc6900",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "42439c1f-42bc-4a2d-aafe-f0b6bf73a3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3682489e-bad9-4e57-a523-ba5abd3ac0ed",
        "cursor": {
          "ref": "39e0a11b-0b1b-4cd6-a934-071644e73b16",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b93c04bf-c237-46c5-a30c-0857cfc550c9"
        },
        "item": {
          "id": "3682489e-bad9-4e57-a523-ba5abd3ac0ed",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fe8673e8-a0be-4ffe-a3b8-35c387bf7485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63190643-a1af-407c-8f43-6b2a31aaab01",
        "cursor": {
          "ref": "ea13a8e2-176f-47c7-9dd4-18321c16f68e",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5d3b59a9-ed7c-435f-a922-f9bba5f71e2c"
        },
        "item": {
          "id": "63190643-a1af-407c-8f43-6b2a31aaab01",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "587d34e7-4c2e-4022-a704-904518777ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06eff82-c172-4a86-a50a-4f6d405d9ee7",
        "cursor": {
          "ref": "5f75dbae-ec31-4dbc-be36-c7085ac5be0c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "806a9b1b-d940-4b6e-81d0-455fdfaaad51"
        },
        "item": {
          "id": "a06eff82-c172-4a86-a50a-4f6d405d9ee7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2243d321-d278-489f-bbf9-e3f7d734c90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92ca0ce-9b26-48bf-9584-b8422456ce01",
        "cursor": {
          "ref": "85993df5-c2f7-4db9-b524-545acc28f93f",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7a84cffb-c5a4-4c62-bbea-64aaf6a87176"
        },
        "item": {
          "id": "d92ca0ce-9b26-48bf-9584-b8422456ce01",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "caa58572-cd9b-4d2f-b9d3-c7d44945a16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e3582f-a99d-41ee-b4d1-6ae1fdd6b648",
        "cursor": {
          "ref": "4c567fe4-7682-49a4-bbef-37937f79912c",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fece95a2-c614-40b8-8564-36f18a76917a"
        },
        "item": {
          "id": "13e3582f-a99d-41ee-b4d1-6ae1fdd6b648",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d280e727-b0d2-451e-9220-c0dac93f413f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23009ae9-e870-42ce-8dcf-3519fafc8dbe",
        "cursor": {
          "ref": "05cdafd2-09df-4776-acd6-9ca7746e2399",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0b2b56fe-2a0a-4c07-a0b4-99396efebe97"
        },
        "item": {
          "id": "23009ae9-e870-42ce-8dcf-3519fafc8dbe",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "14dfc672-2cc0-470a-9680-2a4fa9c66630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f1d3c7-2828-4c83-aa8d-d82ceea80d97",
        "cursor": {
          "ref": "c5c30654-a60f-4e5c-815c-eed7f507cd76",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9ceaee72-4acc-4a9b-88cd-eab332d4a193"
        },
        "item": {
          "id": "d0f1d3c7-2828-4c83-aa8d-d82ceea80d97",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0969d870-9ef5-4912-b55c-e98ab59c89b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06d09d6-1d0b-43cd-a519-f4fdc2c83501",
        "cursor": {
          "ref": "7666b440-3df6-479d-a4a1-84fa15f464b3",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3ff49bc6-b26d-4046-87fc-95d46695e097"
        },
        "item": {
          "id": "f06d09d6-1d0b-43cd-a519-f4fdc2c83501",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e54bd2d7-9c6b-4261-8b8c-53154f934e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1cecaf-8994-46cd-a3a0-c006dbf289bf",
        "cursor": {
          "ref": "d42889dd-7f9e-4cf6-befa-5d26a53d55a5",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ee1c56f8-e251-4c52-8177-eabe70bb3823"
        },
        "item": {
          "id": "ea1cecaf-8994-46cd-a3a0-c006dbf289bf",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5708f339-24bf-4f1b-bcb7-86872fdf31da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d8e859-0186-40c7-8fc6-0c4760f09aaa",
        "cursor": {
          "ref": "1f4ae75c-d918-40b3-9601-7c55c216eb01",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d0451d82-435a-4e97-a0d9-231022decae8"
        },
        "item": {
          "id": "33d8e859-0186-40c7-8fc6-0c4760f09aaa",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8286b8ba-f34d-4fa3-b9c5-91c3e608c94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c99c56-e601-4a04-afa6-7d1a59b17856",
        "cursor": {
          "ref": "f1ae81d1-f80e-40ca-a273-34a1cf2f74c3",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0d4bfe32-42eb-4877-a4e8-b51c7a864949"
        },
        "item": {
          "id": "a3c99c56-e601-4a04-afa6-7d1a59b17856",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cab8d978-0474-4dcc-92a8-9b17fc017216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd9c53e-3707-434c-8b94-a3dd41b52336",
        "cursor": {
          "ref": "a0a1e237-1de0-4872-bbe3-b279ab58f3ed",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8d5b2edf-a8c9-4056-8dca-246a84e4af55"
        },
        "item": {
          "id": "6bd9c53e-3707-434c-8b94-a3dd41b52336",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "daa9f410-b94f-4a93-a19f-8e8281b8118d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3b3113-ea12-4380-aca9-b2e13d9469d4",
        "cursor": {
          "ref": "ba80e392-21cb-4a5d-888f-0d0953b7d356",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ca2b81de-e8fd-4214-9a13-c42677c34029"
        },
        "item": {
          "id": "0d3b3113-ea12-4380-aca9-b2e13d9469d4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4afd0008-1691-4727-b8f3-a9733c025787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31759041-d8f8-4cd7-90f2-2685db1bcc37",
        "cursor": {
          "ref": "2c660615-63a7-415c-bba5-6ae734cfa813",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7583badf-2eb9-4328-9951-99c5de9b244f"
        },
        "item": {
          "id": "31759041-d8f8-4cd7-90f2-2685db1bcc37",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2830dd38-3d5f-459f-a1a8-b70490e26940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a05604-5f1d-4fab-97ac-f468a73a070b",
        "cursor": {
          "ref": "cd86d349-3800-4e6a-908a-ecf4915c7cec",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bae495f9-16c5-45b7-bafa-369e54e5ae8b"
        },
        "item": {
          "id": "79a05604-5f1d-4fab-97ac-f468a73a070b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "19540c39-4135-4700-ba65-b81bf7c7edc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d324983-ac49-4213-8a67-5d3af41fae59",
        "cursor": {
          "ref": "4db8da09-f71a-47a2-aeab-a5d973178bd3",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f3f4ebdb-b881-475f-859e-69cb689fd7d6"
        },
        "item": {
          "id": "9d324983-ac49-4213-8a67-5d3af41fae59",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d233443d-d044-4470-96e9-96af1225ccbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63248a35-fd99-4843-8237-aa83d310a4b2",
        "cursor": {
          "ref": "f5e14287-ccec-42d6-95bd-23991453d78a",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ff89c752-53ae-429e-8fca-24e7f6ad8c08"
        },
        "item": {
          "id": "63248a35-fd99-4843-8237-aa83d310a4b2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f2065a86-396e-4642-90ca-1d581892e384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c14f860-0019-4322-abbd-5f697d581513",
        "cursor": {
          "ref": "ec056e45-8a58-4910-a196-21998d78342a",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "32aa7b07-d8d7-4be4-9049-6c0a6c04f017"
        },
        "item": {
          "id": "4c14f860-0019-4322-abbd-5f697d581513",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "33be8e32-6909-49f7-a776-0caa2e35be5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863e81aa-68ea-4bab-a0e9-eb93a8f2f1b6",
        "cursor": {
          "ref": "5f287135-f766-4ab9-81b7-b2d7f8331099",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bcc6bc92-d72f-4b02-82d1-790bf9717d80"
        },
        "item": {
          "id": "863e81aa-68ea-4bab-a0e9-eb93a8f2f1b6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2452c69e-e611-4629-82e9-aaa35d2692e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ba924b-28ff-4efe-9511-13eef82fd397",
        "cursor": {
          "ref": "9ba6ab1b-8842-4f63-ac10-0cbdf1c14d89",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8bc92697-6940-43e3-a634-dff4c4b0e661"
        },
        "item": {
          "id": "67ba924b-28ff-4efe-9511-13eef82fd397",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f299ad86-4fd3-49b5-bdee-fd93974a9711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28eea57-9517-4ec3-97c5-6c8dc9b6224f",
        "cursor": {
          "ref": "efa8ad0a-8a8c-400c-8f10-f8ead2f503e4",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "97b9a124-5e48-408c-b004-7e895d7ddc79"
        },
        "item": {
          "id": "c28eea57-9517-4ec3-97c5-6c8dc9b6224f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d5414f1c-4f1d-438b-bc1f-b6025a8dc77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92f288e-c499-4d52-87ee-118ed9fa9fc8",
        "cursor": {
          "ref": "fef4b312-4912-4f17-91f6-769ac0002377",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4f230d34-1c9c-42d9-8f41-9fbe15cbaa15"
        },
        "item": {
          "id": "e92f288e-c499-4d52-87ee-118ed9fa9fc8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3b86c7e6-167f-4c5b-96fc-fbe9a8f3cf61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66eaea8-7892-4e03-8965-606e7985f836",
        "cursor": {
          "ref": "8d7d8fea-6c18-4bbc-98fc-1fa30d3b7e14",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "82d3e06f-b64d-46a7-84c9-4feb44bf420e"
        },
        "item": {
          "id": "b66eaea8-7892-4e03-8965-606e7985f836",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "818cd140-d140-46ba-b929-24bf2eb5b16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a897b3b1-a355-4a48-bbe4-36f7e3ca56d0",
        "cursor": {
          "ref": "4d933e5f-c456-4578-a644-8af60e330781",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "343ecb6f-e59e-46f6-9430-7e3cd9247d4d"
        },
        "item": {
          "id": "a897b3b1-a355-4a48-bbe4-36f7e3ca56d0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a0fed587-9820-4e0f-a503-6ccbd2d421bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3c074a-6bab-42ed-afe5-cbcb7e752ba6",
        "cursor": {
          "ref": "d4f22293-469c-45bc-906d-870345d20005",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "38bef2c9-a75a-428b-a064-e17c53c1b2ca"
        },
        "item": {
          "id": "df3c074a-6bab-42ed-afe5-cbcb7e752ba6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a1a91ce7-5b01-4671-91b3-fb565b06eded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a6da8c-e82d-4a50-95ab-c9f8aecfe98e",
        "cursor": {
          "ref": "870fa82e-ba2d-4d0d-9405-63243344f833",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b9a4316b-ccdb-47dc-979a-cac864e476b7"
        },
        "item": {
          "id": "a9a6da8c-e82d-4a50-95ab-c9f8aecfe98e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9dd8b7ff-72f1-49a3-8b4d-7d947ab65fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e352060-6433-45f7-8706-eadb8d2d7b7e",
        "cursor": {
          "ref": "e12d59b3-7e51-466e-a919-1eff87788bcf",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "17c9d338-250d-4798-800e-89e69410b8e8"
        },
        "item": {
          "id": "6e352060-6433-45f7-8706-eadb8d2d7b7e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7ec38503-96cf-4f92-a652-8f3afb28d34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5ed757-01e2-44d5-8fd2-953566021a15",
        "cursor": {
          "ref": "aa467969-6514-41a2-934d-a8fad65a68ab",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9d72dd7b-cb73-4608-82cf-5193154cc782"
        },
        "item": {
          "id": "1e5ed757-01e2-44d5-8fd2-953566021a15",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "052a4115-d96c-4533-90d4-379a761a6ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da86731-955e-4cf8-b9ce-0786fc8601ce",
        "cursor": {
          "ref": "b4b520e7-5d79-40dc-bd9e-7f97c97181a2",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c3f4c80a-9dea-4e7a-8232-650dcdf8aa3b"
        },
        "item": {
          "id": "9da86731-955e-4cf8-b9ce-0786fc8601ce",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "db7f7900-3a04-47a1-979b-d33eaa05caf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63665ca1-4460-4f83-803b-a59a3dda8378",
        "cursor": {
          "ref": "d5e31aaa-4613-4aa1-9879-5ee11b75a68f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1a214645-b80f-4ae9-843c-abcdcd526ec3"
        },
        "item": {
          "id": "63665ca1-4460-4f83-803b-a59a3dda8378",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "78db8610-f5ee-45a0-8e13-770187b0d7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df326b45-6427-48d3-94a6-c3beab496ba7",
        "cursor": {
          "ref": "9d1f7373-0628-4440-aa7f-cb18f2c14dc2",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "07ae5751-c0e5-4433-8473-184ebcad2ccd"
        },
        "item": {
          "id": "df326b45-6427-48d3-94a6-c3beab496ba7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4eefc972-783f-45df-a99d-c73f242ba7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3095e657-ecf8-4c9d-b6fe-c8d857ca26e5",
        "cursor": {
          "ref": "4c4d4672-6b27-4e99-a6cd-a31bc707e688",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ee0cde75-e1be-4e7e-97b7-9c753caeb079"
        },
        "item": {
          "id": "3095e657-ecf8-4c9d-b6fe-c8d857ca26e5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b0080b9c-4d00-4be0-a072-ea6663db0e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83aa70f9-b093-4203-ad31-48217f035931",
        "cursor": {
          "ref": "8a7fb015-519d-40ce-b740-cb96424978d7",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cdc02d21-2a7c-4d20-9b1b-b8af28b83d83"
        },
        "item": {
          "id": "83aa70f9-b093-4203-ad31-48217f035931",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3780a9b8-023f-4ff4-a85b-828dc1875f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cbcfef-5a88-4d0a-94b2-0fea24b0724e",
        "cursor": {
          "ref": "cc81e265-df62-40f9-982a-0f6981ce131a",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "420152eb-e50c-4c68-b18d-2c340149681d"
        },
        "item": {
          "id": "c3cbcfef-5a88-4d0a-94b2-0fea24b0724e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "948bab49-3b80-4c78-9091-a96c6b52bb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f55a15-b005-4b0f-af2c-e840c009a6dd",
        "cursor": {
          "ref": "e172c794-fd07-4825-be5d-3fa295388e29",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "72f46ce1-56eb-4a3c-8f4c-97b1649bb2ae"
        },
        "item": {
          "id": "f0f55a15-b005-4b0f-af2c-e840c009a6dd",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3ed7511f-5537-4b78-a5a0-c299c9e26bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7f6fae-1ea3-4120-a2c6-3373c93ffbe6",
        "cursor": {
          "ref": "14ee05af-b0df-49e3-a8ce-fe6db448f93c",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "aea09b54-48cf-46b3-aeaf-b4dd71bb534b"
        },
        "item": {
          "id": "2d7f6fae-1ea3-4120-a2c6-3373c93ffbe6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d6a4e96e-3b04-4819-82bd-48b6d7cc6fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb31e0d9-874c-495d-b733-50c6b0122d43",
        "cursor": {
          "ref": "e056c0f0-1c45-434d-9eb2-25ef8f38270e",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8429dca9-02bc-489c-9c24-9cd7abc04707"
        },
        "item": {
          "id": "fb31e0d9-874c-495d-b733-50c6b0122d43",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f0f03a48-e15a-4bd6-8005-193a8a497db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6c5d0e-bacb-48b7-ae1e-3d125d18f4bc",
        "cursor": {
          "ref": "935644d8-e731-409f-aa26-bb56976c64a8",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6f16e3e7-4e07-4fb1-b01d-63219b951d58"
        },
        "item": {
          "id": "5a6c5d0e-bacb-48b7-ae1e-3d125d18f4bc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4ad3d2b2-be68-4224-b081-74094c4d1d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcb3096-8286-469b-885c-f33492e53e1a",
        "cursor": {
          "ref": "291b99d6-593a-4dea-afab-12df017f1c12",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "00b36e3b-0de6-4f89-9f33-d0058254b7b4"
        },
        "item": {
          "id": "8bcb3096-8286-469b-885c-f33492e53e1a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8e5e5d90-5c0f-4b98-ad55-5e86ffcc602e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ee240d-bcfa-453f-87ad-5536e1b5107e",
        "cursor": {
          "ref": "e0b5f164-fe90-4595-9333-68cd4d5d89a5",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d25bfc25-4958-4ce9-848b-4d97498c2b91"
        },
        "item": {
          "id": "04ee240d-bcfa-453f-87ad-5536e1b5107e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8fa562a5-1221-49fe-b64c-733dce95fb24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fd6db9-9790-4fea-8c93-ca0dc216a640",
        "cursor": {
          "ref": "0a3c1dc8-7443-4823-9610-93d1a322433c",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2a7657a8-b4a5-4622-af28-d4327d77cb78"
        },
        "item": {
          "id": "c8fd6db9-9790-4fea-8c93-ca0dc216a640",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "acbb8eb1-15a3-4850-8beb-c379699fc97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f07db4b-d8ea-459e-9099-4d4cc9e96fba",
        "cursor": {
          "ref": "24fb7a39-5f61-47dd-b810-a553968a54b9",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2ce4b9ef-86cc-41ad-990f-ab9c57442aba"
        },
        "item": {
          "id": "2f07db4b-d8ea-459e-9099-4d4cc9e96fba",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2b6180cc-c699-45dc-8f97-b6932e7ec300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd054a03-7dbc-48e4-afb2-5adfe993592b",
        "cursor": {
          "ref": "e1c3b65f-dbce-4ef4-87b1-103875c70705",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f25a49ff-0bd4-4136-b6f0-08400bacd407"
        },
        "item": {
          "id": "cd054a03-7dbc-48e4-afb2-5adfe993592b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bafe81a2-e81e-4efa-aebd-e243cb28be46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27af678-3f54-4c7c-94c0-032962e23c23",
        "cursor": {
          "ref": "210455bd-d783-4aff-b945-d97e75d9bc42",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9715a4b0-a6d1-4e0a-8cfe-8220db442d32"
        },
        "item": {
          "id": "f27af678-3f54-4c7c-94c0-032962e23c23",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a159bab6-2db4-4a35-902e-97182d45f2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0577ecf-6884-4eeb-bc43-98ba61c4b6df",
        "cursor": {
          "ref": "a3a88a13-76fc-4044-8b7b-e99140c6c1ee",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e51fe92c-4d5e-4de0-8901-801f2e585932"
        },
        "item": {
          "id": "e0577ecf-6884-4eeb-bc43-98ba61c4b6df",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "80964a6f-2ae3-4469-a504-d5ccc943c597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65893d1-6a10-4a90-89b3-34f0721a6631",
        "cursor": {
          "ref": "d687c660-1abe-4975-b678-e157aaf66f98",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "557f74f2-ea89-475a-95ab-9eb9f783e7f6"
        },
        "item": {
          "id": "a65893d1-6a10-4a90-89b3-34f0721a6631",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "22071541-5db2-4c1b-ac30-05e11780753b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdd720c-1c81-4fc5-bf25-04fae195b51a",
        "cursor": {
          "ref": "faa104a0-43fa-4a4b-ac00-13858ea91d79",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e72faf3a-9fbe-4c54-b4f7-96943c7b61a2"
        },
        "item": {
          "id": "4bdd720c-1c81-4fc5-bf25-04fae195b51a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5c58c1bd-c03c-4845-8224-9648afb620b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d02df39-f954-45b3-99a6-21935d54db8b",
        "cursor": {
          "ref": "9cc96af0-bf90-49c9-bd6e-43611f871563",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4143cf2c-e164-4e15-8667-d35fc614bf56"
        },
        "item": {
          "id": "0d02df39-f954-45b3-99a6-21935d54db8b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "aab29fe4-51fc-49ac-bf9e-bc424619632d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db46b38-ba64-437b-81dd-7419307624ee",
        "cursor": {
          "ref": "2f1f4ea4-f461-4ea7-9bf4-b65deb31716f",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f130a860-fdad-4491-9ae5-7cc384e79e8d"
        },
        "item": {
          "id": "1db46b38-ba64-437b-81dd-7419307624ee",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6dd9eebc-4caa-4086-8c85-11f457f561a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03d54ca-0834-410e-a0b5-6ca366481115",
        "cursor": {
          "ref": "000c6db9-f339-407e-aee3-062c1708630b",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "14a72fa4-6506-4305-aeaf-b92dcd2ed65b"
        },
        "item": {
          "id": "c03d54ca-0834-410e-a0b5-6ca366481115",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ef70d83b-d15a-4963-981c-39ddcac48c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fed4cc-084a-48f5-8021-02b67569c2cd",
        "cursor": {
          "ref": "58f727f9-7189-4ae9-b098-bd642dc31cdd",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c3c8708c-d923-4a74-8637-f361cb401b4d"
        },
        "item": {
          "id": "98fed4cc-084a-48f5-8021-02b67569c2cd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8eac8fa5-a72b-4d46-9c4f-556e1112cc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db8d6e4-5cbb-41a5-afae-abdeaa656450",
        "cursor": {
          "ref": "26c60e7e-ac37-407b-9406-97dce4b045e2",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0ee7383a-ac91-4bde-bd5e-23beee4a156c"
        },
        "item": {
          "id": "8db8d6e4-5cbb-41a5-afae-abdeaa656450",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4a5ef3b8-3464-4932-852a-3f5c6481e1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43938396-3c2e-4718-bae2-a8252bb9d0c9",
        "cursor": {
          "ref": "ba7c1548-67bd-4cfb-87cf-649d77eee96a",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f1583063-9a1d-4231-9295-0cdbc94c8436"
        },
        "item": {
          "id": "43938396-3c2e-4718-bae2-a8252bb9d0c9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f1edbf2c-44ce-4bc9-a218-3e2b48e9b7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c788506-3011-4900-9003-e83e05e80d5c",
        "cursor": {
          "ref": "33098c7d-dad7-4776-a597-f0e15e4a46a5",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5cb54fa8-d921-49c2-9075-678a557f62bf"
        },
        "item": {
          "id": "3c788506-3011-4900-9003-e83e05e80d5c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3f850b13-967d-4d40-b238-840bf9308cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb08b6d4-64bc-41cf-8084-554bc9c641a0",
        "cursor": {
          "ref": "a7399684-ee6b-4609-9de0-3443ebfea11d",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9f3a85e3-bd0e-4e22-ac5f-24cf40cc70ff"
        },
        "item": {
          "id": "eb08b6d4-64bc-41cf-8084-554bc9c641a0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "959cbd6a-e86d-4932-8c7f-a1803f5db672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62114e3-a22b-4772-b9ce-1c391b5be177",
        "cursor": {
          "ref": "4bb13ab6-6594-4fe2-99a1-065e547d8cfc",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "07d05a44-f8ac-477f-8365-0e3bebf8ac53"
        },
        "item": {
          "id": "d62114e3-a22b-4772-b9ce-1c391b5be177",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e77a5592-c258-45d4-9231-2c39ed64c409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659e7874-1380-41b4-b190-4a26cf347ef6",
        "cursor": {
          "ref": "23b4d4a0-dc93-452c-b527-e571e7cf8108",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d8d878e9-efe2-4456-a22b-7e8cf33b2a84"
        },
        "item": {
          "id": "659e7874-1380-41b4-b190-4a26cf347ef6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "185eda6b-7f5e-4cb0-9116-d33a631e1c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f07db2-3bb5-4ec5-9f8b-9b95fd1203b0",
        "cursor": {
          "ref": "483da0ac-e86d-4848-ae30-a413ec5bf81a",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "20209fa1-66dc-4df8-922b-6735d780bb42"
        },
        "item": {
          "id": "08f07db2-3bb5-4ec5-9f8b-9b95fd1203b0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "72d09b81-0c2d-476c-b2c2-b0bd613ba16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3baa33f4-e543-4775-8db4-7cfc558673d6",
        "cursor": {
          "ref": "342a5311-0aa5-4de0-88bd-44667ebf62ba",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e281cc46-1333-471c-9baf-04c259c9dffd"
        },
        "item": {
          "id": "3baa33f4-e543-4775-8db4-7cfc558673d6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "aeb843de-bb5d-4df5-8be5-fc2428d0d5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4368606e-d4ae-42c4-ae54-b93bc743507b",
        "cursor": {
          "ref": "b07c90cb-54c0-495c-afa9-e87e4deed347",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "acd89fa9-88d8-40ef-9845-57a4c7b68c5f"
        },
        "item": {
          "id": "4368606e-d4ae-42c4-ae54-b93bc743507b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0f2b08ba-2244-4ad7-9ff9-f99db788e9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff1507a-4289-45e7-aaa8-02f8e0605059",
        "cursor": {
          "ref": "d1b8a90f-37aa-457d-9dcd-692172b77eea",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8f1b276e-5ebf-413c-be15-989a383a28ac"
        },
        "item": {
          "id": "aff1507a-4289-45e7-aaa8-02f8e0605059",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "23b48cbb-fdb2-42f0-8029-28133211986c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdb4436-9f14-44a4-9a04-56a82af6ab1a",
        "cursor": {
          "ref": "0ade46ec-2a77-4c46-8a43-a6d2338d07cb",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "669fc02b-0f1b-4947-ac02-7931a92a43c6"
        },
        "item": {
          "id": "fbdb4436-9f14-44a4-9a04-56a82af6ab1a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b0e8cac0-fbc7-48e9-87b1-4dbd77c01e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b501412-4c3e-4d61-8c0a-1ebd2b358340",
        "cursor": {
          "ref": "c006ef72-3993-4b44-b4d3-c55bf96ab062",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f1758d29-594b-4aaa-8d3e-4c0a3e2b3e3c"
        },
        "item": {
          "id": "2b501412-4c3e-4d61-8c0a-1ebd2b358340",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b009b35c-26fc-4aea-af55-bd03094658ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343d9f1e-7eb3-4c19-9284-00c1bb522d86",
        "cursor": {
          "ref": "00fc81b3-1ea9-4c31-8b1f-d1c892965ebc",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b2ecce15-1ca4-4bab-bd98-0cdb633f8f48"
        },
        "item": {
          "id": "343d9f1e-7eb3-4c19-9284-00c1bb522d86",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fc934ef8-f574-425f-bfca-b5ae6dbe6544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "a96048ca-d6bb-4b98-87d2-4c4d546d5c41",
        "cursor": {
          "ref": "364dab10-b282-43dc-a380-d8aa40a9fad2",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "03292882-87bb-4f61-83a6-f1520544a2e7"
        },
        "item": {
          "id": "a96048ca-d6bb-4b98-87d2-4c4d546d5c41",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "08a3f1f3-5173-4d57-a430-e27dff68278c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "c106cb37-3171-49ea-aef4-77f91c5ec671",
        "cursor": {
          "ref": "dcea19dd-9e64-49b6-b4c2-cbe990c2e207",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3fec90e0-5702-4f72-93fc-ced08f803472"
        },
        "item": {
          "id": "c106cb37-3171-49ea-aef4-77f91c5ec671",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9d322d07-acf3-41b6-b529-fa7404c77ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "719e2a2b-840b-40bf-b327-c7923316933b",
        "cursor": {
          "ref": "39506781-b1a6-4ef2-8e9c-2607439c23d4",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5c6c35b2-86f6-4de3-83a2-735b89e7f1f8"
        },
        "item": {
          "id": "719e2a2b-840b-40bf-b327-c7923316933b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a14fc26d-b734-4d8b-ae06-6c610d871b5d",
          "status": "Created",
          "code": 201,
          "responseTime": 4461,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd83fbe-e457-47c9-bfcf-1966865a698b",
        "cursor": {
          "ref": "a1ac28e1-e0c9-4b18-9e29-abc6c891d113",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "923738ef-c5e9-45c8-ab4f-82d06c331943"
        },
        "item": {
          "id": "ecd83fbe-e457-47c9-bfcf-1966865a698b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "53e23e1b-2e41-403a-a2fd-0089b1991147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "478470d7-8e72-4ffe-a7bc-65e4edb15c44",
        "cursor": {
          "ref": "d610cf0d-9ed0-42b7-8bce-025490b817ec",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "80559f64-c881-4729-a419-4ffb2b09cb95"
        },
        "item": {
          "id": "478470d7-8e72-4ffe-a7bc-65e4edb15c44",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "507157e6-317c-4bff-9870-6d03c97d6dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "d5a3fb19-4dd0-463b-81d7-07e989eab823",
        "cursor": {
          "ref": "6391acc2-7b4c-42f6-bf30-1abc85939703",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f32ad4e4-6f8d-4e13-b5e7-7597c3060c6e"
        },
        "item": {
          "id": "d5a3fb19-4dd0-463b-81d7-07e989eab823",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e8b00572-3cea-4e34-b51e-618600ba1e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44e32bb-ebcc-4da8-8a32-1162d8c18b1c",
        "cursor": {
          "ref": "12e1f301-9e9c-4546-9793-63b03e3c6787",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "67879d6c-f633-45c3-bc4c-ed1208f75a4d"
        },
        "item": {
          "id": "c44e32bb-ebcc-4da8-8a32-1162d8c18b1c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "71740712-9132-4634-a30f-57b1c8c3229b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8628d51e-f8e4-4d29-bf6c-332c559c79c3",
        "cursor": {
          "ref": "1f3a63af-beb8-452a-a232-3f6c3bde86e9",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fc659648-8faa-427b-b078-b65ca33435b8"
        },
        "item": {
          "id": "8628d51e-f8e4-4d29-bf6c-332c559c79c3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bd625b71-a501-467d-ae81-103a9169f2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a38a19-3d62-4bd1-95db-4efd1ea7c35a",
        "cursor": {
          "ref": "37525f14-685d-4e2f-ad62-d48ec796e277",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a67661c7-c816-4b58-9a7c-9f389190f458"
        },
        "item": {
          "id": "a3a38a19-3d62-4bd1-95db-4efd1ea7c35a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6e555d61-9526-4238-a607-05af76f084eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9951b9bd-038c-45ac-bc1d-e22ce1e55bc1",
        "cursor": {
          "ref": "82eba350-613c-466d-9d3f-4638716d5795",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1ed2994f-9c52-47c4-955c-7c761202f7d7"
        },
        "item": {
          "id": "9951b9bd-038c-45ac-bc1d-e22ce1e55bc1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "de915151-3fb3-45cf-a08b-0f11fa4b0edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ce69e5-ca26-46ff-8f9a-23563a8a943f",
        "cursor": {
          "ref": "83b8317e-b9e9-4b3d-8ea4-4bd271158223",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "61e071df-8cad-4ba9-8d02-f882bdf32eee"
        },
        "item": {
          "id": "66ce69e5-ca26-46ff-8f9a-23563a8a943f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a574384c-a60e-4eb5-a498-0338d167a45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3bf4fd-df1e-4ee2-882b-35458a3db2e6",
        "cursor": {
          "ref": "e1e0edd9-91b5-47f0-a9d9-3dc9f3e3e812",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "714369c4-bf96-414f-a54d-324500053c37"
        },
        "item": {
          "id": "2e3bf4fd-df1e-4ee2-882b-35458a3db2e6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "66d1f538-2648-4328-b61c-3f3e7969a3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e61751-fc6d-4b59-ac86-e659ac8c0782",
        "cursor": {
          "ref": "7a0863a7-4ebb-48a4-8f9c-b3f0a0c34e85",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1de6eaf2-1c9d-4df7-8cde-b90c4b3a44b1"
        },
        "item": {
          "id": "a9e61751-fc6d-4b59-ac86-e659ac8c0782",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1050b2d1-ae1e-4264-ad72-2ee32e172f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08051a95-3883-4456-99bf-b2390a1f0cd0",
        "cursor": {
          "ref": "0549ff9d-bd1f-4d92-b87f-d4ec88c67216",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ec235c57-9fdd-4348-a21c-db17570e4eee"
        },
        "item": {
          "id": "08051a95-3883-4456-99bf-b2390a1f0cd0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dd3bd59b-b798-464e-9653-e982ea4a1b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c4a0cc-1323-42b3-940d-5008d8295b67",
        "cursor": {
          "ref": "712ad49d-9c71-4096-8c70-ab13123afc28",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e9e19722-cca8-4eb9-b060-ab89a4bc094a"
        },
        "item": {
          "id": "e8c4a0cc-1323-42b3-940d-5008d8295b67",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0ab5dfea-7579-4ead-abce-52b925614934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8a09d5-40fd-4410-80a5-6459ee838051",
        "cursor": {
          "ref": "364d8b6e-880d-435e-a88c-af2ff6ee6a88",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "dafd9c6e-666d-4945-8df7-b71e948ee387"
        },
        "item": {
          "id": "eb8a09d5-40fd-4410-80a5-6459ee838051",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5340a756-e5ce-45a1-a6aa-580744615edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf855fb-3508-46e9-9d19-289506c4c2d6",
        "cursor": {
          "ref": "37629060-5e2c-4ee3-8542-fbc608d9937e",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "06109e20-6a72-4893-a201-3a3f880df531"
        },
        "item": {
          "id": "bbf855fb-3508-46e9-9d19-289506c4c2d6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "75c70e96-a159-4bca-90c9-b8bcb226493e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74374f9-eda1-4297-af3a-b1f243bf1eb1",
        "cursor": {
          "ref": "e6135699-fb57-4175-a635-b3cb6301644a",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2de0ff30-4e18-48ea-b0e1-d1a5f3d9fe3f"
        },
        "item": {
          "id": "f74374f9-eda1-4297-af3a-b1f243bf1eb1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e3ef2eb5-5cf4-4af4-8370-2ee321a7eb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a76c66-83c5-4991-acad-34547a29d963",
        "cursor": {
          "ref": "58844876-2c32-4386-ad45-a537c84403c6",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "84169e09-7c89-4b5e-8ae3-46d4a5e52273"
        },
        "item": {
          "id": "99a76c66-83c5-4991-acad-34547a29d963",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aa4f377b-8ff4-4e31-a46b-eb42a7765190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1aed4d-b4f0-458f-874a-7d6ea9bd1037",
        "cursor": {
          "ref": "11010b15-4746-4a10-a8b6-758099fbc0e0",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6366051a-98da-47f5-9af3-5c5e9ae80602"
        },
        "item": {
          "id": "7f1aed4d-b4f0-458f-874a-7d6ea9bd1037",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "43689895-f0b8-4cd9-b397-e9a35adb3cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9280e531-9b79-4682-8bcf-b5557dcd5455",
        "cursor": {
          "ref": "8faeec1f-7580-4e4a-a648-70a38141570c",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "31ab45cd-7acc-4b45-bfce-86e0a9b8d9c1"
        },
        "item": {
          "id": "9280e531-9b79-4682-8bcf-b5557dcd5455",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c79db7bd-47a5-4db3-b5ad-af77d010d1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220aa551-8953-48bd-9f2c-71f060a4b4c2",
        "cursor": {
          "ref": "6d19c75e-04d7-4bca-bfe5-910a1cc997c2",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "698ae241-093a-4139-9fff-e4750646fd9c"
        },
        "item": {
          "id": "220aa551-8953-48bd-9f2c-71f060a4b4c2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bd78bff1-d7a9-4d93-95a2-5edf50f32585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec3d96d-8ce1-4a54-82c1-ecd085d114b3",
        "cursor": {
          "ref": "88d581ea-af2e-48c5-b858-a3cee1c0a5b1",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b121bbd9-506b-47d6-9c47-045bf10e37b6"
        },
        "item": {
          "id": "5ec3d96d-8ce1-4a54-82c1-ecd085d114b3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "df139d0c-09b5-4d2d-a857-252db423835e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df20c572-2993-4f4e-9aa5-ba8a671900c1",
        "cursor": {
          "ref": "9d780360-8363-46bc-9d70-01ffb0b9e34f",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "91576187-b6e8-4808-8023-0d92be87c7e2"
        },
        "item": {
          "id": "df20c572-2993-4f4e-9aa5-ba8a671900c1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1bd9f5fd-92ac-47ca-906f-961e0a74dee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f137e4-4209-48fb-a02e-223058d32d8b",
        "cursor": {
          "ref": "c090463f-03e2-41fc-9655-d1bfdc306e51",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e4670d58-de69-454d-9f8b-53943b6941a5"
        },
        "item": {
          "id": "77f137e4-4209-48fb-a02e-223058d32d8b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "eaa9ff27-3871-489d-9f76-9cf3bad3ded0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b9700c-046c-463c-aab6-08df7b8a9967",
        "cursor": {
          "ref": "b4a53774-abe4-454a-8222-d7906641554a",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "87613814-4df0-42a5-8180-a706fb918485"
        },
        "item": {
          "id": "e0b9700c-046c-463c-aab6-08df7b8a9967",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0d1fe9ac-a620-4906-9793-0f384daece63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe7c4c9-3055-4e09-99fe-e52bec992747",
        "cursor": {
          "ref": "4b68d176-1efc-4c31-a9fb-d85761047031",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bbac8cf4-5f62-4b4c-941a-53eb90be15f0"
        },
        "item": {
          "id": "bbe7c4c9-3055-4e09-99fe-e52bec992747",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "92f0f4f7-6f26-4792-ba90-a2a0659eb20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae888bcc-4146-45c7-8149-88ef17d81d9c",
        "cursor": {
          "ref": "551bc136-8abe-4754-9602-ea44ea1c9b89",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "89a81580-5056-474a-8214-5c14ef1d7833"
        },
        "item": {
          "id": "ae888bcc-4146-45c7-8149-88ef17d81d9c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d5d192b0-417d-4255-bb6b-bb11896521ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258690e4-06e3-4681-aa3f-808f96f934b4",
        "cursor": {
          "ref": "23d7c39d-8a74-42c6-b76c-1b04026b1b7d",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1fd51f8e-b83d-46e2-977b-60751ec33dde"
        },
        "item": {
          "id": "258690e4-06e3-4681-aa3f-808f96f934b4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9e53492e-9d7d-4648-b992-93344b026368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a969154a-c718-4439-a565-2923e73937f9",
        "cursor": {
          "ref": "48254983-4d78-4172-94da-c2e4bd23365d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "268a4f77-dcd1-439b-8530-3eda00cf0c8d"
        },
        "item": {
          "id": "a969154a-c718-4439-a565-2923e73937f9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "17a95936-d33e-48f2-85ef-b31ed50d34a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32828f3c-776c-42bb-8878-3c70056c6fc5",
        "cursor": {
          "ref": "8527a4df-b207-4061-860f-982dc3ed3ff1",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a4191507-f619-413f-8f03-ba64591bd785"
        },
        "item": {
          "id": "32828f3c-776c-42bb-8878-3c70056c6fc5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "822c2d5c-35d0-4a82-90d8-21a78f4a3f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7611790-b4d8-4d20-9c54-1261429edb03",
        "cursor": {
          "ref": "e1b926b2-a9d1-496b-967b-d559539d6b09",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f2ba2e6e-7d67-4d34-99cf-9926e3e65f7a"
        },
        "item": {
          "id": "a7611790-b4d8-4d20-9c54-1261429edb03",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "361309b3-057e-4ab6-af55-9ecfa8c3067e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6f89bc-8be1-4238-b3ac-e6edf94162d5",
        "cursor": {
          "ref": "f7bb0226-d923-442b-83e6-42b273afc089",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "03bde991-1ef5-4222-ad48-f44a34ee2066"
        },
        "item": {
          "id": "fb6f89bc-8be1-4238-b3ac-e6edf94162d5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "698b03b8-c615-452a-96c4-64e937875018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4c707c-bd07-4e1b-8a45-09e5967f01d8",
        "cursor": {
          "ref": "48dac9fc-c039-409a-a9d6-d9fae364a87e",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "26710172-c83a-444d-8eb7-b312390e57ce"
        },
        "item": {
          "id": "1e4c707c-bd07-4e1b-8a45-09e5967f01d8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d3130ac0-3b06-41c1-8b94-30fb9fa63365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aba0669-b763-43c4-b044-fc64d2f09700",
        "cursor": {
          "ref": "0e795fd3-3fb1-4bb3-87a4-391a59a827d1",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "05878c72-5246-4252-971f-0c424f608aba"
        },
        "item": {
          "id": "4aba0669-b763-43c4-b044-fc64d2f09700",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f08c361e-9a60-40d3-a50e-e6135fff4669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b22c38-37be-4677-b24a-3e710e2c2f28",
        "cursor": {
          "ref": "19ca0f3f-87ad-484c-b145-813bfef11653",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "43c3fdd6-d201-454d-acd5-64d2d09b5e52"
        },
        "item": {
          "id": "b0b22c38-37be-4677-b24a-3e710e2c2f28",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "62e7c293-5cbc-4bac-b4c1-3a8ef76e4db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0785df-a581-4b26-ae15-2a337254cea0",
        "cursor": {
          "ref": "ca423d85-42c9-45ea-9d87-f154ce3c46d6",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "670151a3-dc7d-4681-91d6-f8579a5aba52"
        },
        "item": {
          "id": "be0785df-a581-4b26-ae15-2a337254cea0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "47abdafc-38a9-4845-ad1d-178b73bdd457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0271c722-2cd0-41da-b37f-62d52baeb5d7",
        "cursor": {
          "ref": "b568e5e2-4ab5-4dce-99c1-764f901e81d6",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f1d3e70c-6bc2-4e2c-bbe6-5fee65a81498"
        },
        "item": {
          "id": "0271c722-2cd0-41da-b37f-62d52baeb5d7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "159440db-8285-4f1a-a287-833c434eabc9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b889c44e-2333-4525-b7a3-f23c3f12f06d",
        "cursor": {
          "ref": "3306e63f-2208-47e2-89a7-e3ea9c80496e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8e299406-caa5-4e7f-ab3d-8ce890d51406"
        },
        "item": {
          "id": "b889c44e-2333-4525-b7a3-f23c3f12f06d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "397dfafd-92a1-4457-b925-dd291a8d17a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf5b19d-edfd-4b1b-9945-b185960f3437",
        "cursor": {
          "ref": "b9e4f975-f30b-4da5-bb29-ac5b1fa3661f",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "893c3ee8-7e21-4ab3-b1cf-ca7761924693"
        },
        "item": {
          "id": "fbf5b19d-edfd-4b1b-9945-b185960f3437",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b50e7485-fb5c-4c3b-82e6-12ccfddbb101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1b17a1-4079-45b7-9bdb-3a38e4fd15a4",
        "cursor": {
          "ref": "413f1c69-3bc8-4f0e-a299-90067e2887a4",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "907830eb-cb3d-4a04-8a70-1c03b2f39c4c"
        },
        "item": {
          "id": "2a1b17a1-4079-45b7-9bdb-3a38e4fd15a4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "781482f3-416b-4d77-b6fc-8b8455a6a2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb85e31-7a3c-4b67-b667-3ad20c69469a",
        "cursor": {
          "ref": "30c94c50-8205-4c1f-8f4e-47986c6221cf",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4943cd52-f1c2-4d4d-bf96-e2e2d24075bb"
        },
        "item": {
          "id": "2eb85e31-7a3c-4b67-b667-3ad20c69469a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1a0eb43e-4860-4471-99db-b6a5a6b64f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa983c44-f766-41f3-80b0-31db8b991914",
        "cursor": {
          "ref": "5c00f504-56cc-487a-8da6-a0bffb55db10",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a05962d6-e4ec-419c-af3f-9f28a0056e0a"
        },
        "item": {
          "id": "fa983c44-f766-41f3-80b0-31db8b991914",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "426d1477-edfb-44e5-a4d0-026916102a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7750441-8613-473d-829c-6e726b9bc473",
        "cursor": {
          "ref": "a0a247cb-335c-4566-afda-89416d4b7f9a",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c83fb107-bdf3-4919-9b75-fbe8ebfaf80d"
        },
        "item": {
          "id": "f7750441-8613-473d-829c-6e726b9bc473",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "25579414-92eb-4434-bb42-50e176919ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33574227-9874-4975-8a38-0f01944c98a0",
        "cursor": {
          "ref": "0d3f7911-26e3-45e1-b520-7ecd500a37a8",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b650a5fc-1a40-4499-9d74-fd1b4974cacc"
        },
        "item": {
          "id": "33574227-9874-4975-8a38-0f01944c98a0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6bdff8a6-8a4b-4615-8fab-62e145ee3872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b52dfd-5021-4f14-a00e-eba2c974216c",
        "cursor": {
          "ref": "de6891af-fba8-42a9-a3ed-252de894d2be",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9578acf8-a6f0-49f0-86e7-41837965b7e1"
        },
        "item": {
          "id": "23b52dfd-5021-4f14-a00e-eba2c974216c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e688e73a-b83e-4abe-a5f2-dd510ad840bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81f8de3-7cb6-4a1d-9764-ce6fa2f44fe2",
        "cursor": {
          "ref": "3f7fceec-6c6d-4b4f-b5ef-2163c297b270",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d564904e-5be3-45b3-810f-dd560edfd894"
        },
        "item": {
          "id": "a81f8de3-7cb6-4a1d-9764-ce6fa2f44fe2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "973815c1-4c2a-4423-8815-0ef98523e951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482d7dc9-8324-479b-9f58-778221818c26",
        "cursor": {
          "ref": "f0448b88-9ec2-41c8-b116-45d10e931c0c",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2ef86e26-55e7-41dd-8fa5-f9b6d3592c38"
        },
        "item": {
          "id": "482d7dc9-8324-479b-9f58-778221818c26",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dcb374f9-7cf1-439c-991e-afb4e6932e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d7601a-da19-47c1-aef0-f846eaddba99",
        "cursor": {
          "ref": "8b1c2cbf-7eb5-4f82-8bbc-638fe6ea1723",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "09e482ad-61db-4ae0-9db1-ab2baf2714a2"
        },
        "item": {
          "id": "88d7601a-da19-47c1-aef0-f846eaddba99",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9e942432-44ec-4c7a-adfb-5571886bbdaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4e4ba3-b609-4e29-a9f0-d94c8cee53ec",
        "cursor": {
          "ref": "1fecd727-39c4-4ac3-8b29-79e18202a38f",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "88a38a99-cb7e-4bd1-9f30-9c1f295e5cd4"
        },
        "item": {
          "id": "df4e4ba3-b609-4e29-a9f0-d94c8cee53ec",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d96d71e3-6e1e-4706-a67b-6e0cab5898b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38905df-7eeb-4b77-93d6-496353fe3acc",
        "cursor": {
          "ref": "b212f131-74d7-42f2-bd5c-4724178da6f8",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2677abea-83e4-4bbb-a8b3-042396e94ee0"
        },
        "item": {
          "id": "a38905df-7eeb-4b77-93d6-496353fe3acc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "16791cf8-0f54-445f-b159-27acfef3c1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de2f7df-77be-4145-9871-86af0df9eab6",
        "cursor": {
          "ref": "4d5bee7d-6313-4d32-8e9f-a72f84b72a02",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4f0a5526-85a2-4793-86db-7a3f84ce92a0"
        },
        "item": {
          "id": "2de2f7df-77be-4145-9871-86af0df9eab6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3e7261ab-d8e2-4b4e-b23b-bbae557b7228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd0b27c-1f30-4c9b-86af-7b862cf8e08d",
        "cursor": {
          "ref": "c82e1d11-be5c-49a3-9046-9b0e143e441e",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "892a4c07-f42e-490b-b53c-a65fce1d9057"
        },
        "item": {
          "id": "afd0b27c-1f30-4c9b-86af-7b862cf8e08d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8d1e2fba-96a7-4ea4-93c2-cae7cc343a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc8290b-b2b8-4fa4-a131-4689402cc0ba",
        "cursor": {
          "ref": "fa9d46b3-b93a-4f86-98c9-6fef4f663ca2",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8847fe78-6bc7-464d-9add-7d1ecebd1e32"
        },
        "item": {
          "id": "1bc8290b-b2b8-4fa4-a131-4689402cc0ba",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ea605159-5593-4e48-9213-83404473a17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775415ae-c4b7-4017-a5b2-5d2ec0b9e0d8",
        "cursor": {
          "ref": "98db499b-5083-437b-be1d-067ea8aa8d12",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f16a2885-3722-49eb-a8b5-08858b44e1f7"
        },
        "item": {
          "id": "775415ae-c4b7-4017-a5b2-5d2ec0b9e0d8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3273787a-195c-488d-b555-de3d037cd98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d31a146-fe91-4697-b507-76be071d883a",
        "cursor": {
          "ref": "0396f885-68e7-4442-b849-9a1904feb9d0",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "74202d85-1cdd-4191-a93b-c1745901a6e3"
        },
        "item": {
          "id": "2d31a146-fe91-4697-b507-76be071d883a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f2efba30-8e67-4567-8570-dff5e4e0a773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d5dbaa-0f45-407e-92b9-2201858acdde",
        "cursor": {
          "ref": "befd9d4f-faf6-403d-977c-603bad9126f0",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "72306dfa-04b8-4f87-8c4e-20d65e7453e5"
        },
        "item": {
          "id": "e5d5dbaa-0f45-407e-92b9-2201858acdde",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0fe6b2f8-4b84-4d40-ae8e-9ccb2dafdc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f123977b-92dc-4628-bb65-0c67b15b5b97",
        "cursor": {
          "ref": "41aa7a56-65a5-4ca7-90eb-083d91504365",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1a8fd553-9381-4fe8-956b-efcc67b32200"
        },
        "item": {
          "id": "f123977b-92dc-4628-bb65-0c67b15b5b97",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fbfdff98-7d73-4817-980b-7d9a2aefbf5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed822ea-379d-4ee7-982e-6d053e213846",
        "cursor": {
          "ref": "02488e40-0c30-4302-845e-df649cea2574",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9cfb0de9-b63f-41a3-801e-c1be385525f9"
        },
        "item": {
          "id": "7ed822ea-379d-4ee7-982e-6d053e213846",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0e4920eb-5259-4e74-8cda-29f414f65ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c288f1-8de9-475b-9dc0-f5d733969c0a",
        "cursor": {
          "ref": "c5b5b2e4-51b7-43c9-8511-45d9ed3cbdc6",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9df13b22-691f-440d-ae13-59d235fc8b41"
        },
        "item": {
          "id": "d4c288f1-8de9-475b-9dc0-f5d733969c0a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c7110dc5-1cf1-4afc-bfd8-590f4fa09443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad714b8e-37ab-4c35-b325-dda2d84533e0",
        "cursor": {
          "ref": "f2325a73-163c-421d-b293-9d72e06e2cff",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c5f467e7-e388-48f1-9dc3-f05407556bcc"
        },
        "item": {
          "id": "ad714b8e-37ab-4c35-b325-dda2d84533e0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "69665e37-3f48-4280-8f32-ad3484003c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6ddc92-7937-4c30-b40d-d941ae415663",
        "cursor": {
          "ref": "706eef84-4ba0-4fe7-950f-ed8e625541e4",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5f4fb4c0-2222-4cd8-bc9c-f302c0f142ca"
        },
        "item": {
          "id": "2f6ddc92-7937-4c30-b40d-d941ae415663",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ccb4a241-01bd-4ca3-9fbd-cc08b3267abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184102dd-2657-4775-a299-88090190722b",
        "cursor": {
          "ref": "812a9cad-1a75-4012-8e01-8c1da2c1f48e",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7210d1f5-85f7-4ce8-89b9-27ce84772221"
        },
        "item": {
          "id": "184102dd-2657-4775-a299-88090190722b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "36181508-eca7-4ab5-acb4-e55a5c9c7751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0417999-4d6f-4037-8b0a-a5232a486623",
        "cursor": {
          "ref": "645571a0-3509-41be-8c33-959359f2c2f2",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f51c40dc-1376-42b9-ad44-a94f111c6520"
        },
        "item": {
          "id": "e0417999-4d6f-4037-8b0a-a5232a486623",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cb2ba3fa-e140-46ef-8e9c-8ee65a46d55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee675e84-6502-4e3b-bbb1-d118723e9c19",
        "cursor": {
          "ref": "0784823c-ec25-4e26-afb2-b5c1e3f6e274",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "23a9a022-30bf-4dc4-8c68-bdccbbdbe1be"
        },
        "item": {
          "id": "ee675e84-6502-4e3b-bbb1-d118723e9c19",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "01bfdf47-1170-49a7-be66-4ecd1010813b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301921ab-d080-4cb6-9f63-f883d531f97e",
        "cursor": {
          "ref": "33d27473-ee59-4fca-a2a1-590e3feb7005",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0c888689-d274-489e-bbf2-2d5bc4e38609"
        },
        "item": {
          "id": "301921ab-d080-4cb6-9f63-f883d531f97e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ecff8a99-7f1e-4230-871d-3539ca41b8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8d0f06-9de5-4bb4-b7ff-a2772d20959d",
        "cursor": {
          "ref": "128f2304-bd32-42e6-8af6-598499674f8c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0fc803ea-887f-4d6f-8a75-c67eb510e4ea"
        },
        "item": {
          "id": "8d8d0f06-9de5-4bb4-b7ff-a2772d20959d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ccdf8885-81d3-4720-99ac-5330edbbe0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff886e4-7f48-4a58-9036-4478fc544e62",
        "cursor": {
          "ref": "7efd975c-fa1b-4f66-a122-245c7589c7fe",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9be7afc2-c86c-44d6-b5b4-c178ee717ea2"
        },
        "item": {
          "id": "aff886e4-7f48-4a58-9036-4478fc544e62",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "11aef546-074a-4501-9050-6bf148d51095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d827c6-7f6d-47fa-b730-ec662e678d21",
        "cursor": {
          "ref": "b6789258-4563-4235-b717-13a68aedff78",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "290d450b-443d-4bd4-944f-ecc40896e444"
        },
        "item": {
          "id": "b7d827c6-7f6d-47fa-b730-ec662e678d21",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "34a7cab3-f8cd-4757-88bd-8c4cc45c5c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15315206-97fb-4d17-a0d8-d13747a58bee",
        "cursor": {
          "ref": "1b687b53-8abb-415e-9c5d-5896258d0605",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "23b88bc6-3db9-4d4e-908e-595553e1f8e5"
        },
        "item": {
          "id": "15315206-97fb-4d17-a0d8-d13747a58bee",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f40042b2-795e-4621-b6b7-c41f4aab4335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250ef824-ccd0-4e3f-a204-5d96123a06bd",
        "cursor": {
          "ref": "152b21cb-29d7-42af-8cbe-302d73ba267e",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d1e64301-8169-4fb6-8a4f-e2268a2a00fc"
        },
        "item": {
          "id": "250ef824-ccd0-4e3f-a204-5d96123a06bd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0fafe4bf-37e3-4c52-954d-151fd617a09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54a4804-3681-4f59-9033-a2886ac80290",
        "cursor": {
          "ref": "11b07117-3a6e-4187-a4e1-f6d9490da80a",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f2fcd7b9-b6e3-42d8-9adc-ea11c47a509f"
        },
        "item": {
          "id": "c54a4804-3681-4f59-9033-a2886ac80290",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6dfc9d20-a929-411b-af68-d9e00d379a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2509dee-5acc-4c70-8be4-69b8020ca0e1",
        "cursor": {
          "ref": "f311e34f-f36b-4e2b-8927-34f8a28c6e85",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2ecbb546-f15b-4778-ab49-62817f1da075"
        },
        "item": {
          "id": "a2509dee-5acc-4c70-8be4-69b8020ca0e1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d06ac609-907b-4aaa-8718-f7b1a1bdde01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8187e2-5c06-47b5-94b8-52df61a24200",
        "cursor": {
          "ref": "3acfbad4-788d-4a93-8397-94ecbab13d9d",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4b1ef8cb-82e5-4530-bc64-043b1d66575b"
        },
        "item": {
          "id": "bf8187e2-5c06-47b5-94b8-52df61a24200",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "eadf7053-f676-4869-8a21-2c887361a438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b15dc30-0149-4cd8-bfad-535d9be669e8",
        "cursor": {
          "ref": "292b0a92-f2f1-44bd-a52d-c5dda696ab27",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "515e9ec7-87c0-4bdf-80f8-050d6950b015"
        },
        "item": {
          "id": "0b15dc30-0149-4cd8-bfad-535d9be669e8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d3163a96-1c25-4587-8964-9eade280de1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5679d2b2-773a-4974-999d-58ff6828db42",
        "cursor": {
          "ref": "caabe5fc-20bc-45ef-8ef5-fc106c3fa15b",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cad46eae-c669-402d-884c-5dbe1e894548"
        },
        "item": {
          "id": "5679d2b2-773a-4974-999d-58ff6828db42",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c142bb41-191e-4278-a24a-d3d70a55bbc4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959bee98-d1f3-41aa-98cb-118d10d19974",
        "cursor": {
          "ref": "1c22b64d-6bae-4aa4-905d-f1d60fc4597f",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e6483967-b8e8-450c-962b-d5b3352f1191"
        },
        "item": {
          "id": "959bee98-d1f3-41aa-98cb-118d10d19974",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5d89eb23-7691-4e71-aeac-0e9d2e8ba4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4c9310-3672-4d06-8e20-e5e0fbfa74f7",
        "cursor": {
          "ref": "fbd4db51-af04-4d88-a29e-b1a507d6ea46",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "dfb90e93-c858-40eb-a2aa-5a37832ecfcb"
        },
        "item": {
          "id": "1e4c9310-3672-4d06-8e20-e5e0fbfa74f7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f6e29bd6-c986-4a0a-ba67-ea77e42369e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703922e2-942a-463d-8871-14435e5db872",
        "cursor": {
          "ref": "881a4ccf-711c-48b6-b942-c8a382204654",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7e0ad583-4119-46c9-96c0-95fa95732d10"
        },
        "item": {
          "id": "703922e2-942a-463d-8871-14435e5db872",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3ce40820-47aa-4fb8-bbcb-6511df12ff89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ead963f-6c23-4584-bcf2-1101fadf849f",
        "cursor": {
          "ref": "7d3d9627-b890-4317-8f98-16fd6f9315a1",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f3525e13-107a-43ed-b65d-dd8080132649"
        },
        "item": {
          "id": "2ead963f-6c23-4584-bcf2-1101fadf849f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9bface9d-1799-4efb-a82d-a394c9ef2664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fa9baf-903f-4fcd-bc5e-3ec762137bdd",
        "cursor": {
          "ref": "9de7377c-a94e-44ab-ab65-2d2b5dd3797a",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "471c62cd-9f60-480e-ac2e-f82c6ce81472"
        },
        "item": {
          "id": "09fa9baf-903f-4fcd-bc5e-3ec762137bdd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "87547212-ebb1-40f4-99e1-361815c8a073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c7977c-f270-4f2e-8fd0-015cf9c76c5e",
        "cursor": {
          "ref": "275fa587-ec1d-4d2d-96a8-bfe5ac7a6e73",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2d44400f-85c0-44ed-a4d1-ecadc55129a1"
        },
        "item": {
          "id": "64c7977c-f270-4f2e-8fd0-015cf9c76c5e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7663152d-d70c-4e17-9368-a8884a1f07ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab109da5-44bb-4373-9513-8d5c30be6663",
        "cursor": {
          "ref": "a2b47ae0-d17e-41a7-ba0c-8c8a81537927",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f00ee73a-4365-4e0f-a3eb-1dee9cb5f9b7"
        },
        "item": {
          "id": "ab109da5-44bb-4373-9513-8d5c30be6663",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "23253bf0-0907-4efd-9726-ca5140ff3899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10647ec2-5f2d-4be4-b3a8-902c0d253337",
        "cursor": {
          "ref": "3ce9e63a-13b2-49b9-a442-aa81e2291972",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3cfde190-d2ab-4504-a8ff-6cfb94b654f7"
        },
        "item": {
          "id": "10647ec2-5f2d-4be4-b3a8-902c0d253337",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d3f3b902-2edb-436d-989a-98c2e2d14b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc25205-5d16-4fb8-9537-d37cb2c6ecf1",
        "cursor": {
          "ref": "d66ca6d1-d637-45a3-a72e-f9e3af8164df",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "34c19696-c183-44d6-bdf9-6e2bb2528cf6"
        },
        "item": {
          "id": "bdc25205-5d16-4fb8-9537-d37cb2c6ecf1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "518509af-034b-429b-b015-73272725d96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a92a4d-0c3d-4f53-83a6-0c7fc7e5c0a3",
        "cursor": {
          "ref": "46a7f0f9-a3da-4750-9a22-56367be3a454",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ac0b23c8-5431-44bc-92bd-08f0f7779990"
        },
        "item": {
          "id": "61a92a4d-0c3d-4f53-83a6-0c7fc7e5c0a3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f6ca10c7-a8e5-43f1-9078-5882cfce435d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e5d711-d6c8-43dc-bfdb-95bec7416c70",
        "cursor": {
          "ref": "d5f3c6e5-7a2d-4641-b313-92565d5b53d4",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c86b93b0-69f6-4624-969e-67a18f70d489"
        },
        "item": {
          "id": "72e5d711-d6c8-43dc-bfdb-95bec7416c70",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0a1ac345-101b-49f5-ba1b-aba207f5df66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8df2da-a549-4361-abdb-5e40d7a310d8",
        "cursor": {
          "ref": "fdda85b5-43bd-44ec-b89f-5f75416fe6ab",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3861f8fd-985a-40c2-9153-a59d91f708bf"
        },
        "item": {
          "id": "4f8df2da-a549-4361-abdb-5e40d7a310d8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b9b1a862-87cc-4965-aa46-0047de75213f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f6b63d-be03-4f9a-ac84-b2cc059f67a5",
        "cursor": {
          "ref": "73b0d099-3692-415c-971a-3f083fe624c4",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8ddfebc2-7099-4ec8-a3c6-8c159cc8ba97"
        },
        "item": {
          "id": "59f6b63d-be03-4f9a-ac84-b2cc059f67a5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5961a138-69a1-4a7a-975e-ef17efae3c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f856148-f161-4c73-916e-a56a3b450ff8",
        "cursor": {
          "ref": "986978b1-b9ef-470a-a691-227c94f6bd95",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2d75f34c-0b34-4732-b1dc-01d08b5e774a"
        },
        "item": {
          "id": "1f856148-f161-4c73-916e-a56a3b450ff8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a2557dc0-d288-4df7-9103-99fd123ea2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03cc5a2-6397-4c29-9f52-45718d657c56",
        "cursor": {
          "ref": "8ff76979-7ed9-4bb0-b019-657a58dcdf06",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c9b08a01-bf52-4802-b6d8-91c67fe42a78"
        },
        "item": {
          "id": "a03cc5a2-6397-4c29-9f52-45718d657c56",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "516ded6d-69a2-4967-a405-64ec4e2a5244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032603d6-31a9-42b5-a481-032b9e40fc11",
        "cursor": {
          "ref": "1e237c99-63d0-444e-98c7-4f01af834e04",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "49723512-4c5b-4379-9e7e-9763cc38fb93"
        },
        "item": {
          "id": "032603d6-31a9-42b5-a481-032b9e40fc11",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "51f288e8-bbfc-4209-9649-c9d83126f421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0404dbaf-5e1a-4b1d-956a-a7e7844ff42a",
        "cursor": {
          "ref": "5eb2846b-57e3-4f25-b449-2e77c0b3af61",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a23b3fa4-38f3-42c3-887d-51e8b7ddbb16"
        },
        "item": {
          "id": "0404dbaf-5e1a-4b1d-956a-a7e7844ff42a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "97f1faf0-d45c-43c0-a5bc-ee38df08fb39",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "b7cce8f2-5b7b-444a-a98b-3f11c902ed39",
        "cursor": {
          "ref": "4281f3ac-a276-4f9a-8696-b28ec833a32c",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c4e49dda-1ad8-4d9d-bef7-c6819d8febfd"
        },
        "item": {
          "id": "b7cce8f2-5b7b-444a-a98b-3f11c902ed39",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "23688063-9f31-4818-aeb0-f9649e8e7463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d52087-9921-4747-9bdf-b1bb37d9cfb7",
        "cursor": {
          "ref": "ee314064-8825-4c74-be5c-a10bbd40cfbf",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "924b9fcd-21ac-4956-91cc-01245ca36980"
        },
        "item": {
          "id": "e6d52087-9921-4747-9bdf-b1bb37d9cfb7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d3ac9a89-6234-4204-8c91-4fe1789ff1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfee986-5a64-463c-a71e-326a6d183de8",
        "cursor": {
          "ref": "024a26d7-dd1c-4e14-b2cc-cdbeb3507c21",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b262358e-4dd6-4a71-b463-9a34e54c98c5"
        },
        "item": {
          "id": "1cfee986-5a64-463c-a71e-326a6d183de8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "777e4e1c-0667-4d39-8219-61da275d94f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fa2bf3-951e-4813-a027-81e93cc6534b",
        "cursor": {
          "ref": "52eb8afa-7d11-423a-a0b3-57fb28a9e749",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d3cb8ef0-7319-4cb4-ab0c-c85193f25f19"
        },
        "item": {
          "id": "09fa2bf3-951e-4813-a027-81e93cc6534b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "397d49b4-a3ae-4dc1-ae9d-23ea2dfafd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9e1612-5a0a-4cf1-8771-002340636785",
        "cursor": {
          "ref": "7cf9a2f3-e736-4e62-9249-7bc2d32b638f",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "870c1908-cb29-479c-87c9-dc148168fd9f"
        },
        "item": {
          "id": "5c9e1612-5a0a-4cf1-8771-002340636785",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b8484cc5-7cd2-468f-ac4e-5ac6ee0586b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a3f852-4952-45bf-ac5d-52ae862f137a",
        "cursor": {
          "ref": "b3567207-22f2-48d6-9c84-c9c0de2c73ce",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b2dd7538-ef0e-4045-aa06-02e5dce80d63"
        },
        "item": {
          "id": "46a3f852-4952-45bf-ac5d-52ae862f137a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "80b8eee2-ce5d-487f-b6b7-24e295a312cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25de017-187d-4b0c-85c5-c580fa829874",
        "cursor": {
          "ref": "122b5f3f-967c-4e93-910d-7ffe43622136",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5fdc9b8a-fd30-4dd6-9f59-b4f90eba413e"
        },
        "item": {
          "id": "e25de017-187d-4b0c-85c5-c580fa829874",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6763296b-5025-4e2e-a896-182d97935d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8afa92-c717-4a2a-82f2-8ee6ce98d4fe",
        "cursor": {
          "ref": "4a16282c-b654-4094-b2e1-3f8f2ccaaf6e",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e59c4a76-b92a-4ab3-9715-5bf41663b371"
        },
        "item": {
          "id": "3e8afa92-c717-4a2a-82f2-8ee6ce98d4fe",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9f16310a-9589-4bfa-95a2-479401f1bc7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abe4227-3a09-44e9-a36b-c50c20f6a671",
        "cursor": {
          "ref": "8e3b1311-ee7f-4f75-b5b1-5320bad96efc",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "275a1285-ece0-4c82-bbc8-2debf8bfdc9c"
        },
        "item": {
          "id": "2abe4227-3a09-44e9-a36b-c50c20f6a671",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "86814bc9-c12a-4f35-a49d-9fb6e9379f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d8e87d-daf1-4e38-b44f-b614f3c6e127",
        "cursor": {
          "ref": "34351b65-8b5e-4876-aa25-c61732ac6071",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4557a0e9-c78c-4362-84c8-1e5dc8b06001"
        },
        "item": {
          "id": "f9d8e87d-daf1-4e38-b44f-b614f3c6e127",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "99ae5f42-5f1b-47b4-8cf8-d346462d8e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b41eeb4-2c0e-4c8a-8406-9a86cdf8fd67",
        "cursor": {
          "ref": "7cd24d57-8fc4-44de-8ccc-25d124b180aa",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1523f0f3-3474-4b47-bf2e-a30b1b10c756"
        },
        "item": {
          "id": "6b41eeb4-2c0e-4c8a-8406-9a86cdf8fd67",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9f195622-75b5-4861-8be2-43fdd87bed03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10476c8-0786-4032-bdae-5846a60fd559",
        "cursor": {
          "ref": "0d270b9b-5217-46cf-88c1-ed06ac92f1e6",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "18236695-b6ab-4b2f-916d-fdd3d3cbb00c"
        },
        "item": {
          "id": "b10476c8-0786-4032-bdae-5846a60fd559",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6d981766-35a8-4d8d-be4a-b27dc56f9e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125e32ce-68c5-4f56-8363-e3a71df9f987",
        "cursor": {
          "ref": "a9f8a734-8848-4df0-b402-db24d4d184dc",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d37015f2-0e41-429c-858a-3b7d29983f5b"
        },
        "item": {
          "id": "125e32ce-68c5-4f56-8363-e3a71df9f987",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f94146cc-72fd-4fc6-be06-2ab205f30093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be780dcd-8dfe-4631-b409-764b5f462712",
        "cursor": {
          "ref": "b55e8678-d611-4927-bb66-1e73d4795c24",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7146ba56-cc10-490d-b6ae-2ead79eac35b"
        },
        "item": {
          "id": "be780dcd-8dfe-4631-b409-764b5f462712",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d9a4349b-1863-4e01-be51-cc65dd7f8982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abbe725-76b1-4687-b1e8-91e08119ded7",
        "cursor": {
          "ref": "d6fe49cb-bbd0-4a84-9552-6865b4f8ee8c",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0ba7b961-e8c3-4959-9a9e-c9a02fdbaffc"
        },
        "item": {
          "id": "7abbe725-76b1-4687-b1e8-91e08119ded7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5d9661f6-818c-40f8-89f4-ad9314750df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12562af9-42e2-42fa-84ea-05e01464d311",
        "cursor": {
          "ref": "9671556c-79d5-448e-802a-0a1f462d1afb",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "32cfbd36-e3b5-4bf5-b4a2-5cc689d565ac"
        },
        "item": {
          "id": "12562af9-42e2-42fa-84ea-05e01464d311",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6e28117b-e41d-4fb6-88b4-4346b8e08511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672f6bf1-0cd2-48ea-af63-7503bbcba570",
        "cursor": {
          "ref": "90f1c00a-91ef-49cc-be42-3a15123cb8f1",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "eb790a6e-d12f-45b5-9a17-f285412aa51e"
        },
        "item": {
          "id": "672f6bf1-0cd2-48ea-af63-7503bbcba570",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fe3bc06a-28a4-48fd-9ac0-aec24279faf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4530408d-855c-464d-864b-289946f33694",
        "cursor": {
          "ref": "93129e4e-2c35-4f4d-b928-e6bbc2a8bbcf",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "af8a217f-cd47-499b-abb9-b5133bf60ac7"
        },
        "item": {
          "id": "4530408d-855c-464d-864b-289946f33694",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c1186289-5717-4ff7-98b3-388f6c053a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd9950d-9b3d-499a-841e-300b8d094bba",
        "cursor": {
          "ref": "c3307a21-0377-40f0-aeeb-0e8ba8767d81",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ba78055c-b83f-4541-a5ba-7503ef442910"
        },
        "item": {
          "id": "1fd9950d-9b3d-499a-841e-300b8d094bba",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "eb6abfce-4ac6-477c-b8d9-c72b5fe61633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15840de6-8708-42d1-90de-dce8850db03a",
        "cursor": {
          "ref": "c228eda0-f458-4415-8f75-0948bfef68ae",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "94469a5b-13b0-45dc-a601-cd472d1c1bd9"
        },
        "item": {
          "id": "15840de6-8708-42d1-90de-dce8850db03a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9c9f3cf0-58cd-49c3-8b3c-55824202168c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a074b004-7c9c-426f-9438-3d3cca231935",
        "cursor": {
          "ref": "f648a4f5-3193-4678-83bc-79e792f5e045",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ac33d855-ace6-45ab-96b3-fc5dda488e76"
        },
        "item": {
          "id": "a074b004-7c9c-426f-9438-3d3cca231935",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "99f95b9d-a8b3-4349-af18-a31efd1f3752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba5621d-7a23-4107-a5c2-9b88fa86b657",
        "cursor": {
          "ref": "6adb06e2-ae3d-4a4f-8881-17aaa619544e",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a86118b0-20ab-4e6e-b575-733225aa79ff"
        },
        "item": {
          "id": "3ba5621d-7a23-4107-a5c2-9b88fa86b657",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ee60a5b5-2db3-4201-bab9-d12eaaffc080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f66cc10-9e66-451b-adc4-5608771183f0",
        "cursor": {
          "ref": "5e7902f8-10a5-427e-8e65-5c27af76ad99",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e3818e65-166a-4f09-afca-5f55d12487bd"
        },
        "item": {
          "id": "3f66cc10-9e66-451b-adc4-5608771183f0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c243552b-ef65-402c-8cc1-0d5ce807aac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed576510-6dde-472e-8b23-618e292eb953",
        "cursor": {
          "ref": "c089c841-29c9-499c-8ee3-ccdadfd8e38d",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ffb20ce0-5364-4640-8156-49856f316477"
        },
        "item": {
          "id": "ed576510-6dde-472e-8b23-618e292eb953",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "64b0de16-ee4a-4d72-9935-313c01bec45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f714d7e-b258-4b94-9cb5-d04812e8178e",
        "cursor": {
          "ref": "2b84d13d-9b1d-4ebd-a17c-4308f0c73236",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0b1b628f-9c29-4ffe-827e-96ae4538e0f0"
        },
        "item": {
          "id": "8f714d7e-b258-4b94-9cb5-d04812e8178e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cdc504b8-15eb-4fd4-b386-a2a453af3574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1876bbe9-0671-4e23-96c6-afafafa85198",
        "cursor": {
          "ref": "022865a6-b2b6-43d2-bf4e-e49d5ae50251",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "63c2f4d2-333f-4702-8a0b-cad245a10103"
        },
        "item": {
          "id": "1876bbe9-0671-4e23-96c6-afafafa85198",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e16ae918-c58d-4ace-ae0c-7cf47c6c24a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d38407-e537-430b-858e-e1c3958261e8",
        "cursor": {
          "ref": "6dc6bcba-9f31-4c09-a331-1ded6c2205df",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2cad6203-96b9-4011-8799-775df4b3763a"
        },
        "item": {
          "id": "60d38407-e537-430b-858e-e1c3958261e8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "156a90c0-3edf-4bbf-b34b-d5e21f812c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7b9e7a-3fa0-4141-875a-f716db27d893",
        "cursor": {
          "ref": "0e304855-97a3-4231-a240-e1632a7467c2",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "03a33d0f-705c-4e3f-a7c5-b1b8fccc0417"
        },
        "item": {
          "id": "7f7b9e7a-3fa0-4141-875a-f716db27d893",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8651891d-12b7-4737-8cec-f4c76881c781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaac888a-f9f3-4d25-8da7-ae7bdd9bb2ef",
        "cursor": {
          "ref": "f4a453d7-be42-4a66-b9cc-f34a58252f34",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "224a2bfb-c33c-4258-a614-a5d968657ad1"
        },
        "item": {
          "id": "aaac888a-f9f3-4d25-8da7-ae7bdd9bb2ef",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2c4d4f4d-6ba2-47f2-a200-02a602f78c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72d252b-766c-4167-b08b-08fda522d273",
        "cursor": {
          "ref": "f1b9db54-33f5-4103-bee7-864e3732fddf",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "beee716c-e1df-4833-b5fd-2f00cc5814ca"
        },
        "item": {
          "id": "e72d252b-766c-4167-b08b-08fda522d273",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "20642ef4-3b9a-45dc-8e15-b83de9367d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b280ba27-2fa2-4247-aab9-a8378d3f1da4",
        "cursor": {
          "ref": "e9d38f17-b738-4033-b131-50520b98b6a5",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fccb9727-6aa9-4a7d-aca2-765b3517816c"
        },
        "item": {
          "id": "b280ba27-2fa2-4247-aab9-a8378d3f1da4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0f56fbbc-b89f-4afe-8900-9be62b565615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a42008f-fcc3-4396-8655-646350334459",
        "cursor": {
          "ref": "55250eba-e8d9-4789-8628-61b4131ac7d2",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ce09985f-70cc-41bf-8934-821b8e1df033"
        },
        "item": {
          "id": "7a42008f-fcc3-4396-8655-646350334459",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3697ac86-fec8-49f7-bf2a-242128285e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bbf94b-29ae-488a-a4e6-936bf8470bbf",
        "cursor": {
          "ref": "70621053-4a80-4952-969d-4bfbff3363bc",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2dc842cc-11b8-494b-8873-73427dad37c6"
        },
        "item": {
          "id": "12bbf94b-29ae-488a-a4e6-936bf8470bbf",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "436bc1db-5c1a-4e8a-a4ab-098d523a8d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f91673-5286-46c2-bd7b-188b57123953",
        "cursor": {
          "ref": "cb2902c5-aa5b-4b7a-985e-1c96ab7b49c4",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f1ac3766-2257-42f2-9486-12d9e7c7c7a0"
        },
        "item": {
          "id": "93f91673-5286-46c2-bd7b-188b57123953",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "88517e10-6bde-4211-926d-0518f5e61145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ba459c-edca-4996-b57a-34649bdad65a",
        "cursor": {
          "ref": "dd273de8-242a-4056-b3e6-0575ec9ec719",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "011cec6c-a6af-4ba2-8c20-26ab8b21cb44"
        },
        "item": {
          "id": "97ba459c-edca-4996-b57a-34649bdad65a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ac42aaf6-855b-44b7-be61-c04a0186d61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6209bd-d422-48ea-9abf-43a4e4b9238f",
        "cursor": {
          "ref": "7c0ad83c-1056-4f96-8f06-f3f9c52c49f9",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3f809237-cade-42d9-b601-3fe4b0366062"
        },
        "item": {
          "id": "bb6209bd-d422-48ea-9abf-43a4e4b9238f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "481ee4de-bfd8-48fc-b742-16f1af006495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a5f96c-9547-4cca-bafc-a8491765da6f",
        "cursor": {
          "ref": "5c9f42ce-9976-45b2-9da9-f6f4a8cb7ce8",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4d630121-ae29-4396-9b6a-6cd35b129283"
        },
        "item": {
          "id": "89a5f96c-9547-4cca-bafc-a8491765da6f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "12265492-ba67-412e-b4e5-0020df9407de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d7598a-b5d0-4beb-8d0f-4a917058e6c7",
        "cursor": {
          "ref": "4066fbf7-2cd9-4c15-b258-daec7de27799",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9785a93c-c2c5-43af-9ccf-9623c7874ab9"
        },
        "item": {
          "id": "f2d7598a-b5d0-4beb-8d0f-4a917058e6c7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4ed50a24-6eea-40ee-8d79-b595458bc651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d94329-7601-4f18-ab56-babb8be0e1c9",
        "cursor": {
          "ref": "e91aa57b-c401-4318-aa7c-112491e04d4b",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "78613ba8-50fc-4141-b1cd-0400b76bc6c0"
        },
        "item": {
          "id": "98d94329-7601-4f18-ab56-babb8be0e1c9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "67344810-dadc-43d7-a3e3-5febb1cae69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7169be-2b64-4927-acce-7ea7ee0dea03",
        "cursor": {
          "ref": "499f5c22-d010-41a3-9eb9-536209e1c12a",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "45760a4e-2b58-4efd-a3bf-52bf6b718847"
        },
        "item": {
          "id": "ed7169be-2b64-4927-acce-7ea7ee0dea03",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1e14bd85-0781-44b3-ad7f-7f98e5d3db39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7dbc6d-e470-47c9-8198-ab9750e29997",
        "cursor": {
          "ref": "32af6764-db4e-4ebb-a8a0-49ef2e2ab838",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "987c78cd-6493-49f7-a6e7-79699a83f1b9"
        },
        "item": {
          "id": "8a7dbc6d-e470-47c9-8198-ab9750e29997",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "195dc6bd-b312-4f3e-90d8-9813889c5472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbb0d66-70a2-4383-bdbe-889ad156047d",
        "cursor": {
          "ref": "059d54e8-c920-4375-a74a-bf7a3de66c4c",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "15784f9a-5ec4-4d22-a22a-40e4c094563f"
        },
        "item": {
          "id": "0cbb0d66-70a2-4383-bdbe-889ad156047d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4232f935-4ffd-4cb3-8b56-186e3f1103cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea48eb9e-5e74-42f6-b442-ce2d532a49c4",
        "cursor": {
          "ref": "cbf264c4-5275-48ba-abd9-4a6d70610e6f",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "bec7fa0f-994a-416e-bd24-c92f6dc10d80"
        },
        "item": {
          "id": "ea48eb9e-5e74-42f6-b442-ce2d532a49c4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "558d6893-d90a-4f36-97a3-841bc5824435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4ab80a-b755-48ea-8225-50d080fb0982",
        "cursor": {
          "ref": "811c8ac2-1b82-4541-b5a7-5bd760c42910",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cd231d56-e8f2-4ba1-b947-442221fbfb80"
        },
        "item": {
          "id": "5d4ab80a-b755-48ea-8225-50d080fb0982",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a64e797b-7eed-43d0-8fed-1410783eb762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09182716-73a1-4630-93a5-10c74e8a3487",
        "cursor": {
          "ref": "f76e0ba3-8f9b-47dc-9781-0b009ec08326",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "00a32934-38f4-4827-8c76-1ccc4f5742b5"
        },
        "item": {
          "id": "09182716-73a1-4630-93a5-10c74e8a3487",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8cc07599-4424-4d8a-8925-a7d5918bc4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d74386-52eb-4035-92d3-909b19c9fbb5",
        "cursor": {
          "ref": "d646fabb-3ffa-4cd3-97c7-3287dcb538fe",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bfbcd0d9-5d8a-4656-b281-4aaeddabccf3"
        },
        "item": {
          "id": "d9d74386-52eb-4035-92d3-909b19c9fbb5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3604af93-83e4-4237-92bb-f360ce2dd43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3ac02e-d407-4ada-8818-05d21f85f6db",
        "cursor": {
          "ref": "5b6449fb-41af-4db3-a951-f3cd4821a2c3",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bc53df59-9dd6-4e10-bec7-25fa487dfb79"
        },
        "item": {
          "id": "1f3ac02e-d407-4ada-8818-05d21f85f6db",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0b40ddc0-5e4c-48fa-82e4-8c93cba96abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413343db-f254-422b-ba1b-cfb23122a015",
        "cursor": {
          "ref": "97a3f1e7-66d8-4064-b268-b6eb8813b12d",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0ceefd7f-2d15-47aa-9b14-84123880b552"
        },
        "item": {
          "id": "413343db-f254-422b-ba1b-cfb23122a015",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cdce01eb-9d1d-485d-b856-3570e08bcf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bed1ab2-f90b-4a33-a747-c23e732fdd40",
        "cursor": {
          "ref": "cdccc0d5-e47a-48b0-9db0-396453e7ac24",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c0a7fa49-2992-4e8f-af3b-d7f9988cafb0"
        },
        "item": {
          "id": "0bed1ab2-f90b-4a33-a747-c23e732fdd40",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "641458dd-bd5a-4762-b55c-d04b0cd246bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a65e7a-3bfc-4f47-ae30-d234496a40a1",
        "cursor": {
          "ref": "c2e851bb-7005-4710-93bc-ef24aa32c1d9",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "90bfa591-778e-43b7-9cc0-e1a710c206c2"
        },
        "item": {
          "id": "88a65e7a-3bfc-4f47-ae30-d234496a40a1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9af962e0-886f-402f-a72d-c723180389e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e1e862-b1d2-408e-846d-8e3b16d31940",
        "cursor": {
          "ref": "202797e8-8d5a-4557-9490-36f3571829e1",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0f209f7c-cc9a-4b11-95db-da0ba4f02274"
        },
        "item": {
          "id": "e2e1e862-b1d2-408e-846d-8e3b16d31940",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "46a9beeb-9750-4301-932f-71a7d05b0ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e38b034-ff18-4264-946f-0562a931bf5b",
        "cursor": {
          "ref": "b67524cd-0659-4c68-98fa-c598b643d469",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2a249a0a-31cb-44cf-91c9-31d0183c994e"
        },
        "item": {
          "id": "2e38b034-ff18-4264-946f-0562a931bf5b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "07559e90-8415-4536-8e13-a43868cdfcc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8069658-c3bc-47a8-b5b1-3f2fcc9f8dd6",
        "cursor": {
          "ref": "6274de85-d824-4155-bdcc-6507e8525811",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e8383bb0-6179-47cc-a8d7-b68c217ecf14"
        },
        "item": {
          "id": "c8069658-c3bc-47a8-b5b1-3f2fcc9f8dd6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d201876f-e5bc-4a5b-a506-04543e64f796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fd9646-3b3d-45ce-97e1-a8f91ebf5ed1",
        "cursor": {
          "ref": "651f5412-4829-42db-9b88-b23fdfdb1da9",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "36d4a4da-bd0b-427b-b40d-43e0273736c4"
        },
        "item": {
          "id": "31fd9646-3b3d-45ce-97e1-a8f91ebf5ed1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "de0756d0-e192-42af-8bc0-0e93d811be26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd7ab1d-b2b3-47bf-beae-9e92fe3431fc",
        "cursor": {
          "ref": "ecb34e3f-e4d4-4a8c-98ca-f03ac6b22877",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b7ca9e99-3e38-4a24-a73b-ffb242595e67"
        },
        "item": {
          "id": "9fd7ab1d-b2b3-47bf-beae-9e92fe3431fc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ed07b558-fe50-4803-9812-5966f14c7629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224b88f0-bde5-4836-9d7b-e0bd665aab8f",
        "cursor": {
          "ref": "4c5dd3cb-831b-4c63-8545-36571373c7ea",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1de14b4f-be47-475d-818a-3dca2c84bef0"
        },
        "item": {
          "id": "224b88f0-bde5-4836-9d7b-e0bd665aab8f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "75b153f5-ec9a-45b0-96ea-d61ab3375f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0363d9bd-323c-45f0-a6aa-62914b95b42d",
        "cursor": {
          "ref": "298e580a-5515-48e0-9f36-9009498c651d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a5184f99-0a32-4d62-8766-662dc68ba65d"
        },
        "item": {
          "id": "0363d9bd-323c-45f0-a6aa-62914b95b42d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f93ba62b-637f-49fd-98cf-1c795049c731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d4a2ff-d7b5-4db9-ad96-f1cca482e412",
        "cursor": {
          "ref": "f29b23b1-4216-4b0a-bfef-a591b4ba2390",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "57f14ee6-389d-4101-9696-d79d6f18bd02"
        },
        "item": {
          "id": "02d4a2ff-d7b5-4db9-ad96-f1cca482e412",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c12c941e-7830-49a8-9cc0-5e15431786b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ba5907-35ed-4513-981f-3e8461a9ee61",
        "cursor": {
          "ref": "e3e5f952-8bbb-42bf-807c-c5adc7977eee",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "18a341e9-c59c-44a8-b555-46a02520e245"
        },
        "item": {
          "id": "d9ba5907-35ed-4513-981f-3e8461a9ee61",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9eaf9ec5-9700-4f4f-a017-b805ec7889cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2bfd3e-8637-4586-98cc-80298d7a4aec",
        "cursor": {
          "ref": "6e33f27b-496a-4231-ae21-8e2b4047ef8a",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "fece0f4c-90bc-4be6-ba01-2071b164d938"
        },
        "item": {
          "id": "4d2bfd3e-8637-4586-98cc-80298d7a4aec",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a06281ba-0beb-48be-b361-10f3d7d99ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2721b730-30d9-48ea-9a54-18e26c770fd2",
        "cursor": {
          "ref": "9e7d858e-dd26-402e-b148-a9d83e46652b",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1113f485-0d42-4cfc-9d25-b0f5865d1d8e"
        },
        "item": {
          "id": "2721b730-30d9-48ea-9a54-18e26c770fd2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0f3fc57e-c974-41fc-8df6-1da8239e4d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56d3403-e01a-4bcf-8779-8df8b48233a8",
        "cursor": {
          "ref": "a35556dd-c455-4205-99fa-d881ab8f2262",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ca9b1de5-fe8d-447c-83ba-35b27f4d774a"
        },
        "item": {
          "id": "e56d3403-e01a-4bcf-8779-8df8b48233a8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9a91a142-45fd-4386-9301-be226b939b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671479c5-51b5-4239-a459-7615866a923a",
        "cursor": {
          "ref": "fdb1f855-b1c7-490c-9ca3-348ddf337d52",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "85035e69-13e0-4fa8-9008-4d3c4711db77"
        },
        "item": {
          "id": "671479c5-51b5-4239-a459-7615866a923a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ac919865-1d1e-4df5-9d5f-3fca75207b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de765fe-8786-48f8-958e-8eecbdff34a2",
        "cursor": {
          "ref": "9f71c7cc-d3da-4f1a-a178-b6124dfa1769",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2f30ca10-1675-419c-a263-4a14f7d012a0"
        },
        "item": {
          "id": "4de765fe-8786-48f8-958e-8eecbdff34a2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "543f19f0-5de9-4772-a3b1-5d05e57fcc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be120395-eb07-4508-9d9f-a8c5e90b695d",
        "cursor": {
          "ref": "0a9d20fb-c311-4f13-be07-e2b8d9ceb44e",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b9de01af-9def-41c9-b4eb-9479a2226bd0"
        },
        "item": {
          "id": "be120395-eb07-4508-9d9f-a8c5e90b695d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7f075f70-accd-4d05-9c55-82b700135b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71176229-ad0c-462c-bafb-fb4fc7e40a7f",
        "cursor": {
          "ref": "1eef7e3c-9727-4151-a489-860ad088c049",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "77052225-d76b-495f-8ebf-1be3be3f74df"
        },
        "item": {
          "id": "71176229-ad0c-462c-bafb-fb4fc7e40a7f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "75a4b212-0616-49c9-ac15-1d0cb4ea96e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e506df-5224-4d52-9ac9-34b13e4a2fb6",
        "cursor": {
          "ref": "eafad1c6-7f98-48d1-9fad-3c5d38fdbc87",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "524c56bd-2160-4370-961c-5fd767e3fcfb"
        },
        "item": {
          "id": "70e506df-5224-4d52-9ac9-34b13e4a2fb6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6a508951-4f39-40a4-a30e-e1aedbf05ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63cfd22-10c8-4367-8f7f-072f4f8358b9",
        "cursor": {
          "ref": "529171b7-75d5-4666-a1ac-d7424334626d",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ac0958d9-79a9-4a35-b495-ea050ad96213"
        },
        "item": {
          "id": "d63cfd22-10c8-4367-8f7f-072f4f8358b9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6a978109-465f-4c75-9771-d5517b934ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359cc593-d61b-4942-89b1-10986f7ecae5",
        "cursor": {
          "ref": "2c2bec5a-c667-434e-b23a-f2a36bf97d00",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a80db5f4-7e59-4d71-bddf-6df9f594f754"
        },
        "item": {
          "id": "359cc593-d61b-4942-89b1-10986f7ecae5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "dbe2ef0f-1e00-46dd-adb4-ddc20d8388f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33cb10e-ffc7-4759-84c1-f2a7f6308ec5",
        "cursor": {
          "ref": "f32fc804-a150-442d-b5b7-9f36b95b98a0",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "fb329717-7ae2-45b7-8f61-c02a825ad9a1"
        },
        "item": {
          "id": "c33cb10e-ffc7-4759-84c1-f2a7f6308ec5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fc39d4f1-f037-4140-b9e1-d9ce5cc6d302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0d3182-a87d-4445-95f2-eb0c200c1eea",
        "cursor": {
          "ref": "28b748f5-fd7d-4fee-b538-99b4ea2e7455",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3830b613-4a6d-4983-8f1d-3927d3b8f680"
        },
        "item": {
          "id": "ea0d3182-a87d-4445-95f2-eb0c200c1eea",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "325e57e0-12c6-4b63-ae3c-a8f15fd7eaf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02b36a2-2160-4e8c-bc68-48d313efa078",
        "cursor": {
          "ref": "9b23436a-4b43-49b3-acbd-85beb83f0b05",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1bf04bbc-178d-4d8f-b250-441fef427d98"
        },
        "item": {
          "id": "b02b36a2-2160-4e8c-bc68-48d313efa078",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "04acafff-6693-4b2c-86fa-528b79a9bffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58bb659-1968-4a02-85c0-de393ec07296",
        "cursor": {
          "ref": "50b39151-2d3f-4411-92d2-9d3063a36f65",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "4592ff0d-c2f1-401a-b899-0888124b5b1b"
        },
        "item": {
          "id": "c58bb659-1968-4a02-85c0-de393ec07296",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fe4552ba-ddd2-40f4-b7a3-69bb54931ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc85d322-e1f8-44ac-9b0b-8bc9e9967d32",
        "cursor": {
          "ref": "ed87bf8d-58ef-4373-95ec-c5ecb0a8dbc3",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d2544ba8-9365-4255-bc3a-f0a73c92e0a3"
        },
        "item": {
          "id": "bc85d322-e1f8-44ac-9b0b-8bc9e9967d32",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "434bcaf3-ce7a-4793-a0bf-4224e5c19839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fe1b01-5561-4722-9ed5-b7e5e9fbb2c1",
        "cursor": {
          "ref": "b3110e80-04f7-46fc-81c1-2f150e0a0341",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ae8b40be-77c3-4e8d-a36d-ffa811590b85"
        },
        "item": {
          "id": "b3fe1b01-5561-4722-9ed5-b7e5e9fbb2c1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9f2f01ae-4720-48a0-bb83-a43e8d8f408a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e7b5c4-3a9b-4514-b599-f0428e269608",
        "cursor": {
          "ref": "ff0820b4-38d6-44bf-9177-a8af7a4d6337",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "59c0cecd-e92c-4be7-845b-f437e978ddbc"
        },
        "item": {
          "id": "c1e7b5c4-3a9b-4514-b599-f0428e269608",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "128b1fe4-0848-4b7c-956c-2ff819ff7125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56697593-959c-490c-aa03-feabda79a492",
        "cursor": {
          "ref": "44749f4d-3df2-4e0e-815b-f7b51937cd68",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "816b8166-d1a5-4751-af7e-fa2825061c06"
        },
        "item": {
          "id": "56697593-959c-490c-aa03-feabda79a492",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9babe10f-3cac-4581-bb49-4989e40f0c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8daab5-5236-456f-8d86-dd440011fe22",
        "cursor": {
          "ref": "bdd99e32-faaa-45c7-a8a5-2ef97380fba8",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "6ea61779-ae52-4d9e-8b1e-eea9f3018daa"
        },
        "item": {
          "id": "1d8daab5-5236-456f-8d86-dd440011fe22",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4d1cb9f1-9053-4433-a16a-0ebd719a5b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65826588-cc42-4913-9265-32959a7b9094",
        "cursor": {
          "ref": "7e4022d8-3f5f-4c7a-8c4f-d4efbca7dd0f",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c888952d-f873-4259-9c13-c15f1b0ac152"
        },
        "item": {
          "id": "65826588-cc42-4913-9265-32959a7b9094",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4eea0e61-6318-4f75-8862-874c23858157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb69a09-d1a3-460b-9945-6b6f8cccdc17",
        "cursor": {
          "ref": "2c47c84a-5aea-4e82-983a-82da31e4de53",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "350a992c-5f86-41d5-a2a8-e5fa21d55511"
        },
        "item": {
          "id": "2eb69a09-d1a3-460b-9945-6b6f8cccdc17",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6ff750ab-97eb-4bba-8e47-d10254386b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3af92e-5645-4d37-b526-dd5b97990d49",
        "cursor": {
          "ref": "f6d5dcab-5482-4229-a637-8de9d2fe74b9",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5f35ed5d-e6f0-46eb-9629-b928a06b63aa"
        },
        "item": {
          "id": "3d3af92e-5645-4d37-b526-dd5b97990d49",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3f28ef38-43f8-412f-ba07-383210ca3095",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2999278d-e916-40f7-8219-3089a9986be0",
        "cursor": {
          "ref": "5b646d3c-f138-4662-ba3f-042c62353d31",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9b0f107d-6656-4e9e-8ea6-47159bf85226"
        },
        "item": {
          "id": "2999278d-e916-40f7-8219-3089a9986be0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7d148ca4-d149-4c29-a7bc-1c4387ede1a0",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e3a7b9-0fc1-4cba-8445-2dcfa4a34550",
        "cursor": {
          "ref": "d908804b-524b-4da6-ac13-8a531120418f",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "be0fd3cf-6db2-4fbb-93d3-752aa2315fb9"
        },
        "item": {
          "id": "87e3a7b9-0fc1-4cba-8445-2dcfa4a34550",
          "name": "credentials_verify"
        },
        "response": {
          "id": "40ea9f31-564d-42d7-b11b-b50b8908db83",
          "status": "OK",
          "code": 200,
          "responseTime": 3163,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d83356-1a44-436b-9426-680bc48140b3",
        "cursor": {
          "ref": "991eab2d-6198-4672-9643-7e9876a9ccee",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0b303eca-0389-46fe-9f54-067b8ce1e21a"
        },
        "item": {
          "id": "c9d83356-1a44-436b-9426-680bc48140b3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d8e258de-d249-4d90-8c13-a258cfa6c782",
          "status": "OK",
          "code": 200,
          "responseTime": 2975,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82d10d5-2066-4322-bade-bb48fc3c769c",
        "cursor": {
          "ref": "72bd5cc9-4ef9-4c38-a5f1-61566e96b23a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "55ce1bfe-b21c-40ff-89db-ca96f3d87b01"
        },
        "item": {
          "id": "b82d10d5-2066-4322-bade-bb48fc3c769c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d7377749-9fca-426c-aff1-d39e130315a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82d10d5-2066-4322-bade-bb48fc3c769c",
        "cursor": {
          "ref": "72bd5cc9-4ef9-4c38-a5f1-61566e96b23a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "55ce1bfe-b21c-40ff-89db-ca96f3d87b01"
        },
        "item": {
          "id": "b82d10d5-2066-4322-bade-bb48fc3c769c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d7377749-9fca-426c-aff1-d39e130315a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beed698b-e485-42e0-90fc-3161688ca750",
        "cursor": {
          "ref": "2e5a3b11-9eb8-4fad-845d-6c5412991e4d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2c8a2cab-ead7-4e57-9c4e-cabd563cae9a"
        },
        "item": {
          "id": "beed698b-e485-42e0-90fc-3161688ca750",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6b49a8e5-011d-4557-900f-684e6c13d62e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10415135-839b-4c20-b69e-a3be3488cb98",
        "cursor": {
          "ref": "75cd1664-b8d5-411f-a5bd-7153523d7a63",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "06b555f1-1b80-42e5-bdb2-ecbb3a3999ac"
        },
        "item": {
          "id": "10415135-839b-4c20-b69e-a3be3488cb98",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0f846544-3558-4f74-864b-d8f47085212c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}