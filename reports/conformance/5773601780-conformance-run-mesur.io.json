{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "25ba5325-467f-44c5-85b6-3c1ee03f052b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f5d6bec1-e558-4e20-aec1-f065de433eaf",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56a28762-c5a3-4a00-90f5-e8b6d4fe98ab",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b01abcf6-f02e-4cf0-aa75-ec95a5b8a27e"
                }
              }
            ]
          },
          {
            "id": "e7739215-68de-4884-b639-c933c1eb14ea",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "41182a71-cd47-4157-b5e3-f2455084c45d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "21330128-7344-4352-ac5b-415eba6db55a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "24cb204b-b568-4701-a4e1-e468028779ae",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "43d62b32-182d-415b-8bb1-7b971c9b2171",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7d1a575-0771-4018-b972-3019c58fd34c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4439b4b7-cfbd-4863-b1ba-48b778fb7f80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "349b0b7a-7f42-4c51-9b93-1b841bed8d64"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6ae2819f-336d-49ce-8880-c6a566228ffc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28404ff1-3d31-48fb-87c9-699cfd6424be"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e0247ec8-87aa-4444-8a0b-d33980636d90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e9eae04-8e74-4852-a7d8-75fc7f17548a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d8b236d-81db-44e2-afbf-c33fc1c3e89d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "80c6e860-4382-409a-85b2-26a2f82c2b9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36c52030-5cb7-4ae0-97e5-73905868123f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16d18fba-441d-4479-a9aa-7d057d064028"
            }
          }
        ]
      },
      {
        "id": "0a91d26f-bbe5-4737-b692-898a8c1af6c2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "919f2fe8-37d8-4ab8-8c89-09b1409e0828",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f98128af-455c-4cc9-9771-27a624a98817",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5e5c510a-3528-4a97-ac2a-be3767daa13c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19470f3f-a3f7-4b23-baf8-e711faae8706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "570d243d-b145-4c63-ac3d-12c80e27b07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c36f46-1869-4a0f-946c-30ad6f1089f3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ad0406-b9ac-42f0-b8ed-0daed6584242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51dec1ac-9069-46e7-9794-4b96bf2a52a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98123255-d3ba-48fa-80a3-b54d46646ae3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec93458e-0f3c-4eb9-8437-323aa6cba546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1cf8fe2-4eba-47cc-8e38-a01b3ad6945d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d4a68226-492a-45d4-b0ef-9a789cf30db7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f922ad8-c6e4-4347-91b3-66ebe58ad79d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843ce242-a0fd-494f-985b-2104c67517bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd3082e3-2d5f-4b2e-8090-ccc744ecfd26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d99518-cc38-4a5b-809a-2cae38e09a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d5d838-dfb3-4cc0-8ec5-c3bdb66553e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a0896ec4-9d49-425b-ba65-ea98335514f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9db951a9-8011-4eca-9087-4120a2231079",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc65d929-eb55-46ff-8796-f676f946b349",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "55ebd88e-f804-4e59-9d09-a123e377237d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02c84bbd-b32e-4004-8d16-55c924faf18e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "32023be6-cabe-4073-acc7-121072a6461a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dce82dd1-f39b-42b8-bbea-1b6354537e6d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a61fc0f-ae26-4d18-acfb-fc3d671e8e73"
            }
          }
        ]
      },
      {
        "id": "20969696-9f22-4c75-b060-3ae8e80d5237",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fc253d9e-31e7-4c73-86ca-aaf1a9cd754d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14bfc526-9ba6-4ba0-82b6-e82942c4363f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "59631904-cf9f-4597-86f4-fc414aa1dee1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1680a7-991e-4f1e-881e-05a405efc525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb95685-42dd-4ff6-9ea8-98f30f919341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821e5ec2-9715-486b-bd31-9dcaea8ab673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "736eda00-8522-40fb-8cc2-634810bc646d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cb7b38-742c-4c52-a3b9-a09c564b6329",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca3c733-0520-4550-9166-423998799a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446bae8a-b39c-48b8-b384-c0a7875ad064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684331e9-35e0-43f3-aec8-7d93a47751de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15d77d27-1a0d-4bed-ab3d-e3e76dc39fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37d7fa0-52c0-4897-903a-d7c014ea2409",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cacc9c-81f5-4688-a31d-b4841649db4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce2876a-f965-4da0-81fd-ca7f356a2619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa62f6a-cb1d-4d9f-aea6-192483c617a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfe9ccc6-3b58-418c-99f1-99d3e220ac5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c269273d-12e5-4708-bc97-046f8b62ec0a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7075ff4b-96e1-442f-a672-fe75c595381e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3e70e6-4d03-48f0-9baf-171cd7d00f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5d2ddc-3093-45ad-99a1-95a4c93c34b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a72f7ebf-6a5e-49af-b264-a6c9ff4c2e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e6a65b-63b2-4a71-952a-2a31fae16dca",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3263a8-81b0-4066-ab4a-836522804bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d69f72d-fd4f-40ac-9bc2-c75afee81ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47046080-cf9b-480b-8520-0c63dcdfba2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d5f4ada-5996-424f-b6d7-0c1f5c74d32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1928c7b3-3077-4e87-a764-6a3438e27119",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07429e62-7c68-4b4c-95b9-95ec0b738792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e59262-b519-42d5-a755-6a2535d9063b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6bc319-b56c-497a-9f74-6e1813225508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4f9b2b2-4ce8-4e13-a686-689f62ddfa69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1daa0a-6656-47a2-b8f2-0b05676b7881",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84b7887-4b86-4194-988e-b916a5b9e76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3342e03-a79c-4dc3-8de9-5c897822c965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa26101-d480-4076-aa5c-4e402a63f04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c8d08e7-2ce0-4f08-9f6d-dd4c4c48a105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e624a72c-56a7-4f97-8fa7-90778baf7365",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ade7ce4-675d-4513-9ad8-51697947447b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5cc883-6e6c-4f09-955c-734b19b3fc7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4211efa-db2e-4217-8eda-5b8b2ce2ae39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1004ac7-7e72-4161-b93b-4d83c5506dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb9e8f7-ffe8-42bf-a342-d72035b7ccc5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217f6d52-ac2d-4af1-91c9-b1294778bb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b832ad78-4bc9-44a6-a59b-85621ed0cef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06453bbb-39c4-46f2-b807-38cdd90e1935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "072dba4a-b31a-4e6e-be50-238d2c77fff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c484bfd-03c3-4e8a-a25a-3d600329a38e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca175cc-7a5f-4c23-b202-81a922ebec43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d505616-e091-46bf-98fa-5c5a9703a3fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a17fe0-5bbf-4284-91fa-35afadf96b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "064da747-ee34-485d-820a-d08aa0e14e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db22418-5a0d-4bbf-9ad3-d2067ec194e4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79da86b-3dab-4184-ac53-dc4826330889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca75605-0956-460f-8bab-9e7842c9a6dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9528a50-328c-4e97-a1b6-e66b3403d6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dd9ee41-7413-4712-9fb9-93acad04f8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4592ca-c38a-4278-9181-3b60689f3880",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2a3b90-5c83-4a43-a34f-836416de42a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c066c9e7-c035-4229-b97f-a28298efae69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b10917c-9894-41f6-8585-ad358d7fa099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e890b9f0-cc43-4a8d-8f23-026a61e738c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179e2107-a0f6-4728-b0f1-34afbf9387a6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45484f2c-f70c-4815-add4-18307111a8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ffc361e-49ff-4f28-bf1e-103d96068486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4212078e-842b-4216-8584-e18904c24034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63e634bd-588c-493c-9d04-852e9f456643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8227d2bc-8ee2-4bf6-ac9c-108306d0e621",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23333737-5d61-4155-8878-bae31443b03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14397ed5-e8a4-4a95-9be2-0dc55dc62f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2e96f7-0666-4f72-a769-4722ed17562d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1026e5a0-a726-424f-8916-1828d1e4c129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e220aaef-9040-4036-8030-eb6168a57a8f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6b002a-1318-4128-bb07-d55d3be2a2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10e681b-0917-49cc-9a49-8b91caf08388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c923b4b-401e-482c-b12b-932563edcf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a57cb4a-4d17-446e-9b6f-122fd72d5b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc42e6f2-34d4-4f52-99d9-ddd075a2d059",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eed778d-fdc5-47d3-82ab-5ef975ac71e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a32fbb-5a3d-409d-a840-258e44e08d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a8dbbd-2e63-470b-9057-a7f0da0708cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b527e226-dc44-4ac6-948c-cc81bf430eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1eef57a-aa47-42cd-9580-c3b70447a7ca",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c62868-c3ac-49d6-9c82-72a605d10c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566ef1c4-75a9-47e1-b192-1545d5cc3a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffb0bfb-5f15-4623-8ce7-88368c15e33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1badca43-e93b-4d65-870a-a64118ea53fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88c319e-ce99-465b-b2f2-fa1ec442f042",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ac2586-79b5-4f16-9f75-4e5718c4c53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1facc920-aadc-4412-9c22-f5fdd792ad5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b15905f-a9eb-4d2e-bc66-65eca595e71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7165d2b5-5d9b-4769-8ed9-eba6949c4d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62319b6-3c89-4ab0-a7ab-090b45ca5c46",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f407edc1-639b-4e3c-bd6a-9d42020d181d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8e02be-672c-41c6-bb14-97e42b5f9f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87807a99-f9a4-4283-8b76-2c91ac35ef8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b4ae91-1aaa-424c-a5c9-171677fea9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e120599-75ea-4456-a17b-8691a936b05d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7c391e-b597-47a3-8915-19091180d4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0898615-0b8d-4687-98a0-8eabf320ad92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e37864-4ccc-4233-96fa-d913241c4431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f4d4b5-9390-4fcc-8d60-077c3a6f2e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e00590-2117-4e85-a958-c262d3cde2b6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20ab79e-9233-4a1b-bfc3-fdff6c8fd8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf8df38-0f05-4792-a24c-76dd2debc4a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecb2ab4-0d7d-4ed2-b2b7-79f215702fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "892ead1a-436e-4e5b-83e5-0abfb4d1a52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc619ff0-c479-4ec2-a201-6187e6fedd67",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9c4029-6ebf-4cce-8cf9-79f7f8e391ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b3aae2-0037-4dac-846e-b6ced6db4a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f176588-ef17-4397-b5b8-f7be03186565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18eacc47-1cf6-47da-9539-fb5a29aef53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f9acc4-4b20-4ed8-a461-d5c9ae7930f0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cbbe90-9898-4ade-8e42-ace24061a053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce059a9-0064-421a-8f43-54572893d0ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f4428b-e9be-4e44-88c3-b9d7cd5aa532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "087dfe6a-fe71-4722-98b6-984057e75c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdb51d4-392f-4fdb-a11f-5117be0e987c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c7270a-916e-4aca-a413-d7a6af867648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0266102-cd3a-4dca-8871-4d9949c222fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01b5e52-6d23-4066-bb41-85b887b2ff9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "647c719f-eaed-436f-8358-164ea53a3458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f50dcf6-d014-43e3-850c-53c1798c16ff",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aecc59a-ff80-409c-8c2e-8981e726b326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c54a5b-d590-484b-ae4c-38a77cc26c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96d600a-df25-4bca-b38f-b69c184d1d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "10b241fa-adbc-49cb-bd8f-9daa3bab981e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9473ac6-4f28-4fd1-9640-f2883cb9781f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ff7ff1-822d-43ca-8ee6-956d8c930aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d23837-b5f1-4ee8-900a-c675eb29a2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9b0520-d85b-47fe-ba14-10cafeeef483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "845cf575-c46b-4abd-86c9-d9248b331608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e06467b-34ea-4b13-95d3-d028b2a7aa31",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420e9191-d522-481a-a19d-d41c095f057c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f78b7dc-7540-4270-9f0d-0d2d5b777de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c271b52d-bc9a-4c3c-9d1a-8c73c77ef19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7481a8-bffc-4b02-9ee6-5cd5ffc404b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e3a4d5-19a0-4493-9fa7-bbe355bff6ca",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be24f28-338c-4334-864e-190cc08d962c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8adb29-863d-4ea9-869d-5dc8aebf4889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b5d670-0bb5-4338-b430-228bb6e37ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5718ba-c99e-4536-b972-92924e79543f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386d95da-5c5d-460a-bdab-0a6249e00641",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26795d6-191d-461b-ae68-1591e2961cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceea1bb2-f777-47f9-a8ab-9a1de49924c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644c80d8-d38c-4483-9b5b-65f780546547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27f0ac53-2701-4afe-8655-2d5e53a3d4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fb49a2-ce46-4517-ab5d-17ee480cd01a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904fab7f-991b-48ac-b57a-4c4c580ce02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986d6709-c4cc-488e-aebc-94a87cf050c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049c5a37-8b66-41ad-9ab9-288949a5a0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4c44a0-ff6f-4046-9c97-9b81c8c913e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4bcf4b-8912-468d-85b8-e61701522fe9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657d608a-2f7f-4ae5-b388-5a4637f92625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64b7459-1633-4631-ab26-096eab29343c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f06211e-33ca-45f8-8ef6-14f0dadf38bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "35cee189-a740-4669-af65-ce890da42c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d2f8e5-cbf6-4365-affc-383b4b963363",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de95a375-19b1-4514-beef-ce99d09f54e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979778fb-99a4-4e77-8e42-cbfcdb105d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b8dceb-314b-4924-bf44-aa1821bafa94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56388ed2-35ff-4699-88f8-dbe5f9e6e3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eec6693-c60a-422b-a0e7-d30b1ecb36eb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f849cd-d67c-4a4f-8597-8990dd841c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e71ddce-6207-4828-8272-30b051c2259c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3d7015-e43e-407d-b0c6-d2e3b6dbf51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa239dd-ecba-45d6-9229-4c35e4333dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dad4f6-e027-48ca-b0d2-7e9fa1f9dfec",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15d5fb4-d868-43b0-899e-936fce64439c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43379952-2fe1-4db9-9040-1301b823cc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a58a325-12d5-4156-a7df-bb74f2f933ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29e1eee2-75e8-4bce-bccd-999db33bf591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03dfd5b-04a4-4270-a31f-6387d35a8f0d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114ed2a3-8cff-4234-8835-e218dfd765cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523d5936-bf33-4323-bfc9-cc678e8494b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cae8102-3134-4178-9503-0d3aa1b80d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "31936036-fd5e-4e3d-9a37-6ed4abb2c741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa196e73-c356-4f00-b4ed-49144c225de5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5177fadc-0fd8-4e38-9387-3f113960ff17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cbd4155-a99d-4d13-9619-85fabaa7120b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6c4ade-bcdf-41e9-99e4-bba230265440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4689a393-234b-4bba-a25a-a0325bac7978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2cb847-a5c1-47a4-a9a1-59fba07ebf54",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f285b4-3f61-4050-9c9f-9c3198bf9176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a51a18a-1913-4cc8-9c58-5a7015eb5b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3b0ed6-cecc-414b-822a-d5d324ffa5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b4843d-3636-42de-b899-bbb6871e7334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7debdc-2645-407e-9dbf-d4ea0c56a025",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c8e118-4778-46a8-aa0c-cb5c65fce9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039dbc56-d2c9-496c-9d82-bf92c60ec5fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bc92cf-1229-45b7-a7b7-45a4b101f2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5198ea88-0f94-40e9-8c88-456c4711a665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f90475-38bf-4897-8ff3-ae4ec490c13e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e19d34-4e8e-4edf-b14b-b0d39be07701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3fa9ab4-7941-4a13-8b06-5c38a89b4ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b55fc36-ea97-42c4-91a2-7b488dd035a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "96528bba-11c3-4135-949d-ca291aae035b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecd3cf8-e633-463d-83ba-c50eb0bacaf0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70fea84-9c68-4d10-b94c-6b338fa67f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884d4c10-82be-4fec-ab00-5721434d2097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3c6f15-ce9d-4318-a41d-7ce119815571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f39e6ef-7a81-4ed3-9e56-af798d01177b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ded705-2a14-4621-b830-548c34fd14ed",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdbe61d-beb0-457c-a141-e0c498065748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e8c4e1-5176-4125-b1c6-ff60e809527f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09007d9-7dbb-490d-87da-92471d72d77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "377b0fc5-4d05-4ca9-a784-a4d04c5ae81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256c67da-8e8b-4955-8470-9c6244fa1683",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623ce42a-e8cc-401b-ba99-e29493493344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7463968-6830-4beb-ad85-d9522fb7cdd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d0859f-7106-4e64-8a33-6f2e47a521dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2ee437-4330-413e-b4c7-36d0255e53b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca173e7-9b38-4394-94e2-885afad12e1f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ef5569-3403-4eea-b132-abdb46dd141e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6724bb6-9486-442e-a845-cc55d3829c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d76659d-9caa-48e6-8c82-a8f0080f894f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1dca0bd-f70b-4c64-8d69-27bf019dfcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b94232f-bf70-4913-bf68-75d5d7165558",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fce996-aea4-407d-b28c-ec8bbcf63b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b452b43c-aeef-454f-badd-e120459bf0fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d473b6b5-dd55-4a06-85bf-b0e60fdbed38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9ee3a7-4579-495e-8faf-1f60e8d5cd74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8c4848-370c-4721-a720-4e29ed38309f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f5d762-f95e-43dd-8067-f2f67102283a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f22b9a1-e7c9-4af5-b492-12a6495265d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4dbd2d5-e446-4126-bc31-93f9959edcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f16b64a-0c31-4e14-97a9-737d3dfa3ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88528c89-180e-4f9d-85e7-011d09ec51cf",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b4118d-0600-431e-aee1-6dbbee9bef8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad383e48-c99c-4f1e-91e7-fd5bc41aa05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72137986-7f1f-4380-9947-45d4df429eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03ab2b95-f0a3-4e41-b9e5-9a3227dc411e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58a92a0-2206-494e-9135-620bc6ca0d0b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915062f5-92f4-4862-84e5-2dfbbcbda0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859829e7-e001-4665-95f8-32186c3d5cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c169301-79d8-4216-b4d4-7bd5ebfd0891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "386b1452-10ce-446c-9c30-8352ce3f9edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4655fe57-d39a-4d89-b700-61578d7b2669",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039ffe75-a8a0-49dd-82e7-14e300194540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e355aa92-f8bc-4857-ba43-2fa9e969b6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a327dc7-f62f-4e4c-a9ec-4a735c98db26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37b2ffb7-d7be-4a13-b9f0-cdac2c4d33b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f940a3-7474-4eae-ba5d-be614a126845",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f064140f-b889-4bbe-a9b5-7df08b665326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94008a2b-5ac6-44df-8c04-6bdabae0ebe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c79221-076d-4297-a71a-946c0e9175b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bece11a1-ccee-4983-b3ba-fa151e5556a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cc5921-2f10-4231-97e3-1d198bc45705",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d8745e-37a5-439b-a142-84456e129af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ea4f37-021b-4fe4-9a16-f81ee311f872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e189ad-88c1-4977-8a2f-5f88fad3944e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be4eb705-bb0f-40c0-97bd-6587f45ae2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bb8f1f-f452-45f0-a1ac-742cca695bca",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96330975-2e2c-476c-8279-87d0d178ad3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d64959-a8d1-43af-aed6-38ed7812042c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b774a79-9784-413c-b1f9-c1d3559e1b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c60c088-9eeb-498c-a865-9676fafa1215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de8a8c5-d942-4155-889a-5185a9c03ced",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb35ee96-5dfe-4d7a-beda-968800c9760f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0f949d-5550-46f2-8f3f-b528f6088e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac023d63-eb09-4236-a3aa-41f4cea06b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aee34bf-cf1d-4fd3-bd31-650e001c60d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ffa41d-975c-4b82-b71e-5cf708e14bf2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd32657-f3ea-4532-93e7-79c39c3be243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e215eec7-5041-450b-b963-0637806d1b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1282f112-3991-4ab1-a5f9-31da75f87718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b21570fa-9d8c-4f7d-91f3-7dae5a80140c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c14dec-bdb9-4d80-869d-28efacc2dbae",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e018eafe-3c46-461f-88eb-960d7018abc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6780d4cb-3eff-4202-83dc-5edd9fc78d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969cbd4a-ba55-4815-b545-59538c969d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a241b4-8142-46c9-be92-e210bcd98034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6438a8e3-7967-4004-842a-2053e1426aa5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cbb198-23cb-407a-afdf-190588706e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaea5383-a600-4ffc-89e5-e7b31e37e379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077a9e23-6972-4ec8-bda1-1c8ca295a4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0183bb68-eee4-4ea1-8f69-db3449be6513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfedd8a7-d034-4009-bd34-08aa2e905319",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc51c43-7cda-45ae-bd9e-31586a7555b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a051ea90-126c-4fc0-907c-16be3bf05a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df33cb32-4939-425f-92e1-fb4f63548f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b14b236f-3180-4b30-bc6d-bdd98a91b6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54915298-86ef-4296-b623-ff2e41a825aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3676dd-ba7c-441d-88e9-6816ab8dcf44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe4529b-a663-461d-98d8-933fa775639f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4ea274-da9e-4867-83f2-b01bc7d2c7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5779ad3c-2e4a-472c-9572-324c120fe069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ac5e65-ab3e-4693-9874-cf2d116d8db7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e29d65e-87c2-4d15-9383-1c3592278582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7649bad1-d4e4-4c86-be3c-2629291f6422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4651c1b0-7d05-43a9-b067-f03100778231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e49b1db7-ac0c-4023-9f8e-3f323dd42594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820eb17d-fa08-4259-a8df-3fed756e81fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c6ef72-5e2e-48d7-b1ec-14e95373cae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1269e61-0632-446f-b2d0-204334dce054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba004358-d844-4207-9d4c-bf6f004a291b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2945b2-f279-4d82-8b6c-6126de10a205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d125ae12-89e6-4e08-989b-bef5af50d6fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50a8432-8d7f-4fe3-89ff-09314567e12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31750b5-fad3-431d-8dcd-66237ef5fd68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6fc129-2104-4ee1-9872-ff7a9f2342d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a234f90-0d94-4b38-8db6-22db3a97736b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f251a954-905a-40bb-92b2-6e1f5cd6f963",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118f6150-30a8-407b-a665-0556d4bb972b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5fcd5d5-8901-4ab1-912f-c1fcaa453025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4e9425-4b4f-4be2-833f-5e34bbf0fd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c55cdf2c-d261-40dc-b15c-e6e011a1d57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a8b5e2-b1d0-48f7-9bd0-0cd1a0ca4f7c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6bef82-ed67-47ef-9f8a-c2bebd5fe182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfec96bd-5046-4b55-8873-2f4a5731ecfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1596e69-166d-40f1-919b-8442a53e86bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b50fffab-6678-4c0d-9c88-903a6fe775f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b467fe2-23f0-4a5d-a118-352509273069",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adcf99b-ed69-459d-a108-6c42f003d38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c8dac8-fc98-4b94-9471-547609fb2427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4bfbb7-8055-4aa5-b746-45a4d540b39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a71ca193-3716-4494-b1a8-43af61be8fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2944b17-1491-42f5-b27e-ddcd42ce37f1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c591bac3-cca8-4d50-af64-da6ded5cb724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e38ff7-2c9f-43c4-b506-1f8a174cbcfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f697dc-9131-403a-ab8c-13533024661f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7072ee-554d-403d-80da-b5f7c10d0b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7329523a-0e69-4569-a522-1adb36715680",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6498d57-985f-4015-8229-f0eafb19cf8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953ac8a9-d709-46ae-85de-ea90d9cf6dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0bad0f-87c7-402a-aec2-67b9f3a0a8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddcb6fda-ffcd-4088-b054-da7f7b5667bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e5e803-7003-4ca6-9543-606e72621491",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54e5a48-66b8-4b64-a27f-febeee39e847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf28754-6038-452a-9e19-a107c074a668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7085ade-5725-47d4-bf6f-73edc6e7ecc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e41c40-33a3-46b4-98e5-1967f6a415e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1e6498-8b0d-4341-b195-529f67326cb8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97dcdbcb-abb8-462e-9aa7-0275be71c104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee84326-1441-496b-a05b-6c6abf176bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23edc3e2-d450-4c8f-86d9-df8961ef23f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f454345-8bad-4ffb-a51a-6849096eb604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96420a9-35bb-47e9-8219-0e0ef7c5f141",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a880e87f-b1bc-4711-8b31-3e7b5349ea71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500d27f0-de74-4f79-b4d7-3ebf36cc0c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031c13b0-e339-4917-ab08-98bc923f63f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f910e7b-c96d-4163-8c3d-fd69c8c09634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf7afd5-bbc3-4423-8367-15727f8b39ee",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4817041e-90c3-4c3b-ad55-d0006604daae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c60fc57-c3e8-49ea-b275-401b610478da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182f54a6-65c8-4778-a8a3-ff41c485ba70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e309aefa-af09-4d75-bdc0-eff2e95b5e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c75d61f-897f-42c4-b15f-ed6184be4b53",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8638b047-4b5a-4d50-8a31-9db414df2537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95cd9b86-b397-4295-88ad-17961bf14c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a217192-22a5-4ea3-b8fb-cc59edef71bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be48661f-4669-4839-b5b3-e4ddfa221798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76ddeb0-cbfa-403c-985a-c916c0313dad",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53421288-3809-42dd-85db-99ed8488df2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c0d7c2-3cfc-4abc-ae20-4ff7601ca95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c81364-84d8-49ea-aa76-bfef51c9b532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7c030b-e070-490c-b55c-bd431f6b7029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5001ee6-d95d-4224-a065-2c72549b7967",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df21f9e7-7c89-49f8-ae5b-2359f29aa8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4891564-f554-473d-8df0-7e8d9e0fea66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5224bc8a-0465-4c46-9c5a-cfc09af2c077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7faecf-2c52-4398-8e5f-c52b46821dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e896ac42-5470-433c-8dfa-9df938abd769",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783ec4b3-9d94-454c-bc67-899f06528886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c3bce5-4ee8-46c9-9e4b-b65c551c0431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c4f22f-c580-490d-85f9-22e70671b6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "552d7544-6ad2-4928-be97-292b8279e9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f02ce35-a453-44ad-a557-67eb2cb11e93",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c707cb-8b3d-4c91-86e1-ebf433d37b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72144fa1-251f-4918-b913-a75a855e3777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad007dc-c4e1-4585-ac0d-73d3941d6808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c62b6205-2f08-464c-ac66-525b7e51d277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79244d9-27a6-4923-bd37-394bd992c67e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf344926-d4d7-427a-8926-12a9a7faf1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61cf075f-ce36-485e-ae32-83140c5ebb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7060dabb-ac12-4a5d-9aaf-62d0b65a8f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "16b42288-030b-43ba-9e31-fa1759055b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6069289e-2aaa-41db-93fa-9a465fe0d334",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f636efdf-ae69-4dfe-b3fc-3bb2dfb486b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28944168-c57f-4029-a25c-206ea51be3df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f61c48-d3fd-4ca3-a36b-51246755e992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1804c2e4-e733-440b-8ddf-d784f9aec91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bf449d-f773-43b2-aec6-8aaf41f92ef6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafda17d-3f4b-4164-9c9c-cd485d7be525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6e355b-9422-4514-94e8-70e3b1685343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666f6112-2da7-47b7-9991-78a4e1b1b3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "428ae994-d3a5-4b45-80b0-488d2fd18577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfc07a8-0185-445e-86b7-5b38cd536247",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4205d3ae-32ac-4ad4-9bbd-4d51f031668b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b913d19-9222-4b49-9b51-9ddf3b04f549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d7f525-fed8-4772-9956-38c71b69a900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e39ab4-2670-49c2-a6cb-52bb3dd04163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231451a8-1ef7-4613-82cd-6ede04b3c914",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62f4b43-c412-4212-a912-eb32818fbfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc5a16e-5779-4e74-a255-7bdaf8a9764a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57856fca-e69e-4b60-9bea-d27da9ce6cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85813b41-55f5-44d2-9aae-cc112df3d3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98add0a6-3a65-4684-afd4-b07042dccc32",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab9235c-2aad-4f1a-80f6-3cbf7491bb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31da6048-5ea0-4f29-9fbf-46820771241e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a243837-4459-4b3e-a78a-29791302c527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5cf7c86-3517-46f4-9979-6e0f991bbacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57952dc0-3134-4b97-a7d8-d4c03f881350",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95e24fe-4114-46d0-893c-9588e8ab25af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a387ad67-97bd-49f0-96af-74a0aa11a525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ffe0c5-e6d2-45e0-bda4-47f00eee131b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "13416b3d-e3db-468d-a60f-12acbb91fd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060c2975-1661-47b5-a6e9-86740be5c46b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9e668e-34fa-423e-8e82-5d039bce3d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c175c09-13e0-45a4-9b88-0a89d79f5811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c115b4b-2b5e-42f7-90b6-f5506b83ee00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93c675cd-7424-45a7-9885-6e73a2319a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d263347-b5de-4be6-9760-37ad02018e70",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef5a25d-c3a0-4d70-a5aa-397b3a5cd16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca9565e-f91a-4e41-aeea-8a1f078f1352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c40dce-06e0-4917-991f-7b3894a71cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56f07118-a8cb-4736-a4f0-277037c2f2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bdff91-11d8-4ab2-babb-426a8059f80e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2255553-1969-484c-94b3-7375ef5a780a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781ffa5d-fb7e-4277-85a4-521dec6fc667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab90f50-e453-4a6c-99ea-09789d27a3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e068b65-2538-41d4-89c8-fa0f12f8fe71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5dde1b-4cf5-4e9f-83f8-cd2a630f44d8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef54178-bbab-4a6b-92f9-bd2633f5c6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855b55e4-df0c-4933-af67-868428ef5157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d05a77-e4d2-47da-aec7-3942ca88fddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4549bc7-a813-4c7d-b8a1-43d029bb170b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a450b7c4-92ee-4752-8965-03510431f498",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca00caf-2242-47fe-9b97-ac3bfc3b6740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa24caee-074a-4400-8716-26f70dae0874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee8fb63-1605-4dfd-9647-2298fc9d1b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80fec859-bfa2-44fe-abcd-391e7c669bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193f0d17-1213-413b-94a2-456970ce8a5c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6440870a-4c65-44e4-8549-34c7fddede88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4513bc54-2ecf-483d-af67-6626c7a1f44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ebd4bc-7abd-40d9-bfb4-4c873ff5968a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "54545c39-b61a-44c4-acff-0c45b803f4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d1c595-65cf-4b4c-ab64-b1187d1823c1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32453f3e-9d50-4442-9c25-8d26baa4903a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4823b4-7afb-4a05-8f8a-57d6375f40e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fabd575-e3e8-45c7-b533-6bf5101e685c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "94e29c07-70a7-499f-a459-a97247de80d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ecf44a-dedf-4bfe-a67e-831fff4d266d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8058d08-5135-4506-9e4e-107fb6aa5bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739b8124-e7b0-4a0d-a631-c95631df7b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7cfd88-4b05-439e-a845-c019d5f31123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc5ff908-7b20-4184-b08b-0d8427fc8ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef1860f-8a3c-41a3-9f88-1ae319116623",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691931e4-2ec9-4a21-bc31-35c357614af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe45d52-3f51-4612-a9b8-e7aae7bc10f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbee082-415c-4b1d-9a66-0d1b3b8fc291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb47f21-b745-40fd-971c-9d9af2fd3c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bc27b3-c9ea-424a-951c-57d57c226357",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142b9087-3d81-405d-bb06-453ccee4d91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3f00f2-68fa-4be0-b8b6-7eb525bd0ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e8241b-514d-4d49-9178-e71aa39c4885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb3b21b-c4b0-49d7-9c5c-7ecc134b4637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd88ce92-5467-4059-94f6-26d2ff20419e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8bb9aa-4827-4393-87f1-a1bc08f57875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "94b78bca-8955-41c3-b1a3-a353f2057b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc824bc1-291b-49e1-b70c-a2f7f2131286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec66e11a-5e82-4b53-a424-c1257f8ae3a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "64b27435-bea3-46f0-9ea9-4b212deae65c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4bf0116-1496-4546-86fe-cb538cb53aa5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f641f698-3f88-4c16-8e2f-637df75e5989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55fd6ceb-458d-489a-b9f8-3d0358cb281d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9f08fa-92b7-48fc-8691-fc1097c374d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "138f12ab-6032-4727-96f8-fc06b9f74724"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31eb8e7d-8250-4509-af27-6204c15ccb80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0115e784-b381-4f95-831d-d6e99673e044"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2da1686f-f478-4b7c-9cf8-6651d1c90c7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2dc7116e-7673-4139-bd34-28cd9b6ef740"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "349353de-f939-4f2d-8ce2-f7bf42bb1026",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e0629db-3163-4c88-9050-d62d7cac67ab"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "558d6912-33ce-4d49-83de-05c87a544064",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3be24815-ab83-449b-b0a1-9ca7779052db"
                }
              }
            ]
          },
          {
            "id": "c7e88c2b-b538-45bb-988b-72609d1c7805",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f547162d-317a-48f4-9b9f-fed3f6383a49",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d679a5ae-a383-4f21-a315-014b747d7817",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30676165-c1b9-474f-9f04-1ea8753fc20d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66857229-aa06-4e1a-a682-7c1ba76eafdf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2d08d0fe-cf23-4728-9820-beb02bfbf50f"
                    }
                  }
                ]
              },
              {
                "id": "c5ec604d-bc53-4c71-8a74-513df5055fd1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45f17248-0343-4b73-a536-db8d16bf22b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f4c47f3-d3d2-4510-9ee6-b9831f70a529"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d87de6e9-4fd3-492e-aa20-d8e40ea50c59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ab6868e-f94d-48c7-af73-58e925e86116"
                    }
                  }
                ]
              },
              {
                "id": "fe67ae81-ab12-4f06-91eb-4493f674c4a5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cf9f3f0-ef06-4a10-9c4d-28aabbb5c26d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d29072dc-1dda-488c-8f63-f83b4d9dec9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c5d1231-cef2-4fef-a721-f26d7740b380",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "474a89c9-3d11-4b99-b814-94a85c0accae"
                    }
                  }
                ]
              },
              {
                "id": "4ec3a60a-5d9b-45e4-9830-97b78df50bf7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3949193c-3fb9-49ea-bffa-eabca8375bd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e3f4c4c-1464-47c7-bfe3-5e3d2a4d7971"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ed6a2d6-6fa8-40bd-84d6-0227a115a7e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c263ba10-c3d5-4c29-947c-1114beed1533"
                    }
                  }
                ]
              },
              {
                "id": "77fab6f3-8be5-460c-9ba1-ac52456025e1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "799e9498-a9a7-4395-8b66-cb49c3efc332",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1193d30-2aba-4997-88dd-0830937f355d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "772972a9-7229-4d6b-8aec-72e75661556f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d32c9d35-cf11-4743-bfa3-55f406457a06"
                    }
                  }
                ]
              },
              {
                "id": "44050a74-0de9-4aad-ad93-8b28bb741821",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a8fe2a6-af10-4744-9221-6307ee213d52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7207fde3-553a-489f-a5c0-b14c8ce7ca46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9ad3a08-90d9-4a0f-ad17-6515b7f29bd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "67f82933-c44c-4095-9445-b7ee41071219"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a218555-97be-4b70-851b-82789e840483",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6ae35e9-9fea-4dfe-ba6e-5032bf81b367"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9ecc932f-17f2-4f15-a642-90778afaf24e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "52c49280-4d9c-49b3-9af7-4ddae343c5b7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "191f0244-f674-4fff-be7b-a405b84f7af4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "145d38b2-7897-47b1-b3ca-6d7eed6a2545"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad198508-70f4-4318-8f7a-7567451b786d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d9cdfe5-e30a-438f-a66b-7d600b4ee49e"
            }
          }
        ]
      },
      {
        "id": "f2ae8a0e-fa3e-46b0-a05a-c67a363a0886",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "239dd4d8-476a-4d38-8184-5ce1036884fd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b75528e-c4e4-4822-a2e4-fa1dd764c49d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f69c6395-1cc6-43f5-8058-931c92c9af58",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8bf17a5-29a2-426a-8f40-90e085e346ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e130d8-9a72-4152-9cca-5217badf87e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa5468b-4b0e-4c99-bd1e-ef6805636e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f19b500d-dd98-43d1-9c5c-53e15277d57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c639f5ed-34d5-4760-bd47-935599ff2e1a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c117d8f-1696-4a9f-8ad5-15f60b08ae97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4628831b-0a10-477f-a5cd-318bf876744f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e756e513-4a12-4626-9ddc-eef52e045f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e0b6af6-478c-4555-84bf-3a9f52c9565b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca9c2a6-f152-49dd-beb5-d311e0d18e16",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9caf741b-8047-453f-aebb-4e9f3f0711e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a478393-1166-41ee-b9d7-a063e8ba588f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17e2566-2f96-4e7d-b77d-b86bcb41add1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7463a590-4ce3-48dd-8982-d78bafb64212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a32a3b-2193-42d9-9b74-f1d47e43b83f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3a475c-81c4-41af-bf7f-32be421af44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2035ae-9dcf-4270-bed4-b4b8d6afd8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a96a5c-d47e-4c62-b295-ce155cf10d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "399df04c-afd5-43e2-a194-d2d3be9aeb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e31eaa-4ca4-49ce-a1ef-ee43634728bc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345338c5-f6d4-4bd2-ba0e-ade8913f37da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80446631-cd99-49f8-8d9f-e8adfc4cfa3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8929e6-c0de-4971-8cb5-fcb4cc8c3aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42b74628-a4e4-4523-848f-c28410db9a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58897b18-4ad0-4c82-b668-3d18284d603f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e68d796-8a37-4793-ae18-0b1dcd60bbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021a5d20-fbb6-476a-8790-cbd549383010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5de8895-6c66-463c-b7bd-551cf0fa2e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb27546-2fed-4113-b17c-9aa70b148b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557f1ebe-07b0-48ae-9e70-0e427e08ce17",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa5d1cd-18b9-4c1e-b473-ee420010afe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb1cc6a-bcee-40a0-9885-5b55ad9e2da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2ff82c-fab3-4aa8-aee1-838371db5c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7ae0ae-1f05-4d9d-b253-a0ab64243289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36376313-d040-41f0-9a9c-0662a54ebbea",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60096a13-88fb-4fe4-9344-3b00a85e27f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0510c3ef-8c41-4a93-bc50-1529b349ae52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81cc242-bd4a-46cd-8b4d-620b266a39a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12154f2a-5cf9-4ec6-bcb6-b43fc3d3edb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98869045-bb13-4781-8bff-03149001d1ed",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f3820b-e561-4d2f-913d-3eff37cd0147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe441eac-43f2-4945-918d-eab8c1db75a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8693ebf2-3c61-4a65-909b-dc9667fab280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f28c0224-edff-425e-8bbc-69d77bbd985e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83627b13-fc27-470b-a94f-8cae928bdde4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e296f185-7ef1-414c-83d6-d6ff12d634ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa958f0-95c6-45fb-ae6f-4cab743f2335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad3a978-9315-4c1e-8f26-2806cc10e88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8688f903-0fd8-4328-bd39-6bbdc900ca78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7acd25-342f-4943-91aa-af709bbd8dd9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e78573-a5ec-40ae-a73b-e8f08912d2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa9d727-dac7-4237-a13e-237aceda8481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93df3636-2617-4a33-ac29-8841d6b6c3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5081255a-51ba-413a-8710-527ff42d0c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd20a3a0-ec9a-4263-951f-5ff87529865f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b719d6-1092-4d60-96c3-815a4f415bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecba609-fd02-45b9-a038-6c102caa3d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf966e0-4846-46c2-9d16-99549dadcb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2331974f-9077-429e-8d4c-f7e049d3de29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b353be-4614-44a1-910a-e68230916fa4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71863fd-e541-48ea-9cf1-a17113f461ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc793e6-744c-4f43-9829-9d7632467471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3fa9da-4958-4e95-ac38-685331b67251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc91225-88c5-4eb6-a67d-c8f88a03742f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdeb808b-3c48-44dd-a509-092756d60c4c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5211100e-85ec-44fa-ba8f-ee989322ae22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547f6aad-818c-4120-a255-a68548b82e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ea2451-452b-4a5f-8d04-7b665cac0b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c99d7e08-eb32-45b5-b899-d12eff2fb66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a2ca7e-6a6b-4372-8d1b-28faa0e7a1a5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713f5a92-e7d4-489f-a002-e71538ac51b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb4264e-b2b5-43c2-99f5-f928c4e4e94b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86655a3-6191-4dc2-b3fb-7cf16e5aadc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "96d7a77e-a05f-446b-8584-76c018a2debe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb955f15-d78a-4cb5-b225-7fba8c136dfe",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8b8219-01cb-44ee-918a-4928f037ac4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3199acdf-3e96-4e88-b592-a1d2ebdf0667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f5f3dd-a819-4ece-95cf-8d227a0d0eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "74065f9f-b9a9-4787-9ae7-575e0eecd036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81b9b75-8782-4889-94de-891887c90b00",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1ad87e-111a-4666-9465-71a4b7ad6c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f3c8cf-3909-482c-bfc1-e8f1a73cb8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa5ce24-2594-4aa9-94ec-c253f86bbe78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "21da8bd4-bec1-43d8-a630-2e1c5cd4d943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cedbc2-503e-4f07-94bf-6c291c234b92",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537b880c-551a-4183-84f1-89ecaa5a2744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed47d88-851f-4af6-9e2e-b83aeb777a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0888ccc-bb8d-41e8-962f-bda711cce0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "07b8b278-bf15-4bf3-bf54-2c01febcd8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c392b1-9605-4818-a5dc-aace1c57cd6f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dec6865-af14-47e5-9648-6e4149a747b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2940a13-32f6-4f59-95aa-3d21be3743cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107f303c-fb22-4bfc-8286-80305d53df91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55c04dfa-7185-4482-8532-f3009a4aa00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664cc17b-0e5b-47ed-994a-439ffc568ddf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f41edbc-f05e-4953-bf6c-7d5001cac868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c268c190-fcf2-4157-bebd-1d9476bcb20f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bc77e3-432a-42d2-9bea-f415eb0eed0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47b438c6-71fa-4409-b8b2-401cb4d2c644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab9217d-917d-4af4-97c3-7293deb28aa4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d0d06e-69e0-4a92-bf91-5701bd6629c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0242a460-c7c4-42fd-addb-ee894c4d199f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dff4fa9-6265-40cd-a8ad-bce47cf0a875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb92377-1154-4bf2-babf-3a0b360987d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ebcb16-240e-4e10-8f7c-2f2cf3c17793",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8617e3cd-27ca-4da4-a98e-738289cd7079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1f5714-6300-49f5-8f42-915e597f6cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d796b5-639c-4afa-bcf6-5ece8a5cf416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66469052-2095-404f-916a-376fc0d137da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76928d40-b8c9-46c4-9948-fdc6c5f09b1f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca76b7e6-32d5-4951-b951-755b59092da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c7cb82-ece6-461a-b7e8-42f784832d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0baa0dfe-54d5-42c8-9c29-02e25efd0543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d69d322e-6110-4782-b84c-9b296f5d2c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba578e8-bad7-48f8-bea8-e10ebd3471c3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f67e48-31a3-4af5-b47f-09365863e6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3c6a58-8ce1-425e-881c-adce1d6794b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353ed6e0-732a-4737-bbc6-0ac124098a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f454612a-9571-4e33-8669-7a58fad6f3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac48067e-f568-4451-8997-5942ba055588",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40abbba-77cb-4dad-9d62-4bcf62e23b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba4c6f1-c876-4a2c-b578-61d700a31fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70425abf-cd02-4e78-bc7b-ab78b5509e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c695bf5e-432b-410a-aee9-50db1dd255ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb6a95c-3b2b-4c7b-a77b-024925176c44",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f0459d-82b2-4c17-9362-39e4cdcf12ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc79e92a-6fbe-4181-9bd0-8ba83932061d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78c0aa1-8d76-46f4-8842-d6bd66aa009f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97e78d1a-f05c-4b1b-bc4d-7a462424bd97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd182a00-ff1d-4837-a6cb-3a43c05c7c36",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4c88da-11cf-4b19-b2f7-ed39aaa88f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c752eb-b254-4e85-8c5c-111ae3bf367d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60238699-458e-4fda-8164-363d712b3afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10155da3-f10b-476e-90aa-dd73579ed562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328dc20b-92a0-4752-909a-34d9b7779231",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e2d3f9-7a6a-46c4-95d7-b9c057a0d21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12352e43-b464-40c9-af62-788bcf972efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9064c9ca-0075-4e17-9457-b0fb32d3e028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7272b6-b6c4-4382-8928-b87fff3d20ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7d59a6-6cba-4956-be53-cceb1a758a87",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8789418-ff7f-443c-8fe3-cd16f9e64d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fedf4a-8360-49c1-bf3a-f08548763a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63144bc-8247-4a98-953f-beb0f741b8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23bea358-9c8a-437b-819a-dc30aba13b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e0e39c-d430-483b-824a-392dcf072f4c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811af0e8-b89d-4362-9eb6-4ee293729068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b03e38b-fbd5-4929-8e20-b3bc0a40838d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a09e3d6-b274-402a-a373-18e289d6bbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce42e3a7-015a-4b31-b385-91067571d013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ad4b75-5f98-4a5d-80f4-8eaf0b010d99",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853058c9-2ef4-4b1e-a956-7cd27da3c354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf3017e-a5d8-4a7d-b8e6-3b8f2b422f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6294138-8727-40d6-980f-4d64846efd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe3c78b-66fb-4bc8-8d69-6a72ccb1ae3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18808e1-29c4-4840-acdc-e8f71a27d4bd",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663d7f3e-b09c-40c6-9baf-deb7bbf90518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ba6cde-81a8-4128-91e1-023117971100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216d0fd3-da8a-4dca-abaf-981e004d6cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be090020-35ea-4bad-be5c-f3f532195982"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bc436232-65ba-4443-89f9-0cc22896be13",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "477627b0-60d2-4ae8-aadf-5fe0b0bf9fed",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32878e98-4c17-4d5f-b3cf-c94d09f8722e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3fe01a-3e93-47dc-a4d8-34459df17076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb621973-e8f9-41d9-9b99-d53147a0674c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e572448-f74b-4373-ac2b-f93013919277"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91cbb271-360d-4cd0-a61e-724210d88f21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3273caf-a4ff-479d-9f09-3455725610b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e5612e3-acf2-4a52-ad30-9d46b6b9de1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f77daf5b-c601-4163-bf2b-958cc03045d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63e5b981-b745-40a4-ab3c-9c7eb9ef63d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "03504c88-65a2-4f69-b951-6fbf75efaa1c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c2daa3a-4f72-4f4f-9d10-43a61e8d6d11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20089d90-c9fb-4f40-87cb-7d4911f217bf"
            }
          }
        ]
      },
      {
        "id": "064fa0eb-cd47-4fba-889b-1d434013e582",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "12d9e896-9345-4201-ac97-011c0c6a0d28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d283b962-74f4-4170-b0e0-a765b0ba5abf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "73bc2dde-1082-431d-8943-9c77a5ceadf9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fede5f4-f33e-408a-8577-4edc470cec78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f5c1cb-ea8a-4f47-99e8-490eb267bdbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861f5389-fa65-4f5c-a7c8-c529fccd8e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aad4229-48bd-4995-8494-446dfa525d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e436e829-6b9a-4891-a75b-9b3b14b35ad3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73265f7-03ff-416d-90c0-8be3282b7e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6646f29c-4b83-4230-829e-dbf6b502ab9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e87c0f-47cd-4087-b816-7df95ad825c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "744146ac-fed2-4285-b2c0-f3c25c1628b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411feba9-bff6-4cd5-bdeb-890de4be2d49",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ce89dd-b65e-4a55-91b8-fa627fd8c6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10314cd8-a3d9-435b-a928-4a04fb85a24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0c095c-d4f4-4216-955c-9a0886d2ada1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "087340c5-9ed7-4d46-83f7-3cc806022571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea82a44d-db15-45bc-94b9-9c71d481303e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454d83ac-6273-44d0-b494-6f19fc2c4033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6b17f7-16a7-47e8-b6e3-0aa42abecf24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49aa5ef-a4b8-49c7-ad04-75c129ba4e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18ab2787-af0e-4983-a839-fb240ca2506a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ba402e-cfdf-4ff4-925f-bfb33b119b6c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334c8d39-b1df-4a68-bd8e-6405aea0ea42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8dc6fa-23b4-4281-9b75-5481bfb1103d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad051261-4a84-4965-9407-0810c9b5bcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd176dd-66aa-40c0-b806-416f2ced27be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ecc66c-fccb-4484-834c-8058cee097d4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76d9c9e-7ae6-481d-ad08-abdaaa9e6103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a855d3c-5911-4d14-8623-37e696937ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e57397e-0673-4a75-b6fb-52fc19ae97b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c69bbd2f-fabb-4f09-ad6e-cb87ca0d6a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0270177-3256-43f5-8784-05eb5b68cd9e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8a9ca1-e282-45b8-b081-9f19889050dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a539038f-94c1-4ca9-b7da-046cc55bda33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ba2c8c-6ea3-470f-977b-434a1d77a9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0320f3c-d81d-4d51-979c-121eaae6aeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc54f1f-7c0b-418d-ae8f-7c3d1f9e44b1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9f1b6d-8b39-42ab-9c8c-d66660398300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c6c2d6-4829-4475-bd98-0bf966fcf08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da958466-2cbf-4f3f-8b8f-dc94fad7a72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a048798-a789-4478-b3db-780be5c882f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc446a0-e375-4ec4-8644-1e5912bcbc41",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f897d67-7eae-41d7-a886-57f32a06f6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30df4e72-c355-44d9-bbff-a165679f2992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e3da17-179d-46b4-ac5f-cd7c45218742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "599c178f-6cf2-4f36-a393-d4ff59569d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4a5de7-7d38-41da-880e-038b1d86c9fd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fbd871-4205-4013-b4c0-fe2c74e79055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ca979a-02b0-4c44-a27a-9b1de3730843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0e7460-f47b-442f-9583-b3506164c3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13cc9280-999b-48e8-9334-7d67d6baf83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b614ba12-d4d2-4b9b-bf81-1a41f3426e45",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4c80e3-8c42-4e43-b255-6a49055ecb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37812bd-cbd3-4932-86ce-ae62d7e4b088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6daca7a5-518e-4b2d-ada8-d134728cf14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2dee12fa-6f4b-43f2-9fda-ffef14be5ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b13a49-5bb7-4d56-ba7d-4496445c6a73",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177b5f5d-d2c7-46eb-af52-186e3038f9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b2ceb5-ae5c-4101-a765-0e0c0fa37d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac02e16-fd2a-4b54-b55b-47759f402b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13a73e0d-b925-436e-8dad-beaec1deba7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943988c0-4023-4647-aa6b-538d3627f32c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ab5597-db72-4572-8f3a-1772a19201d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98242e3a-a23b-4d92-a7d1-3908d2d4c775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43818161-bc8a-4ac0-bab4-c0294408706e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cffaf80-2523-4344-8cc5-b04e4149a676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543ce0d6-0d05-417c-827e-1b0f66a927cc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c075f98-1b52-4e58-9ee2-b61c1661b0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae0f46b-7b18-4969-8f60-80367494d8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd097aa-cea8-4183-836c-3b0a3267efbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd78c1c5-4f18-402d-91b2-a11620c669d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c82334a-7f76-49a4-8624-03ada2466bca",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d065d7cb-ce41-4ba6-be62-283d00d7bc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d210c188-8f1f-441f-a108-255675d5e17d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc31e18a-f126-4057-91a8-a56ccc02be19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ca04f5-7dd6-4e09-84de-085af21ecdab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e791232-6375-48b3-a3ab-f594b49bf8dd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490f332e-d79d-49a7-9e63-1505898944de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37793ec5-1876-45ae-9fa1-8ad7b3e220bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd864a1d-54fa-442e-8d16-f6ad1cbcbc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5b7960-5685-4a14-8453-93bf42256d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04223250-3c0f-4002-baa3-de8b4ef73495",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec2b486-594d-42a9-9aee-4efb58f23dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a3c1df-f595-4585-a9e2-299d673d99b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fb2359-dd33-4bfc-8ede-683d3b77f44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0091f1-425f-4112-8672-50733eb5e4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875e48f3-62a6-48dd-ae74-5ab0c5bfd979",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75058bba-e0b7-4ff3-8ee4-870951f5ad03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d671ab7-2c11-4708-ae30-b5d954284052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e7a8b3-75d8-4852-8b62-c106e3a135f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb19921-0fca-411c-835d-636e5d668469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfab3d5-0250-4324-a361-dfe8ca033267",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e36751-45a9-4388-8151-e231f7a9f484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a18b76-894b-4413-b252-faf9b417dc01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf4fc30-c41b-48e9-b471-043b33ef4167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24718291-23a0-4000-b0cc-ffa51e745e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c0a8f0-a188-40b1-ad14-24763df80365",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfb77f3-f630-4494-bc4b-eb9da9adfc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d921e9-9b8e-4c6b-8acb-12cb08f23021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d47074-0408-406e-b0c5-d4937e6ddbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4098939b-a8b5-4432-a803-f4ab44c8b0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589755f5-c4c7-4922-bf9b-35932163ffe1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872b9195-3c14-440f-9044-f8c01eef00c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c60e40-6cd9-48d6-9ad2-5065f1bc4827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bc042e-3875-44bb-a114-1555388ebbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f74cdce-2d9f-43d0-a9cf-ab26ce83acb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acafed19-0bf6-4890-88e8-3d9330f773e0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5679a3f-c6f4-4d18-9fea-9d98ad8cad76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53d6d65-abbd-4a2b-b076-33d381bb9675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754cdb13-c63a-4f92-b693-ab9d3eaae6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f7d4e3-55f8-4e3a-b3b6-7de6d54087ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f480149f-31e0-483a-bbd7-3b03cfaa1d40",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b361df-27f5-47c1-9155-83beaf93162d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4035f267-6969-42eb-8249-b65ad7482443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8d827a-c162-4f02-867d-53e5248ab3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31928c85-2a61-4715-9379-47d1bd96b624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119bca45-6c29-4af6-9853-ab5bbdd7a176",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4398b5e5-417a-4246-8fa4-8cffb2a4b1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dea050e-d59e-484a-a93a-a3b7286f5913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d593eac0-a58b-41e9-aa4d-d26f7f75b29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06adf654-150e-446f-a8dd-db795c7068e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97cd212-4c80-4c43-9401-75bea39d0410",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ec54a2-9a7a-4830-8742-d200a2680967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de1f73d-8a2d-42c3-a50d-9dca2bf02d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c2c59c-4f84-47f4-b9b8-8fd40c323831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb09727-ab67-4d2b-baeb-6dd2013f93c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8c95db-7a00-46ce-a40c-962d6c16da7d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b3a367-653b-4796-bf5c-b7b41b24b2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4825ba7-554b-4dfd-bf2d-8878b33d6792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2451a89d-445b-4c2d-a467-05438dd61f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b181c5-a3a9-4730-b0cf-c9101843cd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60c4f0a-2197-4868-8670-0c80e3f166f9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ef2047-7423-4098-8235-ecce43eca94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2441570-3077-4855-95cc-42e7aa821a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5fd9ca-2e61-481b-ab47-ca3dc4cd3bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10feedc6-8de4-4c80-82e1-59af676312b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0aa14a6-3fcc-48ca-b312-e76cfad08584",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e382b785-87bf-46ab-ad33-34fdf5a01333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5fe857-7e26-4d14-beab-007a2f7bf4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1ef04c-13b3-44a1-8a8d-4637890ef69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61bf3702-aa19-4b70-8555-3e0de1f67d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0540c9d1-447e-40b4-9e4c-9b5d2c5119ca",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fae989a-d24b-4737-a164-ac7c8b38358d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33dcf7a-bc54-4d64-88da-470ba0856e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb472f1d-777a-4cad-8276-203b8cbe4ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47e764f9-2828-49de-a34c-fe5f78d5326f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3e66d3-680a-47e9-afb7-41ceb7b83b3c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a0b236-861a-4070-ad7d-f69d7ed52868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d678c3c4-3cb1-4fa1-8cee-eee95d1daef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc43550e-21c3-4d16-9fbe-3706efe433d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "845b0251-4c58-4aff-bbf0-69a79598fbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c96dfbe-3d97-4b96-a1c9-b7bcfea058ea",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cb85f0-bd11-45c8-8f55-2eb90f85007f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e70bfe-aa65-4657-b1ae-4928bce52901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98de3bd8-1188-4d92-8c7d-2a1de501b593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76c38133-6e21-4f62-9a7e-f2d658a1a18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3038e64d-4107-42bd-b9fa-bffcde715ee0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ca0931-4010-40aa-8e8b-71d1c2140126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b29f09-a928-4ece-8023-0d4e383813bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f213d1-1dc4-46ac-8823-be7cda7d0bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46170d35-53c9-4816-b9ce-f7d198b995f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6602678f-04ac-4e3d-986d-8d2dbde545af",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371e3f82-45d2-4a81-b3c8-cc132ab1596b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef12641f-f420-4b9d-ba0f-d7fcbffad88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28986efa-005b-4521-86c8-fae8ef5f940b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a73cec4-af7b-4936-b562-5376e7e5a2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d1b60b-111a-4c67-ba18-1410ed785ccf",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e378a02-8886-4ec5-84e1-fa4844b7dc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa8a02c-050c-4989-bcfe-00b9c1016787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1bcda4-07a5-47a9-8b85-71e31ebec1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "993ceac1-b193-4634-a952-e3b2c614a8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581e1e42-acfc-4e54-9324-486fb35094e8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33053dd-7cab-4015-94dd-494601400555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f755427f-4e3e-4443-b8b7-056a6cc0d5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b5cad9-7122-45fd-96ea-503df7600481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8b373c-f4d0-4e56-867d-6f54c781c240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8575125-4530-4e8e-aaa4-ca7e17e94856",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4facb07-1e9f-43f8-9c73-863ff6ea0a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa0429b-d627-4794-aa6e-47d66ccb06a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f41aece-03aa-4eb4-845f-abe8549e5bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2747bac-55ad-47f8-a1cc-0a27e688e049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4af4e6-aa41-4020-a3b5-eab4c9e32328",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70924b56-ea82-42d2-9351-2a02b0c4490b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce89a7b-858c-4aad-9842-3b6e0902cdc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ba250a-d47e-4e70-859d-c0a12745f4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09a7a265-947a-4723-b379-8ef27a1bb389"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2b2af920-3ad9-4de0-9af2-f34e2f7fbaa0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "590be50d-a31f-4c58-a1b2-a3a09e9438fb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a763c5-f69b-41c2-82af-1f757545e297",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "58694f6d-f7b9-4ee5-8b3a-2c7faf28daa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ee4f4a-920e-4410-a89d-4079be4b5ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cbd75d5-8f10-415e-8611-b02aca53a872"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e6cde00-9653-40ff-80ab-07f1559c4434",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "856dbeac-2a19-4c04-8893-e43b160205ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "183c7512-21bf-48ac-baa0-192786aa9ba9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac09e558-a5f6-4910-8d1e-6bf81f2040af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc021dc2-7543-458c-8728-070b45d041b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "52f90257-7b32-4f70-822a-e093fc782322"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3eb8ee24-a176-4e63-80cf-a4023c634e03",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e508951f-9fd4-4164-884d-2cf3342290a8"
            }
          }
        ]
      },
      {
        "id": "54c89d53-a103-4c9a-bdba-d803f760f52d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "87b0ff9d-a711-4e10-a982-a4ec90babf53",
            "name": "Negative Testing",
            "item": [
              {
                "id": "475961d6-8a34-4aad-a3f2-16d0ba3c598f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9ffe4812-8049-4000-9a0f-4d3138aa47e6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cc83bb-3ba1-412e-bfff-5244520d7f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e3f887-06ed-4a94-9d95-d1aaadb25750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c235dec-9e9b-494f-8820-ce9f2df54796",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d850de52-cbc9-4dc3-b53e-4ce0f380910d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df93684-ceab-4197-bc38-580561c84770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdab2a83-2791-4742-a44b-4db86038f9fa",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe3de5f-2079-4a24-abf7-476b0760931b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11be1da7-0c2c-40fe-be9e-7d950f0a561d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9623a51-9d6f-48df-ba17-a7db946fef69",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9b7ad3-9386-458e-8891-adfa16a9bc50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3524d3d0-4d38-4fdc-a8a4-e1bee2abf9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cbd10f-36d6-444b-9237-6a4757d23169",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31e3908-e53a-4f10-bab6-2dd3b11e2f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f793a7-5147-4322-85b2-4d1b2396c043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4b54a2-d8fa-49c4-8e72-afb7360517df",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc13638-b1a7-47a3-9bb5-baf32affbd9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1278f03c-4a41-4cc0-9980-f06361632878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c614ef-d0aa-4914-84be-200377337a88",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe2dcec-dc98-4f3d-b6b7-5db319a593c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813e3468-4bba-43b7-b24d-b87f3a5907ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a61a93-7780-41dc-8cac-d6a2f420a18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4e8c06-6737-4a6a-9dc9-c848c1d56ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5993b9f-e996-40cd-8d79-b9b0c32c8ea3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93da79dd-0558-45f1-ab7c-d8d6dad56d2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c7a6307-6a82-4bf6-8f2b-69d1f7b18b57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ed461f-7404-4abb-942c-156fe1e7f9da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bbde607-1783-4e92-b563-577f91f28bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f89a85-a1cc-48b2-946b-78928ab7a775",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a268e201-96df-4b9c-8af0-a3b5e37146b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea935908-5bcc-4a57-b8a6-92050cdb6aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fe147f-9346-4e3e-9cbc-048203f4fd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768b6f2b-48db-4e5a-9ebd-cc374ab4321f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77bf9e9-2434-4330-a6df-ff1119bbce77",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d152a8cb-db70-4b00-a781-04c97daf2965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f0042d6-69a8-4f45-99e3-6d96621aaefb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425ad8c9-0639-4c96-bc8c-c509d00ba51b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e97a550-09f1-42cd-b4fc-f2e6e7599c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af9517e-ccbb-4a51-b964-3c5b00bdc342",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c036547f-c081-4c4b-ae50-83f0da78642b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9354137e-6312-40e8-8660-937f5df11541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45a8594-96b4-4c77-b2a0-bf9847ebcab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a6a003-d2de-47d9-aff3-3f3d2419a22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbf1921-8c35-45cd-8600-1fe36015e3a4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dd74d9-1d1b-48fa-aca6-30dc4a79c32a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b000530d-d3a8-4a04-b45c-700a01b9c26a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b035be3-6add-4005-9cba-d3ea3559cc61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26966827-ca71-4183-a012-38a2e420f8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee5329e-bcc9-473d-851d-c877a7a4c053",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12a3d00-a91f-48ba-88e8-216158e7840b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03ff2070-abd2-4b82-8c7c-104453f4c83c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93794d9c-dfdd-4cf5-b7f7-016ee500c282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ca6f55-5308-4bc3-9322-c96212560889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32eb55c5-b0af-4874-8c85-2f56585478c0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9765b2-00ed-4821-b521-0e417e76398a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ac73f61-0bbc-45f1-b764-73f195421968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e5cdef-993b-4d03-a77a-8051016392d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4f4c5e-9683-4e22-807c-fc5753f2a80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323ee3a0-4cbb-46a8-8d3d-ed1be616a517",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fbfc90-fbc0-472b-8ef8-9c33adabe8de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8656aeb7-e5ce-4a1e-83d0-6f71e7749b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b175033a-cb31-4564-86c9-677c38ab069a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbe841c-cb83-4786-9670-c6ef896df219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4962d432-3f66-41db-81e4-ba56802555f9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52aecff-d1a2-4b6b-8521-2ab6d143e6bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c40b152-ebbe-4a13-81d3-8abce37c3736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34c5b8e-5b81-49c8-983a-debc4c5760a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f7fc02-995b-42e6-bb3f-85a56f54ae4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e5fab4-8d2b-4c38-a7a7-532bf684649d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb1c579-796f-4cfd-a265-ca92fc878753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea9f9b4-9cac-45aa-ba20-635138de4731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31f244b-3278-4fc1-a8cf-7dd185fc7079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459516b4-d708-4e3e-a104-9c257c2a2d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a4c288-c93f-4ca1-97e7-7771a0b6aa35",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c43b757-c2f8-4146-8f13-1359d152786c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459deb89-ecbf-49df-b18c-85363beb843b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8974ee0-6082-4c41-8cd3-80ba45f12e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5bffe46-3b10-48dd-a3af-174a5d899582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3314ce-59d0-4025-b1e6-78b9607691ef",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2894f3f2-2964-4644-a2fb-fde2387c844e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "780c00b1-d17f-4eb6-b1e6-6e1a0fdf94b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768847fa-b346-4b25-9484-681156450793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d27dd23-b6b4-4d12-9c51-db9291eda220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d78bd01-c873-45c2-88bc-24660be392d5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b4b12f-2e88-4b50-b6ad-a02f1da842af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d41cce-3c3c-4afe-87d0-9462d79fc5f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fce2b86-60e5-4511-b56e-40835ebd963f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66684ce2-eedd-46c1-820e-e81aabe21b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb87e19-ad25-442d-9fbd-d4e8acb21339",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38388daa-4dfc-4654-a2d9-03d9389a81d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7027d4f4-c98b-4d7a-abfa-15d22fdb622e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a78a56-8619-463a-9eff-cf6af075131b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4fb769-ac25-4402-956d-4265be22e7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2c1fd7-2b69-427c-8e7f-8d0c96fef407",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32205195-5a97-4838-b2d1-abefa2965167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3c7227-d0a4-412b-a8c2-e2979a698e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63689a16-3e03-4b0f-8bdf-d0cd22cb19b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f40da6-d12a-4bd1-b766-32c1e039681d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffe0f8c-0380-465a-ae61-d67858c8663e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4422898-eab7-4aec-9181-b4cd9c1321b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3cf29d9-61a2-4ea4-aa03-487f505566c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ce6251-0412-4281-adc1-28a5cb3d067c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ea9e26-c501-4f70-9409-81bdf7e8b3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34238ca-dbe1-420f-bbfb-15e4f7e70c0c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2b4174-f3f3-4158-abbe-af1e5890ec46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "619b8249-635f-4b53-8df6-c7f65dcc9c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3b9bcd-f337-45c1-b54e-9d04ed447c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8ba6bf-67ac-4f98-b803-bace63c85bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5ee81f-2f56-4a3d-a53d-becccdfe2d11",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712dbf56-81f6-418d-bfdd-3d1303e5802e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ed01056-34a0-43e8-bdde-3333de037bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd18c4b-a351-4f71-9369-7a057c64f907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f9a69e-fb90-4ad8-97f0-8df6bbfd67ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57347a87-081c-408e-a064-aaffdde70597",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9bbfe3-6ee3-48bc-93f7-4f33d3c2c7c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe447d38-142b-4a03-aa77-885f35ac2a64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f879d237-a893-44b9-a11d-1374af0a722d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50570d12-1aed-446d-b330-f0ff97a00e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be26600d-ef58-41dc-8821-d92afc54e715",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98537123-43f4-4250-8332-8ddb4ab26032",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89cbc272-0896-4d44-9e38-d1b91eac2377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfc0efc-d4c6-4259-86a9-59319961e88b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfadd79e-7d3f-488d-bd98-b9e915ad579e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362adeeb-d0df-48f1-bd34-279aeca582e8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021b1f18-f766-4864-a66e-046c96dd30b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7e8d3b-b8b9-4c01-a659-59014b370d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "919c7381-fdd0-454c-a757-a17378291420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb28312-3674-4119-95ac-404f1b701ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e06fb8d-e337-4f58-9564-336e965400c8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5c184b-b4ff-48ee-858e-a8d9f2d53bff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "113e48f1-1c0e-4735-9f75-bc6e671f21bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86c3819-721b-43ad-94e1-cee818ee861a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d11be02-224c-448c-b3af-33777783f8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad4b757-e7b0-451c-b967-4fb0a18d50b8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a01aaf3-4e73-4fb8-a6a5-7a344005c09f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97f2a944-9d4d-4cc8-aef0-6daeac7cc373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "696b53e2-fda5-4e83-ba59-776db4b31180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c125fd91-7953-4eb0-baf9-b11d6224c435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adcf132-b462-4546-b6d1-e899e5ebd886",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1683678d-f692-4f40-8ac1-8f26034555e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bb682dc-ec89-4e52-b7d1-fdf9d28bfc39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6916561d-939b-4625-9e5e-1e4141fad8b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95fc0d54-38a9-4436-876c-091775319b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597f2b75-1b8a-4e3a-86c8-a7c48486989a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f1d2de-b6c3-4c16-a40b-b956fdb8bb45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cbfe801-74d8-4745-9689-1fdcea2de272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff28a0a-5ee9-4014-b6e8-ceb152779bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01137ae0-a0c4-4d04-bcc9-3709d2900369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a436b696-bc13-4fcc-a756-f92f59667c6e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716971c5-c19e-47bd-8833-78076c91a933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c4b18ca-5b8f-4927-b094-2f157dcfae89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ce1e11-950a-4058-bf86-c9679488859a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04ba2ef-5e68-48e4-aa20-8698031577f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4add96d4-e92d-4f22-b7e2-966bb31c466a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43be576-5cfb-45f6-b2aa-ba83fbadc001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1651650d-8e3c-479d-a611-4dad0c46d4f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3dc59e-fee0-4cea-a7d3-3e6778758577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42394013-d434-4751-86c5-8c9a3f002da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0180c3-6167-4914-be32-4362d5857509",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd37016-88a9-4980-9366-8cb7733fb4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484c6586-80be-43eb-941a-421f87aa5967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "922eb929-216c-426d-bbd6-89d128f8d1fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e26a84-c36e-4b6a-a6c8-94554da04bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da36e608-dfc7-4bb6-8cd9-5d9d592632b5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07411fd5-72a1-467e-9d0a-49ae1859c7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9603bad9-4b44-4732-8c56-00965fd92ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714d91bd-945b-4ebe-b854-ddec20e71427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed747ba7-01cf-469d-868f-80007a6767bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc850be6-095b-4f9b-9d47-aff4b58e23ac",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcb3abe-bc9d-44a9-b917-84f117952109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a40c39-5f2b-42b2-964f-b1bb1eb63976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a75865-cf0b-4b5a-9dc4-a8a547b8e09f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d04c0e-6efb-40b0-a524-e5d55b63d3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080716fd-e01a-4a52-8538-c2dc063570b8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbf44c4-eabd-4da2-b746-a229c9ca5e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98fe7345-67e8-41ed-8d3a-0d0076d19452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef73b7e-83cb-4c00-9689-23d31d6ea84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a74fb1-cddd-4bd2-86ff-dd9c712e7a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa735e3-87f3-4f7c-886d-d7bc54ab6b96",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d6291b-f524-4138-910a-f3abcf3e5a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f3c826-d227-48a9-a0d7-1ad5796050da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d9a195-71b5-45db-bd0a-01beae102a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce71408f-3568-418c-9c9c-6a7f5915c113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8db9d69-11c1-4fab-8101-ef66a8a0ec2c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f83000-e761-4714-b51d-634c582772a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0525f4c-9c5e-46e4-83dd-0d36b73bce8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6d8947-1e27-4a67-847c-44d378095904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af36e1d-b6bc-48aa-a090-0e5f6351fae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ae53f4-a59a-455d-8705-831ebbbe4709",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f643428-cc4a-4d7b-8e66-649f94ef21e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a996e338-d0e7-4c18-b0b9-04c86c6de004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea775cd-9ac6-4af8-898b-d29a93c06c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d2fb4f8-d0d9-4f4e-86ac-1530e1764cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aecbfee-eb58-4130-91a1-02cb41173972",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4750dfa8-d6a6-4ea7-9d07-7d35e48bfc56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923a918e-bfe6-429c-8e28-67e87511d434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b408f5a8-afc8-4c91-95f2-c3906fa70e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1217e1dc-575f-4671-b621-f08e02a38d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac70e467-06ea-4bf8-97f5-58988741a600",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74aa51e-35b8-40fd-acac-cc3ea78ef794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb1a6b4-c7f2-4a85-82e3-3094e9ddc5d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "579c17d3-f21a-44b3-833c-d174fba6dfb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0342bf6b-6a9d-4838-9e9a-9c823bb11fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61968841-b31b-4ee3-a21a-72c8748bf6dd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8af247-4d7c-4312-aa1f-99e91dca0e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abcd0cab-0287-4446-a76f-d3530b85e96f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b47d696-7370-46d4-8e64-aad4d0a00930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dace09d8-1275-4f48-86f3-ec1bbec83467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9422d6c0-38b0-4b05-9b1b-26d4212bc9b4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d07550-bfec-4bb3-8f91-54bc172c0e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1962f90b-fb41-431e-b411-f679256aa721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db74ff64-0b18-43fb-9e6b-3aa43d2a1233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919dea83-9b61-429e-9a74-ba341b479ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8655502-2d25-423c-aaeb-b4b1d102d8fa",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b88a31-ea62-450f-aaf4-691f10d33b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa07345-7448-4de8-bba7-c04c7687101a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e518c7-0f46-457a-84a4-f60b391aad37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfccaf88-1dcb-4d8e-b40c-3a37bdd6c3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93633e6-2fcb-4d25-82bf-34a01729f2a6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01806db-7fbc-418c-a826-b19c0395ffb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7429e164-42dc-4450-bd32-7a3722898933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "692d35f8-0847-48b3-b633-382cf7e49442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc0f517-5ee6-4918-89c0-9b34d9ffba40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326117ef-04b4-435b-ba00-b11e7d95dc33",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd79620-faf1-4594-9acb-e0b8482d6022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cc6f78-13ac-4054-9621-f411054b56e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c22299a-b651-4fb1-ba9e-63f6bd2fbcb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b5ddfa-56cb-4aa1-a2b5-15c81ee293c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4763195-e123-42a7-9d31-0b1c737f3bbe",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c838a2-4d67-4dba-978b-68036c9fe50e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "872fd87c-2a26-4fc6-af00-598dc9ec7e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fe2d70-8dca-4dd4-91c6-f157174fba32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f9455a-fc58-4b2e-ad9f-d2dfc3b05ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe301897-56da-46b6-812d-e1436108c61e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327a7d90-8819-4e9a-9235-83361cc9382b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bade2dd3-18d8-457f-b16e-590ddb751fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4738ba-0e11-469c-983c-d105ad4572e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6b0314-dbe9-47ec-adba-49a4a7e5f468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbf4630-78e4-4498-8667-58ee2a199be0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd37188-6a58-488b-a431-e2a66f151722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb5319fd-b22a-46bc-9a95-e05f07fbb8cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "237369f9-e947-4138-8e15-46fa1d5e2435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35a3887-7386-43d3-9dc4-5b7aa2e84fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843e62f9-4887-480a-85fc-ab6352bee59f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5763de-2ede-4b87-893f-a1de9f597b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ec8379-1c6c-409a-9cf8-c4a4bf158976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68040f8c-7f07-4546-9764-7afe55b1da07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592a9260-a5ad-4848-8fa0-17e639c7e26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517c07ce-b682-4037-a5ab-77b480a06921",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0045283f-0b7b-41e3-bb4f-b23bc366daad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a484a2c3-9f0b-43ca-ad0d-1f1949a24720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d495057-a075-4e72-b3e4-88f924b69ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d407aad0-84bc-41aa-a1e8-5a5394d30a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d63368c-3020-4590-863e-4c67884d6e98",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59df767a-37b5-43cd-8fc6-4c0fdb2d0b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "291b0852-52f4-47b7-9281-6eb088ce0a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7a439e-ecad-4a65-97ab-22699392fe0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c769ba78-8541-4e39-9fdf-b4f1cb901cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c85cee8-f633-43b4-8e4d-7c78ed01d7ac",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e38029-236a-4cb2-b0b9-9fa78a04b9ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cae8bc1-c2ed-43d9-8cfb-780fd9319de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33cf44e-a9d8-431f-a490-1a632d4ddca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f14991e-2c2e-4682-8cc7-d7796101e7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1d0017-28ac-47ad-89d0-a6ceeeb03c04",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69677e75-2524-4a41-8f3e-a0b73108027e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c5ce2b-076b-4b5a-a551-66e6b7054703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "965a0107-aae2-478e-9f11-d379d32f4c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caaefc62-8289-4118-a45a-97047c5489f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b26b832-afb1-4635-8674-5b9185c83485",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747d83a6-ec2e-4234-82e3-da86dbbae3a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98cd0dd-822d-4402-9572-ddd93fb135d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "593cd3cd-e66d-48af-af09-343a48106df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321348d5-0c87-4092-a4b3-6e458252966a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34e83f0-eb86-431d-833a-5c8aaebc280f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f05145-6e69-4ae5-a0a5-f351d906787d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a451ac0-d8c1-4174-8529-8a1c7cfb4885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28dc5f17-a1d7-4580-ab24-3b903a13ff69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ef9c34-a0eb-426a-9a9c-ccd3054b0283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8315a54-9654-44be-af4b-0e9965bc9601",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d66439a-fe6e-4d8a-a30f-ea793f4ecddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e0d589-d18f-4006-a1fe-6f9412d3d0bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e7f047-d267-439e-8bc6-ab26b786c88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf071d3-c1fc-487a-86b6-1ad06dd9d919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e0e9eb-fa01-461a-93b5-5e7cd1b1af54",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a2f14d-9882-497a-aef1-80323b30fb80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7b0934-c174-41e8-8f0f-47469794c3d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff1623f-e61b-438c-96f0-3779216fb4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf758bea-c2ac-4430-adea-ab9c8d58a4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541b2d78-4528-4a2a-ae47-ca65263a2221",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5272f65c-d47a-4ca1-8ad4-bc759ba2e7f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a04b7d-9c7a-422a-84ce-d3c8b29eb684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86e5f2d-54d0-484b-a3ac-4c7366492cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9883e63e-de03-46d7-a085-3d29642c45d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052e6790-73b3-4940-b278-11e505253265",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5899d88-d29a-4b11-b561-a9e8e9de1d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279047cd-eb96-4f9b-992f-c75900b5ae7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5553e2-111d-49c3-9a56-61372c221749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76d6934-633f-4bbe-a376-c7389494552a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd42a5f-1c79-405e-a99f-9f67e595917b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2bf9b5-ee10-46c0-85ad-800959b394dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb279a0-89bc-42ef-9b15-2480cd852a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e960502f-1f2d-4864-bf57-30d514df7f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c77343-bfe3-453c-8523-eb3c3b312311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8205a0-659c-4c4e-9066-d58b73dad8f5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd560c7-629d-4f55-9474-cdb830b46dfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa0c950b-310b-43e4-b53b-d6293787a3b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a2bac4-dd6e-480a-baaa-7d7989decbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde15ba1-ec77-4717-ace7-8194ddc1ee73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b4c6b0-57d0-4de0-9e3b-47133291d3fb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f72aef-9e85-49f8-b5bc-bd7e749d44aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea5d03fa-4838-4b45-88e7-7d4c47cacfd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c28a04-1fd8-4aae-9116-bb577fb35907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "429dea81-bf0a-4817-aaff-2e84c95e56f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307cbf9b-5c5f-4c9b-9736-88c422d20339",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22fc016-0513-46b2-8337-bf4d0b4805ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac85776d-beb5-46e3-900a-43b5b4c567de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baac2b43-c93d-435f-b690-6874fb7189fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba7ad4cc-0ec4-4ca4-b480-dde8ccd5b7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cd2280-1c1e-4c74-ae5a-45de3b92991e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1e00fb-024c-4108-a2f6-50311ece95bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2133055e-1370-4ed2-94f7-4b22bbd33574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5aca1b6-0142-4b5d-a4ae-33bb25466589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56aba32-5c90-49b2-a801-84e1139f9b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aee29e7-ff02-4bbb-879c-2ea05153b192",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db4cb1d-980f-43a5-b07c-82951e495b84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24e3060c-9f62-4102-bc79-9d4068a232a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e13f80b-bfd1-4ebb-b341-ea012238b18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef792f88-4d26-4b39-ac77-b9b0994e3d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffca43ea-f1a6-424f-9795-73ed14f49aec",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d63363-f7d4-444c-bb49-8d379de4e519",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b441f18b-8e1f-4144-b8fb-4c4bdfabbc81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e51a81-bbdf-4cca-81ac-c5ab9fbbd1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c769332e-2e67-4af4-b599-8e97acdee2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9cc9a1-03ef-4662-80a9-010654427129",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a5bf41-20e7-44b8-a424-56eaf7094981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "553c0cb3-a0c4-483a-bad5-50cabe081d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f888b0-9f22-48ca-b619-ba54363b50fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4441c2-22a5-4b1e-8b97-312f7d840b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa8475e-2c2c-46a8-add3-1b900bb17510",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfd3aa7-cd7c-4cc3-b288-5d7209d98b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb92d651-516e-4e18-98be-19e1def27f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e74dfc-c51d-4049-870a-2384b91a7ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b7e9877-d231-414e-b2be-6ca55c1fd0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4716de67-f24a-4010-ab4a-dc77cb8a85f5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965c07be-133d-413e-aa41-6d311c4e5c74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac02e7c4-08cd-43fd-8377-0a2cd4d5e2f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "112e3fb9-1853-46a1-8682-b11dd8137173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d2507d-69e8-4df1-babd-c8cb494289f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803f3271-1eba-47fe-a624-fc7ba3aaf91d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efd48a4-1df3-4108-bac9-0075a4662884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83c9ff11-a138-4dd3-a225-3afa20844648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "681d517d-26c1-48c1-9929-69fb333231ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4bb385f-ab11-4dcf-8e8f-7adc03fe3b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e9673b-0f79-45ee-8bb6-9d1b8672b4a1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08b2ae0-3cf6-4a15-ba01-b4135d110767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9b3abd4-98cf-4cd4-9327-f8d6034aaca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef16e770-2126-40d4-ae50-a0f43fc5021d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34128b0-ad05-4191-908f-795c604adce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09897f2-feb9-4483-8b03-c1428c8bb0f6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cd9669-91d4-4481-8f6a-103a52f2f211",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4975d14f-7d43-4f9d-a626-098da4444fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc0e0e6-8a51-422f-af2c-7d161c095856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5e558c-6523-44c0-91f3-42d752665d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2745c100-59e5-4f94-9ae3-9ef74380b09f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec25737a-1f75-4192-b1d9-94801bd4264d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c86e8827-f0fd-405d-8b20-2420ee20e9c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d5d928-5e3f-4855-8df8-c9f04d0e6e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd8c410-abe1-4322-b60f-ce5b2abf5285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1514321-eb10-4757-b85a-967e18a0ea9b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746363fb-1929-4466-9ea5-041c45672225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39152f91-6dda-4da3-977d-9bc3a227a334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18a7ed9-22df-4db0-baff-edc6a99b3c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e51da1e-8eee-471b-a2e7-b639a0fbf345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0186d4-bdfa-4ba6-9c64-5edbd100e040",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6ace5f-9f0e-401c-8c09-a5c4069e03bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03c2dea7-5300-4fc8-ac14-0ab00492d8c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6876090-3c26-4d29-92fe-84ab8ac32bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6618b4-4496-4c09-b180-c3703e1297e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c26ba10-265e-421c-8057-edd8abde34d7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b468a46a-32ff-4724-80de-bc7609de399a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bb6c399-2a30-48d0-aeab-19fe08466912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8927526c-6997-49cd-8468-57d4e296e51d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2030d22-19e0-4a1c-983a-b977d1991336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4753a2b-66ed-4da3-8528-79a1ad26a9e8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97445045-20b4-435d-9644-90a41e1c43cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "168c7879-74b6-4b1b-94f6-0c46e8d70bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86aa6558-8c62-489b-a038-b54bc581b887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d87554a-282b-4fe5-aa36-ec572b938d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afa1c05-00be-40ae-b2f1-0a83579f3994",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428bfb64-e1ed-4443-9681-29fedf33fbce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17e4bb93-a61c-4b0e-a057-38ff6995ade6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a8e4d5-004e-4eda-9735-a728ede1cd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edcb1f1f-f5e3-428a-9378-178d11dbaae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be45f9f7-3ab2-43cd-9467-eaa99c6f3f7a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f596c9c-5691-4b5a-8ca8-a4dffba3b0a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84218839-8603-4ed5-836e-c3ae7d2d64f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda780af-a5bd-461c-9c37-3370d673ea40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ca85c8-91b6-4143-91d8-f51a40e4985b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b75244b-552e-4aa7-9a96-3d14e5e39ff8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4573b20-61cf-4610-a246-b063c575fdee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6d9a1ff-e514-4af6-b9c9-38e61ae6c459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db74c0e4-94a3-4be3-b94e-be01f573c850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d6e752-345b-494a-ad10-ff840485c3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5a18de-4f69-49c9-81b3-bff4091b11b4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce60dbc6-77c2-499f-9151-f1060d8d4e65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9609a9b7-75d0-4b64-8615-0bbd43943750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8535367-4fb4-4b6b-a56d-166bf64a34bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d1c3ea-efd8-4009-b642-227c364b3312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc37a7a2-ecf9-4dd8-9cd5-2ffc81688475",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afd3554-c35d-4479-a9e2-e44f5843144b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e041f8ef-95d0-412e-9ab8-a45b84e5b4f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741ea817-aa1b-4191-b4bb-2a5e06739f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae801a1-4403-4b7c-b3c8-4f4db3b40ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cd7da9-76a5-4e8d-8014-f80d54595215",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b375a56c-c86c-4f97-ac1c-6bcee26eb4f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5753369-2b24-4fe7-96b4-ecb32aed9682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "462d93dc-0109-4c5a-a00c-f1fa03a208bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0964a6-fb87-4a9e-8cd6-9eb7038b2437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdc1244-346c-4e54-8169-1541878c0702",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47b4d65-a775-4a36-b962-697b815f7f41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8129698-a7dd-4a02-ac08-6888b9d4d1f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18388137-4b73-455b-a3f1-dff178d07cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c91ff4b8-bcc4-44a6-b2e9-c8531a5f48e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03930987-546f-44fe-8696-ce4fe8c8adb6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc30d77-2bcd-43eb-9f44-54c15c7653d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc63223a-cdf8-4bdf-b874-4d9d5344d06b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b097e34-2fb2-4c37-bd6e-21fa87a4f383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49035a19-ce1a-43e6-be7a-f77eaec369eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e68e53-550a-41c4-a9dc-8e0325cf95ce",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff61103-fe7f-4b00-a807-96c76a16b7f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c456611-a69e-414f-b38e-54d8d9189a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016c2ea6-4857-4c91-80fb-5fb61cc1caf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e905802c-8d62-483e-bae9-743d48121ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b507899-2c41-4985-8a72-8c36324c38d0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15ea8a6-10be-4bf1-83ef-b0d9f68d96e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c43c24f3-4b27-4e1d-8b4a-de4243674efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "108a7537-6f59-4504-a838-11b4b457d85b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c53210-08b8-4517-a040-b712484fb32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f92f2bb-a31a-427d-ad49-800a9ac35377",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28b8170-a546-4e5b-832b-c6cbf198e164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21ed3e81-37ba-4b5f-bb53-8eafde11758c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b3e1eb-bceb-445c-b073-34a31ee724bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b784e5de-1cf1-4cbb-bc74-8e8a1fdb9179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184bb842-e984-45dc-bf39-a6094be0a5b5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667e6f37-5c68-4907-bba4-b0baf80538be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eedd5ee0-e1c4-4b33-b1c7-22ff03d6b4f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b876d1-bcd8-4d76-887c-f9a66fa7a291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a93c889-a79b-4c8d-b39b-3d88abe74043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e97acf-8302-4f99-8313-8e533ca43bfd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2876a886-bf8b-41cb-888a-8c4ee32b83d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9534553e-306e-43e3-a3d0-8b6c05f1d056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9604c5-6f96-4f5c-9bce-571b7c2b7ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0379528-8581-42a3-a044-4844cf0e21cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894d5216-3082-4d78-b42d-06a5e373b61a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f0578a-8697-429d-91d1-0cdf98600e30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5086e430-9678-41ce-85a2-386fddf99da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "931ca4da-eb38-47b5-893d-8b42e38c1d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b393b24e-6221-44b3-857f-80805898b197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdc013e-1646-47c2-bcf8-545d5a40f0ac",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ddaeb4-167b-4099-b501-93233ae88224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a62db24-b11c-40e7-a96f-34489335d76a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e20750-500c-44b8-96af-2fd8a5eb8f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8b9bca-0ec9-461a-9c7a-6efb271a93ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecaf0fe-fa10-4f23-9d47-140394c71fdb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b65179-e4c1-44d2-98bd-8e72d629020d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "800fd53e-09ee-451d-8df2-f6576e39b7d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e368402-5a51-4f98-9074-add339eebd70",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7399aa-e8c8-4d5e-8e12-922c17c965c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef19ba8-cd4d-4d8d-93f1-54769bfa38c0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda27b02-f6de-4039-ac61-8b979c666ecc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51d2fea5-d962-4d76-a28f-6e657ff5e029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "440c5e6e-a6e9-4092-8df4-969931f94168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680f4945-0d4e-4d27-8eb0-6e8a8b54b5ee"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14f05b75-16f2-4239-a516-7c1b6d562101",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92923c4d-26fd-43bb-9926-8dd3a233af46"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6358ab8-12e4-434c-b3b1-e83f48b61cc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7efb9a29-a9ec-4d0c-b08e-06846724d4f5"
                    }
                  }
                ]
              },
              {
                "id": "06058c3b-415a-46d8-9ae9-ecae1ac7bd6d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f3c67563-370e-4a5d-9a8a-a17b72ac9b7a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233116d7-1201-4aca-84a3-e000e8a6b7fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "278f8b2b-ed66-4bb6-a936-a621add2eaab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8b004a-377f-4f99-9a9b-c7f0ffa32bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29cc07ae-e28f-4015-8fcb-05aac2d05912"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63373e7d-5cb3-4356-b648-1750299eee38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7705448b-2c67-4af3-a2d6-080d25ada512"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "55a7b68c-5b7d-4064-83d1-01d9a4ca1422",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35db202d-6bae-40e4-bf2b-718cf3ba4c50"
                    }
                  }
                ]
              },
              {
                "id": "45f04dcb-538f-43dc-9dd9-e5cf94d5a3ba",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d6717f77-52fe-4b97-89c9-947235dd1127",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a5b149-bb91-4a0f-b9a3-38c216cfd6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5e689096-6ffb-41c0-aef2-cbc16792a6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aca6cb4-d8ba-40ed-9e49-5f89d4c9cdea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae14b835-c94d-4f10-9253-df5588101339"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "55d5e0b0-ab82-47b7-a496-f11c64d7db45",
            "name": "Positive Testing",
            "item": [
              {
                "id": "10d8bbd2-1d29-41a1-89f6-1589a66c4862",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f20a6906-1513-4f59-b2a8-9ac958c27b11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ea70147c-a64a-44af-9108-53ea41c356d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9c2cbca-ff45-43ea-b021-83adc3b3c0b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02215916-560d-4ed4-9d87-82c5a4b1cc9d"
                    }
                  }
                ]
              },
              {
                "id": "fad116b1-30ed-4bdc-a074-ba7c18a96e3d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78d1bf2e-b325-4cb6-81fc-135db1a056df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "25d88fc2-2cbf-489f-b6a2-607af657ac0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e56713b-ac03-4ede-a8b7-6bb8622e7800",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3239c737-fea6-42f7-afae-ff6159e5d9d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd594f20-d6d6-4b86-bbb0-645c685fac90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d8899c64-29d8-4758-8cce-fe42fb504e1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82a005a1-3dec-480e-9da3-7e5ea471f7eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "468bc153-6550-4a47-8634-1a73e29a5aa2"
            }
          }
        ]
      },
      {
        "id": "d874cea9-944c-458e-868a-5809c14faa4a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "02c603f3-a5df-45f9-9bc1-8c0327c6a9b2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d861dfe-2704-41e8-a9ce-fb6ca6337856",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1c45173-311a-437c-901b-b247787d66af",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6ef782-9d01-4d81-af5d-770a559ff708",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b63f6c5d-f650-4643-b146-0145d726132c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "706f18c1-620c-46b7-8e3b-2355c5fa5ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb21f2cd-163c-49a4-8f28-cd658afcf614"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f330941-7850-4d88-860a-35899b13fcc2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19918736-5921-49ac-be77-86439c46faea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b9ff5da-498d-45f8-9d5e-baa1a3def64f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b5ae783-b276-4fad-babd-7a9f8819e6a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab934c30-d30a-42f0-8c38-99b1b0f0c6af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "503638e0-c2ef-4e61-839e-55a46b68a15f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a98ca85-4eba-402b-862b-2238a60ff8d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c49e073d-f848-48bd-a05e-4c091f7a619a"
            }
          }
        ]
      },
      {
        "id": "1502251b-5d7c-42dc-9dcd-ad7af072fdf6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "08721819-a401-4dc9-ac93-cde496713b25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f213a128-8007-47a5-a96c-0284329b3069",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be876674-9d28-4733-9aa2-627e83bcf782",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12ad43e-bbf7-407a-bc44-3147018f77c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd044db3-bf1d-42f6-9e4e-5bbb3c3f42af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0139049c-3036-4eaa-98eb-43cb195f44b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc9d1528-f5ea-4e8c-9126-6b691ae39499"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "690ce447-7cc7-46e7-ba5c-b5a311809753",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a272e45a-6b1f-4a23-9a59-30d1eb98b2ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b82af74b-57d7-4a99-b671-5cea93cb060b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7414bae-df5a-48a6-b9f9-26c5b025a156"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0357d80c-c07d-4b9c-85a8-30f7529df266",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "40ac847d-5639-4f78-84fe-31f5beec7b51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57835400-f6a9-4e9b-a1b8-2bfe888ab180",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1dabcaee-41fb-49a8-b8b8-4ad29e0b46f5"
            }
          }
        ]
      },
      {
        "id": "62035c66-54cc-4379-9972-01ef2432c362",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d57e3813-3bc0-4186-8e34-2415b49d4e8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1abba309-6100-47ea-ae91-d804b63220ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d96e182-ca17-4e90-a5b8-b06737887642",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d42a899-026e-4b1e-a9a8-e7d246e4d82a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f439336-089c-436b-aa34-04050c646f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3041ae-0690-4829-b867-39dc004738cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24f6d422-e8d9-40ee-b5d9-354a4c9bc52f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83ca938c-17f1-48b4-915f-096df713899c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e0d285b-da27-48ba-97a5-f8d64230f7e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4f6b9c8-1516-4496-95ea-44196fb263e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65cab395-2dce-421c-a800-de6c2dd98170"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71a8a751-bc63-4241-9106-90dcf2395283",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8a86ab72-2422-4a95-aa05-f8fae1d34e03"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd53d9d2-b499-4514-9972-392777db9439",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a38a019-dce0-4182-8f10-0d352369c274"
            }
          }
        ]
      },
      {
        "id": "87277fb4-b27e-4c6a-8cc9-f588c6d2e073",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b831169c-3d64-4edf-8d69-6e805a4d3ec6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "064b013a-a4c8-4d96-9f94-277875a85a5e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "819e11fc-bbb7-4a8e-97d8-02e3259ada8f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0db4ef4b-631a-47ca-8ee5-5c9787adb10f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98e13d33-0514-42b5-abaf-c78d1dd67abc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.436619718309858,
      "responseMin": 6,
      "responseMax": 261,
      "responseSd": 23.621416872248947,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691282140523,
      "completed": 1691282155376
    },
    "executions": [
      {
        "id": "f5d6bec1-e558-4e20-aec1-f065de433eaf",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3d420f3b-1cc4-410d-9162-ad0472d632bb",
          "httpRequestId": "dcaf3ab8-d403-4dc4-b4a2-7bf3412f5aaa"
        },
        "item": {
          "id": "f5d6bec1-e558-4e20-aec1-f065de433eaf",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "add99a3d-e299-4d85-ab36-5ca62ea47bf3",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 0
        }
      },
      {
        "id": "e7739215-68de-4884-b639-c933c1eb14ea",
        "cursor": {
          "ref": "386152ef-8c50-4fdd-9cd3-76f6f5019869",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2c5d64c7-cf89-436d-a60f-38ca34d44eab"
        },
        "item": {
          "id": "e7739215-68de-4884-b639-c933c1eb14ea",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "59c48d08-8910-402d-b029-049bae6ff473",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "e7d1a575-0771-4018-b972-3019c58fd34c",
        "cursor": {
          "ref": "84a11103-b223-4d4a-bd39-9c08f72c0cf9",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d80e54b4-9111-40e9-9521-6c495a2b83db"
        },
        "item": {
          "id": "e7d1a575-0771-4018-b972-3019c58fd34c",
          "name": "did_json"
        },
        "response": {
          "id": "7c2dee05-5723-44a5-beed-1a523fe85fd6",
          "status": "OK",
          "code": 200,
          "responseTime": 219,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5c510a-3528-4a97-ac2a-be3767daa13c",
        "cursor": {
          "ref": "ba280de3-675b-4f28-a9cf-2e5631b83355",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b04ef0c3-5aaf-4476-827b-9a3eacf46f8c"
        },
        "item": {
          "id": "5e5c510a-3528-4a97-ac2a-be3767daa13c",
          "name": "did:invalid"
        },
        "response": {
          "id": "aebefc8f-6dc5-4fe2-becc-825144431cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5c510a-3528-4a97-ac2a-be3767daa13c",
        "cursor": {
          "ref": "ba280de3-675b-4f28-a9cf-2e5631b83355",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b04ef0c3-5aaf-4476-827b-9a3eacf46f8c"
        },
        "item": {
          "id": "5e5c510a-3528-4a97-ac2a-be3767daa13c",
          "name": "did:invalid"
        },
        "response": {
          "id": "aebefc8f-6dc5-4fe2-becc-825144431cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c36f46-1869-4a0f-946c-30ad6f1089f3",
        "cursor": {
          "ref": "a6485404-e38a-4999-aa67-0b9a4da7c901",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8684988f-4ce8-45b6-a602-c9b86fab8274"
        },
        "item": {
          "id": "b0c36f46-1869-4a0f-946c-30ad6f1089f3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "933b97ea-2399-4c58-8bb6-ca639ce8dc8f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 117,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98123255-d3ba-48fa-80a3-b54d46646ae3",
        "cursor": {
          "ref": "d8be1541-ebbd-46c9-87d2-ae2807fecaef",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ab0620a7-2abb-483f-b3f4-05331223a651"
        },
        "item": {
          "id": "98123255-d3ba-48fa-80a3-b54d46646ae3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9f0efae1-df0c-4f63-bcb3-44d39285cf47",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f922ad8-c6e4-4347-91b3-66ebe58ad79d",
        "cursor": {
          "ref": "a8cb66e5-c245-4b69-8938-44c5ebe98d7e",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "55f6c76f-e25b-445d-b773-30504fcce6c6"
        },
        "item": {
          "id": "2f922ad8-c6e4-4347-91b3-66ebe58ad79d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0a2a5e96-2562-4e27-a3de-1120e3e31fad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db951a9-8011-4eca-9087-4120a2231079",
        "cursor": {
          "ref": "d98a0a43-165b-42b9-8d1e-7863664ebc45",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "abafebd6-a8fd-4110-a408-546ad04896af"
        },
        "item": {
          "id": "9db951a9-8011-4eca-9087-4120a2231079",
          "name": "identifiers"
        },
        "response": {
          "id": "02a99cd4-6b53-48ab-8d8f-02d41319145a",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59631904-cf9f-4597-86f4-fc414aa1dee1",
        "cursor": {
          "ref": "d869cf8c-81e5-4b88-aa5e-274f9a5fc0e3",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "accc4af0-c6bb-44ee-8b6b-b668d3e6e79a"
        },
        "item": {
          "id": "59631904-cf9f-4597-86f4-fc414aa1dee1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fb6cc6ec-0948-4e54-80c1-2a3d753a9afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cb7b38-742c-4c52-a3b9-a09c564b6329",
        "cursor": {
          "ref": "dd991042-8f71-4059-a94f-33b3f43354da",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3fb0fcef-2728-40c2-8d0d-b3fb8cbcd822"
        },
        "item": {
          "id": "a9cb7b38-742c-4c52-a3b9-a09c564b6329",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "59dfca68-5bce-420c-9882-e5698d47c0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37d7fa0-52c0-4897-903a-d7c014ea2409",
        "cursor": {
          "ref": "d548fec1-302d-4a22-a007-7a1115b73af9",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "06ac1a7e-e30f-41c1-b93b-f3a35eb1ad3c"
        },
        "item": {
          "id": "a37d7fa0-52c0-4897-903a-d7c014ea2409",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "da61c7ca-085c-4abd-8c5d-7eb688a66d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c269273d-12e5-4708-bc97-046f8b62ec0a",
        "cursor": {
          "ref": "c40fc04d-13ed-4ab7-8303-c7acfacf183b",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "77ebf660-2e7b-4abb-a997-27aafd4ade19"
        },
        "item": {
          "id": "c269273d-12e5-4708-bc97-046f8b62ec0a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9b3974e5-9d9c-4530-b24a-84d8374b3352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e6a65b-63b2-4a71-952a-2a31fae16dca",
        "cursor": {
          "ref": "40cc3485-0ff5-4514-afbb-a121c5688ed8",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0231d8d6-72b1-4382-8388-5b8be755b9da"
        },
        "item": {
          "id": "69e6a65b-63b2-4a71-952a-2a31fae16dca",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "963d516d-493c-48c6-b439-59596f958443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1928c7b3-3077-4e87-a764-6a3438e27119",
        "cursor": {
          "ref": "6d1b1325-7c61-4dba-9f51-36b65fa827df",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bcbc1990-2ca4-45e1-9f93-81b9c00e028e"
        },
        "item": {
          "id": "1928c7b3-3077-4e87-a764-6a3438e27119",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "734fbdea-2d26-4372-be2a-093a8ce1d4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1daa0a-6656-47a2-b8f2-0b05676b7881",
        "cursor": {
          "ref": "ffce6cc3-e691-4499-b27b-f1a20d88cd6a",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "890d4a59-8c6a-4648-8e90-9aab7642c2c1"
        },
        "item": {
          "id": "5c1daa0a-6656-47a2-b8f2-0b05676b7881",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a0a612da-a04f-4b15-be97-029b3621d1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e624a72c-56a7-4f97-8fa7-90778baf7365",
        "cursor": {
          "ref": "854d4645-1929-4e2b-8ad0-6ae7d8123246",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "024669a9-53b2-4648-962d-8cdc00bdf7e8"
        },
        "item": {
          "id": "e624a72c-56a7-4f97-8fa7-90778baf7365",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5df1f7c9-92fb-4234-8f67-fbdbcec0ea71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb9e8f7-ffe8-42bf-a342-d72035b7ccc5",
        "cursor": {
          "ref": "262b3893-a0bf-4868-b39d-1deb9f2b3847",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "743f30a5-f5d0-4fab-a65b-7b1c1eab04ff"
        },
        "item": {
          "id": "4fb9e8f7-ffe8-42bf-a342-d72035b7ccc5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "be0176de-6e79-436d-9e82-91d8fd901eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c484bfd-03c3-4e8a-a25a-3d600329a38e",
        "cursor": {
          "ref": "02d5b09e-0b68-49cd-a8df-60b2f74be7c8",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3ee90c1e-59ad-4134-94d6-e5d7ebadf4eb"
        },
        "item": {
          "id": "7c484bfd-03c3-4e8a-a25a-3d600329a38e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d20ab35f-aaa0-4cee-a900-1c1ebdce1e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db22418-5a0d-4bbf-9ad3-d2067ec194e4",
        "cursor": {
          "ref": "6704c83c-8b5e-43e1-a043-4d439ba96c4c",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b54aa8c7-1c85-47b5-90bb-6436592273db"
        },
        "item": {
          "id": "9db22418-5a0d-4bbf-9ad3-d2067ec194e4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5ad1f246-d205-4694-948c-b474c07bd469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4592ca-c38a-4278-9181-3b60689f3880",
        "cursor": {
          "ref": "7af45d3e-0fae-4a6c-8fd3-c6e3dbdf7421",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4bb6d9f8-9e16-4adf-bf5c-4db92b532c6a"
        },
        "item": {
          "id": "6d4592ca-c38a-4278-9181-3b60689f3880",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b5abefea-8048-46ba-9449-d9a9b71c6166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179e2107-a0f6-4728-b0f1-34afbf9387a6",
        "cursor": {
          "ref": "07539f2a-96cb-4f89-ac78-ab3b703c5c4c",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "df5f0908-d02d-40e1-8bc9-d090151c9d3a"
        },
        "item": {
          "id": "179e2107-a0f6-4728-b0f1-34afbf9387a6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d365634d-7786-49a3-8ad5-16bc130ce869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8227d2bc-8ee2-4bf6-ac9c-108306d0e621",
        "cursor": {
          "ref": "295ba97c-5501-4529-b0d9-8a156e7c4faf",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "eace1fab-3dc3-4b62-8f72-6016525d008b"
        },
        "item": {
          "id": "8227d2bc-8ee2-4bf6-ac9c-108306d0e621",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c2480de6-cde0-4f82-88b2-0cfcb757b610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e220aaef-9040-4036-8030-eb6168a57a8f",
        "cursor": {
          "ref": "71851503-e5de-4bab-b43a-6d8f35c1853c",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c33a088a-b29b-46a5-8ab7-75347a40465a"
        },
        "item": {
          "id": "e220aaef-9040-4036-8030-eb6168a57a8f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1dbbfd1e-da54-412e-859f-58923308ea9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc42e6f2-34d4-4f52-99d9-ddd075a2d059",
        "cursor": {
          "ref": "7ef48053-0d7e-4ebe-b18a-d668453c6c72",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b348d56a-8736-43a8-b167-89536cee9d84"
        },
        "item": {
          "id": "dc42e6f2-34d4-4f52-99d9-ddd075a2d059",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4e8794ce-55b4-4739-a538-e6d222ca7927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1eef57a-aa47-42cd-9580-c3b70447a7ca",
        "cursor": {
          "ref": "ba677d89-06bf-437d-8e9c-4524cf94b261",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9a08eb88-06fc-459d-bf04-af1e65857e37"
        },
        "item": {
          "id": "b1eef57a-aa47-42cd-9580-c3b70447a7ca",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fe049f99-982e-4eec-88b6-2d1fa4cc90c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88c319e-ce99-465b-b2f2-fa1ec442f042",
        "cursor": {
          "ref": "003c286f-524b-4229-9005-0710f90c4236",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3f7ed8ad-36c1-40f5-8159-adeaa85515f3"
        },
        "item": {
          "id": "f88c319e-ce99-465b-b2f2-fa1ec442f042",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a3a70b7d-3972-403c-ab9c-6c2bf4a29e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62319b6-3c89-4ab0-a7ab-090b45ca5c46",
        "cursor": {
          "ref": "612eb87f-d8ea-4f30-8249-598a8a2f3438",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bd06dde5-66b6-4d47-9abc-272957457ee6"
        },
        "item": {
          "id": "f62319b6-3c89-4ab0-a7ab-090b45ca5c46",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5092d73c-decd-44f8-a02a-faae310ffba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e120599-75ea-4456-a17b-8691a936b05d",
        "cursor": {
          "ref": "7ebbcd88-5fad-4a15-9ad8-35883c4008a3",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "26aec8cb-001c-48b5-bb89-ff1599c4310f"
        },
        "item": {
          "id": "6e120599-75ea-4456-a17b-8691a936b05d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5fa422bc-59d1-432f-8f70-f83dede0f908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e00590-2117-4e85-a958-c262d3cde2b6",
        "cursor": {
          "ref": "0ea457d4-16bd-44be-ab3b-a132fd4a686d",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bc43ff6f-9979-41e2-bec3-906a8888c8f5"
        },
        "item": {
          "id": "47e00590-2117-4e85-a958-c262d3cde2b6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "18892595-d2d5-4649-a597-f33d441a7353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc619ff0-c479-4ec2-a201-6187e6fedd67",
        "cursor": {
          "ref": "df6fd94a-7865-4110-aca3-d8f82f139378",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "95b59ddd-7af4-40c1-9e47-8284b9f05742"
        },
        "item": {
          "id": "dc619ff0-c479-4ec2-a201-6187e6fedd67",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4e05d310-e12d-4120-b63d-838e848a4d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f9acc4-4b20-4ed8-a461-d5c9ae7930f0",
        "cursor": {
          "ref": "988defee-5376-4755-884b-d2e4c8c20e6f",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6e0990d2-b45b-4925-80f0-ed00c4c015fe"
        },
        "item": {
          "id": "16f9acc4-4b20-4ed8-a461-d5c9ae7930f0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a28bb6c6-2896-48f6-8bad-2eaa1a3f3000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdb51d4-392f-4fdb-a11f-5117be0e987c",
        "cursor": {
          "ref": "ef27f5ca-231b-40ed-9286-d024400b27f2",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3be42ea2-a3eb-4147-b756-c9a61e6ec820"
        },
        "item": {
          "id": "dcdb51d4-392f-4fdb-a11f-5117be0e987c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7cf26c4a-7121-40f5-b55b-aa87c1d0d4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f50dcf6-d014-43e3-850c-53c1798c16ff",
        "cursor": {
          "ref": "218f2ba4-2875-466b-91e1-28493914da71",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9b610dc6-9f3e-4ab9-a425-1b71f593afc3"
        },
        "item": {
          "id": "4f50dcf6-d014-43e3-850c-53c1798c16ff",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "484c5b5a-2a4a-4351-97bb-2b9992abb2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9473ac6-4f28-4fd1-9640-f2883cb9781f",
        "cursor": {
          "ref": "b13a44c5-9dd4-4665-b08f-7823c73d0fd2",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ff587b04-7fbf-45f0-9e87-356c09c64104"
        },
        "item": {
          "id": "a9473ac6-4f28-4fd1-9640-f2883cb9781f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4736007b-30da-4554-8b7c-0380a3aea90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e06467b-34ea-4b13-95d3-d028b2a7aa31",
        "cursor": {
          "ref": "15d84d81-b754-4f1a-9543-21a75471c5da",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a213376f-936f-436a-a1f2-edd5f3385cbd"
        },
        "item": {
          "id": "8e06467b-34ea-4b13-95d3-d028b2a7aa31",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7d81022d-0601-4afa-a456-0e4313e1c391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e3a4d5-19a0-4493-9fa7-bbe355bff6ca",
        "cursor": {
          "ref": "4a73ccdf-bf02-4fcd-8963-58dae8f26913",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f85eb4f8-30d7-4791-852a-b8569bca35ad"
        },
        "item": {
          "id": "c8e3a4d5-19a0-4493-9fa7-bbe355bff6ca",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4725af89-ffba-4195-b395-a180f3f68dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386d95da-5c5d-460a-bdab-0a6249e00641",
        "cursor": {
          "ref": "a322f3f0-8468-4bba-8fb8-89cf7dfb819d",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b025bc98-4ee7-4d84-b34e-6b2596c17586"
        },
        "item": {
          "id": "386d95da-5c5d-460a-bdab-0a6249e00641",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6ce12dd2-3644-49d7-ac16-14f71dd96c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fb49a2-ce46-4517-ab5d-17ee480cd01a",
        "cursor": {
          "ref": "099ea99e-1eef-40f8-893b-0b9a948a1722",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "663d31ec-b355-439f-8278-fcf92bc82d24"
        },
        "item": {
          "id": "97fb49a2-ce46-4517-ab5d-17ee480cd01a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "710563e1-228d-4ce4-b61e-d3d363ce0243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4bcf4b-8912-468d-85b8-e61701522fe9",
        "cursor": {
          "ref": "c002ded5-ca20-4edb-8f20-28534ff61a1f",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "416379b3-a944-4aac-be49-53e5186757ec"
        },
        "item": {
          "id": "ee4bcf4b-8912-468d-85b8-e61701522fe9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8d506d46-94d9-46ed-8085-ed4ec5a89ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d2f8e5-cbf6-4365-affc-383b4b963363",
        "cursor": {
          "ref": "124e0475-bf68-47f6-9d8b-ef6415e54e14",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0616167c-7d13-4836-91d3-44d53f940406"
        },
        "item": {
          "id": "91d2f8e5-cbf6-4365-affc-383b4b963363",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ff72c5de-47a9-4b43-88f9-a18c47151aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eec6693-c60a-422b-a0e7-d30b1ecb36eb",
        "cursor": {
          "ref": "72e862bf-c613-4f00-afc5-f1bed9e6e411",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a37cc96c-bd09-44d9-ba91-50c313bdca17"
        },
        "item": {
          "id": "5eec6693-c60a-422b-a0e7-d30b1ecb36eb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "278d1e8e-1493-44ca-9834-ffdddb398761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dad4f6-e027-48ca-b0d2-7e9fa1f9dfec",
        "cursor": {
          "ref": "5db240a0-e3ce-4cdb-a1c0-82018ee85b49",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4954a3d0-7677-4d35-81f2-b8f1de468618"
        },
        "item": {
          "id": "d2dad4f6-e027-48ca-b0d2-7e9fa1f9dfec",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f6591ee2-5138-4f3d-ac2f-b9cda87bcb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03dfd5b-04a4-4270-a31f-6387d35a8f0d",
        "cursor": {
          "ref": "034bafe7-91cb-4a12-9629-a0904c7abdbb",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1c548b74-35d9-4eaf-90d0-75a62b0db476"
        },
        "item": {
          "id": "c03dfd5b-04a4-4270-a31f-6387d35a8f0d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "077acec4-a07d-450f-bdee-fb1a024ec879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa196e73-c356-4f00-b4ed-49144c225de5",
        "cursor": {
          "ref": "641fbc97-f724-4f34-babd-369ae22cdcec",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "327bfb52-54da-496e-877a-1846bcfd5438"
        },
        "item": {
          "id": "fa196e73-c356-4f00-b4ed-49144c225de5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "68d8905c-00cc-4a12-8440-7984ad3ac2b0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 33,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2cb847-a5c1-47a4-a9a1-59fba07ebf54",
        "cursor": {
          "ref": "91a5041d-5502-4b80-8b4c-2ddd5e2f76f0",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8ea50dbf-b76d-47c8-ac4b-4b0712ae8426"
        },
        "item": {
          "id": "da2cb847-a5c1-47a4-a9a1-59fba07ebf54",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "40cd1042-d054-4320-89fe-b43261ef14d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7debdc-2645-407e-9dbf-d4ea0c56a025",
        "cursor": {
          "ref": "3c40ce38-23dd-4fd3-9694-f8148c00704c",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fb9dac12-0eba-4ffd-a877-96744d1ee8c0"
        },
        "item": {
          "id": "ef7debdc-2645-407e-9dbf-d4ea0c56a025",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "61ebd92d-117b-4583-a90b-9310565fc39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f90475-38bf-4897-8ff3-ae4ec490c13e",
        "cursor": {
          "ref": "a59d3e85-0edb-4255-9f82-ce60a56d558a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "03f164d9-362d-44fc-b3b6-a81430214286"
        },
        "item": {
          "id": "45f90475-38bf-4897-8ff3-ae4ec490c13e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "32ada9aa-1528-47f6-b723-e12b94dcc924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecd3cf8-e633-463d-83ba-c50eb0bacaf0",
        "cursor": {
          "ref": "06442407-f14d-4bfe-8c9f-dceafae62beb",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f20bd4bc-7cba-4d3a-a526-a1498bf53787"
        },
        "item": {
          "id": "fecd3cf8-e633-463d-83ba-c50eb0bacaf0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "18f7d0d5-e22f-4d1c-a059-641fc5a153bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ded705-2a14-4621-b830-548c34fd14ed",
        "cursor": {
          "ref": "af091631-0fdb-4bfa-b3e1-91fd48502edc",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d308346d-6414-47dc-a702-dfdfd32c45eb"
        },
        "item": {
          "id": "94ded705-2a14-4621-b830-548c34fd14ed",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "02127572-49f9-4adf-bd18-5c760e209682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256c67da-8e8b-4955-8470-9c6244fa1683",
        "cursor": {
          "ref": "3e126057-6bba-4024-b0af-106be55f40a1",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c322b310-6b96-4159-937f-33b88ea80c05"
        },
        "item": {
          "id": "256c67da-8e8b-4955-8470-9c6244fa1683",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6747af57-463c-4ca3-ac1a-cd8bdcd27629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca173e7-9b38-4394-94e2-885afad12e1f",
        "cursor": {
          "ref": "4441e3ba-b590-409f-b77d-1b27af29f167",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d859bf8e-8583-4cae-b176-92a731669fc0"
        },
        "item": {
          "id": "eca173e7-9b38-4394-94e2-885afad12e1f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2edfefd5-cbdf-46a0-806b-b5cf212c0283",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 23,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b94232f-bf70-4913-bf68-75d5d7165558",
        "cursor": {
          "ref": "b2e838a0-bb39-453f-9c48-a905a482bcac",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "94cc7e53-9087-4cf3-8fff-1acff31d4beb"
        },
        "item": {
          "id": "4b94232f-bf70-4913-bf68-75d5d7165558",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6cdeff40-fd2a-4f4e-a136-9c9cca8346a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8c4848-370c-4721-a720-4e29ed38309f",
        "cursor": {
          "ref": "dcdfbf6c-1bee-47ea-8953-b4686f0ce598",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "491b31fa-67d7-4967-a21e-046caa6d672c"
        },
        "item": {
          "id": "5a8c4848-370c-4721-a720-4e29ed38309f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "931eea56-e4ca-4177-bb66-0a168a0444fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88528c89-180e-4f9d-85e7-011d09ec51cf",
        "cursor": {
          "ref": "02664eb8-9a1b-444a-bb59-b5b4e6cb1de7",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "37de450c-aa7a-4551-934a-cf4ddf734837"
        },
        "item": {
          "id": "88528c89-180e-4f9d-85e7-011d09ec51cf",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1b950f82-4723-48d8-b48f-2cb8c2cf6e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58a92a0-2206-494e-9135-620bc6ca0d0b",
        "cursor": {
          "ref": "f4cca6d1-d7d1-447e-bbc6-f6896b55552a",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5f2ed638-f165-4d90-b980-4ecab87dd132"
        },
        "item": {
          "id": "a58a92a0-2206-494e-9135-620bc6ca0d0b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d29e1655-264d-41e3-b45d-51a47baa4a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4655fe57-d39a-4d89-b700-61578d7b2669",
        "cursor": {
          "ref": "fcff0a3d-ea98-475a-b424-5e1646ef8bc6",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2809a206-c9f9-4600-be38-6bf52cc84ace"
        },
        "item": {
          "id": "4655fe57-d39a-4d89-b700-61578d7b2669",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cf2a20a7-6a60-4f27-abae-978022a5463d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f940a3-7474-4eae-ba5d-be614a126845",
        "cursor": {
          "ref": "486e7b09-cc95-435f-8429-a5384f14cc81",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "30eca6cd-4295-41ed-aafd-aff480f75eee"
        },
        "item": {
          "id": "c2f940a3-7474-4eae-ba5d-be614a126845",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a7c6ed93-0df0-4ba9-9cf8-a3b626d92fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cc5921-2f10-4231-97e3-1d198bc45705",
        "cursor": {
          "ref": "e7b9d593-d8df-4b12-ba3b-f143e7782b5c",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3b9eaa93-a2a2-4946-a7a9-c3019238063c"
        },
        "item": {
          "id": "d9cc5921-2f10-4231-97e3-1d198bc45705",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ac072bc9-0bac-4d9b-af16-c2b891e83f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bb8f1f-f452-45f0-a1ac-742cca695bca",
        "cursor": {
          "ref": "f775f2f8-a231-4cdf-b4a2-857069b8aa02",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "346498b4-480f-4ede-a082-7f0146e32cae"
        },
        "item": {
          "id": "a5bb8f1f-f452-45f0-a1ac-742cca695bca",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "44bade9a-62b0-482b-98ab-a4b9afe1da2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de8a8c5-d942-4155-889a-5185a9c03ced",
        "cursor": {
          "ref": "823a7d50-1ef0-4c94-a145-c5bf6c11890f",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2da0d6cb-56ac-405b-9b6b-361b971c9aee"
        },
        "item": {
          "id": "0de8a8c5-d942-4155-889a-5185a9c03ced",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8d0a88a2-fec7-4d48-abb0-5c8bf3004ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ffa41d-975c-4b82-b71e-5cf708e14bf2",
        "cursor": {
          "ref": "7110eb2c-4a1b-4453-95c3-38ab21f8aaf0",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1737fc59-effb-4886-9989-6c6bda9de789"
        },
        "item": {
          "id": "c9ffa41d-975c-4b82-b71e-5cf708e14bf2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c91540df-bbdf-40de-89d9-7fbaf707d030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c14dec-bdb9-4d80-869d-28efacc2dbae",
        "cursor": {
          "ref": "b3206921-8954-4cfa-9001-daf99e945861",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6bb56e6f-de62-4570-be48-f1f663e9ca6b"
        },
        "item": {
          "id": "87c14dec-bdb9-4d80-869d-28efacc2dbae",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "898d672e-94d4-4aa4-8256-eacd2f71a92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6438a8e3-7967-4004-842a-2053e1426aa5",
        "cursor": {
          "ref": "2a9a76c9-7199-488a-978b-e72c63f3ac29",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a12222b0-1ab9-4f1c-871c-b15e48b05ef0"
        },
        "item": {
          "id": "6438a8e3-7967-4004-842a-2053e1426aa5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "37a1fa76-5681-4ded-b217-a6c904fdd040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfedd8a7-d034-4009-bd34-08aa2e905319",
        "cursor": {
          "ref": "624181d0-09c0-4217-bbe0-0fd5ad9f3f5e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a821029d-970c-40ed-913e-7210e9fc7a18"
        },
        "item": {
          "id": "dfedd8a7-d034-4009-bd34-08aa2e905319",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "44145b2b-6dfd-4124-ba5c-55892dd26cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54915298-86ef-4296-b623-ff2e41a825aa",
        "cursor": {
          "ref": "dea93a58-70ef-41e4-b3ba-31ff0a187298",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c8b949e3-8630-4dd7-b197-96e7d741f5ec"
        },
        "item": {
          "id": "54915298-86ef-4296-b623-ff2e41a825aa",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "78e0ba86-eb37-4dcf-8ed2-8952a453a5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ac5e65-ab3e-4693-9874-cf2d116d8db7",
        "cursor": {
          "ref": "475e80f4-b375-4c62-8f95-bce5c8a33a1e",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b5a2400e-f5de-4037-b379-9c456444d8c2"
        },
        "item": {
          "id": "a1ac5e65-ab3e-4693-9874-cf2d116d8db7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a0d9b7ab-1853-4934-ae43-1a2778628398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820eb17d-fa08-4259-a8df-3fed756e81fd",
        "cursor": {
          "ref": "c401efe2-b468-4ba7-8003-18e387408f89",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "659c5485-290e-4e37-b2e0-3b21ec523581"
        },
        "item": {
          "id": "820eb17d-fa08-4259-a8df-3fed756e81fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0c307899-7e31-4267-9318-e3c5683b7294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d125ae12-89e6-4e08-989b-bef5af50d6fe",
        "cursor": {
          "ref": "fd2f84d8-6db4-4298-980e-fbfa2586b157",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0ed1200c-ac98-4169-817a-596f180fb200"
        },
        "item": {
          "id": "d125ae12-89e6-4e08-989b-bef5af50d6fe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "15bb65b8-770c-4395-9d20-e601a10f1291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f251a954-905a-40bb-92b2-6e1f5cd6f963",
        "cursor": {
          "ref": "05aecf88-11c1-40fe-bf03-7996b810f1d9",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "00c03813-d9da-4632-b6e3-dcfa8d754ddd"
        },
        "item": {
          "id": "f251a954-905a-40bb-92b2-6e1f5cd6f963",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "72cff477-7303-4789-be19-0388c2d431e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a8b5e2-b1d0-48f7-9bd0-0cd1a0ca4f7c",
        "cursor": {
          "ref": "fb335d87-7c30-4249-811c-382c0203c22f",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "615714fd-6f70-4fce-97b8-5c61c3656699"
        },
        "item": {
          "id": "62a8b5e2-b1d0-48f7-9bd0-0cd1a0ca4f7c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "61ea81c4-54b7-4237-936a-4b29e55d56a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b467fe2-23f0-4a5d-a118-352509273069",
        "cursor": {
          "ref": "135dfda6-6902-43ec-a4f9-c6cf95ba4633",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e69ef1eb-113b-4ff3-b913-4a6b022cee4c"
        },
        "item": {
          "id": "7b467fe2-23f0-4a5d-a118-352509273069",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "47e1ce70-8e65-4def-afae-970f0bf6cf27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2944b17-1491-42f5-b27e-ddcd42ce37f1",
        "cursor": {
          "ref": "d8c31ed3-2f8d-461e-b9b8-b86db9416861",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "94534e7f-cad9-435e-8f73-cd26503565ea"
        },
        "item": {
          "id": "b2944b17-1491-42f5-b27e-ddcd42ce37f1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a77c26a9-1610-4d5e-91d5-6310d63e95db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7329523a-0e69-4569-a522-1adb36715680",
        "cursor": {
          "ref": "308f0ff3-a8cd-4b93-acae-676ca72fbd5a",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b21250cb-120c-46c2-81ec-b34798eee14f"
        },
        "item": {
          "id": "7329523a-0e69-4569-a522-1adb36715680",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e053e0f7-5f5e-454d-8de5-eccadee64f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e5e803-7003-4ca6-9543-606e72621491",
        "cursor": {
          "ref": "a9942ec2-91c3-4fa3-8475-c3dd532d107b",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6587ef0f-3654-4cca-93f2-49b812c18fa8"
        },
        "item": {
          "id": "a8e5e803-7003-4ca6-9543-606e72621491",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8b15dd38-3f29-4e23-95a2-7c7d8b73a144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1e6498-8b0d-4341-b195-529f67326cb8",
        "cursor": {
          "ref": "23827e9c-eb10-407b-97f1-3de86b4c7500",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "dfe8b249-1fb1-4f62-b20c-087194414465"
        },
        "item": {
          "id": "3e1e6498-8b0d-4341-b195-529f67326cb8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4226e483-15dd-409e-bd03-2eb3dcc3590f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96420a9-35bb-47e9-8219-0e0ef7c5f141",
        "cursor": {
          "ref": "e78ee3df-93ab-41a3-8530-a215a29ff2d7",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9a2f21fe-9f9b-4b2f-ab30-ab714e869e0f"
        },
        "item": {
          "id": "f96420a9-35bb-47e9-8219-0e0ef7c5f141",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b5e33b9f-807f-405c-853c-e3a2e4941e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf7afd5-bbc3-4423-8367-15727f8b39ee",
        "cursor": {
          "ref": "6285a94e-b994-44e8-b8c5-3ef1a628bac2",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0db2489a-0f8e-41d2-93c3-0a5106b6d338"
        },
        "item": {
          "id": "dbf7afd5-bbc3-4423-8367-15727f8b39ee",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "65d165b6-c0e0-46aa-9c55-3174f327dffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c75d61f-897f-42c4-b15f-ed6184be4b53",
        "cursor": {
          "ref": "d9994522-a9bc-4f02-8b33-653a89ca89fe",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a540d759-8037-4e24-bf4c-c0141bcd23e4"
        },
        "item": {
          "id": "7c75d61f-897f-42c4-b15f-ed6184be4b53",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5362a097-7cbc-4fed-bdeb-997194000095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76ddeb0-cbfa-403c-985a-c916c0313dad",
        "cursor": {
          "ref": "926b763b-032c-4d88-b172-17fda2218878",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6c71bba3-a849-40ac-866d-791dbe404e03"
        },
        "item": {
          "id": "c76ddeb0-cbfa-403c-985a-c916c0313dad",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c0c3a8b0-7e89-4809-b2e9-116d12973520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5001ee6-d95d-4224-a065-2c72549b7967",
        "cursor": {
          "ref": "26415a24-4e02-4b02-a4b7-81b4914273eb",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "686dcfd0-21ef-448c-ba86-5a1e8d5b8958"
        },
        "item": {
          "id": "c5001ee6-d95d-4224-a065-2c72549b7967",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6b4509ba-1b8e-4125-8ed7-737ac7a42612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e896ac42-5470-433c-8dfa-9df938abd769",
        "cursor": {
          "ref": "6dd65a33-40b7-4d44-88cd-7aef9885350a",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fb55bc84-cd00-4b6f-810b-caa97860a3d1"
        },
        "item": {
          "id": "e896ac42-5470-433c-8dfa-9df938abd769",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "79e4cdc3-8614-4edf-b1fe-12ec5ff6fd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f02ce35-a453-44ad-a557-67eb2cb11e93",
        "cursor": {
          "ref": "0c37d991-e3d0-46eb-8a22-6cd19c6811e5",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3ab8c745-89fa-4082-a94c-de1812d7c9e0"
        },
        "item": {
          "id": "0f02ce35-a453-44ad-a557-67eb2cb11e93",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5714b972-1c62-40bb-bf02-dbfd64b04804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79244d9-27a6-4923-bd37-394bd992c67e",
        "cursor": {
          "ref": "be9ea640-7162-4a92-a0f8-fe3841a65fc6",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d7598e21-3b23-4c03-9142-2f5446e7b8b5"
        },
        "item": {
          "id": "c79244d9-27a6-4923-bd37-394bd992c67e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a3087101-788b-4cd5-89b9-ee517c8e8761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6069289e-2aaa-41db-93fa-9a465fe0d334",
        "cursor": {
          "ref": "b8e2c378-6fe2-4962-a5ab-29165d9fe5f8",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "df720a6e-92b7-4158-a0ed-4ef499a4afb0"
        },
        "item": {
          "id": "6069289e-2aaa-41db-93fa-9a465fe0d334",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "eb5b0ae8-6c4e-4cf0-b7d7-c0b239cc89d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bf449d-f773-43b2-aec6-8aaf41f92ef6",
        "cursor": {
          "ref": "8a1f0d5b-f55c-4b82-98b9-59db77d096c6",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f08883b9-8097-4253-aeda-64cbb90426be"
        },
        "item": {
          "id": "03bf449d-f773-43b2-aec6-8aaf41f92ef6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0e1022c9-2ac2-413f-a9af-a1fcc05551f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfc07a8-0185-445e-86b7-5b38cd536247",
        "cursor": {
          "ref": "0d9863a6-a5e5-47c4-81d0-86a6712e3762",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2340fc4c-1316-418c-806c-6ad6f72c6fa1"
        },
        "item": {
          "id": "dcfc07a8-0185-445e-86b7-5b38cd536247",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "db8bb503-bb9c-44d2-ab2a-bd622cb91dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231451a8-1ef7-4613-82cd-6ede04b3c914",
        "cursor": {
          "ref": "226d7b4d-9ec3-45c7-adaf-92cc1e654a66",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "88bd6bfd-9b39-42f5-90d4-69c3b6c1943e"
        },
        "item": {
          "id": "231451a8-1ef7-4613-82cd-6ede04b3c914",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1a423f02-2c2d-4ee1-9b3b-b1bfe05c0e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98add0a6-3a65-4684-afd4-b07042dccc32",
        "cursor": {
          "ref": "4bab8d9f-d3fb-4dc7-bf1d-99fc56570902",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fe229f9a-7d8a-4d38-b463-eb5cda7e3164"
        },
        "item": {
          "id": "98add0a6-3a65-4684-afd4-b07042dccc32",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "dc538f84-636f-4c3d-8481-a6bd17805077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57952dc0-3134-4b97-a7d8-d4c03f881350",
        "cursor": {
          "ref": "ae1a5b74-3bdf-442d-8c54-8c6d2121b2da",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bf74fdd3-40a5-47d2-9dd2-77448edb7a25"
        },
        "item": {
          "id": "57952dc0-3134-4b97-a7d8-d4c03f881350",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bccd065e-d87b-4e77-8482-3933e5655a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060c2975-1661-47b5-a6e9-86740be5c46b",
        "cursor": {
          "ref": "568244b8-f211-47ab-ad69-b82c7991dc3d",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "51689965-5887-4439-a61a-8c04665b2cef"
        },
        "item": {
          "id": "060c2975-1661-47b5-a6e9-86740be5c46b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c90ec42b-18e1-4d46-80f6-bd07a6579ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d263347-b5de-4be6-9760-37ad02018e70",
        "cursor": {
          "ref": "0a17bfe2-766b-42a1-be1a-f83c0c5566ef",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b6f2e7b9-1ae2-4675-9146-bbfb4324e8d3"
        },
        "item": {
          "id": "1d263347-b5de-4be6-9760-37ad02018e70",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cb71d75e-61c2-4f55-9948-c7bbf874342e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bdff91-11d8-4ab2-babb-426a8059f80e",
        "cursor": {
          "ref": "c464d63a-2368-4230-8f64-56cd89678f57",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "002bc0f6-8f6e-4f2c-a712-71e4c87e59c2"
        },
        "item": {
          "id": "07bdff91-11d8-4ab2-babb-426a8059f80e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8e9af036-0b38-4493-81a0-11b0b446f53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5dde1b-4cf5-4e9f-83f8-cd2a630f44d8",
        "cursor": {
          "ref": "5fb30dc7-e8ab-4282-97af-a23bfc9a2b43",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f20628ab-5927-490c-a936-bf10688ad025"
        },
        "item": {
          "id": "0d5dde1b-4cf5-4e9f-83f8-cd2a630f44d8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bbbb69f9-7275-410a-adb2-c6a8d8ca8169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a450b7c4-92ee-4752-8965-03510431f498",
        "cursor": {
          "ref": "fbadaadf-96fa-4131-b154-841b2acbf6e2",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5e25f22e-f08e-4f22-ad27-6481fa43c96f"
        },
        "item": {
          "id": "a450b7c4-92ee-4752-8965-03510431f498",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0c18f9f0-3b3a-43b9-99e5-aef1a70af357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193f0d17-1213-413b-94a2-456970ce8a5c",
        "cursor": {
          "ref": "9f06048f-6c41-4b90-9db1-11199dca0c31",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "06e715f1-ecf0-4be5-9e2e-6cda13827937"
        },
        "item": {
          "id": "193f0d17-1213-413b-94a2-456970ce8a5c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bb5a1c7c-891e-42ca-95ea-07bec9209b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d1c595-65cf-4b4c-ab64-b1187d1823c1",
        "cursor": {
          "ref": "b6ef3418-204e-4f3e-bd85-6164e3e45fcc",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e903f1a9-77ee-4f4f-9390-e4dd9a677f80"
        },
        "item": {
          "id": "49d1c595-65cf-4b4c-ab64-b1187d1823c1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d504f124-aee4-453b-80cd-bee798cf36ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ecf44a-dedf-4bfe-a67e-831fff4d266d",
        "cursor": {
          "ref": "57a01e53-483b-4d52-8a80-0ce15f2702d7",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "60b6dd8f-6f17-4abe-8d23-7d1f962a13fa"
        },
        "item": {
          "id": "b6ecf44a-dedf-4bfe-a67e-831fff4d266d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fc61820d-9136-453d-b594-9561c736841e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef1860f-8a3c-41a3-9f88-1ae319116623",
        "cursor": {
          "ref": "59f0036d-a3ec-4906-9379-3d550241f0be",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "70c31370-2d97-431a-beab-69641ff2c3d2"
        },
        "item": {
          "id": "cef1860f-8a3c-41a3-9f88-1ae319116623",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b40b3a99-2213-4f02-9f1e-bf5534b20613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bc27b3-c9ea-424a-951c-57d57c226357",
        "cursor": {
          "ref": "b5ff4cff-6d38-4709-811e-23b1ec7b6a73",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6f44c1c4-829b-4b5f-8719-8fc988e61c12"
        },
        "item": {
          "id": "c4bc27b3-c9ea-424a-951c-57d57c226357",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8a7ad58c-5364-4ad6-8023-f1a3864c5339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd88ce92-5467-4059-94f6-26d2ff20419e",
        "cursor": {
          "ref": "5261a4ab-5a13-40f5-8487-e0f952c1cbb2",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a41bfea6-e949-4735-890a-61639374d543"
        },
        "item": {
          "id": "cd88ce92-5467-4059-94f6-26d2ff20419e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1651d9d5-389b-4654-991d-e12688bfd751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bf0116-1496-4546-86fe-cb538cb53aa5",
        "cursor": {
          "ref": "f4d45f2b-1bab-4f03-8462-139bf4e40065",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d2db00c8-18d8-469e-b84d-fc4c30607736"
        },
        "item": {
          "id": "b4bf0116-1496-4546-86fe-cb538cb53aa5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ce361276-28ed-4ce1-8761-845b48a80cf1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f547162d-317a-48f4-9b9f-fed3f6383a49",
        "cursor": {
          "ref": "4a6d4a99-98f7-4c1f-b40c-e623a32f1bce",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e87fba43-84f9-41a2-8830-5857533a8a58"
        },
        "item": {
          "id": "f547162d-317a-48f4-9b9f-fed3f6383a49",
          "name": "credentials_issue"
        },
        "response": {
          "id": "56eb191c-9d24-4dcb-a9f5-20cbd5bc6c7a",
          "status": "Created",
          "code": 201,
          "responseTime": 44,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ec604d-bc53-4c71-8a74-513df5055fd1",
        "cursor": {
          "ref": "a9bde594-1dfc-4523-a46b-34e371dd1e98",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a7f3603c-3d00-4b13-a745-5d2d2022d715"
        },
        "item": {
          "id": "c5ec604d-bc53-4c71-8a74-513df5055fd1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "94c4601c-0cfd-4c94-a762-40ea66b49754",
          "status": "Created",
          "code": 201,
          "responseTime": 106,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe67ae81-ab12-4f06-91eb-4493f674c4a5",
        "cursor": {
          "ref": "3208f9ae-dba2-4de6-8637-e7104c4f3453",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8e2c01ad-88c7-40b5-a973-deb768fc9105"
        },
        "item": {
          "id": "fe67ae81-ab12-4f06-91eb-4493f674c4a5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "277b7c87-b4b4-497c-bcda-c7e794916338",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec3a60a-5d9b-45e4-9830-97b78df50bf7",
        "cursor": {
          "ref": "4e12e272-176f-444e-a2ee-b6d528037a80",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "538212bb-eba2-4139-ac75-d198b70621a3"
        },
        "item": {
          "id": "4ec3a60a-5d9b-45e4-9830-97b78df50bf7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d5c35d8d-eaa7-4e4f-a1bf-47743d5b386f",
          "status": "Created",
          "code": 201,
          "responseTime": 41,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fab6f3-8be5-460c-9ba1-ac52456025e1",
        "cursor": {
          "ref": "65f70047-0a74-4eba-872a-37ab77d7deca",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1f51b8f6-bc7e-49f0-99b2-dff31f57e185"
        },
        "item": {
          "id": "77fab6f3-8be5-460c-9ba1-ac52456025e1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0c7318f1-9c0e-4c6c-8418-4bfc8d5c3452",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "44050a74-0de9-4aad-ad93-8b28bb741821",
        "cursor": {
          "ref": "a7384dd7-f0e2-40e3-9364-9dcb4e8502f4",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "17060bac-54d6-43be-bc33-09adbf213d48"
        },
        "item": {
          "id": "44050a74-0de9-4aad-ad93-8b28bb741821",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1a2b0128-252e-4f32-a631-484a895197e2",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69c6395-1cc6-43f5-8058-931c92c9af58",
        "cursor": {
          "ref": "7aae33bd-a25d-4364-8f12-6989710808eb",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0ed87cfe-a744-4348-ab61-63b525ff9e29"
        },
        "item": {
          "id": "f69c6395-1cc6-43f5-8058-931c92c9af58",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9f5754be-5a81-493b-8095-968b0f17240e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c639f5ed-34d5-4760-bd47-935599ff2e1a",
        "cursor": {
          "ref": "99275a5a-5ad9-4ffb-97ad-2cc54afe01fe",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9f8c4461-5c33-4585-a8d8-f15e1ffc727d"
        },
        "item": {
          "id": "c639f5ed-34d5-4760-bd47-935599ff2e1a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "21c4a7bf-50b4-45e4-81e0-20cedd66621b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca9c2a6-f152-49dd-beb5-d311e0d18e16",
        "cursor": {
          "ref": "412abe8a-b989-4fee-99f2-26ad9f603677",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "72a09a35-48f3-463f-947e-fa13e3d079dd"
        },
        "item": {
          "id": "fca9c2a6-f152-49dd-beb5-d311e0d18e16",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f36459f1-ae5f-44b1-8f89-f2b78184ef90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a32a3b-2193-42d9-9b74-f1d47e43b83f",
        "cursor": {
          "ref": "b41431e4-a36f-490b-83f7-b5fa3b095f58",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "29bcb20b-3c54-41a8-9a77-e1c9d0ac1d9a"
        },
        "item": {
          "id": "c9a32a3b-2193-42d9-9b74-f1d47e43b83f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "84fbab2c-62c9-4d60-bf34-9fd894ae7f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e31eaa-4ca4-49ce-a1ef-ee43634728bc",
        "cursor": {
          "ref": "03a73b50-a29a-45ce-a4f0-6fa5b1ca0a22",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7d159ed2-49d7-49a7-8795-f1c8d0add59b"
        },
        "item": {
          "id": "94e31eaa-4ca4-49ce-a1ef-ee43634728bc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d570643f-7995-4102-9ebd-f16d43934f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58897b18-4ad0-4c82-b668-3d18284d603f",
        "cursor": {
          "ref": "ba44a2b9-df49-4d2c-a1b4-a2f9a43fa26b",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cb0ab44f-975a-4fa7-845b-6349ad4e8cb0"
        },
        "item": {
          "id": "58897b18-4ad0-4c82-b668-3d18284d603f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4fdb1b8a-42a6-4b6b-821b-a0ebcbcc3441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557f1ebe-07b0-48ae-9e70-0e427e08ce17",
        "cursor": {
          "ref": "3df7cc75-4288-463d-8d22-f778fffbb185",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4e63a763-86c4-4588-a6ca-2ce5bbd6021f"
        },
        "item": {
          "id": "557f1ebe-07b0-48ae-9e70-0e427e08ce17",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "08717acb-2f76-4803-bc60-cbc39ee60b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36376313-d040-41f0-9a9c-0662a54ebbea",
        "cursor": {
          "ref": "02d6934a-608a-474f-8fb6-bb8024861269",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "35eccd0e-e948-40f4-b332-afbdc1ca11c9"
        },
        "item": {
          "id": "36376313-d040-41f0-9a9c-0662a54ebbea",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "89910021-fb8e-4703-b006-b38367a8cc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98869045-bb13-4781-8bff-03149001d1ed",
        "cursor": {
          "ref": "279176f0-f799-40e5-b91d-121c4e8c9aee",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3c940782-ba57-48b3-b674-2eb81d69faf3"
        },
        "item": {
          "id": "98869045-bb13-4781-8bff-03149001d1ed",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1e5e778b-f671-4cdd-8d21-2631e4a1d23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83627b13-fc27-470b-a94f-8cae928bdde4",
        "cursor": {
          "ref": "ef7f7578-1bc8-4c72-b1fd-f51e07c6d37c",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "af66d33d-9312-43db-90aa-89206d01be3f"
        },
        "item": {
          "id": "83627b13-fc27-470b-a94f-8cae928bdde4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "975d9ec9-bf9b-4a39-962a-d0e8dac74931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7acd25-342f-4943-91aa-af709bbd8dd9",
        "cursor": {
          "ref": "d2a4e56d-c1e4-40a3-91c5-2e853ebc20d2",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "00dc3a0d-458a-4c4f-8bbe-f70a0585ab57"
        },
        "item": {
          "id": "7e7acd25-342f-4943-91aa-af709bbd8dd9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "64ea2d23-4e72-4f1a-b187-ed1e04480e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd20a3a0-ec9a-4263-951f-5ff87529865f",
        "cursor": {
          "ref": "79529ec4-b25c-4c2e-9397-578941526fb9",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6d446c73-0cbb-4fba-bac6-282b3c9d7354"
        },
        "item": {
          "id": "fd20a3a0-ec9a-4263-951f-5ff87529865f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "383ec60d-4329-4738-be43-4d9f4dde8dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b353be-4614-44a1-910a-e68230916fa4",
        "cursor": {
          "ref": "74e9df13-e6e1-449e-b958-655e0e31c1c5",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a9557bec-bb39-4ad1-93f1-c1c98d1571fc"
        },
        "item": {
          "id": "73b353be-4614-44a1-910a-e68230916fa4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e3c455de-9960-474a-a674-19626af824ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdeb808b-3c48-44dd-a509-092756d60c4c",
        "cursor": {
          "ref": "c1bdcaec-5c16-4286-ada9-7e290d3364ee",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e8429746-7778-4688-9fe1-ac7feb48c999"
        },
        "item": {
          "id": "cdeb808b-3c48-44dd-a509-092756d60c4c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b8e35337-9baf-4489-9692-158c3d2116af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a2ca7e-6a6b-4372-8d1b-28faa0e7a1a5",
        "cursor": {
          "ref": "95ad4b70-41b6-4186-bb1b-f82e32486802",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "446099fb-9234-48c0-a293-b2b36cde7521"
        },
        "item": {
          "id": "e7a2ca7e-6a6b-4372-8d1b-28faa0e7a1a5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2163a06c-b55c-470b-afc1-c032369bd498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb955f15-d78a-4cb5-b225-7fba8c136dfe",
        "cursor": {
          "ref": "a192849b-de5c-48dd-8c4c-ab7885060f04",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b8baf726-8f49-4ea3-a6f1-19f5bae0a461"
        },
        "item": {
          "id": "bb955f15-d78a-4cb5-b225-7fba8c136dfe",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "be95061b-a017-475c-bc20-d1f8c73040cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81b9b75-8782-4889-94de-891887c90b00",
        "cursor": {
          "ref": "d6582a44-524c-4f94-a187-701b11bccf43",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "512c4a59-824e-4867-8e39-71bbfbeb0d49"
        },
        "item": {
          "id": "f81b9b75-8782-4889-94de-891887c90b00",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "450f5d91-3f4c-404b-a7d6-a85ac0416d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cedbc2-503e-4f07-94bf-6c291c234b92",
        "cursor": {
          "ref": "c826d298-5560-482a-836f-8d9f2a39cd79",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "97f07e7b-a045-465f-a793-6c326ce8ff19"
        },
        "item": {
          "id": "46cedbc2-503e-4f07-94bf-6c291c234b92",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "83b7f609-274f-42ec-b9d3-2b1f6a0f5633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c392b1-9605-4818-a5dc-aace1c57cd6f",
        "cursor": {
          "ref": "365cd4f2-9665-4ae7-b6cb-9076d8f50f0b",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a63fa734-4957-4f92-a7fc-e4bb81eba78c"
        },
        "item": {
          "id": "33c392b1-9605-4818-a5dc-aace1c57cd6f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f0dcf82a-7cb9-41ea-8da6-f512d7f5a2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664cc17b-0e5b-47ed-994a-439ffc568ddf",
        "cursor": {
          "ref": "e5a58288-ac38-4976-b77c-8ea0bf56acfe",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "951cf34c-7351-41ff-a4c6-12a550a3325d"
        },
        "item": {
          "id": "664cc17b-0e5b-47ed-994a-439ffc568ddf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0223ec34-8e36-4501-841a-bfde67537868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab9217d-917d-4af4-97c3-7293deb28aa4",
        "cursor": {
          "ref": "79ffa0b7-9417-4803-9d4f-f75bce34b211",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "aed04cfb-5a34-4ba7-bc98-424bcee5995f"
        },
        "item": {
          "id": "2ab9217d-917d-4af4-97c3-7293deb28aa4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "87e2e71b-f7be-4b6e-9762-aa6c3a0da021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ebcb16-240e-4e10-8f7c-2f2cf3c17793",
        "cursor": {
          "ref": "a19591d8-d929-4d45-bf1d-b569d08b048c",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "deaeab65-246c-40ba-80b3-422180c60893"
        },
        "item": {
          "id": "40ebcb16-240e-4e10-8f7c-2f2cf3c17793",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "445548f4-4075-44e0-ba4b-014b6d0a72f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76928d40-b8c9-46c4-9948-fdc6c5f09b1f",
        "cursor": {
          "ref": "7fb516c1-4564-4dce-8615-560d8d5b315f",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "50b055e4-7fbb-4f73-8198-60d53e0ac1ce"
        },
        "item": {
          "id": "76928d40-b8c9-46c4-9948-fdc6c5f09b1f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "75063853-5c1d-467e-a754-68e64b05f327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba578e8-bad7-48f8-bea8-e10ebd3471c3",
        "cursor": {
          "ref": "ec5de367-849e-4089-ada7-ab48c2eb0d48",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c9de988e-b4b5-4f90-87d0-7525529cfcb9"
        },
        "item": {
          "id": "9ba578e8-bad7-48f8-bea8-e10ebd3471c3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d7479d91-1aca-49ec-9f0a-72cf23406e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac48067e-f568-4451-8997-5942ba055588",
        "cursor": {
          "ref": "b691560a-5c05-43df-af44-830820cb9d92",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "156c4fb2-3e01-4f40-a8c7-ec575d78ca08"
        },
        "item": {
          "id": "ac48067e-f568-4451-8997-5942ba055588",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2b0f2668-c3fd-44e3-9e8d-486bf9b01343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb6a95c-3b2b-4c7b-a77b-024925176c44",
        "cursor": {
          "ref": "65935f28-3c92-4f8a-87b0-5d993096a4bd",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a50a8a58-823b-4d6b-8bde-e002334df89d"
        },
        "item": {
          "id": "2bb6a95c-3b2b-4c7b-a77b-024925176c44",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8b75cd4a-c9b7-4b31-909d-30b3e59210e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd182a00-ff1d-4837-a6cb-3a43c05c7c36",
        "cursor": {
          "ref": "d612e7fb-4f1c-4bcb-b697-45be12a0d447",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "16768ee9-12ef-4e11-8846-e66904e577a4"
        },
        "item": {
          "id": "fd182a00-ff1d-4837-a6cb-3a43c05c7c36",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ff4379e9-9356-4508-8093-b552f1eab918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328dc20b-92a0-4752-909a-34d9b7779231",
        "cursor": {
          "ref": "d3a442ac-64ae-491d-ad9d-c9ff6b77f4c1",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1ab164e5-52a3-4c4b-a04c-a83d93051af3"
        },
        "item": {
          "id": "328dc20b-92a0-4752-909a-34d9b7779231",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1d9ed57c-5478-4447-a061-0e600912d211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7d59a6-6cba-4956-be53-cceb1a758a87",
        "cursor": {
          "ref": "c4145de2-f08f-476e-bc52-c59f350c1b1f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "52bec06b-2e56-4712-935a-0217e8cb2131"
        },
        "item": {
          "id": "9f7d59a6-6cba-4956-be53-cceb1a758a87",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a84ecbfb-34c6-436a-af53-e4c33cd704b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e0e39c-d430-483b-824a-392dcf072f4c",
        "cursor": {
          "ref": "c52fdeac-6c46-4246-97c9-f25fd227b3be",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3f8559ad-6277-430f-8bac-11dacf5b87e1"
        },
        "item": {
          "id": "54e0e39c-d430-483b-824a-392dcf072f4c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1502a57e-b7b1-4787-ba0b-5806f44c400f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ad4b75-5f98-4a5d-80f4-8eaf0b010d99",
        "cursor": {
          "ref": "1cadd455-df7a-4ee4-a5c1-933f7af3ad90",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e23df2ef-63e0-49b2-b560-02c04833ed79"
        },
        "item": {
          "id": "79ad4b75-5f98-4a5d-80f4-8eaf0b010d99",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "29936fbd-c688-46bd-bd9d-0ffc193aebf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18808e1-29c4-4840-acdc-e8f71a27d4bd",
        "cursor": {
          "ref": "2663f818-9884-462e-8054-47186f99733e",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ae46b2ea-094d-4675-b695-6335c47399e1"
        },
        "item": {
          "id": "b18808e1-29c4-4840-acdc-e8f71a27d4bd",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f133f6d9-f351-4607-b87d-43968cb44e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477627b0-60d2-4ae8-aadf-5fe0b0bf9fed",
        "cursor": {
          "ref": "b62efd24-d90e-441e-b95b-8b1445fe9403",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "243d15eb-7df3-43c6-a489-4093bfe77794"
        },
        "item": {
          "id": "477627b0-60d2-4ae8-aadf-5fe0b0bf9fed",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "251d007e-77a7-4459-8997-62f8734491be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bc2dde-1082-431d-8943-9c77a5ceadf9",
        "cursor": {
          "ref": "d92e7a94-245c-41f8-a92e-e95dd1cdb2da",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "061d8611-e65c-4c48-a385-c2877d63e58c"
        },
        "item": {
          "id": "73bc2dde-1082-431d-8943-9c77a5ceadf9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "863239ba-c43d-4583-8f80-641d6694fb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e436e829-6b9a-4891-a75b-9b3b14b35ad3",
        "cursor": {
          "ref": "394d10d9-f33d-466a-949b-aacb773e75b8",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7fe8335a-5fe6-474d-a236-7c1eb6635ffc"
        },
        "item": {
          "id": "e436e829-6b9a-4891-a75b-9b3b14b35ad3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1dc8ae92-2a94-4cc8-8ab2-3907314e35c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411feba9-bff6-4cd5-bdeb-890de4be2d49",
        "cursor": {
          "ref": "8d2b78f8-6a9c-4fa0-9342-47f98e28c9b1",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "05c666cc-9c04-474f-822a-0054d595b679"
        },
        "item": {
          "id": "411feba9-bff6-4cd5-bdeb-890de4be2d49",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3cf86e90-d305-416e-878d-0b0e63323be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea82a44d-db15-45bc-94b9-9c71d481303e",
        "cursor": {
          "ref": "6a315088-dfa0-4030-9dd7-c2bf398b9060",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c5759943-2d78-4262-8fd5-3220d5745ed1"
        },
        "item": {
          "id": "ea82a44d-db15-45bc-94b9-9c71d481303e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "10255995-becd-41b9-b3d9-55c77896e733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ba402e-cfdf-4ff4-925f-bfb33b119b6c",
        "cursor": {
          "ref": "6c57424a-dd70-45d0-b0c3-64dd07df2eae",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c13100b3-19e7-4bd0-9bb8-843f3c2dff40"
        },
        "item": {
          "id": "63ba402e-cfdf-4ff4-925f-bfb33b119b6c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e14e248c-8085-4221-8cde-c653cbf0f9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ecc66c-fccb-4484-834c-8058cee097d4",
        "cursor": {
          "ref": "78e0c5fc-c9b6-4cb3-897b-505b9d98ad70",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0a05063e-5dec-41c1-9de2-0aa67742edcb"
        },
        "item": {
          "id": "f7ecc66c-fccb-4484-834c-8058cee097d4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "03347965-e151-44df-88d2-80139ef8adac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0270177-3256-43f5-8784-05eb5b68cd9e",
        "cursor": {
          "ref": "039526d2-0575-4d0a-adef-377cf026135f",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "42dcf2f9-7773-491d-8b79-d6e5db0a3139"
        },
        "item": {
          "id": "b0270177-3256-43f5-8784-05eb5b68cd9e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "da59807e-3742-4543-a4b0-658185c432ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc54f1f-7c0b-418d-ae8f-7c3d1f9e44b1",
        "cursor": {
          "ref": "d4e1cf70-e0fd-4beb-8609-05ab049cb03d",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c39df755-5be0-4e19-9153-a43a2e463d86"
        },
        "item": {
          "id": "7dc54f1f-7c0b-418d-ae8f-7c3d1f9e44b1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dd3c2381-92ce-4001-9b45-937cbcbfc9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc446a0-e375-4ec4-8644-1e5912bcbc41",
        "cursor": {
          "ref": "b9331118-123d-42d5-b064-76c592763bbf",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "742a92cd-cd1c-4950-88f9-d7a0a560d9b0"
        },
        "item": {
          "id": "abc446a0-e375-4ec4-8644-1e5912bcbc41",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ddb50634-3d0f-4cb2-8a74-3a7e50d5dacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4a5de7-7d38-41da-880e-038b1d86c9fd",
        "cursor": {
          "ref": "d70e67d9-c2db-4193-b76b-c3a0ee64e17d",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "62ed5da4-9280-4455-892e-63ca7edf42fb"
        },
        "item": {
          "id": "fc4a5de7-7d38-41da-880e-038b1d86c9fd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "da687f79-e22f-460e-8666-34dd8856c9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b614ba12-d4d2-4b9b-bf81-1a41f3426e45",
        "cursor": {
          "ref": "9ea7344d-0220-474a-aa23-e536d7bc43f5",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8613ed95-8dcf-42cb-81f8-e5d21e6416ac"
        },
        "item": {
          "id": "b614ba12-d4d2-4b9b-bf81-1a41f3426e45",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "eab89244-f1df-4685-9783-f8994d6d6c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b13a49-5bb7-4d56-ba7d-4496445c6a73",
        "cursor": {
          "ref": "1701e6db-fe29-48d1-8e86-1bd193894c0d",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "20602dff-2bf1-4c1f-8826-ce8bf23cd468"
        },
        "item": {
          "id": "b9b13a49-5bb7-4d56-ba7d-4496445c6a73",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c701fb4f-01be-4306-83bd-3f46ec506bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943988c0-4023-4647-aa6b-538d3627f32c",
        "cursor": {
          "ref": "799ac1ae-50ff-4e1d-aa4c-1c1598933db2",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8ad693ef-399a-4277-9488-97068dcb824e"
        },
        "item": {
          "id": "943988c0-4023-4647-aa6b-538d3627f32c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f1f44c02-f9bd-4c41-993e-00c6f20b2ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543ce0d6-0d05-417c-827e-1b0f66a927cc",
        "cursor": {
          "ref": "df3b2fa5-25fb-47e8-82ca-9b5eb30072aa",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6f5670cd-4e52-4c68-8126-41ebf37f994f"
        },
        "item": {
          "id": "543ce0d6-0d05-417c-827e-1b0f66a927cc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6410ae27-7e35-4cd3-888f-df7e796b8a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c82334a-7f76-49a4-8624-03ada2466bca",
        "cursor": {
          "ref": "9090a84e-1b2c-4a1b-8d03-c7e00322fba3",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0e8643f7-b6e3-4ab5-9a10-ebbbc249a92c"
        },
        "item": {
          "id": "2c82334a-7f76-49a4-8624-03ada2466bca",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2160d3ed-72b6-4b87-ad28-1d1484c995f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e791232-6375-48b3-a3ab-f594b49bf8dd",
        "cursor": {
          "ref": "ced48a23-509b-4efc-b456-9fe564cebb5b",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bcddc075-d585-4fbe-a5bd-97d8a1df08db"
        },
        "item": {
          "id": "7e791232-6375-48b3-a3ab-f594b49bf8dd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "53f6ee9a-7225-40e7-aa68-2666c629650e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04223250-3c0f-4002-baa3-de8b4ef73495",
        "cursor": {
          "ref": "1e69ba79-450f-4c20-819e-95b610e9b165",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "229f6a9c-84c1-4b89-8660-24b15e9982cb"
        },
        "item": {
          "id": "04223250-3c0f-4002-baa3-de8b4ef73495",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "be81664c-4364-41ce-88cb-b774bade9c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875e48f3-62a6-48dd-ae74-5ab0c5bfd979",
        "cursor": {
          "ref": "cfe26d29-e724-4055-a678-fe8751f431d5",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8e24a668-a6d9-44f6-883d-2dde842f0542"
        },
        "item": {
          "id": "875e48f3-62a6-48dd-ae74-5ab0c5bfd979",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c866245f-13a3-4dea-8abe-f005fe623462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfab3d5-0250-4324-a361-dfe8ca033267",
        "cursor": {
          "ref": "e5110c7a-b6fa-42dd-b6de-7d832e07367e",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bb381986-db69-4b20-a9a6-5b9ee1921655"
        },
        "item": {
          "id": "4bfab3d5-0250-4324-a361-dfe8ca033267",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f8611835-1a9b-4c3e-a255-bee5a73bc5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c0a8f0-a188-40b1-ad14-24763df80365",
        "cursor": {
          "ref": "8ed5a172-35d0-4079-a5bf-4d918e48892b",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "473a8ccc-751f-4aee-b094-0b70d68880a6"
        },
        "item": {
          "id": "85c0a8f0-a188-40b1-ad14-24763df80365",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "693cb6d7-5da9-4cdf-91db-c88a8b66cd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589755f5-c4c7-4922-bf9b-35932163ffe1",
        "cursor": {
          "ref": "f02892b2-b7f9-45d1-93ad-7da6a11ed045",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4999feb4-d909-4543-9ed8-7c74458a9ecd"
        },
        "item": {
          "id": "589755f5-c4c7-4922-bf9b-35932163ffe1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fcd274e6-6ec3-4898-98d9-3e3c9d5e6220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acafed19-0bf6-4890-88e8-3d9330f773e0",
        "cursor": {
          "ref": "9c573b0f-af56-4120-be99-1485229ebb93",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9a73686d-a19b-49a1-867f-1eaff5bcabca"
        },
        "item": {
          "id": "acafed19-0bf6-4890-88e8-3d9330f773e0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fd5726b6-42b4-41d3-8430-25193f9a7419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f480149f-31e0-483a-bbd7-3b03cfaa1d40",
        "cursor": {
          "ref": "8a5efe0f-762c-48fb-a31d-8a3d071c1582",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "becc8897-7ffe-4a1c-a076-0e01cea6f780"
        },
        "item": {
          "id": "f480149f-31e0-483a-bbd7-3b03cfaa1d40",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0e7787b5-b12f-49db-a8a9-1be259007cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119bca45-6c29-4af6-9853-ab5bbdd7a176",
        "cursor": {
          "ref": "4f02fe1d-0c73-4f34-9bc2-444b8d753d67",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f9ac4050-7a6f-4ce9-8b67-b925297fbfdb"
        },
        "item": {
          "id": "119bca45-6c29-4af6-9853-ab5bbdd7a176",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7e0f2431-ff1a-405e-a9df-51d8f393e64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97cd212-4c80-4c43-9401-75bea39d0410",
        "cursor": {
          "ref": "19becbf5-f226-47b0-b920-0949c0a6db33",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e4f7518d-7390-441c-ad3b-33dcc63cfa4f"
        },
        "item": {
          "id": "d97cd212-4c80-4c43-9401-75bea39d0410",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0dc711dc-1987-4e82-9f4a-28423a02c426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8c95db-7a00-46ce-a40c-962d6c16da7d",
        "cursor": {
          "ref": "7a526bdd-aed4-4b3c-997b-b679f6ee9ab9",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a62e51a9-b1a2-4d92-b742-346592b74e9c"
        },
        "item": {
          "id": "7b8c95db-7a00-46ce-a40c-962d6c16da7d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a93df852-dad7-4ffa-904d-62780d56acce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60c4f0a-2197-4868-8670-0c80e3f166f9",
        "cursor": {
          "ref": "3eb28898-90c6-4965-8d88-71a3aa2e4a61",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "99f59fe3-2174-4206-94d9-407ab7676a51"
        },
        "item": {
          "id": "a60c4f0a-2197-4868-8670-0c80e3f166f9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9f91f820-d997-4b99-992c-e4ebab4d5888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0aa14a6-3fcc-48ca-b312-e76cfad08584",
        "cursor": {
          "ref": "3789bcf4-9c92-40ff-9886-431c027a85e4",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "eef0a8fe-35ce-441e-a015-b65c318161e9"
        },
        "item": {
          "id": "f0aa14a6-3fcc-48ca-b312-e76cfad08584",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "67c5ab35-677e-4359-8a59-37f9dc62bf13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0540c9d1-447e-40b4-9e4c-9b5d2c5119ca",
        "cursor": {
          "ref": "715405be-c714-432d-9918-d5ea14595d6c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d63e3391-df2a-436d-8496-daa410d8406f"
        },
        "item": {
          "id": "0540c9d1-447e-40b4-9e4c-9b5d2c5119ca",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5b2894b8-f573-40fc-8818-8beada4781d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3e66d3-680a-47e9-afb7-41ceb7b83b3c",
        "cursor": {
          "ref": "eae42399-373e-41b8-96af-0c26f0934c1e",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a0c9c1db-4bc6-41ad-95f1-90aa45fb6f00"
        },
        "item": {
          "id": "ce3e66d3-680a-47e9-afb7-41ceb7b83b3c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a61c5e97-1c75-4ba1-9b62-7fcbfe41abc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c96dfbe-3d97-4b96-a1c9-b7bcfea058ea",
        "cursor": {
          "ref": "26087ee7-8f7d-47f6-948f-89841d093a55",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2d24ae3f-777e-4f5f-8f7c-1af93f9e0621"
        },
        "item": {
          "id": "4c96dfbe-3d97-4b96-a1c9-b7bcfea058ea",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f2d655ec-e0f9-4c68-88e0-9c37462bbd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3038e64d-4107-42bd-b9fa-bffcde715ee0",
        "cursor": {
          "ref": "4092e5d9-34a7-4bae-9b3d-bca0bd03a362",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b6c2c9bf-015a-4254-badb-58f2f6cc0fdb"
        },
        "item": {
          "id": "3038e64d-4107-42bd-b9fa-bffcde715ee0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a5476226-f05e-433e-b24c-a7afac46d34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6602678f-04ac-4e3d-986d-8d2dbde545af",
        "cursor": {
          "ref": "1f44149b-8119-4041-b43f-7042b64ee74d",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cfdd755d-3ed2-493d-b5d0-f495007dcfb1"
        },
        "item": {
          "id": "6602678f-04ac-4e3d-986d-8d2dbde545af",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2a148e70-cd32-4319-94b6-2039adcb9ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d1b60b-111a-4c67-ba18-1410ed785ccf",
        "cursor": {
          "ref": "16037365-c9b8-429d-a7bb-d7c0fee22191",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "283b1cc9-7e48-4bd9-a04a-4e9e238713e4"
        },
        "item": {
          "id": "b9d1b60b-111a-4c67-ba18-1410ed785ccf",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "512da824-7605-4e9f-a391-2e594132d302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581e1e42-acfc-4e54-9324-486fb35094e8",
        "cursor": {
          "ref": "bc3f31fb-819f-46d1-8f60-7c815c5aceaa",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8801c87f-d5b1-4323-b234-10f50506d8e5"
        },
        "item": {
          "id": "581e1e42-acfc-4e54-9324-486fb35094e8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d224facc-2c79-46cd-a433-9d944cfae9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8575125-4530-4e8e-aaa4-ca7e17e94856",
        "cursor": {
          "ref": "bfc84d87-2cd4-4880-8766-685335020c32",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7f66ec00-d1fe-47f2-a1cb-d90040a9b79f"
        },
        "item": {
          "id": "f8575125-4530-4e8e-aaa4-ca7e17e94856",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e38dbd60-93f8-4236-a8fa-cb7f63de4cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4af4e6-aa41-4020-a3b5-eab4c9e32328",
        "cursor": {
          "ref": "08c53a75-9dd3-4bda-932a-61bf4a5108aa",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6e6b70ec-9ccb-447d-bbdf-9ee64e7de26e"
        },
        "item": {
          "id": "3f4af4e6-aa41-4020-a3b5-eab4c9e32328",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0e2054dc-0092-48a7-b4b8-ab2711c96b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590be50d-a31f-4c58-a1b2-a3a09e9438fb",
        "cursor": {
          "ref": "20b338a7-49e6-468a-8ec6-fcbd3402833d",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e144fee9-744c-4368-b251-d005c6aa441f"
        },
        "item": {
          "id": "590be50d-a31f-4c58-a1b2-a3a09e9438fb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f25be645-add9-4173-b0d9-08dfcbd27f8d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffe4812-8049-4000-9a0f-4d3138aa47e6",
        "cursor": {
          "ref": "89a0d689-5042-4cb9-a5f5-c38f28a82007",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "99c8b36b-b47a-4d99-a623-4f04f48b6c45"
        },
        "item": {
          "id": "9ffe4812-8049-4000-9a0f-4d3138aa47e6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d66e9001-ceb6-404c-ad8f-45b748fe6286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c235dec-9e9b-494f-8820-ce9f2df54796",
        "cursor": {
          "ref": "e8265668-2271-4753-b190-6baf83ab1c6f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "61b45baa-4702-47e8-9a75-1fd9ddfc07a4"
        },
        "item": {
          "id": "7c235dec-9e9b-494f-8820-ce9f2df54796",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "57b8b4fa-a4a9-4deb-b6c4-49ad71fd20c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdab2a83-2791-4742-a44b-4db86038f9fa",
        "cursor": {
          "ref": "2e577eef-0afe-4ac8-bd06-92ae83e73860",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fbbe66cb-ac93-4682-a154-17431fffe4e2"
        },
        "item": {
          "id": "bdab2a83-2791-4742-a44b-4db86038f9fa",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "41482e49-04f2-491f-af69-667dd78385d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9623a51-9d6f-48df-ba17-a7db946fef69",
        "cursor": {
          "ref": "2f995d58-2290-4bf6-8408-df479fc75afb",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "991ad4c2-d542-4dd3-8615-8bb9967b9ee4"
        },
        "item": {
          "id": "e9623a51-9d6f-48df-ba17-a7db946fef69",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e5015af4-8d57-41b6-8992-557efc7c660d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cbd10f-36d6-444b-9237-6a4757d23169",
        "cursor": {
          "ref": "cd0df1b1-685b-4a4a-9d9a-e8450a8b5e2d",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "307a7f4f-18e7-4082-a19e-b61b5fc4e323"
        },
        "item": {
          "id": "23cbd10f-36d6-444b-9237-6a4757d23169",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b76a2370-2de5-468d-be41-085a5aaf053a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4b54a2-d8fa-49c4-8e72-afb7360517df",
        "cursor": {
          "ref": "def3b885-4b6e-4d70-a1aa-a314a495b337",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "287e6328-a255-43fc-9bab-67090007a1b5"
        },
        "item": {
          "id": "3b4b54a2-d8fa-49c4-8e72-afb7360517df",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8a496e4f-369f-46af-bb02-92213632325f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c614ef-d0aa-4914-84be-200377337a88",
        "cursor": {
          "ref": "f9553a29-5b31-4226-8b3f-9f92c75ac61f",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c8d9683a-1ff0-42a7-9f66-10fca4a72f00"
        },
        "item": {
          "id": "f0c614ef-d0aa-4914-84be-200377337a88",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3f6ddf73-b070-401e-914d-086a7b6c7496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5993b9f-e996-40cd-8d79-b9b0c32c8ea3",
        "cursor": {
          "ref": "dc62cc9f-926c-4458-9194-ec6a3702085b",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "adb541da-62cb-4ea2-a925-de039719cd27"
        },
        "item": {
          "id": "b5993b9f-e996-40cd-8d79-b9b0c32c8ea3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "458bb9e8-762b-435d-8545-1a989d36b32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f89a85-a1cc-48b2-946b-78928ab7a775",
        "cursor": {
          "ref": "27018202-1df1-47ca-8b5c-1726b7a542d0",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9e32ed02-cb67-44ac-89e4-d40e48ac2e23"
        },
        "item": {
          "id": "b5f89a85-a1cc-48b2-946b-78928ab7a775",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9f778246-82b1-4530-b044-0e9c412811f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77bf9e9-2434-4330-a6df-ff1119bbce77",
        "cursor": {
          "ref": "735a9b46-7ad2-48b6-9549-2fa0a42ba154",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7c43cd5c-af33-4da9-8963-4754affe84ca"
        },
        "item": {
          "id": "b77bf9e9-2434-4330-a6df-ff1119bbce77",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d886be6d-3808-4455-9b6c-c125a0f94d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af9517e-ccbb-4a51-b964-3c5b00bdc342",
        "cursor": {
          "ref": "4c1f7cba-d519-47df-9460-c25c3aea9778",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a094e8a5-11ba-426e-a50c-9cd26d9aadd0"
        },
        "item": {
          "id": "8af9517e-ccbb-4a51-b964-3c5b00bdc342",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "aa8bfb23-7964-4712-a295-beda85becfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbf1921-8c35-45cd-8600-1fe36015e3a4",
        "cursor": {
          "ref": "c3cba32a-5aad-49dd-acaf-3eb170285b83",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8a5f838d-59d2-41af-a839-65aa2db6e934"
        },
        "item": {
          "id": "7bbf1921-8c35-45cd-8600-1fe36015e3a4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8fcfc05d-efa3-4f91-9dcb-515861ecec87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee5329e-bcc9-473d-851d-c877a7a4c053",
        "cursor": {
          "ref": "4be9c536-5e72-425c-b44b-ba0e7474ca9a",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "942fe9dc-a60b-4db0-baec-d37d0fc368ab"
        },
        "item": {
          "id": "dee5329e-bcc9-473d-851d-c877a7a4c053",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b97649f4-6bda-4544-be2b-156d1b98d031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32eb55c5-b0af-4874-8c85-2f56585478c0",
        "cursor": {
          "ref": "cf606fc8-0679-40e5-9800-98d8d6026288",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8000d3d9-24ce-45ee-af9d-7bb52ed6d016"
        },
        "item": {
          "id": "32eb55c5-b0af-4874-8c85-2f56585478c0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "48417a08-829a-447c-90b2-2d22220eb75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323ee3a0-4cbb-46a8-8d3d-ed1be616a517",
        "cursor": {
          "ref": "e07c9895-4180-407b-801f-48b7ab63cfc5",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5a1d363f-b713-44ab-9c58-e11c9d89bc7f"
        },
        "item": {
          "id": "323ee3a0-4cbb-46a8-8d3d-ed1be616a517",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d0f974bb-e024-4ee9-aac0-1169d6efb786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4962d432-3f66-41db-81e4-ba56802555f9",
        "cursor": {
          "ref": "0b50341a-6d79-4a56-a4ad-7e85dbf1f97e",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "607a9104-bfa5-4089-95ea-ff25aefbd3ad"
        },
        "item": {
          "id": "4962d432-3f66-41db-81e4-ba56802555f9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "98c9cea0-b16d-4206-ae3b-ced39a94dc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e5fab4-8d2b-4c38-a7a7-532bf684649d",
        "cursor": {
          "ref": "ba41710c-f773-47da-bc13-e472918a6fac",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "eb121284-276c-41da-80d6-a4c01c908ce7"
        },
        "item": {
          "id": "b9e5fab4-8d2b-4c38-a7a7-532bf684649d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f3693f0f-cdf8-4de7-86b4-0b4baee3dcef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a4c288-c93f-4ca1-97e7-7771a0b6aa35",
        "cursor": {
          "ref": "25c5f7d2-3a6f-41a8-b585-4fc8011c2ae9",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1bb3322c-0168-465b-acee-874d293f2763"
        },
        "item": {
          "id": "d8a4c288-c93f-4ca1-97e7-7771a0b6aa35",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "da61814f-4b1b-41d3-be73-5861b7e03f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3314ce-59d0-4025-b1e6-78b9607691ef",
        "cursor": {
          "ref": "d128e713-28d5-41d2-9317-5ced9a70b311",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d4612c22-effa-45eb-b50e-22b75778a57a"
        },
        "item": {
          "id": "4a3314ce-59d0-4025-b1e6-78b9607691ef",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "84f1413f-9412-4c66-9e6f-9415eddf861b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d78bd01-c873-45c2-88bc-24660be392d5",
        "cursor": {
          "ref": "ac898100-c240-4502-9f48-b348302a3a15",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "05efaa62-ac5d-439a-8b2f-164c09474f51"
        },
        "item": {
          "id": "3d78bd01-c873-45c2-88bc-24660be392d5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b6e0769d-526c-4c3d-840d-470a7aa26bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb87e19-ad25-442d-9fbd-d4e8acb21339",
        "cursor": {
          "ref": "9de50cee-691e-4ef6-ac57-296a521ab064",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9e97cda6-40c9-4983-b70d-a4959cc1224c"
        },
        "item": {
          "id": "dcb87e19-ad25-442d-9fbd-d4e8acb21339",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6002650e-0840-45ca-b741-1b6f335aa7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2c1fd7-2b69-427c-8e7f-8d0c96fef407",
        "cursor": {
          "ref": "4ef2f9fc-f04a-4189-97ae-95e0c7cc681b",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c74ba4c4-1b3e-4b47-ba5c-2c6b99cc635e"
        },
        "item": {
          "id": "7e2c1fd7-2b69-427c-8e7f-8d0c96fef407",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9119b1c9-8b15-4596-ba28-738199ff8eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffe0f8c-0380-465a-ae61-d67858c8663e",
        "cursor": {
          "ref": "94ab4571-8763-4720-ac57-3b9e5eef5bd8",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b8b7aac1-cad6-4774-af19-4a33b8e60f89"
        },
        "item": {
          "id": "7ffe0f8c-0380-465a-ae61-d67858c8663e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cf0aa435-eebf-446c-80dc-19b735b78e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34238ca-dbe1-420f-bbfb-15e4f7e70c0c",
        "cursor": {
          "ref": "54bedae1-e50f-45c2-9eea-786b73b28b55",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e7da4990-cbee-45d2-b3db-768aa23b2d16"
        },
        "item": {
          "id": "d34238ca-dbe1-420f-bbfb-15e4f7e70c0c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a77cb806-4cd3-4343-a998-7f221d9670cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5ee81f-2f56-4a3d-a53d-becccdfe2d11",
        "cursor": {
          "ref": "7d316ace-4d4c-4de6-9060-5ae6e6b07ac3",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "34acde3c-4d8d-44e0-b4e5-c46d30810116"
        },
        "item": {
          "id": "6f5ee81f-2f56-4a3d-a53d-becccdfe2d11",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "11fee7e5-a6c4-4cdc-b238-30679f26ba28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 163,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57347a87-081c-408e-a064-aaffdde70597",
        "cursor": {
          "ref": "f3d21e93-efca-4056-b2a2-06d7b629556f",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0f1144f5-935b-4c8c-8da7-1bf97d42af29"
        },
        "item": {
          "id": "57347a87-081c-408e-a064-aaffdde70597",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4ccfb0cd-0c11-4e7b-af78-ac0457007cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be26600d-ef58-41dc-8821-d92afc54e715",
        "cursor": {
          "ref": "7d22b1ef-3b0e-4f8b-8b4d-2b1c5d28e2d5",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "16085f24-9751-4310-9311-f3bd4a8abf31"
        },
        "item": {
          "id": "be26600d-ef58-41dc-8821-d92afc54e715",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a53f445f-c19e-429b-b2ec-26196cbdf5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362adeeb-d0df-48f1-bd34-279aeca582e8",
        "cursor": {
          "ref": "b3ff76ee-1849-489d-b870-5358786ba821",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ef9f4a13-72ce-4ec4-9b23-fe651bdb781d"
        },
        "item": {
          "id": "362adeeb-d0df-48f1-bd34-279aeca582e8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "76493848-e37f-4a8f-b32a-5f4392a85b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e06fb8d-e337-4f58-9564-336e965400c8",
        "cursor": {
          "ref": "cea954b9-4c98-4410-b2e6-e93ad983c529",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fdfe85f1-1f0a-43dd-a3e1-d8a05f8edff2"
        },
        "item": {
          "id": "2e06fb8d-e337-4f58-9564-336e965400c8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4ef72b5a-b61e-424d-8fe3-745fc5761f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad4b757-e7b0-451c-b967-4fb0a18d50b8",
        "cursor": {
          "ref": "f39d1998-5858-47ba-bb45-bfd9caca372a",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f29c47f2-a197-428d-ba6a-49e6bdf02911"
        },
        "item": {
          "id": "5ad4b757-e7b0-451c-b967-4fb0a18d50b8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "364a1ae5-5434-41d2-9de3-8ab537aa27fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adcf132-b462-4546-b6d1-e899e5ebd886",
        "cursor": {
          "ref": "56f35571-a64c-47c2-bf42-843f726a54f7",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "87fa3acc-ede1-415c-9613-b2fd2d258410"
        },
        "item": {
          "id": "9adcf132-b462-4546-b6d1-e899e5ebd886",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d30b36dd-8ebe-454e-8338-abe97382d729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597f2b75-1b8a-4e3a-86c8-a7c48486989a",
        "cursor": {
          "ref": "4b5e9859-3d2e-4ad8-9899-2bbe9c5927d6",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8b72f856-5de6-4d2b-988f-1520fc4b5de3"
        },
        "item": {
          "id": "597f2b75-1b8a-4e3a-86c8-a7c48486989a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "45255541-82ff-40a9-9e31-00d96611577c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a436b696-bc13-4fcc-a756-f92f59667c6e",
        "cursor": {
          "ref": "aad21b88-1af3-49e2-aeb5-872794f279b2",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a4f4ed42-b3cf-47dc-827c-08e0d6c5fc14"
        },
        "item": {
          "id": "a436b696-bc13-4fcc-a756-f92f59667c6e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "64ff7b3c-ae0f-4a03-9674-b15bf3fe1a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4add96d4-e92d-4f22-b7e2-966bb31c466a",
        "cursor": {
          "ref": "f39345ae-fd1e-4b4f-8a65-3de2488dd5e3",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "18ad493d-95e4-4da6-b4ea-bf0b5b9c18dd"
        },
        "item": {
          "id": "4add96d4-e92d-4f22-b7e2-966bb31c466a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6bf69bea-05dc-49e6-b24a-86615ce3feb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0180c3-6167-4914-be32-4362d5857509",
        "cursor": {
          "ref": "e1352a19-04b0-416a-8e71-6008204c6c09",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ca2f79d7-6d9e-49d6-a0c1-b4d4745f06b8"
        },
        "item": {
          "id": "2a0180c3-6167-4914-be32-4362d5857509",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4e2d94da-4a90-48b0-b352-54d1b90188d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da36e608-dfc7-4bb6-8cd9-5d9d592632b5",
        "cursor": {
          "ref": "f6749cec-9ca8-434f-9898-a2697fc536e0",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "390b6e67-669c-418d-ab5c-199924b02cb5"
        },
        "item": {
          "id": "da36e608-dfc7-4bb6-8cd9-5d9d592632b5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "daf66c14-cb48-408c-81ee-7c8564e72c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc850be6-095b-4f9b-9d47-aff4b58e23ac",
        "cursor": {
          "ref": "7ee80663-1a6a-4d84-af9a-4d15853eaa26",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "eb940db4-1351-4c0f-abcb-b6d01d4fe604"
        },
        "item": {
          "id": "cc850be6-095b-4f9b-9d47-aff4b58e23ac",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5446abc0-fcdc-4966-8bc0-5ad1c72d9c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080716fd-e01a-4a52-8538-c2dc063570b8",
        "cursor": {
          "ref": "7772f791-e3e5-4367-b127-3810845307e3",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "807637c1-4974-4940-8954-59ae734580d6"
        },
        "item": {
          "id": "080716fd-e01a-4a52-8538-c2dc063570b8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c7dc28bb-ef54-473f-a643-c5af6e31dc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa735e3-87f3-4f7c-886d-d7bc54ab6b96",
        "cursor": {
          "ref": "ec4521bd-7382-48af-8c5b-d4147be6771e",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "83dd73b4-c9e4-4ded-b0c8-08abe9440226"
        },
        "item": {
          "id": "1aa735e3-87f3-4f7c-886d-d7bc54ab6b96",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2b515120-ced6-449e-82ba-cd3c436624d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8db9d69-11c1-4fab-8101-ef66a8a0ec2c",
        "cursor": {
          "ref": "23740953-a235-4c41-9fae-c0eb36e3724b",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "64fe2c04-6341-4332-9c95-6f176b26d57b"
        },
        "item": {
          "id": "c8db9d69-11c1-4fab-8101-ef66a8a0ec2c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "634471f6-fa89-4f10-a3c7-07162180c78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ae53f4-a59a-455d-8705-831ebbbe4709",
        "cursor": {
          "ref": "b6f722ef-56ca-45bf-ac80-fd44336b448f",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c8c155d8-ea3f-4788-a864-a72e93bc51c4"
        },
        "item": {
          "id": "40ae53f4-a59a-455d-8705-831ebbbe4709",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "18d8b9af-3cfe-43d4-a079-7c2cbf85fb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aecbfee-eb58-4130-91a1-02cb41173972",
        "cursor": {
          "ref": "fda6ff3c-e902-474f-b164-5df5424f6df6",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6ca715a0-6975-4c3e-9ae5-2868e44cbb93"
        },
        "item": {
          "id": "1aecbfee-eb58-4130-91a1-02cb41173972",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7ad8a798-d13a-433f-9d74-42e6cd24dbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac70e467-06ea-4bf8-97f5-58988741a600",
        "cursor": {
          "ref": "942f22af-4235-4d21-813a-c6298f989fa1",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9c6826db-226c-41a7-8070-bc5110eb6621"
        },
        "item": {
          "id": "ac70e467-06ea-4bf8-97f5-58988741a600",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c9af945b-0b08-45e6-a828-1c4d0a836275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61968841-b31b-4ee3-a21a-72c8748bf6dd",
        "cursor": {
          "ref": "46e11df5-5c96-4aed-b489-b689726b73d9",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2ca28e77-8573-4206-83c6-ad859a14fb38"
        },
        "item": {
          "id": "61968841-b31b-4ee3-a21a-72c8748bf6dd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7a8bcf97-69cc-4f79-bbb5-ddb635b878dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9422d6c0-38b0-4b05-9b1b-26d4212bc9b4",
        "cursor": {
          "ref": "05fb37b9-0a93-4d83-9487-c814990a35b6",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e7052f3a-0265-42e0-849f-396703e76858"
        },
        "item": {
          "id": "9422d6c0-38b0-4b05-9b1b-26d4212bc9b4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a5341572-7ca8-4675-9c05-4be4ba11742a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8655502-2d25-423c-aaeb-b4b1d102d8fa",
        "cursor": {
          "ref": "5c3d6cda-c41a-4ada-9de9-7c94d19eea92",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1561561d-611e-496c-af31-ce75d622a86e"
        },
        "item": {
          "id": "c8655502-2d25-423c-aaeb-b4b1d102d8fa",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "43f485c4-71b9-4958-b9e8-4001272055f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93633e6-2fcb-4d25-82bf-34a01729f2a6",
        "cursor": {
          "ref": "be951b8f-d5da-484b-bd8a-ed63decd0258",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c3200e5f-091e-4eb3-b631-f7ff7e22a727"
        },
        "item": {
          "id": "d93633e6-2fcb-4d25-82bf-34a01729f2a6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "44f4d7aa-3b95-4169-acae-e05691865028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326117ef-04b4-435b-ba00-b11e7d95dc33",
        "cursor": {
          "ref": "7d1ee2f3-2dbb-4ab8-ae2f-6dbb580ea725",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5476eea2-9eb2-4968-b445-33453be74ece"
        },
        "item": {
          "id": "326117ef-04b4-435b-ba00-b11e7d95dc33",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1b55adaf-40ce-4e18-b2c6-9e3f4178f8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4763195-e123-42a7-9d31-0b1c737f3bbe",
        "cursor": {
          "ref": "07133a94-3248-45bb-808f-beb9506077d7",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "954e8352-76ec-4616-a60f-545f8c50335b"
        },
        "item": {
          "id": "d4763195-e123-42a7-9d31-0b1c737f3bbe",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "24597a76-2312-48d0-a22e-b4da338b2f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe301897-56da-46b6-812d-e1436108c61e",
        "cursor": {
          "ref": "504da63b-6e8f-42da-aefe-1224d62bae82",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "80528c9d-8f1d-4224-98f0-e14063cbf75c"
        },
        "item": {
          "id": "fe301897-56da-46b6-812d-e1436108c61e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "02858673-6d63-4eae-a9cc-28dddd0d499c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbf4630-78e4-4498-8667-58ee2a199be0",
        "cursor": {
          "ref": "36366d8c-79eb-4a0b-9be6-9979aed54d41",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "713be586-e81e-4726-9de9-a98f7dee84a1"
        },
        "item": {
          "id": "9dbf4630-78e4-4498-8667-58ee2a199be0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "398bbce6-3891-4003-90fb-1a1f4b6922f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843e62f9-4887-480a-85fc-ab6352bee59f",
        "cursor": {
          "ref": "be4e8526-535a-401d-91e7-68e9f3746a14",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c8e47d47-d0b4-467e-8d44-452bafe1f8dc"
        },
        "item": {
          "id": "843e62f9-4887-480a-85fc-ab6352bee59f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "85fe095a-e17e-4482-b889-b9e572b96421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517c07ce-b682-4037-a5ab-77b480a06921",
        "cursor": {
          "ref": "f0ec2c1e-d81a-42bb-8c5c-77292d062a7b",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7508782a-d0ab-4a6a-afd8-cf52d65d8f68"
        },
        "item": {
          "id": "517c07ce-b682-4037-a5ab-77b480a06921",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c2ebffd1-3d6d-47d1-b7fa-0d300fe0a8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d63368c-3020-4590-863e-4c67884d6e98",
        "cursor": {
          "ref": "83938c53-a512-4f83-8d9d-e93e67f07845",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "19c1415b-1135-4a2a-b830-49364f5d8683"
        },
        "item": {
          "id": "7d63368c-3020-4590-863e-4c67884d6e98",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ab3f1a36-f900-4b53-b098-e3646a660425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c85cee8-f633-43b4-8e4d-7c78ed01d7ac",
        "cursor": {
          "ref": "ab9308df-55af-4a8d-8f5f-00ed8e279cd8",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b526292e-b6ee-4e73-88a2-c18a9f5ef888"
        },
        "item": {
          "id": "1c85cee8-f633-43b4-8e4d-7c78ed01d7ac",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6895448a-0ff5-4e30-a8a4-a6d2d552c24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1d0017-28ac-47ad-89d0-a6ceeeb03c04",
        "cursor": {
          "ref": "46919a6a-06ab-4f54-b96d-34f317045fb4",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "93345164-7902-4085-afce-94e0404ec00c"
        },
        "item": {
          "id": "8d1d0017-28ac-47ad-89d0-a6ceeeb03c04",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "36abdb1e-b92c-4a78-9002-01f94952b752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b26b832-afb1-4635-8674-5b9185c83485",
        "cursor": {
          "ref": "b4950d22-fc31-4c9c-a8b7-6320369e10a6",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c29f2ccf-5592-4cf8-ada1-975f9e1ac38f"
        },
        "item": {
          "id": "1b26b832-afb1-4635-8674-5b9185c83485",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "36d2d3f5-2f27-4074-b4c9-fc61e6d817e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34e83f0-eb86-431d-833a-5c8aaebc280f",
        "cursor": {
          "ref": "14648ad8-af55-444c-bd4a-ee2f5b8c334e",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1d354bd8-e9c3-46de-971b-1d34f33efbb3"
        },
        "item": {
          "id": "a34e83f0-eb86-431d-833a-5c8aaebc280f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e70c50d6-cece-4ee3-a51a-b9335cfa258a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8315a54-9654-44be-af4b-0e9965bc9601",
        "cursor": {
          "ref": "3d09d24f-16b2-473e-80f0-908c98462d82",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7558df38-4101-48ca-a3a5-0293de2021fb"
        },
        "item": {
          "id": "f8315a54-9654-44be-af4b-0e9965bc9601",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "65fa335c-e22b-492c-97be-6bb824b066e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e0e9eb-fa01-461a-93b5-5e7cd1b1af54",
        "cursor": {
          "ref": "2cee2a96-4c42-4ffe-8a85-17e12e855398",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "16e61bfe-aa83-45a6-ad65-c0105987abc1"
        },
        "item": {
          "id": "f6e0e9eb-fa01-461a-93b5-5e7cd1b1af54",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9d50f67f-6a80-405b-ae6c-b6ca1669b9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541b2d78-4528-4a2a-ae47-ca65263a2221",
        "cursor": {
          "ref": "90e9f7b9-7180-4716-8f85-bf724c7012d4",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "edfeb7b3-94c9-47db-8677-ddce6a2c0c26"
        },
        "item": {
          "id": "541b2d78-4528-4a2a-ae47-ca65263a2221",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bd496aaa-aa04-434d-8638-5e7081a8e6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052e6790-73b3-4940-b278-11e505253265",
        "cursor": {
          "ref": "666cc5df-516b-48df-90d6-c1d57c1612b0",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "593349e6-5ce3-4636-8b8e-34f75d231330"
        },
        "item": {
          "id": "052e6790-73b3-4940-b278-11e505253265",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f5909d32-1d9d-4026-93d6-8902965ad5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd42a5f-1c79-405e-a99f-9f67e595917b",
        "cursor": {
          "ref": "01ffc1c6-2140-457d-86f7-0959c354a4b9",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7194a318-891b-4f54-972a-b96d1243c68a"
        },
        "item": {
          "id": "ffd42a5f-1c79-405e-a99f-9f67e595917b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "53611b08-8df0-4747-acdd-a501d2944826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8205a0-659c-4c4e-9066-d58b73dad8f5",
        "cursor": {
          "ref": "fc68e88b-d741-40b9-9287-0763f0f77ee4",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "081c5d0a-2b9c-4e7c-adb7-b82a2fdbbac8"
        },
        "item": {
          "id": "0c8205a0-659c-4c4e-9066-d58b73dad8f5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "51eadea5-2533-4053-97bc-bdacc4500596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b4c6b0-57d0-4de0-9e3b-47133291d3fb",
        "cursor": {
          "ref": "21abe522-eb96-41e9-abd2-df3042d83865",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7189eaf7-a11f-4325-ac0c-9eeaaebdf3f6"
        },
        "item": {
          "id": "c7b4c6b0-57d0-4de0-9e3b-47133291d3fb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1bba4572-0f2c-4a83-8901-b6f4b470b352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307cbf9b-5c5f-4c9b-9736-88c422d20339",
        "cursor": {
          "ref": "7f408527-fa05-4474-8e6c-26a72e46bd31",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "337d83f1-2dad-4008-8a7e-7094f4cacd21"
        },
        "item": {
          "id": "307cbf9b-5c5f-4c9b-9736-88c422d20339",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3ad34e8b-dbfc-4ca1-a861-794f8c81aa47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cd2280-1c1e-4c74-ae5a-45de3b92991e",
        "cursor": {
          "ref": "c4f2bfea-7bab-433f-849a-433bc71f4703",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "775dc609-652c-4779-a226-190c586eca04"
        },
        "item": {
          "id": "c7cd2280-1c1e-4c74-ae5a-45de3b92991e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f25c4638-e41e-4b4d-8b5e-d161a0e077d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aee29e7-ff02-4bbb-879c-2ea05153b192",
        "cursor": {
          "ref": "7d9bc852-d6bd-4d40-878f-34581666a031",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bcc8bbfb-78b5-4991-abe5-d9b9727d85ac"
        },
        "item": {
          "id": "9aee29e7-ff02-4bbb-879c-2ea05153b192",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b5d70dd2-db65-472b-805d-447dc516cd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffca43ea-f1a6-424f-9795-73ed14f49aec",
        "cursor": {
          "ref": "b57a801e-d83a-4b39-aba1-b28149d24a39",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "24febb96-9d6f-4c91-9eb2-65b790eec776"
        },
        "item": {
          "id": "ffca43ea-f1a6-424f-9795-73ed14f49aec",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c5d99045-f13d-489f-a699-4e943fcb99fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9cc9a1-03ef-4662-80a9-010654427129",
        "cursor": {
          "ref": "f848e435-9914-47ef-847f-8e6714837c85",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3f4332da-e319-4110-bf74-4ab317cc80a9"
        },
        "item": {
          "id": "5a9cc9a1-03ef-4662-80a9-010654427129",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "801b6abb-1076-4ab0-b218-11078284b6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa8475e-2c2c-46a8-add3-1b900bb17510",
        "cursor": {
          "ref": "0e6b5a1d-4324-4484-aa46-da871cb4e819",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "19e03e18-c0c4-47bf-83a4-f74c319d4340"
        },
        "item": {
          "id": "9fa8475e-2c2c-46a8-add3-1b900bb17510",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b7ce08fb-2d5c-4b86-b2cb-6dbc210769bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4716de67-f24a-4010-ab4a-dc77cb8a85f5",
        "cursor": {
          "ref": "a510b61b-32e9-486e-a66c-e52950df6abb",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e1cdc014-96ed-4404-b2d0-8f4c18a48d01"
        },
        "item": {
          "id": "4716de67-f24a-4010-ab4a-dc77cb8a85f5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d8d69037-2496-4772-927b-c5028e478d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803f3271-1eba-47fe-a624-fc7ba3aaf91d",
        "cursor": {
          "ref": "d292ba7b-1452-407d-ad29-d00a666de2dd",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f062bd3c-ad16-4aa7-8200-467fdba47039"
        },
        "item": {
          "id": "803f3271-1eba-47fe-a624-fc7ba3aaf91d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0693965b-3b42-4e50-9f40-d679f1ae9a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e9673b-0f79-45ee-8bb6-9d1b8672b4a1",
        "cursor": {
          "ref": "0473a5e7-469c-4b7b-89a7-8ee12a10e71e",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d4efc2c1-7fa7-4559-bac8-f1e2610fec63"
        },
        "item": {
          "id": "d8e9673b-0f79-45ee-8bb6-9d1b8672b4a1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4da3d2f7-2502-4ca4-ab3c-39b285e73a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09897f2-feb9-4483-8b03-c1428c8bb0f6",
        "cursor": {
          "ref": "21fc031b-7879-4d25-899f-969c7f9db4cd",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "aba0fd1b-300b-446c-af5d-fc8f465ded34"
        },
        "item": {
          "id": "e09897f2-feb9-4483-8b03-c1428c8bb0f6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "14491c4a-aa7e-49a3-9776-343b81a7d22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2745c100-59e5-4f94-9ae3-9ef74380b09f",
        "cursor": {
          "ref": "bacb6d6c-17c2-4296-9620-bf35d943c55a",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7b55dcec-d422-45bf-8f0b-a71852971079"
        },
        "item": {
          "id": "2745c100-59e5-4f94-9ae3-9ef74380b09f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e3eafaf9-47ee-46d5-a97d-ab309bdf27bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1514321-eb10-4757-b85a-967e18a0ea9b",
        "cursor": {
          "ref": "321fbaba-3ef2-4b58-9886-3dd1fbf6118e",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "f28c3096-99e0-4c69-964a-90c42203699a"
        },
        "item": {
          "id": "e1514321-eb10-4757-b85a-967e18a0ea9b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "872e5884-2236-40f0-aaed-e059e57641e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0186d4-bdfa-4ba6-9c64-5edbd100e040",
        "cursor": {
          "ref": "77036c25-fd54-458c-8cd5-c1c8b035c048",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ad3f2a25-3f81-42f2-9ba8-204b8c5d6829"
        },
        "item": {
          "id": "be0186d4-bdfa-4ba6-9c64-5edbd100e040",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1973c1e9-6d4f-4e34-9782-85e8f7cb03b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c26ba10-265e-421c-8057-edd8abde34d7",
        "cursor": {
          "ref": "b8e04793-a329-405b-826d-ddd3dbca2ba7",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e2e5eabb-d0e6-417f-932f-dee1c99f3462"
        },
        "item": {
          "id": "5c26ba10-265e-421c-8057-edd8abde34d7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9f74022f-927d-4206-ae5f-aa6e951bc497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4753a2b-66ed-4da3-8528-79a1ad26a9e8",
        "cursor": {
          "ref": "b39ed4c7-d020-436d-85ea-c70a015b7976",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "642d00cc-f39d-422a-bbf3-85be8f5165b5"
        },
        "item": {
          "id": "d4753a2b-66ed-4da3-8528-79a1ad26a9e8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3228ce8a-39c8-47ad-8acc-6060e1eaf6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afa1c05-00be-40ae-b2f1-0a83579f3994",
        "cursor": {
          "ref": "7c951b2e-a23a-4083-9425-87e6dc2a1dab",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "1c610e14-9a5a-4789-b1dd-ce9a866b0663"
        },
        "item": {
          "id": "1afa1c05-00be-40ae-b2f1-0a83579f3994",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fedcbb5f-83e3-4c50-88bf-0b555621f784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be45f9f7-3ab2-43cd-9467-eaa99c6f3f7a",
        "cursor": {
          "ref": "76305605-08bc-4fc9-afe0-2174af507a1d",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "00ea28c2-f1cf-4a9d-b33c-77fa60648df0"
        },
        "item": {
          "id": "be45f9f7-3ab2-43cd-9467-eaa99c6f3f7a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d462a2a4-9f20-41b9-83f0-3012aace5f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b75244b-552e-4aa7-9a96-3d14e5e39ff8",
        "cursor": {
          "ref": "e5da7fb1-3860-403d-a9c0-817da25cf65b",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "98d50e6f-ca41-42aa-8495-87c18a3a06cb"
        },
        "item": {
          "id": "4b75244b-552e-4aa7-9a96-3d14e5e39ff8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "01d54bbe-e205-45f1-8816-0b591ad2b153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5a18de-4f69-49c9-81b3-bff4091b11b4",
        "cursor": {
          "ref": "d1a24a88-21a0-4421-b2b5-c824f892aef1",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8b335a53-6a5a-4a1b-a7a7-0d3f1d70804d"
        },
        "item": {
          "id": "ee5a18de-4f69-49c9-81b3-bff4091b11b4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "56e2a74f-617d-441c-9b17-2d8ca0e57e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc37a7a2-ecf9-4dd8-9cd5-2ffc81688475",
        "cursor": {
          "ref": "91b23669-72be-4c72-b8f5-bb0ccf1e3ced",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "0e004205-a1e5-4c19-a911-a423d256aec0"
        },
        "item": {
          "id": "bc37a7a2-ecf9-4dd8-9cd5-2ffc81688475",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4b60b7c6-c4eb-46d6-ab15-95eb9860636f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cd7da9-76a5-4e8d-8014-f80d54595215",
        "cursor": {
          "ref": "99a40ae0-6f5f-47cf-ac59-ecf306ec4e79",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9b2993e4-6b0c-47ad-9401-642089b43b02"
        },
        "item": {
          "id": "35cd7da9-76a5-4e8d-8014-f80d54595215",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "dc5ab9e3-aaae-4b60-9b74-91378d603ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdc1244-346c-4e54-8169-1541878c0702",
        "cursor": {
          "ref": "c9154909-9f5a-4759-ba4b-0d236bc018b6",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3d84a79b-1045-40e4-a4be-2c80f6c16c7e"
        },
        "item": {
          "id": "2cdc1244-346c-4e54-8169-1541878c0702",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "89d053e2-6380-49b4-925b-28574e8e70e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03930987-546f-44fe-8696-ce4fe8c8adb6",
        "cursor": {
          "ref": "10e569df-fec8-4269-805f-493db0469596",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9e2e04e8-e2d8-40c0-af2d-be47fb6c4ab7"
        },
        "item": {
          "id": "03930987-546f-44fe-8696-ce4fe8c8adb6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fe747702-f5da-4bcf-a03c-878be0d2279f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e68e53-550a-41c4-a9dc-8e0325cf95ce",
        "cursor": {
          "ref": "f2717183-82d6-42a2-ba55-ac63799558f1",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "8a9a714e-333b-419e-8dc8-139caf27d504"
        },
        "item": {
          "id": "f7e68e53-550a-41c4-a9dc-8e0325cf95ce",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "febee52b-b9c4-44ca-8e02-bf276ff34b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b507899-2c41-4985-8a72-8c36324c38d0",
        "cursor": {
          "ref": "fde645fe-8016-4c29-8f76-97af9cfdf033",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "01847ba7-10d3-4076-931a-a9f0319b75e5"
        },
        "item": {
          "id": "4b507899-2c41-4985-8a72-8c36324c38d0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "59f6b46d-4c01-4255-ac39-79bc2f3201be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f92f2bb-a31a-427d-ad49-800a9ac35377",
        "cursor": {
          "ref": "cf6633cb-d5db-487f-a28b-3e22f7f793d9",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0e5bcefc-ff50-4bac-8851-58012d160b27"
        },
        "item": {
          "id": "4f92f2bb-a31a-427d-ad49-800a9ac35377",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c8be804e-6dcf-449c-bbc5-101e843d0f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184bb842-e984-45dc-bf39-a6094be0a5b5",
        "cursor": {
          "ref": "d1c9607f-487e-4165-89ab-259b9210a714",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8a024d7c-3ab8-4997-9bf0-05b27ac7cf36"
        },
        "item": {
          "id": "184bb842-e984-45dc-bf39-a6094be0a5b5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3ec29e1d-d5d8-49fd-9ed3-d08c9d68df57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e97acf-8302-4f99-8313-8e533ca43bfd",
        "cursor": {
          "ref": "6a5220f0-e415-480e-b9ef-80eb5c8e93d1",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f199e0b4-1667-45ab-ae98-7e385ac6b575"
        },
        "item": {
          "id": "87e97acf-8302-4f99-8313-8e533ca43bfd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "853eeea7-2613-4fe6-8e4d-79d136819657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894d5216-3082-4d78-b42d-06a5e373b61a",
        "cursor": {
          "ref": "7d875e37-aa98-4d0c-a208-eecfd7d29261",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "6959281d-00ba-4b03-873b-6341c17fdb7b"
        },
        "item": {
          "id": "894d5216-3082-4d78-b42d-06a5e373b61a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ae61f16c-9c3c-4247-a951-b956cfa52725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdc013e-1646-47c2-bcf8-545d5a40f0ac",
        "cursor": {
          "ref": "e094d10c-c8a0-4c51-98c9-53d054a37825",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f70c7943-206f-4ef4-bb50-8084bf9f0c98"
        },
        "item": {
          "id": "abdc013e-1646-47c2-bcf8-545d5a40f0ac",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "50fae7b7-f318-4bc5-9037-69bc1a535c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecaf0fe-fa10-4f23-9d47-140394c71fdb",
        "cursor": {
          "ref": "b6acf9fb-fe13-4861-a16b-20ce28330310",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "70c46b42-2e99-4c59-8a58-1bc3e5097784"
        },
        "item": {
          "id": "0ecaf0fe-fa10-4f23-9d47-140394c71fdb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b6f7c8d5-0c62-4b47-8c9a-5eeabe85e90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef19ba8-cd4d-4d8d-93f1-54769bfa38c0",
        "cursor": {
          "ref": "f69782ab-e3fc-4b11-9248-3e808fd77657",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ec5bcff6-4955-4d00-8dce-362108ad5e52"
        },
        "item": {
          "id": "1ef19ba8-cd4d-4d8d-93f1-54769bfa38c0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3d096466-cfdb-49b8-9f5c-6328f2078a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c67563-370e-4a5d-9a8a-a17b72ac9b7a",
        "cursor": {
          "ref": "b0bf26f8-2f9e-44fb-bc74-59ea299ba3a0",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "615f7851-b5cc-46f0-bd06-7dd175742651"
        },
        "item": {
          "id": "f3c67563-370e-4a5d-9a8a-a17b72ac9b7a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b6f8d81a-5fa3-4bae-aca5-4c6bb51dc724",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6717f77-52fe-4b97-89c9-947235dd1127",
        "cursor": {
          "ref": "577207ed-e3e2-4769-b58c-a126d06120fe",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9fd89ba0-946a-46ab-89f9-bb9defb414d0"
        },
        "item": {
          "id": "d6717f77-52fe-4b97-89c9-947235dd1127",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "06ef53f8-3aa9-4fe8-b616-af258b49eba5",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d8bbd2-1d29-41a1-89f6-1589a66c4862",
        "cursor": {
          "ref": "29150a27-9fb6-472a-bb6a-3efc89ed3ce4",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "733fe713-9e7f-47ec-88d9-ef92205282c1"
        },
        "item": {
          "id": "10d8bbd2-1d29-41a1-89f6-1589a66c4862",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6f522ad4-2ae4-4e28-a9e5-dd6b10cb365c",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad116b1-30ed-4bdc-a074-ba7c18a96e3d",
        "cursor": {
          "ref": "b5435667-fec9-4460-849b-040fd64114ca",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "182dc3fd-c89b-4cfb-a505-8becc77962cd"
        },
        "item": {
          "id": "fad116b1-30ed-4bdc-a074-ba7c18a96e3d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "762ea9db-0b65-42c3-b377-9c143e040502",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c45173-311a-437c-901b-b247787d66af",
        "cursor": {
          "ref": "efcea16f-70c9-4d87-a2a7-4ebbe8287c0d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "714f3b2b-9583-4a64-9124-3ebe5159b2cc"
        },
        "item": {
          "id": "f1c45173-311a-437c-901b-b247787d66af",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "714f78bf-3953-45d1-a53c-123d9471cead",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c45173-311a-437c-901b-b247787d66af",
        "cursor": {
          "ref": "efcea16f-70c9-4d87-a2a7-4ebbe8287c0d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "714f3b2b-9583-4a64-9124-3ebe5159b2cc"
        },
        "item": {
          "id": "f1c45173-311a-437c-901b-b247787d66af",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "714f78bf-3953-45d1-a53c-123d9471cead",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be876674-9d28-4733-9aa2-627e83bcf782",
        "cursor": {
          "ref": "a3a061ce-3a3b-42df-a5e4-767fc74b948c",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "eb76469f-ad33-4fdc-983c-5bd0fc819281"
        },
        "item": {
          "id": "be876674-9d28-4733-9aa2-627e83bcf782",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9e979385-5d8c-4f08-aed2-5cad081abd4c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d96e182-ca17-4e90-a5b8-b06737887642",
        "cursor": {
          "ref": "3457e996-6e45-4538-a959-6ec0fd7ee2f1",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "083878f0-7347-4e80-8dc5-c8f322f1fd9b"
        },
        "item": {
          "id": "7d96e182-ca17-4e90-a5b8-b06737887642",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0eb56205-09bf-4346-9170-67d237976a0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}